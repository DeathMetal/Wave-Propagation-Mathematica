(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1258707,      28724]
NotebookOptionsPosition[   1257910,      28701]
NotebookOutlinePosition[   1258537,      28720]
CellTagsIndexPosition[   1258494,      28717]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Copyright", " ", 
     RowBox[{"(", "C", ")"}], " ", "2020", " ", "Craciun", " ", "Alexandru", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "This", " ", "package", 
     " ", "is", " ", 
     RowBox[{"free", ":", " ", 
      RowBox[{"you", " ", "can", " ", "redistribute", " ", "it", " ", 
       RowBox[{"and", "/", "or"}], " ", "modify", " ", "it", " ", "under", 
       " ", "the", "\n", " ", "terms", " ", "of", " ", "the", " ", "GNU", " ",
        "General", " ", "Public", " ", "License", " ", "as", " ", "published",
        " ", "by", " ", "the", " ", "Free", " ", "Software", "\n", " ", 
       "Foundation"}]}]}], ",", " ", 
    RowBox[{
    "either", " ", "version", " ", "3", " ", "of", " ", "the", " ", 
     "License"}], ",", " ", 
    RowBox[{"or", " ", 
     RowBox[{"(", 
      RowBox[{"at", " ", "your", " ", "option"}], ")"}], " ", "any", "\n", 
     " ", "later", " ", 
     RowBox[{"version", ".", " ", "This"}], " ", "program", " ", "is", " ", 
     "distributed", " ", "in", " ", "the", " ", "hope", " ", "that", " ", 
     "it", " ", "will", " ", "be", "\n", " ", "useful"}], ",", " ", 
    RowBox[{
     RowBox[{"but", " ", "WITHOUT", " ", "ANY", " ", "WARRANTY"}], ";", " ", 
     RowBox[{
     "without", " ", "even", " ", "the", " ", "implied", " ", "warranty", " ",
       "of", "\n", " ", "MERCHANTABILITY", " ", "or", " ", "FITNESS", " ", 
      "FOR", " ", "A", " ", "PARTICULAR", " ", 
      RowBox[{"PURPOSE", ".", " ", "See"}], " ", "the", " ", "GNU", " ", 
      "General", "\n", " ", "Public", " ", "License", " ", "for", " ", "more",
       " ", 
      RowBox[{"details", ".", " ", "You"}], " ", "should", " ", "have", " ", 
      "received", " ", "a", " ", "copy", " ", "of", " ", "the", "\n", " ", 
      "GNU", " ", "General", " ", "Public", " ", "License", " ", "along", " ",
       "with", " ", "this", " ", "program", "\[IndentingNewLine]", "if", " ", 
      "not"}]}], ",", " ", 
    RowBox[{
     RowBox[{"see", " ", "<", 
      RowBox[{"https", ":"}]}], "//", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"www", ".", "gnu", ".", "org"}], "/", "licenses"}], "/"}], 
      ">", 
      RowBox[{".", "\[IndentingNewLine]", "\n", " ", 
       RowBox[{"Author", ":", " ", 
        RowBox[{"CRACIUN", " ", "Alexandru"}]}]}]}]}], ",", " ", 
    RowBox[{"e", "-", 
     RowBox[{"mail", ":", 
      RowBox[{
       RowBox[{
        RowBox[{"alexandru", ".", 
         RowBox[{"craciun", "@", "inflpr"}], ".", "ro"}], 
        "\[IndentingNewLine]", "\n", " ", "Please", " ", "send", " ", "me", 
        " ", "an", " ", "e"}], "-", 
       RowBox[{
       "mail", " ", "if", " ", "you", " ", "have", " ", "found", " ", "a", 
        " ", "mistake", " ", "or", " ", "have", " ", 
        RowBox[{"questions", "."}]}]}]}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"This", " ", 
    RowBox[{"program", "/", "package"}], " ", "will", " ", "be", " ", 
    "periodically", " ", 
    RowBox[{"updated", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Project", " ", 
     RowBox[{"repository", ":", "\[IndentingNewLine]", "https", ":"}]}], "//", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"github", ".", "com"}], "/", "DeathMetal"}], "/", "Wave"}], 
     "-", "Propagation", "-", "Mathematica"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "This", " ", "code", " ", "is", " ", "compatible", " ", "with", " ", 
    "Mathematica", " ", "10", " ", "or", " ", "later", " ", 
    RowBox[{"versions", "."}]}], "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"Mathematica", " ", "is", " ", 
      RowBox[{"(", "C", ")"}], " ", "Copyright", " ", "1988"}], "-", 
     RowBox[{"2020", " ", "Wolfram", " ", "Research"}]}], ",", " ", 
    RowBox[{
     RowBox[{"Inc", ".", " ", "\[IndentingNewLine]", "Protected"}], " ", "by",
      " ", "copyright", " ", "law", " ", "and", " ", "international", " ", 
     RowBox[{"treaties", ".", " ", "\[IndentingNewLine]", "Unauthorized"}], 
     " ", "reproduction", " ", "or", " ", "distribution", " ", "subject", " ",
      "to", " ", "severe", " ", "civil", " ", "and", " ", "criminal", " ", 
     RowBox[{"penalties", ".", "\[IndentingNewLine]", "Mathematica"}], " ", 
     "is", " ", "a", " ", "registered", " ", "trademark", " ", "of", " ", 
     "Wolfram", " ", "Research"}], ",", " ", 
    RowBox[{"Inc", "."}]}], " ", "\[IndentingNewLine]", "*)"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.799734830103999*^9, 3.7997348595985923`*^9}, {
   3.799737011053923*^9, 3.7997370707973433`*^9}, 3.799737803326357*^9, {
   3.801554081386813*^9, 3.801554223167923*^9}, {3.8020605165090117`*^9, 
   3.8020606823614674`*^9}, {3.802060958410529*^9, 3.802060963158614*^9}, {
   3.806892928905779*^9, 3.8068929677006254`*^9}, {3.8075828490448112`*^9, 
   3.80758294253022*^9}, {3.807582976361475*^9, 3.8075830290288796`*^9}, {
   3.8075831624682417`*^9, 3.8075832198935575`*^9}, {3.8075832800500894`*^9, 
   3.807583313353713*^9}, {3.8076718102435102`*^9, 3.8076718709691024`*^9}, {
   3.8111303923176985`*^9, 3.8111304105253725`*^9}, {3.8125288940693684`*^9, 
   3.8125289261425247`*^9}, {3.8125289563715496`*^9, 3.81252896028636*^9}, {
   3.812544679538205*^9, 3.8125448115417614`*^9}, 3.813038186182825*^9, {
   3.813039419659491*^9, 3.8130394282581563`*^9}, {3.813158472403738*^9, 
   3.813158507206337*^9}, {3.813208686673805*^9, 3.8132087113063574`*^9}, 
   3.8135799135016284`*^9, 3.8135799746295176`*^9, {3.813580412303557*^9, 
   3.813580413072392*^9}, {3.813580651995528*^9, 3.8135807696558056`*^9}, {
   3.813580809054963*^9, 3.8135808213309927`*^9}},
 TextJustification->1.,
 ExpressionUUID -> "6b110523-436f-4a94-b8c4-f87f1cc5127c"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "These", " ", "are", " ", "the", " ", "custom", " ", "Color", " ", 
    "Functions", " ", "that", " ", "come", " ", "with", " ", "this", " ", 
    RowBox[{"program", "."}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.81340208767465*^9, 3.813402107768035*^9}, {
  3.81340217683115*^9, 3.8134021867490244`*^9}, {3.8135679580659475`*^9, 
  3.813567960065942*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
livAnePb12g1+rPlLejdkNt3eh6jt05phodz68Gb9INdq+Sr13upYXX+uLJD
r39mZZ1fC+n7bhH6J/RP6J9AIBB8m6gNR38X9HU2r9bhfqwi5tmtJmUKt/Vd
rx/cMMS9TtOxH7SIfHS6Vgk+cPFvxrd8vLA6ex6+5eqz+Nio6Fj5Ri9JcdFK
NY4t7l3aqe1bBT5FR8izXV5rmvWX8ZtOJyYoHt0KCbn+RD843rWiXcuh+j3+
xf2BxXPk6DA6SD94I2gaUfbJK4OVyoSXT0IPnjitH3wZPCe/ndMz2Ti1WnHM
9ztE6J/QP6F/AoFA8I1i3PHGvvJ1d7YxNzcvXsxt3JIYw2l6Oyd2JyIr2xK2
RUv09Vsvn8QnGW+8Ejd/lLuljQU3zddmiL/+9cVNE4qaFShc2LygmTkvmL9R
7ynGq3gvbwisXbaIdVErm3INN556pB8Ju7yzkZ1ZgQLmzdp7eDVuMnjiduNK
nNkY4GBnYWVjXcKm1KRle/RDL48vKFHDNUw+3Czk77tE6N+3q3/i0g+BQCAQ
pOx74yLDIxVymyfJ5+Bh80gPl07TFZIuJtpwZ/5kDUueWRkXHREeERsnW6E6
MT4yIiIqOkaPfiJGoUydGzpleHh4XILxdoAGeVQn6t9o+J02XikfJk6+PaCU
EBHxuyLOeIQZOo0qVhEvzO/75ce78YuruPGL0D+BQCD4kZB0mpR7NOslTZUk
n3K30qupo7ufPKSVb8eSZgctadPdfvmLu26tVpP6O+OdpaWUz5FS7+AsZTKn
+DL4ARC3ff4/ve3zHXHbZ4FAIBD8E0gGkPJwjVvBO7bsOW94mckFGFIK6V+l
HfzsU9MNpUxk/MxMZhN8j/x/PPRt1Lfx0Lc94qFv4qFvAoFA8CPwxyM2xJ5Z
8FWk6p+5eWmivCZZLNhPVuyXEix/OVbYnpWqw+ydWL2mzKUlc3Nl7q1Zu1as
Q0vWsQXr1Jx1dWHdm7CejZiXE+vdgHnXY/3qsoG12eAabEg1NqwKG1GJjSzP
RpVhY0qxcbbM14ZNKMomFmaTzdlUMzatAJuej/nlZjNzsFnZ2JwsJnNZVn+W
PYDlnMfyzGcFFrJCi5j5Yma5hFkvY8WXM7sVrMxKVn4Vq7Sa2a9lNdcxh/Ws
3gbmtJE13sRctrCWW5lrEGu7jXXYzjrtYN12sp67WJ/drN8eNmgvG7qPjdjP
xhxg4w+ySYfYtMNsxhE251cWGMwWHmVLjrHlx9nqE2z9b2zzSbb9FNt1mu09
zQ6eYb+eZcdD2KlzLOQ8u3CeXQxhl86wyyfZ5RPsyjF2NZhdO8KuH2KhB9iN
vezmbnZzJ7u1nd3eyu5sZnc3srvr2L217P4qdn8Fe7iUPVzMHi1gj+exxwHs
6Rz2dBZ75seeT2PPp7AXk9jL8SxsLHs1ir0ayV4PZ2+GsDeD2Nv+7F1f9r43
e9+LffBkH7uy3zuz8I4svB2LcGeRriyyFYtqzqKbspjGLKYh+1SfxTqyWAem
qMHiqrG4qiy+ElOWZ8oyLMGOJdqyRBuWVJSpijCVBVObMY0p0+Zj2txMysGk
nxmyMtn9TLLI+mduCUWc8W/lX/5jFQgEAkEKOq180PffXgvB90qq/pmaFif6
haggkTlltaZcdmRWkYrXpIqO5NCInF2oZQtybU5tmpG7C7VrSh2akIczdWlI
3etTD0fqWZd6O1CfmtSvOg2oSoMq0eAKNLQcDS9FI0uST3EaXZTGWtE4S/I1
o4mmNCkfTc5NU3+haT+TX1aaQTSLaDbRHDKZSz8FUI5AymU4/c90IRX6QgFo
n+H4r8tmarkl+fS/Dtuo83bqvpN67aK+u6n/Hhq0l4btI5/9NPYATThIkw/R
9MM06wj5/0rzg2nRUVp2jFYdp3UnaNNvFHSSdp6iPafpwBk6cpaOhdDJtO3f
abqUtv07TNcOGtq/PXRjF93cQbeC6NYWur2J7qynu2vp3mq6v5LuL6MHS+jh
QnpkOPL7ZC49nUVPZ9CzafR8ilz9vRhPL8dSWMqR39eGI79v+8tHft950XtD
9fehK33sRL93oPC2yUd+I1Oqv+g01V9sLcOR36oUV5niKxiqv1KUYGuo/ooa
qj9LUnNSFyRNftLmkas/3c8kZSWJGaq/1JgWFO2fQCAQCAQ/Ekb9i4uLL1u2
lmkBW3OLCmaWlbl1DV7SkVdy5rVbcmd37ubBO3XlPTx5r+68dzfepyvv24X3
68wHdOKDO/Jh7fiItnxkGz7KlY9uxcc15+Nd+ARnPqkRn+zEp9bj0+pyv9p8
Zk0+qzqfXZXPqcT9y/PAsnyeHZ9vyxfY8IXWfHFhvtScL+OWy7nVCl50JS+x
mtut4WXW8vLreMX1vOoGXn0Tr7WZ19nC623lTkHceRt32c5b7OSuO7n7Lt5+
N/fYw7vu5Z77eK/9vM8B3u8gH3SIDz3MRx7hY37lvsF84lE+5Rj3O85nn+D+
v/F5v/GFp/jSU3zlab7mLF9/lm8K4UHn+I7zfM8FfuAiP3yJB1/iJy7z01f4
uav84jV+9Rq/fo2HXuE3LvObF/nN8/xWCL99ht85xe/8xu8e4/eC+f0j/P4h
/uAAf7iPP9rDH+/ij3fwJ9v406386Sb+bAN/vo6/WMNfruJhK/irpfzVIv56
AX8zj78J4G/n8rez+LsZ/P00/mEK/zCZf5zAf/fl4WN4uA+PGMEjhvHIITxq
II/ux2P68pje/FMvHuvJY7txRWeu6Mjj2vO4tjy+DVe25soWPMGFJzbhiY15
khNX1eOqOlxdm2tqck11rq3KtZW5rgLXleW6Ulyy5ZINl6w5inBYcHAzmJvD
tBDKltf/fRj/Vv7lP1aBQCAQCAT/HHoJ1BugQhGXHP20HKUiXqlQ6pOgSMgs
ifooM0+SMfGZJS45qrRRpCYus8Tro04XZYYkZEiiPpo/kpQ+qgxRp49Gmy7a
z6L506jTRZca1ZeT9IUkfh5Jn4TMovxy4jNLnBx8FkX6xMUL8RMIBAKBQCAQ
CAQCgUAg+N75/LLwvw5+hOD/Ov/kyur+D6PLEFH9CQQCgUAgEAgEAoFAIDAi
SoLvGWOxpJOSKx+tMRI0xsAYSf15dGmjgjZ9NGmiTk2SHFX6JGUaFRL/JOov
RyMn4bNovxDd51HqI2UWpEbKEF2GaPWJ/zyaDFFnFtVniUNShiRmloT0UWaW
+PSJi/uz0//ixbl/AoFAIPiXyHBXasE/iP7fNkEJRSyiovExEm/C8TQc9yJx
/RMuKXFWjZM6HAeCoTsC7WGoDyJxP+L34tNuRO7Ah214G4RXW/BsEx5vwL31
uLUW11fjyipcWIGzy/HbUhxdjMOLsH8hds/H9kBsDsB6f6yegxWzsWQW5s/E
XD/M9IPfDEybhalzMMUfkwMxcR4mLMD4RfBdgnHLMGYlRq/CqDXwWYeRGzBi
M4ZvxbBtGLoDg3dh0B4M3I8BBzHgCPoHo98xeP+GvqfQ5wy8zsHrAnpdRo+r
6HEdnjfR/Q663UW3B+jyGF2eofNLeLyCxxt0fI8OH9E+Au2i0fYT2sbBXYk2
KrTRwk0HVwmtgVbQtYS2BdTNkdAM8c0Q64Lopohsgo/OeOeMN43xqhFeNMLT
hnjkhHsNcLs+btbH9Xq44oiLdXGuLs7UwSkHnHDA0Vo4UgsHamFvTeyugR01
EFQdm6phvT3WVMWqqlheBUuqYEFlBFTC3IqYVRF+FTC1PCaVg285jC2LUWUx
ogyGlsbAUuhXCr3t0MsOniXRxRYeJdC+BNyLw9UGLW3QrBici6FhUdS3Rl1r
1LZGDSvYF0GlwihfGGUsUdICNuawMoclB+cwt5Cv/C1XQVz5KxAIBN8snz+b
Q6fTarVS+l/88fyPr12KVqNOSkpSqVTGZ75Jkk6tVhnRjxvvQKhfsPG1/of2
Pz0a7m+u0udzZbqZgr+L/h9P/w0frXe/cLz5iOfvcf89Qj/gQiROxeJoIg5p
sQ/SHmh2QbUDCdsRvxWxmxG5AR/W4vVqvFiFpyvwYBnuLEboQlxegPPzcCYQ
v/kjeA4OzsKeGdjhh63TsHEq1kzG8olYNAHzfDF3HGaOxdTRmOCDMT4YOQoj
xmC4L4ZOwJBJGDQFA6dhgB/6z4T3HPT1R59A9J4Pr4XotQQ9lsFzJbqtRre1
6LIenTeh01Z4bEfHneiwG+33od1BtD0M92C4HYfrb3A9jVYhaHkBLS6h+VU0
uw6Xm2h6B03vw/kxGj9Foxdo+ApOb9DgPeqHo14kHGPgqEDdBNRJgoMGtSXU
glQT2hpQV0diNcTZ45M9oqogvAo+VMabSgiriOcV8KQ8HpXDvXK4XRahZXC1
NC6Vwnk7nLXDyZI4bovgEjhcHAeKY48NdhZDUFFstsYGa6y1wqoiWFYYiywx
3xIBFphjjpnmmGaGiWYYXwhjC8KnIIabYnAB9M+PvvnQOx965EW3PPDIg/a5
0SYXXHOhRU40/QWNc6BBdjhmh8PPqJEN9tlQ8SeUy4pSWWGbBTYmsDKBJYMZ
oQAhLyEn4eeUR36kpoC4759AIBB8/+i0mkyeDvdXkHTpby+td7/MPv7zwf9c
2/2FVVIlKOOVSf9pDQVfiVH/oqLw8Xe8+YDn73D/nUH/InD6E44l4LAW+yHt
hWY3knZCuQNx2/BpCyI34cN6vF6LF2vwZCUerMCdpQhdjCuLcH4Bzs7DyUAc
9cehOdg7CztnYpsfNk3HuqlYOQVLJmHBRARMwGxfTB+HSWMwbgxGj8UoX/hM
wIhJGD4FQ6dhiB8Gz8Sg2Rjgj/6B6Dcf3gvRdzH6LIXXCvRahZ5r0WM9PDei
+xZ0DUKXHei8C532wGM/Oh5ChyNofxTtTqDtSbifQZsQuF2A62W0voZWoWh5
Cy3uoPl9NHsEl6do+gJNwuD8Bo3fo9HvaBgJpxg4xaKBEvUTUU8NRwl1IdWB
1gGq2kioBUUtfKqJqBoIr44P1fDGHmFV8bwKnlTBo8q4Vxm3K+JGBVytgMvl
caEczpbDqTI4UQbBpXGkFA6Wwt6S2FUS222xpQQ2lcD64lhtg+XFsKQoFhbF
PGv4W2G2FfyKYEphTLSEryXGWMDHHMM4Bpmhvxm8C8GrIHoURFdTeBRA+/xw
zw/XfGiRFy550TgPnHKjXm445ELNnLDPiUq/oHwOlMkBu+wo/jOK/ozC2cB/
QsGsyJcVubIguwl+Ek/9EAgEgm8ISdIaarY/WjW5/NLp9AKlH1UbHvsr6Yd0
iHxxd9fB07EqSZ2UoDLYlUYrQYrqb5/ftMbgePmdmtSPTen01KldnVajkZej
X5BR55JNT3l093Jv736+42deex6ufx3z4rrfRJ/Bg4YMHTq4T68Bmw7d0A/e
P7l3zNAhgwcNHDR+8rnbb2G87lHSyd2gJOnXX6VWG79J5PVKv0rJTaAueTM1
GrUyLlE/EjSmezvvRfqJhLg4jUFDM26m+mu9VpBO/z6m0z+5/UvRP0P7p9c/
uf0LMujfRnxYh9dr8GK1Qf+WJ+vf5YU4P9+gfwE4OheHZmPvTOycgSC9/k3D
2ilYMVnWv/kTEDAes8Zh2lhMHI1xozFqDHzGYeR4DJ+IYVMwZCoGT8egGRg4
G/3nol8AvOeh7wL0WYTeS9FrBXquQo818FyH7hvQbTO6BKHzdnTaBY896Lgf
HQ6i/RG0O4q2x+F+Em1Owy0ErhfQ+jJaXUXLULS4heZ30Ow+XB6h6VM0eQHn
MDR+g0bv0fB3OEWiQQwaxKK+EvWS4KhGXQl1IDlAWxuqWkioCUVNfKqBqOoI
r4YP9nhTFWFV8LwynlTGo0q4VxG3KyC0PK6Wx+VyOF8WZ8vgVGkcL43gUjhi
hwMlsdcWu2yxrQS2FMdGG6yzwepiWF4Ui62xwArzrDC3CGYVxnRLTLbERAv4
mmO0OUZyDDXDwELoVxB9C6KXKTwLoEsBdMyPdvnQJh9a50XzPGiaG41yo0Eu
OOZE7Zyo8Quq5kDF7CiXHaV/hu3PsMkG659gmRVmWWGaBXlNkJPhZ4Ys4pm/
AoFA8K2gS9++STpdJvWbJBkPyz7bO7ZMU88048lmdT9467rdl4z+lDL/Zx+Q
2UfK/x05olllXq52/9HjvLq06TdtqX7oxZFZZJKjk/ew4UMGePXsv37fdf3g
+oEt8+QtPWz8xJ7tG+bOXXTT5ffI7Nhuaiv42Sp9vkIG1g12b+wx6y9spnj+
3dfw5/p3LIP+pbZ/G1Pavz/XP2P7Z9S/6Vj3mf75YnqK/o0eCx9fjDS0f3r9
GzpVbv+M+jdAr3+B8J6PvguT9c8rVf/Wo/tGWf8+b/8Oyu3ff9S/5mn0L2P7
l1H/0rZ/afUvbftn1L9KcvsXWiFZ/y7o9a+s3P6l6t9BO0P7Z4vtRv0rjvVp
9c9a1j9/vf4VwfTCKfpngTFp9K9/IVn/vPT6Zyrrn8dn+pcnRf9ywcGof7+g
klH/sqOkUf+ywfKnFP3Lgpwmsv5lNeqfidA/gUAg+Hcx2s6H5+cn+fbvO2Di
8YvvjOPXD+85eube3XOHevXoveTwSf2IJvzB7HFj2jSqzG1KDxg+pp9Xj3mb
DuvHE19f9xk2aNT4KUHB5w01mZQiZfFyp9fXe/zkgLBIlWFhqisHN/gO9O4z
cNzBC8+MCzo4p1vOQtUeJySvj1al1P98eSzQsqrbZwdlNw7r2HHwWuN0X5cy
btP26Sfe3j658dCZuPCX00d5jZ++LFwhe5ryzc1RwwamXSXJsJnvH5+fOGTg
4OFjpk4eP3xEQDyweWi7tt6Lnt097dWr19ojp/TzqNJvpreX5/zNv8pv1okO
8G/zTemfof37ov7N+w/613lHuvbvK/TvP7Z/db7Q/lXL0P5VStf+Jetf6fT6
Z5tG/2zS619q+1fki+1f/7/b/v2S0v5lT2n/sqVp/7Kkb/+E/gkEAsG/ic6g
NC8ubSjB87p1HTDI271QXouAnbch12Ltc2cp6ODsPmSIp3XB7H7b70Md5jfK
x71xZVNrO4P+eRr1Txl2ZbzvWJcqZryOhyxxkspwyUS8bxf7QqVrDxzj07mt
26JdF/RDUbcPtXBt02/kWB+vzjyPzfJzetVUuVUq1GV2sPwGRbxGKx9ullfp
aGABW4dLYVGRH968/fDxU6x8oHbD0HYN3MZFanSPr+5u5NRo7WlZIO8fmFOQ
F6per1HvQYPq2JjV85wtf9Tzy8mr5GBYJY3848OdbaUscrt59OvaphoRNeg4
Q6+kuyZ6muW0qOvSYYhXh0K5ss87GoakF36jR6VuptC//w0/lv6ltn9frX+N
DfrX8E/1r/YX9K9qev2r+Hf0L7P27z/oX6F0+vdX2r+KGdu/DPon2j+BQCD4
BlDLVZnKs56Vm+9O48ieKa68uod+Yve4NmbWDR4Yds9HZ3Ys29jL0N/h2f7x
9m59//gIKfm0vpeHJ1dr5Sn3dYb6LjRoXCHrGg+VqXP9cUKgkZFN7ZsP3wbE
1LLO6RMUqh/R6P6YM+zUilzZyKKorW0xK1687OaQV/rB7RO6/URZ7cqXy52N
rBsNCjd8zqvTy3PkMV96/KF++vezS4s5tPkoa5ou7SppE2X9W93XuY77FOPS
u7coN2GP/JaNI9uYFal713AG+rR2Do36LDPO8PyAb9X0m/nV/8j/zfxw+uch
9C+9/uUU+icQCATfGcaT4ZRPm1a0CLqpF6CERCD84hpTO6dIYOsQ1xZei/W/
10i4t39qkXruEQb/C1kzuEITj2it3vIUSWrZtLQqWa5CVg0o37RLoty0yS/X
DmzTurd8SYUyNjZJrdEaLh7Rhj/s51rbIk8BS2vLrJS12+QDQGStIjlHbb+p
/22iSiNXh0ly0ffiaKBpScfQd3GKqN8joqLj4uVlbxzavlHbiTESIp/dalXJ
quVI+SzBx/v9Cjt1VcnvVKpUKoUiTpd+lfRTuiRZQ0NWDLMp4XD5WcyLK1ut
+C+z9z/SD64a4Nam72LDP4d2Xs8mjT0Djf8259cOLp+ymSpx6cfXIvRP6J/Q
P4FAIPjGkAxO9t6lktn8kx+NQ6+PzshVokGCrH9uzXvMNw5eXjuwQtNeiYbp
KxuHVW7llfZTjEeQb2wdUblFd3lKLVeAO8e3r9Fq9GfLW9C7Ibfv9DxGL2jS
DA/n1oM36Qe7VslXr/dSw+r80bDp9c+srPPrlAGdwTM3DGnX2muRcSR07eDi
Ndz1XxsvDs20cGwXIVeGf7w9zSp5GrpA2R7vBS+tbGdbpUxp8+K2PnO3aNTy
nHqlbN51jvHrJ7BH48Ypm3x102ebKb6hvgahf0L/hP4JBALBt4bacPR3QV9n
82od7scqYp7dalKmcFvf9ZBdy71O07EftIh8dLpWCT5w8W/Gt3y8sDp7Hr7l
6rP42KjoWPmuKklx0Uo1ji3uXdqp7VsFPkVHyLNdXmua9Zfxm04nJige3QoJ
uf5EPzjetaJdy6H6Pf7F/YHFc+ToMDpIP3gjaBpR9skrg5XKhJdPQg+eOK0f
fBk8J7+d0zPZOOVjwpokjWGV2jq5T/ikw+/vrratXbLzONkeH++bweu0jZa/
QORrkI33DExdpVJO7d4rpIjIGP3g0DY1Wg1e+urNywfP36Qeil43qE2zrnON
0wHdGzp1C0jZzDWGzXwe/ykyWpFyDFvwNxH6J/RP6J9AIBB8cxh3vLGvfN2d
bczNzYsXcxu3JMbgRjsndiciK9sStkVL9PVbLwuQZLxVX9z8Ue6WNhbcNF+b
If761xc3TShqVqBwYfOCZua8YP5GvacYr+K9vCGwdtki1kWtbMo13HhKPtIa
dnlnIzuzAgXMm7X38GrcZPDE7caVOLMxwMHOwsrGuoRNqUnL9uiHXh5fUKKG
a5hc2snL1BravwMz++XNmrOYbQm7EnZ9JiyLUsm/enFsUSmX7gb9M/R8Gnnt
L26dUrRQ/sKFLUwLcfNCBep7TtQPhiwfnpWofLWyRQub57Wy8JyxXj8YNLpr
e+/kRnFJf7fW/QzHu+XFxes3s3BxS7MCeduOmGe49EP9f/+/x4/GD6d/4tIP
cemHQCAQ/BCk7HvjIsMjFXKbJ8nn4GHzSA+XTtMVki4m2nBdBIyXeCTPrIyL
jgiPiI2TrVCdGB8ZEREVHaNHPxFj6MqSLwjRKcPDw+MS0tx2T52of6Phd1rj
4zaS78YnJURE/K6IMx5h1lucKlYR/9mD3dRJCTFRUfpFxCoSU1ddp0nSr8Zn
3x/qJGXqKkXJ26VfUFTbGtZes04YZ7i1x4eoxC39l486XpHy1I+khPjkJ4BI
6TczPgGCr+LH0j9x45f/9Y1fhP4JBALBt4Ok06TcElkvaaokuUZb6dXU0d1P
HtLKt2NJs4OWtOmev/bFXbdWq0n9nS75gRq61KdvpCwvkzn/ypeBRqP5m98Z
0UPqFy9cuu7gUaNGjxriXMXWadDsP63zPttMwdfwTemfuO2zuO2zQCAQCD5D
MoCUp+veCt6xZc95w8tMrnuVUkj/Ku3gZ5+abihlIuNnZjLbFxf7l+Y0YJTb
uPCtK2YPHNR3QL8x63ac0aTOl+5Nf2F5gr+MeOjb9/rQt7/d/omHvgkEAsF3
j5TawP0we+aMDies7v+edPr3IZ3+nf70R/u3F5rdsv4pU9u/TSnt3xqD/q1I
1r8ri3B+gUH/AnHUP6X9m4ltxvZvKlZOkfVvwUQETMBsX0wfh0ljMG6M3P6N
8oWPof0bPgVDp8nt3+CZGDQbA/zRPxD95sN7IfouRh9D+9drFXquRY/18NyI
7lsytH+H5Pav/VG0O4G2J+F+Bm1C4HYBrpfR+hpahaLlLbQwtH/NHsHlKZpm
1v45xaKBEvUTUU8NRwl107d/tfCpJqJqILx6+vavCh5Vxr3Kcvt3owKuVsDl
8rhQDmfLye3fiTIILo0jpXCwlKH9K4nttthSAptKYH1xrLbB8mJYUhQLi2Ke
NfytMNsKfkUwpTAmWsLXEmMs4GOOYRyDzNDfDN6F4FUQPQqiqyk8CqB9frjn
h2s+tMgLl7xonAdOuVEvNxxyoWZO2OdEpV9QPgfK5IBddhT/GUV/RuFs4D+h
YFbky4pcWZDdBD8x2f1Mssj6Z24JRVzyX4lAIBAIvg10Wvmg77+9Fv8skkat
TpJRqcWt/P5fMOpftF7/wg3t33vcf2/Qv0hD+5eIQ1rsg7Qbmp1Q7TC0f1sR
uxmRG/BhLV6vxotVeLoCD5bhzmKELsTlBTg/D2cC8Zs/gufg4CzsmYEdftg6
DRunYs1kLJ+IRRMwzxdzx2HGWEwdjQk+GOMDn9EYMQbDfTF0AoZMwqApGDgN
A/zQfya856CvP/oEovd8eC1EryXosQyeK9FtNbquRZf16LwJnbbCYzs67kSH
3Wi/D+0Oou1huAfD7Thcf4PrabQKQcsLaHEJza+i2XW43ETTO2h6H86P0fgp
Gr1Ao1dweoMG71E/HPUi4RgDRwXqJqBOEhw0qC2hFqSa0NaAujoSqiHOHp/s
EVUF4VXwoTLeVEJYRTyvgCfl8ag87pXD7bIILYOrpXGpFM7b4awdTpbEcVsE
l8Dh4jhQHHtssLMYgopiszU2WGOtFVYVwbLCWGSJ+ZYIsMAcc8wwxzSOiWYY
XwhjC8GnIIabYnAB9M+PvvnQOx965EXXPPDIg/a50SYXXHOhRU40/QWNc6BB
Djhmh8PPqJEN9tlQ8SeUy4rSWWGbBTYmsDKBJYMZoQAhLyEn4WeCiaH6S41p
QdH+CQQCgUDw46H/Ylcq5S/5qGh8jMSbcDwNx71IXP+Ei0qcVeOkhGNAMHRH
oD0E1UEk7kf8XsTuQuQOfNiGt0F4tQXPNuHRBtxbh1trcX01rqzChRU4uxy/
LUXwYhxeiP0LsHs+tgdicwDW+2P1HKyYjcWzMH8m5vphph+mz8C0WZg6B1P8
MTkQE+dhwgKMX4hxSzB2GcasxOhVGLUGPuswcgNGbMbwrRi6DUN2YPAuDNqD
gfsx4CD6H0a/X+F9DH1PoM8p9D4Dr3PwuoBel9DjKnpch+dNdL+DbvfQ9QG6
PEaXp+j0Eh6v0PEtOr5Hh49oH4F20WgbC/c4uCvRRgU3DVx1aA20kiO1gLY5
1M2Q0AzxLoh1QXRTRDbBR2e8a4w3jfCqEV40xJOGeOiEew1wuz5u1sN1R1xx
xMW6OFcHZxxwygEnHBBcC4dr4UBN7K2BXTWwozqCqmGTPdbbY01VrKqC5VWw
uDIWVEJAJcytiFkV4FcBU8tjUjn4lsWYshhVBiNKY0hpDCgFbzv0LoleJeFp
iy4l4FEC7YvDvThcbdCiGFyKwbkonKxRzxp1rFDLCtWLoGoRVCqMcpYobQlb
C9iYw4rDkoObwdwcpoVQtrz8/w0g9E8gEAgEgh8N/Xe7PjpJvsTbGK0+knyX
RjlIjaSP+o/o0kerShdN+qiNSZKjSp+kTKOSk/ilqL8QDRK+FG1m0SVHmTZS
hiBtpAzRpU18crQZosks6gxRGRP3R5IyJDFDEjJEmSHxipSkTMeljyJ94uKF
+AkEAoFAIBAIBAKBQCAQfO98flm44ULqv58/4R/6qK9YqX8p+GfzxwfrDEmd
+EejyxBR/QkEAoFAIBAIBAKBQPBfiOgDfjAkJMQnKBVKfRIUCfokKhL1SVIk
JSlUqpSoM4smJdo/ojZGY4haoVEZkqTQJhqSIEenNCReIekTZ4giDoZIcuIN
UeqSk6CPVpGYkiRD5EXp5Gh0Cq0kRycpJBgiKWCMTgGtIRoF1IaoFEgyJFGB
BEOUirSnwaWsjhxdSrR/JC5N4g1RpiTBGJ0iMSVJKVGlRF5lSY4mJanrLgcp
WwAFkGYj0m5H2k1JuzWpG5S6WZkmPn3i/vT0v3hx7p9AIBB8J4hbIAv+GsY/
FGWcsn25ds6mjV3NW7fnHTx5jwF80Gg+dir38+eBS/iSVXzler5qI1+9ha8K
4it28OW7+fJ9fOVhvvooX3uSrwvh6y/xDdf4xlC+6QbfEsq3XeY7z/K9R/mh
Xfz4On5mIb84g1/z5beG8vu9+dMu/FUb/q4pj6jLP1XhylJcY22hMy+i48V0
vKSOV9Dw6oncUcGdI81bfjB3f2Xe6Zl5z0e8330+9B4fc49Puc/9H/EVT/mW
ML7/HT8Zxa/G80ca/lbHYySeJHGdjkPFEcPxhuMBx2WO37i0n2MLxwqOAI4p
HD4c3hydOFpw1OeozlGBS6W4rpi5uoi50px/4jyC87ecv+D8Iee3OQ/l5td4
kau82BVe+iqvdJ1Xv8nr3uYN7/Jm97jbA97xEe/+mHs95f2f8eEv+dgwPvk1
n/GGz33LF77nKz7y9eE8KJLvjuIHo/mxT/x0LL+o4Nfj+N0E/kTNX+t4uMRj
wZPAteCSxKHhiOMI53jJcZ/jGkcIx1GOfYZNWcOxmGMOx2SOURyDOPpy9OTo
atisDhxtOdpwuHK04mjG4czhxFGPoy5HbY4aHFU5KnGU5yjNYcthw1Ou/OWG
K39NUa6cuPJXIBAIvl0y2Tdncgdl6UvzZkCrkW++p1KpjI93kySdWq1SyQMq
/fgPd7PB/1KMfxHxiviGBZwqUcXaVLsBObWglh7UuQ95DyefiTRpBs0MIP+F
FLiU5q2ggFXkv5bmbKA5W8h/B83bSwsO0cKjtOgULTpHSy7Q0ku04gKtPkPr
jtLmPbRjPe1fSL9Op5Oj6Vx/utKdbrSh+03oaR0Kq0zvbSnSnBS5KTELaYhp
6Sct5dSQaRJZxZNdNFX6SDVek+Mzcn5Are5Q+5vULZT6htKwGzThNs29Ryse
09YwOvSRQmLpdiK91FKERPESabSEBEIE4QXhJuEM4RBJW0laTtJcwkTCUEIv
QjtCY0J1QmmCFUkFSZebND9RIpGCKJLoPdFLoodEt4muEl0kOkcUQtnOUp4Q
MrtAVpfI9gqVv072oVTnJjW8Tc3vkNt96viAPB+R9xMa8oxGv6DxL2naK5r7
hha/o1UfaOPvtC2c9kbQkSg6GU0XPtF1Bd1LoGdqeqejKFA8SA3S6QhJhBjC
O8Jjwg3COcJRwl7CZsIKwnzCDMI4whBCb0JnQltCK4KLYbOcCI6EOoTahJoE
e0JFQlmCHcGWYCNvMSwIhQz3/ctD+IWQLcN9/woUEPf9EwgEgu8CVYIyXpmU
+e902r9wK2VJl17u9O6X2Uzi6+C7J7n9UyibmDvbU1VHE8fGzNmVuXVh3fqx
AT5szGQ2dTabPY8FLmbzl7P5K9m8NSxwHfPfxPyDWOBOtmAfW3iYLT7Glpxm
S86xZRfZ8kts1QW25izbcIxt2ct2bmQHFrPgGezUWHZuELvSk91sz+41Z0/q
s7Dq7F0ZFmHFYguwxBxZ1Fl+1rCcGpZfzcwTWfE4Vi6K2X8wcXhl4vTUxOWB
SZs7rNNN1vMG6x/KRt5gk2+zgHts5WO2LYwd/shCPrHbCeylhkVILE5iag2T
lAzhDC8YbjKcZdJhJgUxaSWTAhimMIxg6MPQkcGFoTZDBYbiTLJgugJMndMk
IZtJbBYWwdh7xl4w9pCx24xdY+wiMznHsoWwXCHM9BwrfIEVv8TKXGWVr7Oa
N1j9W6zJbdbqDmt7n3V+wHo9Yv2fsOHP2NjnbNJL5hfGAl6zJW/Zmvds00e2
I5zti2C/RrJTUexCDAtVsHtK9kzF3ulYFFgcmApMp2NIZIhmeMvwmOEGw3mG
Ywz7GLYyrGJYwDCLYQLDcAZvhm4MHRjaMLQ0bJYzgxNDfQZHhjoMNRnsGSox
lGMow2AnbzGsGQozcAZThnwMuRiys5Snfhie+WtuLvRPIBAI/l0kSWvo3lTa
FPXSabVanU7vdEmJSRqdTqOS3S5oTPf23ov0EwlxcZqUOWXrk6L62+c3rTE4
Xn6n/DRdSWd4aIikk3s9tdowq9H0lEd3L/f27uc7fua15+H61zEvrvtN9Bk8
aMjQoYN79xqw+ddbSHnusOD7JVX/nHnjqlSlLqvbiBq3JtfO1NWb+o+k0ZNo
yiyaPY8CFtO8ZTR/Jc1bTQHryH8j+W+lwJ00fy8tPEyLjtHiU7TkHC29SMsv
0coLtOYsrT9GW/bSjg20fxEF+9GpsXRuIF3pQTfb0b1m9KQehdnTu9IUWYRi
81NidhM1+0lLObSUV008kYrFUZloqvqBar9mDZ6ypg/I7Q553KQeN6hfKI24
QZNuU8A9WvmYgsLo8EcK+WRo/zTJ7Z9aQ5KSEJ6+/QsiaQVJAYTJhOGGvqwD
oSmhFqE8oRhJ5qTLT+pfKOEnpmAUkUn7x87RTyH0SwgVOEcWF6jYJSp9lSpd
pxqhVO8WOd+mlnfI/T51ekA9H1H/JzTsGY15ThNfkl8YBbyhJe9o9Qfa9JG2
h9O+CPo10tD+xVBohvZPZWz/EjO0f8cM7d8WwkrCAsJMwnjCMEJfQldCe4Ib
oYVhsxoTGhDqEeoSHAg1CFVTCsDS6QtAs/QFYLpn/nKhfwKBQPAvoktfyUk6
XcZOTp2o1v9cP9i9scesP+aU99vJ++77wVvX7b6kRfKdPjIsRDJUg5EjmlXm
5Wr3Hz3Oq0ubftOW6odeHJlFJjk6eQ8bPnRgrx79Nh+5CaF/3z+f6Z8jq9vY
oH9dZP0b4EOjJyfrX+Bimv839W+DQf92bqT9iyl4hkH/BqXRv/oUVi29/pn8
pKFfUvTPJo7KyvrHjPrn8oCl6l//r9C/syQZ9W9liv6NMOhfR8OB0toG/bNJ
1T/2n/Qvp0H/LC+QTYr+1UzRv1bp9W/4MxqbVv/e/n39iya8TdG/8yn6t5Ww
yqB/swgTDDKbqf45EeobDgFn1L+SKfpnSZ8/9y2r0D+BQCD4JjCegPfh+flJ
vv37Dph4/OI74/j1w3uCz9y7e+5QL0+vpb+eMR7XXTe4fXvvRc/unvbq1XPd
r2eMcya+veUzbOCo8VOCgs/Jsxnav4iHZzccOBMX/nL6KK8Jfss+xsiDB2Z1
zWlW7XFC8qK1KqX+58tjgZZV3dIeURYHf38AMrZ/jf9o/wakaf8C/377Z9S/
HRsN7V9G/auXQf/k9i+D/lGK/v3v2r8v6Z+x/av9de1fWv2r8f+sf6nt3yxD
+/cl/TO2f3+uf2nbP6F/AoFA8M2g08m+9uLShhI8r1vXAYO83QvltQjYeRsG
08udpaCDs/uQwd2LmuWcvP6afnDr2G7muSzqunQY4tXeLHfOgEMP9YOxL65O
8B3rUsWMO3gk6l+rZal7fHiuqVmh6vUaeQ0aVNemkINngH6wbcUCnWcHw3BF
gEYrH1mWl340sICtw6WXUZEf3r559yHeUDMKvnf+jv59Xfv3Rf3L2P5lqn//
x+1fhzTtX7G/3v5l1L//7/bvL+qf09/RP9H+CQQCwbeEWj7EqvKsZ+Xmu9M4
smeKK6/uoZ/YPa6NmXWDB4bd87HZnezqeeondoxqXbCw413D3RqmtXNo2Fs+
eqs2nBb48vDkaq08Zf3TyPr3+vSyHHnMlx6X/TD87GKrOh1jleFOJXMN3xIq
z2I4tCsZesKwUytyZSOLora2xazMipUJuvTWMIP4Rvi+EfqXafv3Ffr3jbZ/
f0v/RPsnEAgE3w7Gy3CVT5tWtAi6qVe6BL28hV9cY2rnFAlsHeLWwmsxDIr4
4OB0XrOVfh+9eXDr1n2XGN6snderSaNu/vIM8bH6nyGr+pdv2iVB/6kq+fqP
Z4dnF27QRSW/TFCpEj/Fq5H0ok7xPD5BN/S/TVRp5N8kybb44migqZ1j6Ls4
RVT475FRSer/fP2w4NtH6J/QP6F/AoFA8E1iuBxD+96lktn8kx+NQ6+PzshV
okGCQf+a95hvHLy6fnDpBt30ExsHuTbr5m/cWQf2cG7kGaif0CTKFndjy4jK
Lbobzv2TXz7/1d+ybtsIud7TJf8Has9aBR29DPaY5toSvf6ZlXV+LaTvx0Lo
n9A/oX8CgUDwbaI2HP1d0NfZvFqH+7GKmGe3mpQp3NZ3vX5wwxD3Ok3HftAi
8uGp2iXN+wbI5+yt7te6maHx0xPQvWGDLnP1EwnRvydocWxx79JObd8qEBMl
387l2eHZZg7u0fopSSPJt3qWRfD27plEP09eFaxUJrx8EnrwxGn94MvgOfnt
nJ7JzqjVimO+PwpC/4T+Cf0TCASCbxTjjjf2la+7s425uXnxYm7jlhgu0sXO
id2JyMq2hK11Ce8ZG2INM24d49nee6HxrUsHtGnZe4F+4vyG8cV4gcKW5qZm
3LxQAace4/WDYUfnlXLxjJbfpTXu3I13lzm93t/BztLKxrqETalJy/boR14e
X1CihmuYSp5FfA38MAj9E5d+iEs/BAKB4NslZd8bFxkeqZBP25PkE/OweaSH
S6fpCkkXE218Lqdsb+o0T/1ISog3TqsT4yMjIqKiY/ToJ2IUxns/J8XGKT/b
rSfrnZQQHvG7Ii4xeVCjilXEC/P7wRA3fhE3fhHtn0AgEHzTSDpNyp2fJZ1O
lSSfh7fSq6mju588JD++48t2lvmu+4uza7Wa1N/p/uRjBd8539htn///2z9x
22dx22eBQCD4DpBSntZhfOLGreAdW/acN7zUpp8p47T0Gamjf7qsdC//wQ0R
fAv82w99e//f8NC3seKhbwKBQCD45/jjuRtizyz4KlL1r4m5sz1VdTRxbMyc
XZlbF9atHxvgw8ZMZlNns9nzWOBiNn85m7+SzVvDAtcx/03MP4gF7mQL9rGF
h9niY2zJabbkHFt2kS2/xFZdYGvOsg3H2Ja9bOdGdmAxC57BTo1l5waxKz3Z
zfbsfnP2pD4Lq8belWERViy2AEvMkUWd5WcNy6lh+dXMPJEVj2Plopj9BxOH
VyZOT01cHpi0ucM63WQ9b7D+oWzkDTb5Ngu4x1Y+ZtvC2OGPLOQTu53AXmpY
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
1X/CmqOw5hisPQH+p8A/CALOQsA5CLwAgZcg8Cqsuwbrr8OGmxQbr8MfV2Dr
BdgRDHtOwP6DcHg7HA+EoFXw10K4PANuTIQ7dvBgOArvi150gcjWENMIEmpA
OgZZSVAVBI0J0kIhLZQUkg6LoE4yNH6PWkWjDq/B+jn0D4cRYWAXBpPCYM5j
WPkU1rOcI6c/wPUMeKowsP7xr7DJOuvfKSBbgXgCmQFkHJB+zO7WBDhLUFUE
WWnIKAxJBSCWWv/QcygQBoVDoeRtqHATKt+EWjdRszuow33oEwY2T8HxJUyJ
gPlRsDIaAt7BtvdwKAnOZMA1mYH1TwFiMSgTQBPB3uQvAPmTJQhewbrgwPIC
92I5QVobpAKxBFKFZQApCaQQEPSD5PzlNZzaIB+6hqcUdAk11X6vT6woAD95
nXlLqHrkdBXUgp1NeG/lNAY1g98RYTInLbRH7bbnomT8N6mcuvgwusf5TRtS
pky5UqaVtl4RjqnVN8omQ+iurEgdsj9w8qRJkydPnuTq7D7TL0bO752+L2CZ
m5vbBBcXv2PnZLr+hhwInDLZjdacSGvG8q/1qg9bViyazNd0dfXeeTRDTusJ
P46+If1PpdHQ0xXKNRpDfqXJPY+Tc3eO48eOVxFs2idzKocfP04tvxp86ubz
D/zoyNgjINso5RzPvz8mYU8i/jPp5eWZ02ecfUDHWbAiKBNfeC1fdPreG90x
NfzQuU2aNMXd3cnRbvXuMxz7jT/vmvgSItC/lStX8sTvp59+4j9N4OefoWRR
wCWhelmoj6G5BXSoCtY1oH9tGFEPbBuCU1NwawEzW8OC9rC8E3h3hbU9YENv
2NYf9gyGQ8PguA0EjYGQcXDREa5PgNsTIXQyPJoK4TPg2Rx49TtELoLoJRCz
HGJXQrwXJPpB0lpIDYC09ZC+EUR/gHgbSHaCbA/I94LiACgOg/IIqI6D+iSo
T+usf3+B9gJoL2W3/t0xsP49+qj1L1Jn/Xubv/VPMAAm66x/qTrrX7rO+mdo
AJTq8Ik2QNV/3Pr3E/tcKVwoX+Z6y2FV47Ta3O89KjltbLvboK4jVmbVZG9S
wn32NHjvtj9vaUimn0quRjh2IyVP69kE12/tMmuuw6iBE5au44uiglaCSREb
Z/epU1ztx7nsDnpgcPxsr2CPT6xuVKWGi9ucYda1cM2Wjz+wG/S7fHT8+JJl
/cP920Cbjoz+dcmc+c2kfwNhKJv5pfSPzfw62VH65ybQP4OZX4H+LZkHSw3o
3/LlsHwFeHjCCi8d/VsDnv7gGQir1oPXxmz0z3cX+O4Bv+z0b+3xTPoXcIbS
v0Ad/VuXnf5t0tG/ndnp3xlD+mePHoxA4f3Qi66M/jVm9M+M0b9COehfdRHU
1dE/K0b/Bnwp+mcFpCmjf+aM/hVh9A8J9O+nMCgSCqV4+neL0r/ajP5ZGdA/
9y9I/9oAaa6jfzV19K8UkMIs9dv3T//0Kk6wLOlnItTCFIgyZuvazWGxcpKp
oPKY0MjUurTmpjDKveiBuNTbrSvUPRWZZZtib7icSCyVJ77u3aKCV1AEX6hi
zEqb7aBaJS2Tj7KyMG/RZ96saU5Oju4zfN/xB1ZGdLCAFv3GL5o1wbxs0T6z
NrL6kjHtzMvW7zJ79gxnJ8cpM3xieQWffqehSaFOIybMm+3yW+0KNVu6xtNj
arL747BII7kHRCvQpZyzO7n6mbcHo/4ZNLyt6ZorafryTA6ZezxzdilPh0mS
+dzRxtu3rcTzKGf/c7RInXHIe17vrh1/NoGxPsF8iZQyTfmoDhYVm/eeP3uG
g/24tXuD9Xt/ZTGkfz/zvI/Sv4IFdfSvHDTA0EJH/wYI9K8RpX+TdfTPg6d/
3cC/B2xk9G/vYDg8DE6MzKR/lz6F/nnnon9bsuifLC/6p85N/64BdyM7/Xvw
mfQvNwPMQf/+dv43T/r3WbPAn0L/PoUBfhn69/MXpn/CvRkfeX3hPBcn1wXn
bsYJ5aGnjwRffhJ+7ZS9rcO6M5eF22Cb29Chzv4R4Zcc7O22nbks1JTHPprh
PnHm/MX7gq+xe43qrqTnV3acuCxOfLNspsPvy9d/SKOFJ1aOLmba/KX+/VMp
5T/fhPiaNxtgOKOsTonyX7UiLF4p3MHK+LAVnhsTtSQtIjTsRTyrkmxVo5DT
xuv8llL1zZw0jPIRMbD+UfpnlUn/uuSgf3rr32hm/bMzsP5N0ln/8qF/y5Zn
Wv8M6Z/e+pcH/cvf+ifQv/ysf5s+xfpnn9361/jj1r9/i/7prX/mua1/Av0r
qaN/tXLRvy9s/ftx6Z9Acm6f2Lr+YAjRUb6Q/Rt3ngnjN05t9xnv6r7Kf+PT
OHp2OmqivXh4u7OT0++LvKMTM9hhuKBdfo4GNSn9S7llVaVlSPibnV5z7Ocs
fZoiYUcQ+JNoWAdz76BIfkulmwIOPuLr4GC/yOeIKLNr8rF9fl0c9DZbd2WR
fZtX+/MpfVq8PLm8RPkmD2j7srHdGk3Z+TDbeaXc6Vi15e109iXxTq3ShZcc
fyr8K+SoH9/QYr6hzN9KefzAlrAY0d2TGxwcnYIu0mqC909q7K2lC+Y4jXc5
GHSX6F7PhX4u9j2SIdgSJW93BxyISYhdu2C20/xljxPpaV45vHmi/djaVUq2
6zd25lS3CZNn3I+hj4pTO30Nx1NHFKXH9vo4OY1f6nMsXa47ZuCBdwmxaxbM
dl64/EkiraxQUAvqgQU2XYZMshtiZe91ip553J0xNi4Po96N7WBmt+Y8yaR/
Cjp0Z95lDcc3nfzV0T/B+lfQwPpnSP/ytP556Kx/evp3iKd/Np9D/3Jb//5/
9O/6P6Z/htzvI/Tvs6x/8u/X+vdF6Z+WGbejbu2ogUsNGO06yXlQhVIVfQ5R
JcYzvRIFyrfpNmiy29iqpsUWbb/HF+6dM8aseMV2PYZNdhhqWqKYz6nnfGFG
1N3f583p0dQUtxlBb0QVJXUvT3uVM63QokMXh0mT2lWv0MbWhy8c3KjsSE/6
tiURSfjXOi0z7Eed9S1r2ebWm5Tk+NjYuPdpUv6mS+9Zt9QYrxChk2e9x5Rr
1F+n34hEyt/Rqb0alHTecI0Y6d9/VXJY/6zysf4NzsP690/pX2A+9C+39e+f
0b+c1r/huax/+BtY/4z0718XrZpq3rADswuatnwrKGFVdCvzInMOUhZ0dPtq
V4dRJQvDylOv+a8y5rS2a7l9g8ZWc+bOGtKjq8emIGGf03v8XexH6mvyR9Km
3e9shmvUazXS0W1It+qWLUcw+5uaes9okwe3qyhY/2TMFWfbHPtaDVrPX7jA
ukX99sMWMJOZZEzPhnZ+pzXStDdv3yUkpdDeySJ6NDI/+IR249qmicUrtX9J
1bR0bJc6gxfskSsy3ka/S0xOFWyPbc0ann7NlmMTWd+GJR3WUR27aYZt7YZt
9A0xeihysK5pVrtpj8E2rmP7li5R4/iTFL705fUtNcxKdRo9aarr6JGOc6Ml
9Jfdqutnj5YN2g2Zzz8etIk3mhcuU7VusxH2k4d2r169+QiekN46stHV3rZm
peKt+4zR0T/a0RO71hqOkpyOhWzu6JaVa7aYOW92+6aVGndwTub/kUyPWb1u
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
jay+ZEw787L1u8yePcPZyXHKDJ9YXsGn32loUqjTiAnzZrv8VrtCzZau8fSY
OaZJWVii3AOSOamac3YnVz/z9mDUP4OGtzVdcyVNX57JIXOPZ84u5T4m/SGi
LwTw9Km741paXZXQs0nR3w+94Dd/79O65/hN9PgK9hAV+Dg9erx920r8Ls7+
52iROuOQ97zeXTv+bAJjfYL5EinlpPJRHSwqNu89f/YMB/txa/cG6/f+ImJI
/37meR9AAShYUEf/ykEDDC109G8Ao3/jGoFzDvrXjdK/jYz+7R0Mh4fDCR39
u6Snf1N09G9uLvrnk4v+bc1G/+SM/ilz0L/zOekf91n07/1H6Z/KSP94/PyF
6Z9wb8ZHXl84z8XJdcG5m3FCeejpI8GXn4RfO2Vv67DuzGXh4t7mNnSos39E
+CUHe7ttZy4LNeWxj2a4T5w5f/G+4GvsDqK6K+n5lR0nLosT3yyb6fD78vUf
0mjhiZWji5k2f6l//1RK+c83Ib7mzQYYziirU6L8V60I+6AU1Icy/tFKr03x
CqqHdFVS2lcqtulGMh0Dzff37PhfEAP6NzAH/TOw/mXSP2b9y03/sqx/jP59
kvXvI/QvX+tfbvonWP9y07+PWf8+Tv8+z/r3bejfquz0L4f1L0/6Z2j909M/
8zzpnzmp/YPQP4Hk3D6xdf3BEKKjfCH7N+48E8ZvnNruM97VfZX/xqdx7AU1
k5poLx7e7uzk9Psi7+jEDHYYLmiXn6NBTUr/Um5ZVWkZEv5mp9cc+zlLn6ZI
2BEE/iQa1sHcOyiS31LppoCDj/g6ONgv8jkiyuyafGyfXxcHvc3WXVlk3+bV
/nxKnxYvTy4vUb7JA9q+bGy3RlN2Psx2Xil3OlZteTudfUm8U6t04SXHnwr/
Cjnqxze0mG8o87dSHj+wJSxGdPfkBgdHp6CLtJrg/ZMae2vpgjlO410OBt0l
mWwts5+LfY9kCLZEydvdAQdiEmLXLpjtNH/Z40R6mlcOb55oP7Z2lZLt+o2d
OdVtwuQZ92Po5XFqp6/heOqIovTYXh8np/FLfY6ly3XHDDzwLiF2ze+znBd6
hMen8oUvzqyt27FDv669TzwVE5Ix1KrKqpOUP3uO7m0zbRfdSzenrFLS8Tmw
wKbLkEl2Q6zsvU7RMYq7M8bG5WHUu7EdzOzWnCeZ9E9BB/nMu6yB+xcmfzOt
fz//JNA/A+ufIf0TrH/j8rH+6enfoY/Tv0+x/n0K/fuH1j8j/fvK9E+wkEfd
2lEDlxow2nWS86AKpSr6HKJKjGd6JQqUb9Nt0GS3sVVNiy3afo8v3DtnjFnx
iu16DJvsMNS0RDGfU8/5woyou7/Pm9OjqSluM4LeiCpK6l6e9ipnWqFFhy4O
kya1q16hja0PXzi4UdmRnvQdSiKS8K91WmbYjzrrW9ayza03KcnxsbFx79Ok
/K2U3rNuqTFeIUInz3qPKdeoP9NvGqkoNSkp5dqfPj2tR76kaspo/fuPykes
f+1zWf9G5m39m5bd+vcV6d/cL07/iv8t/Wuso3//IevfZ9C/v7X+/UD0T001
b9iB2QVNW74VlLAqupV5kTkHKQs6un21q8OokoVh5anX/FcZIxi7lts3aGw1
Z+6sIT26emwKEvY5vcffxX6kviZ/JG3a/c5muEa9ViMd3YZ0q27ZcgSzv6mp
94w2eXC7ioL1T8ZccbbNsa/VoPX8hQusW9RvP2wBM5lJxvRsaOd3WiNNe/P2
XUJSCu2dLKJHI/ODT2g3rm2aWLxS+5dUTUvHdqkzeMEeuSLjbfS7xORUwfbY
1qzh6dcsETOR9W1Y0mHdNX5r0wzb2g3b6Bti9FDkYF3TrHbTHoNtXMf2LV2i
xvEndFL15fUtNcxKdRo9aarr6JGOc6Ml9Jfdqutnj5YN2g2Zzz8etIk3mhcu
U7VusxH2k4d2r169+QiekN46stHV3rZmpeKt+4zR0T/a0RO71hqOkpyOhWzu
6JaVa7aYOW92+6aVGndwpoaAZHrM6nWb2dtN6v1rxWodbJWEvD66pFZ/p20r
3G3mbOOrDPytvMcJOoDLR3QfMmUH0Vn/OA39lD4/Vbt+i9cpSpcedUZ6naG/
SCY5lPZpVGLcaj39k4/qXtfW95Rami5W5GPb/QeS3fqXk/7laf1rmMv691n0
L7f1z0j//qP4ovSPedQpbTtUHjDvkFByZHF/3GIEv/Hn3IGmVTo+Y6wrxNOm
VgdbfuPgzH7lLdqHM/WwdEibzo509lbFdNGb04ua97Wlt6ua0r93l9YXKWm2
7hzlh4lXAiq3HZ4hTexUs/jUPfdJpkMLf9fQmyv64sbiBaFiVUvLapXxL/V3
X33DF15Z7163ox1rXGTXpf7cPaFC94LXzKhWrkLRn4s5LtxP2DqxfzoERvl3
5HOtf/nTvx/D+vc90L9/ZP37H6J/dFaQfsb3bmS58gSlfM+Or6jTejC1N2kz
lbK9dXWfM9RSJ6EMQWvXpaa12x/6vZlDH5dVMziKCNG8xI9+LVJwwupg9p93
7auWCrhMp2PkVM+lDWlX0fsMrcl/U0QEWVZveuEl1ZHqhLutq5rvfsjrZbVL
n7pQtFyd2rUscLlGQ6dRqiaP6FO/TPvBExZOd2pUvdbi3bfYwaVT+tWDgqXr
1KltVr5MV8fFtPXkm+3NG+6/F8fT0EOrHEuUrXub53Rvgn6p1vTiK4OGHvDb
WifrWjV7TZWwYzn3a+ay+SbfqX4Nyo31OKUbJcqK5BFBNfX9TLz7WxWz/eFK
on7ya7HCrmvO6k6zdMClGGGfMV0qbbyls2UaLNOws67mG/xG2I4O8S5h3viZ
YKVUPGtsVsjzXBzhnjcrWshFGLo3pysWr3VLTOJDVpp1tk+MuNmyTdeIZLFt
J7NlxyiH9LDpMcx9J9FZ/9jvIXHp3mTmdup6NNqqtv1aSvbUKjX7V1r/ZqXt
GP2T0Sl25WybloVLm9WuVqXpb7133aXPuBwOVP9EPof+9f8i9M9o/ftu8AXp
n+BAIX1t3ajiPqo6ZDx5S7y5pVytTvzL1N7JA3o7BBBGEZ+dXIZb9eXvw91u
/fo5BbKdNX723buM8aYVJHQu4epmlwbWo3htzimpSog47WnRcRSdvlXKlEp5
ukRFFFFtfyk5Yx+9v+T0puOUCsoWo876lqvV/n6cWJSSkJCcqmBGeJJyv1nV
ynvCVSQuuI5ly7uJRLCwKyTpiYlp7x4Ft6hZbfYm+maq/tLr7o3yRcRI/74/
+udlpH+fKsKC0L3zBjXoO4vf8LRtP3gWnUzUqpQKNUekcQNa41WnKdNQMIIR
dfOAVfXy1Rs2s5vh/VrEVBanVfC6Vfae1aQmKUrAUm+3NW90MY6jBFOVMcq6
hvsOOoXKq0/CpQxuW9GLTf7y8ub8uuIlC1epUrV8hQpVKlUqUQFvpAxKM9K6
wfiAs7xSjn3/ITU9g7ateNOrbqkuw10HtqxcteXoBE2mT824rnWGLTnIcYr4
9x/SRWLqYpj+sF3posVx5RpVzZu37XvkBu3/67MBJUoVrmzQ0AbW0LBuDeYe
ptRXLJUrJBlSDZ25bluxyYVYfkshkSky1ftfgfzurJ/lq1SqXLx8ha03kon8
fivc8NL7zNMcaW05becdOiTiOJ7iLj/6hLo7SmSCm59cN0r6cz/laWNlM53f
SE/jKSA3cUCzUb4XCXnSskKDS+/pMy399dn65SwvJJDECz5lWg7iS5badJy3
5pDzwDqLD1G25jHCeqhg/VOqhCfISU9Hy45j4vjrMf3tcKvaw5ccJJSJCfaF
tH5NSo3zo96AShUtkIkzEpMSRQkJPs7dC+AW4WnkC5oAvz79M1r/vht8Sesf
c1fVvO/R2HT1hQ9C0buzHsVrdJQx+tdr3Gqh8O52tzodx/AbOyf17znGW7jM
fcd162Lry2+oWezWB3umNek9lvn+0a+RZ7zN2w1O0q1IY69GKtvfyrd3YOzR
wFmCp3+m9bq9MyBxwi22bGR7+1Wnrm6e0WnUYsL0qmHX97gP6jzaj3Zf+dXD
3xjlE8RI/4z07wemf4KHs+zVido1Ozx5Fzng10ZHntNZD521SjLcysI35K1B
CS+qR1dOjOhav153Z2onFCyIRKyvyVb+3rWq3OxctOAKnda3mbn/xViSqemp
75/fuUyXs/eXAis06BohJmpJeppYotVo5HR/+ehejWfsf6TvJm1bHtmrsfkx
ajVMb1fepOfs7UIPx3Wrb7fmL2IQyYRLvdO+YoMD9+PkGal6BR2XT0NjezWe
tO0mMfS+Foe3rVR57yOx4TjFXszcXSVJTxdL1CyGA99QO/PGIfrTbGq25i/m
r6hJGdqh0tqL8QYH0I1nBwv9uV/b4FSrq52+xvDWZuM3h/L0r5Vpg9PMSimL
CqlTtualJJJwwa/Cb/1llC0HdLHq1blz3VXHKP1bYdNjxLQ9WYcniumDmxYu
iWvUqF61cqUSxYoUKVyk0dAZOkdH6cBmpR38LxGdf2OWpFwxK1YpKELBfmjy
RcRI/4z076vQPyLEU1nj1M2s+bD/Y+86wKJItm6VCbOuIkUOgoCCWVFBQQXF
HEBUzCIKIirmnBMGVMw5Yc4KSDBnMCuKi5IEBMlMzn3/7h4GRkHXfc+3uv5z
v/MNTU91V3VN963Tp6puveFwCxNfdG9s4D7/IL3z0BQ3B9e5WXLIe3ujQyPd
Cey8p72+/Xqyih9tG0Z17Tx8Hb0hLMgWyiFqq7d1F/cMLhTmM1JdYligjr2b
0stRbNADevPl2dUIaS3ZEyEQCFPePb189Sa9MyVi7R+WXRIZzihXukrl0JqE
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
2uRow6ZnzJtftGgVbtk2yqrdVWv7G0063rZxumPb9W5Tl9vNXG+06Bndsk9Y
q/7n27idaDvoULshe9oP29Zh5Eb70YEOXss7jV/k5DOns9+0Lv4TnaeOc5kx
qttsT9e5g3vMd++5aGDvpQP6rBjYb/WA/oEDB6x3cwsa6B7sNmib2+Ad7kN2
Dxq618Nz/5Dhh4aODBk26viI0SdHjjkzeuy5MeMujh0fOm7ClfE+kRMmXvXx
u+Y76dakyXf9p96fHBAzddqjadOfTJ/5fOasV7PmvJ4z98+5897Nm5+0YGHq
wkXpi5d8XLI0a9my7OUrclauzF21Km/NmrzAwNy1a3PXrcvdsCEnKOjTpk2Z
mzenb9nyYevW5G3b3u3Y8Wbnzhe7dj3Zs+fh3r139u27fuBAxKFDlw4fPnvk
yImQkCNHj+47fnznyZPBp05tOH16zZkzK86dW3T+/NwLF6ZfuuR/+bJvWJhX
ePjIK1eGREa6RUf3vXq1x7VrztevO964YX/rVrvbt9veudPm3r02Dx60ffiw
XUxMh9hYh0ePHJ886fz0qfPz591evOjx8mXfuLgBr18PevNm2Nu3oxMSvN+9
m/j+/ZTExBnJyXNTUhZ/+LAiLW1Nevr6jIzNmZnbs7L2fvp0KDv7WG7uqby8
8/n5lwsKIouKrnO5d3i8h3z+E4EgTiT6UyJJkko/yGTpcnmmQpFLadZtLGNU
eb07pV13Gvvd7cuZvzo6RM+QGDYkJk1Iw9akkQNp7Exse5Pm7qTVMGI3lrT3
JfaTieMM0mU+cVlGXNeQXkGk71bSfxdxO0A8QsjQU2T4eTIqlIyJIOOukQm3
yMT7xD+WTHlCpj0nM16ROfFkXgJZkEgWp5ClH8iKDLI6kwRmk/W5JCiPbCog
WwrJNg7ZySO7+WSvgOwXkoMiclhCjkrJcSk5KSen5eSsnAmPcFFBLitImIJc
UZBIikRT5BpFrlPkJkVuUeQOkHsUeQAkhiIxwERReAzkKZDnQF4AeQnkFRtX
4Q2Qt0D+BJIA5B2Q90CS2GALKUBSgXwAkgYkHUgGkI8sslh8ApLDIpdFHpB8
IAVACoEUqcABwmXBY8FnIWAhZCFiIWYhYSFVQaYGeRkoVFDfLgH1d/CVib86
/+zEX0qhkCvX1vkv3E7ZI+UyqVgspt9ulGu+0U2AVCqRMDsk9H5NsMHfw5RN
Ff3iWq9evZLwVdUQ0kHIAqFWqEIXVKk/qjwCa02sUG12xepLK9VcW7l2cJW6
u7TqH6qmc6y63umahudrmVyq3TC8TqOIP6yj6jeJ0m4W2aBFOGl9UdfutJ79
EcNOe42ctpo4bzDttsqsxxLz3vMs+k23dPO38hjfeMioJsOG2I4c0HRsz+be
Li19urSc6Nja36FtgIPdDIf2sx06zHNwWNix45KOjss7Oq3q1CXQset6J5eN
nbtt7tp9q3PPnd167XHtvb9n34O9+x3uO+BYP7eTA9zPuHmcdx98cdCQ0MGe
V4YOj/YceW34qJsjR98ZPfbeGK8Yr3GPvMc/He/zcoJvnO/Et36T3vn7J02Z
kjo1IC1gWsb06R9nzsyaNStrzpysefOy5s/PXLgwc/Hij0uWpC9d+mH58uQV
K96vWvV29eq4wMBna9fGrl9/b8OGm0FBUZs2hQYHn9u69fi2bYe2b9+7c+eO
Xbs27dmzdt++Ffv3LzpwYO6hQ9MPH/YPCZlw9OiY48eHnTzpcepU/zNnepw9
2/X8+Y4XLrS7dKnV5cu2YWFW4eENIyJMIiONoqIMrl41uH7d8MYN41u3zG7f
trhzx/Levcb379s+fNg8NrbVo0ftHj92ePrU6dmzbi9f9n71amBc3JA3b0bE
x499+9YnIWHy+/fTExPnJiUtTElZ/uFDYFpaUHr61o8fd2dm7s/KOpKdfTIn
53xeXmhBQVRh4U0O5z6X+5jPfykUxotE70WiZInkg1ye9bvSv2Ke9h1u82sp
/47D/SytXCaTsN6U9bFS5dllMqnSu0rV1sqUy5mUki9SSktSysqU4b8jn9/V
iFB0i6NqF9QP/d76/HrmCvq65MUrAsuZKxQrP2iTKvcrq65sRf3DVm7cP4Sr
okp1kZY+qmGO6tii+m2RTiek3w0Z9UWmHsh8OLL0Qo0noqbTUIu5qM0S1G4V
6rAedQpGnXcil/3INQT1Oon6nEP9LyP3CDT4GvK8hUbcQ6MfIq/HaPxz5BuH
JsWjyQko4D2akYxmf0DzMtDCTLT4E1qag1bkotX5aG0h2sBBGzloMw9t4aPt
QrRLhPaI0D4xOiBBh6ToiBQdk6GTMnRKhs7I0Tk5uihHlxUoTIHCFSiCQlEU
ukqh6xS6SaFbFBND9S6g+4AeAooB9AjQY0BPAD0D9ALQKxavAb0BFM+GWk0A
9A7Qe0CJgJIApQBKZZHGIh3QRxaZgLIAfWKRDSgHUC6LPED5gAoAFbIoYsFh
wQXEY8FnIWAhVEHEQqwGiQpSFWSfQ/75Z1kovgLqr/GvDftHfbE8Y7n+n9LE
A/33Wwn909XVZdYtqlChEsZ1KlQwqFjJumIVu0pVu1Wu7l6lxhitWv5V68yt
Vnd59Xrra2hvramzp5bu4doGx+san/nD7EJ9i8vaVlcaNIkkttG6zaP1WkXq
t71i2P6Skf0ZE8ejZl32NXTebu66sVHPNZZ9lln1X9DYbZaNx1Tbob5Nh3s1
HzmsxVj3Vt59W/v0aOvXzc6/a7upnTtMd7Kf7dRxnpPjQienxZ07L+vcdWVn
58Au3dZ17R7k7LrZpeeW7r22u/bZ3bPfvt79D/QZcKifW8gA9+MDPU65Dznr
MfTCYM9LQ4eHeY6IGD4qeuSY66PG3hrjdcfL+/648THjJzz28X3m6/dy4qS4
Sf7xk6e8mzo1adq0lOkz0mbMzJg16+OcOZlz59LEL2vBgsxFi2jul7l0acay
ZWkrVqSuXJm8atX7NWveBgbGrVv3bP362KCgexs33ty0KTo4OGzr1vPbtp3c
sePIzp37d+3auWdP8L596/fvX3Xw4JJDhxYcPjwrJGTq0aMTjx8fd/LkyFOn
hp4+7Xb2bJ9z57pfuND54kWHy5ftQkNbhofbXLliFRlpERXVMDra9No10xs3
zG7eNL91y/L2beu7d23u32/24EHLmJjWsbHtHj1yePLE6elT52fPer582f/V
q0FxccPevBkdH+/99q1fQkLAu3ezEhMXJCUtSU5emZq6Li1tU3r69oyMPZmZ
B7Oyjn76dCo7+0Jublh+fnRh4a2iovsczhMe76VAEC8UvhcKk8Xi35n+0SaT
fO/buSqlkuHIeRyeTK1WlK5QyOPk5uYVFBZJZN+qsXL9ZhlmqfjelOUrkT/H
vr8+y5r6bab4ygLB5ez+STdn2VU/KlTUwlVq4eo6uJYJ/sMaN2iJdTtggy7Y
pCduOBA3GoqtR2Gb8biZP245A7ddgNsvww5rsOMG3GUrdtmNexzEvY/ivqfw
gPPYPRQPjsTDruORt/Ho+9grBo9/jH2f40lxeEo8DkjAM97j2cnMskcL0vHi
j3hZFl6RjVfl4sB8vL4ABxXhzRy8hYu38fBOAd4txHuF+IAIHxLjIxJmaaQT
UnxKhk/L8FkZPi/Hl+Q4VIHDFfiKAkcqcDSFr1H4BoVvUfg2xaygdA/wA8Ax
gGMBPwL8mF1T6TngF4BfsXgN+A3geHahpQTA7wC/B5wIOAlwMuBUFh8ApwFO
B5wB+CPgTBZZgD8BzgacAziXRR7gfBYFgAtZFLHgsOCy4LHgsxCoIGQhUoNY
BYkK0s8h+xzyMlB8HVQ5qMASvyrs5w9f9EP5ckS/C8nYtx6KWaUb8pLjzly+
yZFQUrGw5G2ITcm8NZUs400nZiQ7imJeOqVSSrXMN/0WR3/DCnrKY5VPkyDy
7E4fH9/5C1Y/Tsqh/y9MfrJy0czJ/lOmTp3s7eUXcuUFqNYd1ti/10roHyGE
DVuPKyJUC2F9XMGqQqW2Fau4VKrqVrna6Co1JlWpNUer9rKqdddVq7eluvbu
GuRwLf3jtY3O1DW98If55XqNwutbRzawidZpFq3bMlKvTbi+3UXDDqeNOoWY
dN5n2nVbw+4bzXusadR7mWW/BVYDZzYeNMVmiI/tsLFNR3g2H+PWYlyfVhNc
20x0aTupi90Ux/bTHTvMcnSY69hxgaPjIienpU5dVjp1XdPZZW2XbkFdu29y
7hHcref27r139ei7t1e/A737H+o78Eh/t+MDBp1yG3x20JALHkMvDRkWOnR4
xLCR0SNGXx855tbosXfGjrvn5R3jPf7xBJ+nPhNf+vrF+U2K95/8bsqUpICA
1GnT06bPyJg58+Ps2Zkq6S9r4UKGAS5ZkrF0afry5akrViSvXPl+9eq3a9bE
rV3L0L8NG4rp3+bNoVu2nNu27cT27Yd37txH07/duzfv3btu//6VBw7Q9G/+
4cMzjxyZcvSo77FjXidOjDh1asjp0wPPnOl99my38+edLl60v3SpbWho87Cw
JleuWEZENIyKMo2ONrl61eT6ddObNxveumVx+7bV3btN7t2zffCgRUxMq9hY
u0eP7J88cXz6tOuzZz1evuz36pV7XJznmzej4uPHvX07MSFh6rt3MxMT5ycl
LU5OXpGaupalf9tY+ncgKyvk06di9S8/n1H/lPSPzy+mfyLR70D/aOcmU1sP
Xa5cx0LBsJT3l1ZXRJXWXflAb8vklCqBTKmzKdhHg5KrpYxIA2VvTuGTHlYO
0clC+j+BiBnjw9I9auP0QX/8Ub+OjuH+28pzKkoyZc4pZQ5ld8miTmyb4u8/
ZcoUfz+fgFkb00X00UXHt66YPHmy78SJGy9EC1XljTq5beqUyUzKSUzKDDHd
onzat3rJFDqln9/6w+c5ajG5SzIq4YNyOXO5yv1yNXdNUfKy/ThfHk5RdN3R
LoLt9pEqWxK6/iiZ6E5E6IO3n+jaEYrE1Be19GV9/vU5gW2e6M/chFuzZs6M
eJLKbP95d8bkCZP86Xryp6slYNai0Ngken/EsS1TJvtPnRowwXvsppArFPsb
/+3b4r+2smv+ogqVUeWaqKo2qmGM6lih+i0QaY/0OyOjHshsALIYgixHoibe
qOkk1GIGajMftVuK7FejThtQ5y3IeRdyPYB6HUV9TqH+55DbZeQRgTyvoRG3
0aj7aGwM8n6MfJ4jvzg0OR4FJKDp79GsZGbR8wXpaHEmWvoJLc9Gq3JRYD5a
V4iCitAmDgrmom18tEOAdgvRXiHaL0YHxeiwhFka6biUUf9Oy9BZOTqvUv/C
FehKGfXvNqv+3VOpf7Eq9e/pd6t/ySr174NK/ctQqX+Z31T/ygqAXDUB8Nsa
oKg8DVBdBixXCfxB6l8l9vPHLvn7pSTHvAox937i+bmNXUerp/sipUJR/jxk
hbzse6TyyLzpPVsQmw4TZ88bN3yg7/Lt9K7k8DWoQjVPn4BpUyd5jfENCX8O
Gvr377dy6V9tjPUrVLSuUNmuopZLpWpulauPrlLTX6v23Kp1llX7Y131+ltq
NNhTk6V/dVT0r75luHZjhv4Rmv61YuifQbtLNP0z7nTUtPM+M2eG/lmo6J/1
wFlNPGj650vTv2Yjafrn3nJcn9Y+LP3z79JuilOH6Y72LP3rtMDJcbFT56VO
jPpH0791DP1z3eTSYwtN/1z77OrZd2/vfqz6NzBkgBur/rH0b7AnTf/CaPo3
fFQx/RvjRdO/+zT9Gz/h8QRfhv5N9GPUP4b+TU0KmJZC078ZMxj1j6Z/c+cy
9G/BgswS+rdsWTH9W7WKoX8l6p86/VOqf9u3F6t/NP1j1b8S+les/h07Nu7E
iZEs/XM7c6ZE/VPSvxZhYTYs/TOPijKLjjZVo3+NVPSvaRn656yif1+of1NZ
9U9J/1aq6N92Ff1j1D+a/qnUv9+Q/pXoYspLUKj+Vb4+gyR9f/Celxki9iso
t0OjWIZiUu5+yXAvdjJMQUyHBo1Dk0qVLjlzZorLE4hy3vdu22BdeCK9U8q6
R8VnJ1VImH2i4U4G+m37zJ89fcIE74CZQWn0iSWJjgaobb/xS2b76ter3mf2
LjY9f2RH/Xo2znPmzPSZ4D115oYMujkpim1aQavLUN/5cya2t2rQyM4vizmn
/HNnzAYPKVshCiVd+rJ3p0w5yx/BWCLKDXHQ2Xy7sGR/MYcsW59fFqncAZPM
B/N7KLLGOhjSXmj85gj6v+z42zOm+Ezyn+w3afLsgPG1MZpy8DG9f7C9Hl11
C+bMHOc1JvhYRMnR/7Cp07/KlSuz9K8KQ/+qNUA1jVFdK6Ston/GSvo3FFkp
6Z8/aqmkf8uQ/Zpi+ueyG7keZOhfXyX9C0WDI4vp32gV/fP9TvpXUD79OyBG
h8ToiAQdlTD075SS/skY+ndJnf4pUDSFrlHoxuf078E/S//K7f/lfs4A1emf
oAz9K5cBSv8mA/wa/fsmA6z8o+mf8kHipb9evWDOBJ9Jp0NvMWfOiQ+cN2eg
cwtiZu03ba7PuNGbjkYoHzhO5vMlCyaM81kQ9eSj8gy5b28funSTl5OyYta4
hSt3ZBcxz83j0HORt16/uhs6dqz3zohbSnd2ee3IGg3aJJS8f0oE9GdKVJB+
qwHiz4r0y3Q5aOw/tfLpH6Lpn7r6R9O/Gv5Vas3VqqNS/xrsrvmF+kfTP2sV
/WuppH9K9e+oSTn0b+Y36J/dFKf2pfTPkaZ/SvWvPPqnVP9o+td3YEh/lv65
/Xf0b+Z/S/9OfJP+lah/JfSvN0v/nNToX4n6Z/a5+vc99K9E/fNWqX+zyqh/
29XUv1Os+vd70j8lyYm5tH/HqShQUb6oE7sOX3lJb4Qe3DDeL2Dtll1vPnKh
lJoobpw56DNhwsIl61NzOOxpqPAjG73VUjL0L/+hk7FdVFzK4XVzveYuf5PP
Z8+gdIjcwY7668MZnUqq6gKOOBc0bpzXkg3nuMVFE43q03pp+IfPiitM6tvG
9OwbprlIuLyylnaLZ0z+wlHdmk09/Pyz68qP7WxiF1PE/pMTa1m36rKLb5Rf
RZ3fSGe0lM6o2DdLLp7c9zKd++jyznHeE8JvMMnkbD0UZDxcvmjuhPETT4U/
gmK2VlzOpUHnOEotkf8hZOvJ9OyM4EVzJixY8SqHuczbZ/ZM8hplZVy7Y79R
s6ZN9p0y82k601SEHg5Sr08VURRcOLZhwoTxyzdcKBKpzrntZFp2xuZFc3wW
r3ydwyQWixkF9eQiT+dB/mMHOXltCAdVL5TS5AnnW7bq8SdzBv6IPm2WXVGr
up/a+auif5XU6J/2l/SvRP0roX8tytA/5zL0z+M/pn9fUf8OqNS/o1I1+icv
Q/8ohv5d/bfRv7Lqn+inqX8/mP6xd7gkPbZra6vBIycH+A3r38frLU3KCv9c
PXe2m3Pz+saWftPm+I4bs/FwGJ2S/+6uUxPrgaP95k4aaWzQdP/NBHrnm0tr
tUmDto7O3v7+HRvq2A9nSndosnuNCtrOPQZN9RqiXbvamsv0S6t0QDPt4YHM
+xefy6df6xSssJ8cGVTPwv5hSn5eVkb6xyy+6F84pFFjZezr6h9N/yq3ZdS/
qsXqH03/GPWv7rrqDP37pvr3I+mf0zfpX08V/eunon//pfr3v6d/E//39K9c
9a8s/fvN1T+FjPFRL0/OqaJj90HprqSp7fSrzT3FsKDzBzf5jRteuypaE/qe
/lfIDlo7stLLtrnT3HmzB/VwWbU7XHlM2NEtE72GlaSkz6QofNpVl5g3aTfM
e/KgbmYWdkNZ/U3GTMxQ5Ll31FOqf0IJQ7QOzPWytO2wYPEi17Y2nQYvYiUz
/sieTcduDJMLClM+pGXn5jOlEyb2aKZ/6jVTjLu7J9U07JTAsB3BKGdr90VH
RWLOh9S0nLwCpfbooNs07D2PLZ6wb9Pa47bfpbd2zxxt1dS+JCOWHnLHuTbS
tWrZw93Tb1TfurXML77Op/cm3Ntnrlunywj/aX4jhnnPS+UzTmC/qpw97Gw7
DlpANy+KnPttqv5h0rjVUK8pHt3NzNoMpQnpw3O7/LxGNzKs2aHPSBX9Ywp6
6Uiwei2JmLoQzhthZ9So7az5czq1NGzu6JNHf5HHnNOscSsvL//erUhD5/FK
ks1/G2bVpO37fMnEHtbD1l0BlhPKZRKeQExvTujc0H3xKTYhb4Rrk9FBoTJB
EU/8FcX2H7Gv07//SP0rS//+F+pfOfSvrPr376R/31D/vkb//iXqHyVnzpF1
e0eVeo1f5hXvlMnlyvfVxIvzWg+coJ5+zbhurj5blNuHZ/frMHAGvfHhanC1
Onrbo9/S2zl3dhi26Uc/4BcWujcwcoxnHcmKQR06T9gLwOlgUmPG8WdQPKCF
fr4Yj5R6Y1fNKkjPxMLC1EjHtPHxhxlsAo0A+O+276Z/NYrpX9Vi+vel+vc/
o39/V/3T0D+V+ve99O93Vf+YGbLMZ1bvZhZrLjGUL/7iausO7gX0lqLYK3u5
mm24wih1fIZLKMY6N3KdvLfkaHZAH1WaMiIZlOG8eC9aV6viuymC/Satk0md
rbeYThYRQ/cKB3XUW3+FSUn/J04MtzBreT2B0bhk2Y86mOiHPKe9rWxin8ao
en1rK0sDUr+Zx3SGqokS+9j80cndd/GMCc3MLJeGPGRPLpjarwmqUtfa2kpX
+w8X76VM7nkPOuk3PfH4I01DT6/1rlWvcQzN6VLCG5q2vPFOLaNn9LZigqtl
o17T+Oy5fPq1mrjnAV2ofrb1R60KVdUS48RFieGNSsqZ86i9se6JOAnIXreu
UdVvc6TqMutuvZmuPGaks+Guhyotk75SVUMw1tU0KCJFuZ0atb6WfvN4pUop
jm+uqxUY/RGot62qa03cxBA8SLpsWLfJdaYlEUzo1mL2QabRGeFk5RV8jSkG
M1qQ+QWy7u4yNG8bz2q0dPXP9bSrWlfXytS4ZfveRx4xzdnX5on8T+1v0L+y
6p+G/v0K6p/0X6L+FTsh7mafXro6Op16Dtl95Qn9v1zMdMve3edv231ogRyk
Ag6ffefy62dTqa6uib6Ojp4xqVuttcdUOllS6Er9ziNo70GJBVKZpCCPeSwP
+g/sP34rm4N809huXUYH07l0MKo26wQzs0PEvBFTEjHzcpccGVTfstPTjzxu
fk52Xr5Y+tNm3GvsB9rfVv++oH//e/XvO+mfRv3T0L+yJmNnWxyb72bbdza9
ETi6k/vsI8CwP4mYZheCjwM6kLVhjFolZtW/5Acnncy0zZq2Gjtz/Xsu6+Io
hViqAGEmm5LR9BgCVhDjoN/sxkeKIZhSznBX84BDTBcqX8p0DLs76K1jO39p
S7m2vWbtqsbGJtoNGhgbGtZqQHYxDEo+zNV2/NZIkPIzMj8VFHGYvMUpvRrX
cR7iN9DOyMRuRLZc6fQlY1ysBy87RVHirMxPRVweM8Sw6HnHutVrEiNzE/02
Dn3P3WfK/z5ya606VY3UMtrJZjS4m+28Mwz15QlEYj5HIGd6rh30WlzPoLeY
4OvF7v3qNvpwtpzaxoZGNbUb7L+fB6Kn7UjTm5nFlznM1WL64VimSngfaYq7
8vxrZrgjX6gc5idS1VLJtYcGejp5MspDUSHd1lCTBrQaHnQD4LVdA9ubmcwd
xXkf2bie5d08uLFpvJnjyEy6IEUfhjhZDVnGCH1SmYKdsqOY7GLSPWA3+2uy
KimPk5Obw83O3uDTvSJpG1cIP0UC1NC/X4v+/ffq39+ifz9j7B9t3LSEA0Ez
DQgJCvtTuefR4akt+nort9lEUu+ezUexwyfy8vJFUmYmG72ddGW9fkf3XNXk
M4qd93FoqkevEWuVjw5N/5xGbKQ3Rraq08l7uzLXkgLQ9E+nSbc0Den7vUxD
/zT07zemf8oZvsJ3l6waOb5OSxrQutk5ZtBMiVrFH+JkEBT1QW0PbdIXty8N
dbFp0t2H0QmVCiLwSlKyM38fORm1ik5VDoUu7NtKf8sNRsNiXT0z9m9jdJry
XJk3tzWwdUnkgYxfVMjj04RGxBwvGtGr+Uz2FVtpTN6ipF7N9S8wqmFRR+0K
PeccVJZwTDebsZuvglq8F6ogtpOe7cmnH0WcgpIf5uNXMhrVq7n/gQdM2Uom
+vHiHAyNjr3gqddTxo3iw6X8oiIenyZabC9zbEf95lEll9lSd/NVdtCdPN/D
0TD4RpbaCVT16WhQcu13d06wdBlbkmJIB93xe57Q9K+djm0Yq1KKkiIstW0e
pnOWerauXJNYmJsZGxnWqlGtWtVqzQbPKmJrs+DpCQP9Rncy2Gy/4Hj5t3Vr
GIYnitmfD/5h09A/Df37hzp/We6X/uJu2PXofBEF4oyuTYn3rtvAMrns+3ur
1iZHHyUKuAU5+cxIisvrRuuYdLidkCMV8V/du3X9GfP29+7yGmLvVuLQpGKm
XAf8B/YYsU6Zy4bRzo5DmSI/P7EMoapLdkcIBKKUd08vX71J70yJWPuHZZdE
5k1RLtf0+f4upun81dC/35n+0c6OXdbG36Ojs3uvXqMXsJM05MzwvcIidpau
9pITTygxjyuhQCqIvnTseRITdeThvgAtaxdWo5LkF3JKU4o4PNp9Fj5oUdVk
a1QiTWFCFnvq2/TLYN6LJQWFXHFuYp/ic3I5Ejrnd51Ma41ecpwrlRSlpYRd
iWQ0LhANd7UZFxwJMsHHrE8F+YWMoihKdLUlO28w3Onu3mla9Zu/ZKd+DOts
OWI901UqkciUU1yp/Bh7HduIVMaNs2OzWVrETWAyWnysJKOPbEae3W0mH2Ik
O2V/jTL2zLy+lnp2I95kFnFyk25eu5ZDZ89P6FhcTjEnPfVy+JVc+tqLHtk3
aLLzGnOZR5YM07buniJUht6jJrlaNPOcXyAR52TnsHOZ5QWltfSUEhXx5SBP
v2ZUXXvOiWiZQnouMKC+UbMn+QCchzT9C3/P/A7891es6llGJIlALsjNy/2U
W0DxMgd3NPdYepL5VsiUdcnAlk5jGFFCztItuga4hXk5OfnZ2YljuzS0dp3K
sNifHfhFQ/9+Pv37fTt/lTGRMl9c7OHUzMDQhBgbuM1ena0c98p8z9s0y82g
ob5OvbqDpgexennetnmD9I1NjYwNrDp0P3GdGSCRGLHZuseoAjZuOjDxOZnP
Y3NGeahGCW6bOKC/r7IjWHHr0AZ7Sz0jM2NzM6vFO87Ru1KiN5vb9U9l/JSG
/P0+ppn68TvSP83Uj1JTzlyLu7y+YsVKQWHx9DYjbEkyxnW11tY10NGup6ev
r2NiFfLgI/00bF/saWreyMCAmLVzCol5zRwvTPN2/izl0YdZNP+bP8LV2EzP
xMiofacBN998YlKK1FLq6euYWofcY7Sy5JhjLu2tiYGpoYXZ4ICNeUx7IJrt
aadVW9vC3NzQQMfC1i2OJjHSZDd7q5PP2Kkh0gz3FhYz9jO0zbtX64nbrwMz
Fq54/WWKiTpoH8VEHSxWvRRsA5H26LizKqMhARtz2Z7S8YMc5hxnRgpJlKFi
ldGksxPmunU1Ndcz0G/Yx3d9AStwfnh0wrm9FX24kYWZx5QgZmwQ55l9rapa
9Q3MTYzadOof9iYHVIudpcaedbIz1jMyMDC3CX9LE82sMZ2tGuipaom5dobH
Pjy+1d7MyNDIwNS++4lYhlfL8h71tO4YlcTQP0HyNTtzu2up6vEkFH797fx2
MnEt6OLyEyNsDZtcfMOUpTiujTiDruR6xMCmcdMhfstT2CnKip8R9loz9ePX
on+/79QPKF1PR56Xm1vA4xfvLPmgHyVeQW5OLocvLDlEyOfm5OaKVE+GQibm
8ARfPCcSoYAvKH76xEK+cru4n5kS5uZmc3ki1eESDpevYX6/mWkCv2gCv/zW
6p/KKBl9k5euxUEpuIX5uXl5hYVFBfn0RulgZj6Xk5OXp1yunX06vkwpUqXk
cfNycopn4rFB88qcU6ZQzRxR0H47j1vS30qJBNz8/Dyl5edzWIlSwedxJKoO
TqmIX8Rh+qkFPK5A/PlSGmXWHFEVoJyMhHyecgJy6dGqX5PPyc3J46oOV5Q9
XFHwqLNx89PPmF5muVoy1Ug7SV5eTl5+AVvm8q5daRJhdnaOpKSQxYVXihcy
LodbPMFGuVYypRDw6euVKts1uhIKOWyLVtrzreAW5efm5nK4xS3dT+F+oAn8
8qvRv9848AtrlFpczmLBX/WN/MuhD5S8dDFESv73J0bJ5aVx4xUKDen7bU0T
9lkT9vn3Vv/+htHXWeoqv+k2KbUqoRTfHgyjUPteUU6o/fIz+OLv99jfyIgm
XiVNBqUoWQGq9HC5hJljknevaVWT0CSmBZMx35ae8jsvpLSdYmrpP7yLvram
nVz2MyNPaMI+/1r077cO+1xixW9JX9mv/lXZlOUcqJ6kzIm/OMEvtLSkxn6Q
/QOLvh3VLPr2qy/6FvYbL/pWYmWdobp9sf/HpiwncXkpPz+keH+57v4brric
Qn5fSrWdUNzLLMw4sGFHAhuVsFyi9UXhv3Lt32qGyi9AmdKUzfSnN0aaRd80
i779k4u+aUxjP9xK6J+uri7jwCpUqIRxnQoVDCpWsq5Yxa5S1W6Vq7tVqTFG
q5Z/1Tpzq9VdXr3e+hraW2vq7Kmle7i2wfG6xmf+MLtQ3+KyttWVBo0jiW20
bvNovVaR+m2vGLa/ZGR/xtjxqGmXfQ2dt5u7bmzUc41ln2VW/Rc0dptl4zHV
dqhv0+FezUcOazHWvZV339Y+Pdr6dbPz79puqlOH6U72s506znNyXOjktLhz
52WdGfUvsEu3dV27Bzm7bnbpuaV7r+2ufXb37Levd39W/XMLGeB+fKDHafch
Zz2GMurf0OFhniMY9W/kmOujxjLqn5f3/XHjGfXPx/eZr9/LiZPiJvm/nTzl
3dSpSdOmpUyfkTZjJqP+zZnDqH8091uwgOF+ixdnLl2asWxZ2ooVqStXMurf
mjWl6l9QUDH9Cw4OU6p/O3YUq3979gSz6t+qgwdp+regRP07fnzcyZMjT50a
evq029mzJeqfw+XLdqGhLcPDba5csYqMtIiKahgdbXrtmumNG2Y3b5rfumV5
+7b13bs29+83e/CgZUxM69jYdo8eOTx54sSqfz1fvuxfRv0LYNW/BUlJS1j1
b52a+ndQqf5lZ19QqX+3lPSPx3v1W9I/jf1No8rZ0pjKlPQvMDCQdptVqlRh
nGdFLVylFq6ug2uZ4D+scYOWWLcDNuiCTXrihgNxo6HYehS2GY+b+eOWM3Db
Bbj9MuywBjtuwF22YpfduMdB3Pso7nsKDziP3UPx4Eg87DoeeRuPvo+9YvD4
x9j3OZ4Uh6fE44AEPOM9np2M533AC9Lx4o94WRZekY1X5eLAfLy+AAcV4c0c
vIWLt/HwTgHeLcR7hfiACB8S4yMSfFSCT0jxKRk+LcPnZPi8HF+S41AFDlfg
KwocqcDRFL5G4RsUvkXh2xS+C/ge4AeAYwDHAn4E+DHgp4CfA34J+BXgOMCv
Ab8BHA/4T8AJgN8Bfg84EXAS4GTAqSw+AE4DnA44A/BHwJkssgB/ApwNOAdw
Los8wPksCgAXsihiwWHBZcFjwWchUEHIQqQGsQoSFaSfQ/Y55GWg+DqoclCB
JX5V2M9A5X3yc29TjWns61ZC/+rXr49UVg0hHYQsEGqFKnRBlfrjyiOw1sQK
1WZXrL60Us21lWsHV6m7S6v+oWo6x6rrna5pdL6WyaXaDcPrNIr4wzqqfpMo
7WaRDVqEk9YXde1O6dsfMey018hpq4nzBtNuq8x6LDHvPc+i33RLN38rj/GN
h4xqMmyI7cgBTcf2bO7t0tKnS8uJjq39HdoGONjNcGg/26HDPAeHhR07Luno
uLyj06pOXQIdu653ctnYudvmrt23uvTc2b3XHtfe+3v2Pdi73+G+A471czs5
wP2Mm8d598EXBw0JHex5ZejwaM8R14aPujly9J1RY++N8YrxGvfIe/zT8T4v
J/jG+U6M95v0zt8/acqU1KkBaQHTMqbP+DhzZtbs2VkqAZDp/128+OOSJelL
l35Yvjx5xYr3q1a9Xb06LjDw2dq1sevX39uw4WZQUNSmTaHBwee2bj2+bduh
7dv37ty5Y9euTXv2rN23b8X+/YsOHJh76ND0w4f9Q0ImHD065vjxYSdPepw6
1f/06Z5nz3Y9f77jhQvtLl1qdfmybViYVXh4w4gIk8hIo6gow6tXDa5fN7xx
w/jWLbPbty3u3LG8d6/x/fu2Dx82j41t9ehRu8ePHZ4+dXr2rNuLF71fvRoY
FzfkzZsR8fFj3771SUiY/P79jMTEuUlJC1NSln/4EJiWFpSevvXjx92Zmfuz
so5kZ5/MyTmXlxdaUMCofxzOfS73MZ//UiiMF4kY+ieRaOjf/2ejZFJNaP/y
TUn/Vq1ahUoNI1wVVaqLtPRRDXNUxxbVb4t0OiH9bsioLzL1QObDkaUXajIR
NZ2GWsxFbZagdquQ/XrUKRh13olc9iPXENTrJOpzDvW/jNwj0OBryPMWGnEP
jX6IvB6j8c+RbxyaFI8mJ6CA92hGMpr9Ac3LQAsz0eJPaGkOWpGLVuejtYVo
Awdt5KDNPLSFj7YL0S4R2iNC+8TogAQdkqIjUnRMxqh/p2TojBydU6l/YawA
+IX6d4tV/+6q1L8Ylfr3RKX+vfwr9S9Fpf6lqdS/jyr1L+ub6t8X0h/n+0b9
if+qz1ep9f0v1T8lVinvk597m2pMY183Jf3j8XhNmjShGSDR1dXT0TEnus10
9Rz0DHroGXnoG3sZmEwxNJtvZL7KyGKjseUOE+sDpk2Omtmeadj8okWrsEZt
I63aXbW2v9G4420bpzu2Xe42dbndzPVG857RLXqHtep/ro3bibaDDrUbsqe9
59YOIzbajw508FreafwiR5/ZTn4BXfwndp06znn6yG6zhrrO9XCd795z0cBe
Swf0XjGg3+oB/QMHDlg/cGDQQPfNAwdtdRu8w33I7kFD93p47h8y7NDQESHD
Rh0fPvrUiDGnR409O2bcxbHjQ8dNCB/vEzneN9rH75rvpFt+k+9OmnJ/8tSY
qdMeBUx/Mn3G85kzX82a/Xr23Ldz5iXMm5+4YGHqwkXpi5d8XLo0a+my7OXL
c1auzF21Km/NmrzAwNy1a3PXrcvdsCEnKOjTpk2ZmzdnBAd/2LIledu2hB07
3uzc+WLXrsd79jzcu/fOvn3XDhyIOHjw0qFDZ48cOREScuTo0X3Hj+88eTL4
1KkNp0+vOXNm+dmzi86fn3PhwrRLl/wvX/YJDfUKDx9x5cqQyMiBUVF9oqNd
r11zvn7d8cYN+1u32t2+3fbOnTb37rV+8KDtw4d2MTEdYmMdHj3q9ORJ56dP
nZ8/p/lej5cv+8TFDXj9etCbN55v347+80/vhISJ799PSUyckZQ0NyVl8YcP
y9PS1qSnr8/I2JyZuT0ra++nT4eys4/l5p7KyzuXn3+5oCCyqOgal3uHx3vI
5z8RCOJEoj8lkkSp9INUmiGXZ8rlORr6pzGNfWHKGdDBwcFaWloGBgYNGugQ
PUNi0JAYNyZmrUkjB9LYmdj2Is3dSCtP0nYsae9D7CeTTjNI5/nEeRnpvob0
DCJ9tpL+u4jbAeIRQoaeIsPPk5GXyZgI4nWVjL9FfO+TSbFkyhMy7TmZ8YrM
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
8u2inHburm757OzXX4qB7tYnLPj8i+TH7FTf5/PN13iVqJ/LEHfG/l/5ckeN
Vlnmp7PWUsqzH57TsWbHEfJFQrwMAaWBLcp2XngO+LWifdD5F7xPS3hwokRR
n7ORiDq7oHDFVnLItI61xi/Z06+l/5Q9HK3N7FC/rcL+GYzK3P2hOX18anV9
LndgCU/a1/RrP5UTfUaTRWzusQyu41FvmFgrKLCZVp0YFR2lioxc0K9eVlbh
djzeIwX4/4J//0/273+Dfzb2798I/5TlquYXDUo5LD77Sgl6emJmPu9aWgH/
GvVYrARe3zjYv1ZX+WLzoOYNu85XXvOFPerW7s6X4Zl0vJn/sO3z0o27ibbC
Pz48Nt+5Wuto6440hcPrXsmuem+BHtMslpDhn0Ng3afWlbNiX1emMZO6NSo5
kM9BSyM7Nm7cqGatTiFiNGb893Ue/wGxwT8b/PuI4Z+ywln7+0G/4jV+ffqw
RbmS++7xwaiVrdK0r+my8OSTNCGyGH+6cLBDnRKB9fpxnlBhEKFOiSl2/l6v
6Vb21GNlKXR807LOy85FINnU87V/i049VdJ6cX6FfVCdMDVMmoR4tUaGKTp+
v65Lo1Ijd/6UUkyet+5ho1LO33DWMKGaXZaGYzYqJexRt0TPJaeRpvaluGvV
nYJ23XquS4xLMbvP35BRt0alBm24zMtm3YoL9e2qrm7bf1KnraeIc8m3GzUJ
CWqNDJ/ELPO1as6lTqY8ZhnHJafFUjpzbNsarkvPvUyTgLU+a7ikPPvF1SG+
dXqmxGhf2bHv2psy/PvEIeiIYCm1j076Fyl+PhqRZxfZV2qu5Wh5ee2ajT77
LGDuNxz+zerYoMPn21KTh35E6zK5CjBvby8PN9f8eXPnzpW7ZLtRCaLe427t
dHEu/l2EKOBrr2rsBce8rkfD9OKHxnsRG/yzwb8PAv8g2iKWhNR1LN/uTqIq
PuynegEurcdvlAM3DWlVtf7Yl2bE3DtXubhjyAJOqn/Vv1lDwfjJsqDbZ7U6
z5MvtHGRWjNOLu/j/2nrCBXiY/lxLmFH5jhUaaVYOUkceiBf/rx3FiE5J689
npSkDf/91qHT5+XA8ONzC/t+GiamjcXBCa/F1D2+f2P/WT5h0aV+YOhXl+SL
G/sW5iIkoNUwHVKsqE3+WWKDf7bJ348Z/il2DepBbavVbt2oUfcJYpOGmS/f
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
X70Z/qks2Q1GGf7lhaYQEuzTw7/y0g3O/uG8YP+S4V9nDv+S2b/hWGSFf1/M
S4Z/g9Ymw79OaeBfHQH/Utg/Pyv8s1OhQDL8M2eTDFk4/Ev8X+HfRgH/Vv8Z
+NfpzfCv8jvAv7wc/ln+V/j3nRX+nbDCv31W+LftzfBvxscC/1KXygiUYbF+
NCnzhoZn65eu/TlCJ75CplxS8gQHj/nlzxx78YSkuKuV7QMOP0xlusw8ZUml
TtJFPWhcwX7e0TA50CiQlSVdohYDD9N1runiXKHJ+NGfh4T0GTZy4VM5YUNY
DRdSoVnfyaP7OxfJ02T0GhFf07Wac5EStceMGdkvpM/QkQsiZLubcC04S85P
O/QfP2ZAJT/74hVDX/I0zelX34hDjDJWiCiMxZzJrE36cma+gjFluqd9VYcl
F+JTwpMxZMb6fL1ImaSZXCE1XJzKN54wZmTvnj2WbT/Ga1ZSLxozoG3XQWP6
9ypm7zB67Vkl/qaxrR39yo4aN7KkW6Ga/ReJbP6GWeC08C979uyvw79gAf9q
EdKQkFaZwb85or3JDe+rNPDviBX+fffO8C/2zfBP/9b5X8mGAP8qzY7s7xH+
KY3u9+/3DQ7pNWjIsDHjJ+04ccliHXMlPv9h8oSQPv2+OHH9mfxRH3l3zvgx
LWuXZl7+ocPH9uvVdfHOcxbd0wF163zauNnBXxNfXNreuUPzumXaXksAnp0o
5VbrRpxo/vKAUP5Pel7Ls8DAdVeVrJ+cWmBfrFYicGDh8JHLz/xyaKq9b/Un
crZGPuad075KjV6KmcKWQY2qteGT3RaDzc3dv0b+CP5FpsK/Mlb41zoz+PcH
7J9RsH+agpnBv8rSZYX9ew3+9ePwb9mfhH8p7F9a+Gdl/8xW9u8fAv/emf37
/8O//yD7p4CcqwfXr9p9ElbId3Lnms3HfpYvDm9c0Dd02Nxla+48509nhSaW
c19v7BcS8sXk+Y+jEkUy0tEti/qkickNb+yVmu4VT94O3zxvbK+x0+7EakQK
Cn5StavhPP/oQ/nKaB0IH9+3sHfvXpMX7FMlF03XrUm5KUefpCuu9mHT8p57
73Djef/QjPx2pX/g+Wu71S05dPOP6Z4r9lotj4pXE8SHqGu+hXJNPXBH+erk
/kVyRlPkjJJ/K8OBXet+fqa6fmh17z4hR8/xaGZRD3ERV6ZNHBvSd8Duo3xK
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
mKBszou9WsUh6PhjbmZNZn4ILH9E1X2e0aTtKRk9Fxl1rFdi8CZO2ekFP6ac
PTOuqa9TxS53XiQkRj88f+ZMlJy95n615HLqE589PnT0WLT87AnXq9gHrj7D
H3PL5E52/vXCtcrhK9LA+j4lO46PM+ijIqPE1l1zXGot3ZJ0CRozzM/OuOWx
G7PzlMli3DdnWFG3kjdjgcQrMvw7KmZyNQ+O+RXxPcZZCSkuNjo6KjYy8kHP
T4v51x/KezezPjEuLioqKiYycmrXWj6f9eb1Ef9rzeJF+8z52mAx7pzcyT2o
hbLr+cO/mjb4Z9MPCP+46JO4Hb6+ZXhwg058KR43yKoVY1s7u3u6ebj6Vqq7
61s+FBJbuzSLR7VyKeZiXzBvh4kbn9/YG9igq1jiJ95aJHSrX5wP3+KulWGF
HVzcixUr5li04Gd9pia7qTO+aOWfN09AixeyuRCY88r2KR72hV1cnIoUtXew
K/xZr0nyN5onV1vXqerl6O7m4lm92bBfXyk7iN/X49rkL5ePEf7Z2D8b/EsV
ixiN3j40P2vWbAuP3JWvObFliOj9mb+do4uDXREnZ2cHD7+tl5/LT7hyUkdP
7+IuLszrk5pbr/7K79c+7VM7XcxtV17KKGR8l/ruXk4ebm6Vqrc4f+cVj6lL
E9PJ2cHTf+v3nCt7dHV7nUr+zMXT1cer3bBFMdya6kZ3rJizgJ2Pt7eri4NP
UKvbMtwxPmpVxW/XD2JriDGidWmfEes5bOvTqNyAlfzMExMnuMQcED91sMpJ
fuoglG12FrFm5+n1HbWtGbUftiha7Cfp26bqmB035SuD6BWUSRwp8v7YVp95
eju5OBdr0n9+nBivP7m+s3YlP/l2Nx+vtkMW8iV7iT9UyZ8rZ1EXbw+38tWb
H7kTBev5YI+v7a1Z0d3JzcXFu8TRezLQfNmjlp+9k7WW+LNzHHtlx/IqXm6u
cvdQpd7OaxxXm2KuN/SvdvIhh39Jj858Uqz86ScWSM97fupf1NGlREBw+9Bp
4eJgWXPCnTZB3nbObiX8fZv3HH37lbKAEeFXd1Tz83R2cS5eo/73okiWv6PL
sW39sOmHg3+SlLKhdu/4luWa8jUVMCWDNa1GFRUdrUt2uZPaFpLUfPSkStKZ
5TGdWpPWP0+SOtEgD4wlsyohPjYmJiY2NiY6Ol6VlBLDoEtM1CrpC9SoT5Ij
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
/qWnf+FW+re+g5X+fWmlf2Uy0j+qz57NZCfSv/xI7K30rziSUlb6V9NK/5pb
6V93K/0bimQUkglIpqalfytt6N++96d/2szo322C13g4N5FIHbGhf+vT0r/v
CU7lIdxGERxKsD8P3ibRv7Y29C+IYiDF8hRLUxatzcNK//Kko3++aegfDUMq
0r9JNvRve6b0T/tO+jc/mf4JtvQviNO/4hL9o+Z82Qy5RPqXN5EW4vTPJYJ4
WelfRU7/anH613gPabmdtN9AOlvp3+C5ZORnQ/9Sl8oIEn9IWbXCCaHh1YoF
v9yK1GEytcjEQmSRFCxLuewW414sIyHhUnWHUnufplq6zCxnQanS6GIeN6vi
MHv/E/GkUSItaTK1GNg5XZc6ri5Vmo8fPSIsLHTYyHkvxYwNT2q7kiot+0we
3c+lSJ7mo5fy9OpuQS5F/OuPGTOyb1jo0JFzI0XFnHS5jF2uLzv1Gz+mfzVf
B5/AAW9YnummSQUhM8cTQvKkalrjJO+WtPXMfAWjxfq66VjTcf7pxJTzyRwy
Y3+mr1LGPNkP8fz4IpE9NQpdwJIbo5uUz/Pt1gfi4bfNqzfps4zlr2evO6O1
65wrN5swZmTvnl8v3HCA/QaCKnxM/w7dBo3p16uYg+PoX45LWa8e287Jt+Ko
cSPLuheq0y+cV+iDzQLb0r8cOXKkp39lOP2rS0gTQtq+k/79akP/9lnp35n3
pn/xNvRP9d70zyLTv38QOfgqoA9F/6SH7tG5HYPDeg0aMmzM+EkbD523WMdc
iqgbkyeEhfb99tCVV+JHffQfs8aPaVO/PHj7DRg+tm+vbj9uOmHRvezfsMGX
zVruvqt4fX5Dl06tGlbocDkJ8dWhcu51ryZINjuBPRtCVF2vAgOXX5KKfnFk
roNXHRXipuHt2g1YLp1cOyK4YKUQ8aBNNYfRW+5IJ18dne9RtyPPyfwJvij+
VyVL69+fpn/ZspnoX6Z/Izn9m/JB6F+m1r/bNta/d9C/dNa/LOlfWuvfX6d/
mVv//jL9s1r/zKnWv0JW619W9K/Fdmb9s6V/n4n1TyI5l3av+HnLYbRSvsOb
lq45cEs82Ltqbp8Bw35YuPReFItobKUmlhPbVvUNC/t28pznMQqejbB/bXio
TUqmeOMv1vEIPHwnYs3ssb3GTrsXr8bU9TDKr2q7zNn/VDwyWqeAD+6Y17t3
r8lzdyiTq6br3rzSlP0v0lRX+7RFZa/t99jL4uGe6fmLlr/Bytd2b1h26Jrf
07Qr/nJdz8BLSfxDzOWShXJP3XVP+urwznCxoCliQck/lmHX5uW3Ximv7FnS
OzRs/wmWzMz7ISHy4rSJY8P69N+yn00JSVWX6jll3g6FZEtUv1i3aPOr6MgF
E8eETfjudgxr5ultvwzs1d3Xo0BQy+6jhg/uN2Tk9VfMVLl3zTzb/rQSRc1v
G+aGhfWZNve3JJ01z582v4yOnP/t6L6TZtx5kyCefHBgQam6tVs2aLb7nviq
UXSo4/HDHsafZ3VtFjJiLVrnlCXm3L1F5SkHXtr0h8Amxqw889gPnQPqfc3S
3d9Z3KP0kSf85Rt5yD5HgU03GV/9UDGM09C/7FnTv8Z/hv7t/Xv07/2tfzL9
+9To3+PzOwf27vHN2IlNKzg41gyRZgfUTy7WKe3buseAsYO6u7uUXn0hSlQj
M0aPalu/vL2HD6d/XX/cfNqkuBdSq+20meO/W7B2wXfDZyz5uV3pRqfjEV8e
KAU1L3PSJjDDPtMMc74OKt9mvPQ8zeldt1qn6eLBin4tmnSfK9Xn7uZvcvs0
0ArmNoEFw34+ifqkeI3lxubJULO9TP8+Mflw9C/7f4X+ZWX9u8qtf/8v/Uux
/r2L/lFG/yTr39+ifx/Y+pdK/7L9GfrX/vOkfyameG9tHpPTMfCFpIONz6u6
fDF2C2NBO1f9OKB3lwK5yfd7H4sftZxgrJ3eK6BcnbHjRrdv3GDGsv3SNfvW
L+zfq3NKSjEnS+L1ek5QvHTVzqGD2zf0LhHYidvfTGxjhiWuXZCzZP3TGpg6
XTm2V8mA6hMmTQyu4l/rq4ncZKbu1qRMz/B9Zk1ixIuX0bHxrHbaJ43Lumy5
y6pxdtnAfG61HjK+pOle36/dxPU6veLF85cxcQmS7bGmU5l9j3kgZtS2KFOg
92I247lsZA/fMjVSCuL0UNk72MfJt0LjdiEDurcolL/4rrtsUvXhueXFnQp+
2XXQ8AFdO4eOe65mP+0Kaz0bBwYEtZ+gEZsSc75y7sKepSp26jWkQyNv78qd
REJ6ccfSAb16+Ljlq968m5X+sYruXrvAtpd0rC+047oGuvtUGTV+TK0KbuVq
92VzT3EsT+9SFXv1HNSskrNX7R7ivfV459SSrcJWzhwWMnYlMqtC0Rm7WQdO
79So/dDVrGf1qfSvS6NSPebtNWmSVHpbi60x5s3b2Nf3vwkJHr9wn/j5xKLe
FVv1Z9/EP5k3sDUhdqPWXEQbTv435X2tfzL9+9/Dh6V/mNaM/mzv5CqtekhD
0+97Nwruu1A6v2ZU85odxknHT3dPqNi6T+q9GnWsQfWut57eDKlbum7n0W/j
HjQrWYYNoSIP+jsFXZGsf8ycyKr6/Mi8gg7+1xLZfERQMZi5hz3Oywe1b/TV
FHFcF/vkeP0SDs3HsKeyS7V8NB+U8Pbw8C7hlD974aDuSTL9+7REpn+Z0L/x
H43+/WPWvz9F/z5P6x/bIcv+vmlWtsT3uxnl+2PXTL/q7Zi9yZKsk3sFe889
wCx1asYlLD3r+wQP/jXlar6gT0hNefCZeMD6QnWz0hc5+/14kH/zspZnwUWn
osQjHaN7ie2DnOccYCnFT/on+0t4Vzj+kBnETNFXqnu6rPtdpG2m/s1LkTz2
fr4lXcG+bIcRjKrpnjT3L1yrXb9J34SV9S45Zd1FnrlmaMvSJGchPz9fp6KF
G4ROYaXHXajlUmbT1SiRhm79ITR/kVKXRE4Xsb+YV4UTj2wKuiEeW8KCS/o0
Ha7mefVtWbH/LxfESrUMsO8+Y6+1lxh/0j3Z75NSz5gr1TycNt0xoOlupby5
B8w/ZG1moUUnX0nXdKvvtvSi1ZZps02jZ7DXvIMR0vHzw3Pyu5T7Q7JS6v8o
55Rr1pEoFO5XzJOrv9R1Efuc85W8qMI3h793qtcr5smFwBoNnsSpenzp9N1v
7KUzI6TxV8PWsPw5Oee/h35MSGDuQk6+Xh4VqjVbe+U+SgGAFPe+Kl/KvlB+
52J1Lj1mzd08vm39LuNeR9ys5QtdvpnaoXGdr+ewJie7vPjbIlv/ZHw0+od8
ckGrZk/cmV8HlGnchT97iv6tArIXAk8XR0cXT8eCuQI7j9bwB/HsisEBjTqJ
Y0W9KsHItNCBCuVbxiJ+17lauwk7RRLXrGzpvRGM/pWGmpfjLVzZCclrI4wv
arrmnbT7pf7WCofidaVR5paJ3bOTbJ4+xYp7FgsdtzielZLQPLBovyUnrNa/
KU5BsvXvUxOZ/sn077Olf2yfgvh3w/i2AS1GiwezetRqN5pNJlqMBr1JQE1U
6+rwwz7GNPScYDy7sLmOd1HvMhV7jpzzWJm8sY5tndO+5imZSYr1RcKlmi5l
T0QJjGAaFV2Ciw9bzaZQ1WzFdHy7ms6z+eSvKBHHFucrkNvDw7Oog4OHm1t+
B1jKGJS5c3BAn0WH0KiOfP02IUnBytZHNC1VsH7HAW0C3T0Du0abJeZp+LqB
31dTtwiC/s3rt0lKFaM6Sb8HFcqTD9yLe7pUrtlix3lW/8eHFuUvmNvdpqAl
vKCvGgaM28aor0qj06sVGjObua7pXP54pHikV2v1Bj2z3T07+pN4Oa9nUQ83
93xFHVacj0Pd9apQ5uTr5GZ2Di4xYg1f6a2KEinu9J132XJHtVZa5qez9lJK
2/fOCqkT8o14kJQoUkBhYOuKXeadQLwb6BBw8jVjckmPD/nblzgejTHH5xYO
bCuemRZSd/z8rX3b+E3ZynjdjE7BHbj1z6hnvS7txdGqFTGxMcro6Ll9G2WD
KncS+Y9kNiXExijiYpZNDHEt1Uo8d3xhmBuAn3+VicuPiikGtarQZfYBlpXx
wyz/k+mfjI9I/6RtaCyrK2uGlW/alVv/NKFNy3efyyYp4uLjxUfZYhE1HntS
Lq8ZWr5FKL+Q3e2Km5t9K7Z4qhcVolZrYXSwsb/ThtsWfH3Y36nWDVVqMQY+
YTGjc41WI5dund2vfo/p0vm1Izo26DBFKVgSE1JSJ7ao6jBy0y3pw8sj4S61
JPonb/34dESmfzL9+3zpn7TDV/tot69P7bsvn7auVHbHfQ2mWqvUHeu4zjv8
wuaMKMabp3d3auBfulFfZieULIioSknJd/5eqeNe8chzPf8qsUVFl4UnmDME
rujZ2r/wI8mL016f/MkhoMETFZrUSYkqtcVs1rHrdV2blhu56WZKNVnZuqdN
y7n8xqyGSUFF7ZqMWSXV8OuG/j3nH0Vb510Jl2s5B2y+HqVTJKTMCUVlUVD3
puUGrbzA6pYyKFfdqenmvuGmjdJHjDyRfLlRnZSkUpuMRj7LfDnIpdzhlGZW
cJp/lK9XNMd3qO224MQbmwys/VnbNaXtZ5eElWzQMyVFx+pOfX65JtK/qo4B
+7iVUvvssF8Rn5OxGH083KFaKy1jy4vq12lar16pH35j9G9mSONOI9bz3zFN
MckSf9opr9v+J3rbcyjcLVPQ93QSRh6aTnJ6nImQzsY0KlN0prQf55+Y/JXp
n4x/nv5ZOP27tGpwuabdpad395yejp7VTz+MMerUt86eOHn7sZT67blfcxdw
XH/1mSrhrcqM8RdWOtf6KpYxO+4EwfS6eYUii88p8O2RkkUqH3kap02Kj46J
TVJpzdIW/kPhnh4l/EqXmn8wOcPVg9s27jqHHZlNFrEerDqJTSsXHrr2mlS5
p/t+cKzeJl6mf5+WyPRPpn+fMf0T2RurtmpQh6D67Zo27TGBb9Iws+V7iUl8
l27RyZuuCXqV0iCgUXNk94bfnz4Xk1xcPiyXXwNuozLEJypSU+oUKlFBJl4o
n9tz0WGRTujWTQpx8W8ZybSqISFRqY990jw5T6VC7DbVo1pe+XtM3qg0GpJe
Ruw7cOg1M7bpugT7915wCE2aqDdvE+ITWf/qngQHwJITjDud/XV4Lvtyt/jW
j851S3adw8xWBoMJpc158ZdqOAYcfM7nQ83MCSxrovIhK2jShpSConhBIY38
B69mJjs9t3pJvmfGtSjpHNj13uskRezTk8eOxYjFqx8GJddTr3j1fM/+A7Fi
25Ou1HAoveQYa+bayZ2L+jWK0EouVYSBwSXKhoxPMOhjomP4kjxzQmovXRd0
SWozml8dc89TdMymIyaLccesYfbuZa/FIyouivRvP5+f1Tw55FPA+3gMvj06
u2i11txrREzvoBIin1p8hPHgmSENm4cu0qM5+vXbuIQEZmBEiyIxLiYmPjr6
Sc8vi/kFD2XvQbNekZAQExMTFx09tVvdEvV6s55LvFvHxz501jaDxbhpcmeP
gNbS/ugPdRfL9E/GR6R/TPQaNmi6snZ4mcad2dYPZg1X/jS2nYuHl7unW8lq
DTefYgMcvrVL/eOotq7FXB0K5u00cVXU1e2lG3fjpjl+12JS92AfNnxLuFwB
Cju6ehQrVszJvmC90KnJYeqMr9v65c1TqvVrc/IVG8d0bxfGgpiYDewjV6pJ
HesVG78l2fr3/OhC38bdE+XJ309LZPonb/34TLd+SGLh49k7e+Zky5Z93r4/
UPIfYojsXc+vqJOrY9Eizi4ujp6+6y5EiS1cPCnEq7iPqyt4V62z7tJddr32
ZWj9NCnXX3wjcovxXYM9vJ093d2r1Wp98t5bllJnk9LZxdHLb905Zit7dmlD
g2p+4OrlVsL7q2HhcUx96kaHBOYqULRE8eJuro4lAtreEUmM8VnbGr6bb/Ct
IcbIduVLfMN9aoU2rdR/MfNkYmJmKz4HxLwO1jjMvA6i5HBF8p738srG+taC
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
QhZRPwSqNFGtlhoTqCWS4gOKVykeo7iV4s8Up1EczCN3NOCBej0oFqRCduYD
30CzaWk2Jc2WQO2iKY20oxHZ6aPs9I9szNn+LZr9Js1/k7repv53ae0HtM0T
Gvqcjo2ic6Lpqni6J4meUdGbGvpUR6N1LFqHUU1RQTHBGnIkguIjinepcIMK
l6lwjgonKB7mUUd2UdzGA3msZrE8cHGGwCOjKQ6nOJBiH2vgkXYUW1JsQrE+
D/NRlWIFigGUBR7x4IFH7CkWoEIeas5FDdmpOhsLCBDDowREUPqI0ruU3qD0
EqVneWyBQ5TuoXQ7pRspXUXpMkoXUTqX0pmUTqN0sp3dOEJmOTl9rvRPFJPh
fcfm1pQSwzGrFCqTjbaTukarUsTGxiUkJhlM79KEmfZjBmZped+U/6Vgm+/f
n7aSmSHVkvGGk6LRpQkdLPxrRoeMUT9y5LLLU5AWcqZQnHqWoT6B1L8OrdCY
Vm1Da4XQej1pcD/afChtO5p2mky7z6Sh4bT/Ijp4GR2xmo7ZSCdup9P20JkH
6OyjNPwUXXSeLr1Ml1+nq2/R9Xfp5vt0+yO66xnd+4IefEUPR9Hjb+npGHou
jl5IoJeT6FUFvaGkt9T0job+oaUPdPSRnj7R02cG+txIX5roKxONMtM3ZvrW
QqMtNNZC4yxMcSYKNEmgCg4lUhVSNVINUi2HjkOP1MBhtMLEYbaBxQZCFsDP
H3ac+OXkf2dJd8oHud8Ei0mt0SPqhjf2KujROZ6dM0tf2EYDEVjobox7dmfb
npMKg2DSa/VG8YExbfl58so9V6Ssru5fM2n2KpXI/xIe/jx3ZaSWXWjmnPLp
xV0zl2zmk9ZSVG/DnvXLFv/8y8LVW+L0vEh20vjbuiVXI5UvLu4dOWjQkEED
B46fdPpWlFSZD9JYWT6miEpUnUL/NnL6F3bs5wa7ppbYOOSLNd3JqrZkXVOy
rT4L/HGuOrlZiT4OyBZZ3C7WhSQVIep8RJebGLKzmL+WfzLmr0BOCVnE/BXH
rmai1RFjQgbr388Ep/IQHp14zI5yPERvASJkY9Y/A6FaYqckdgk8hmYkJRF2
5LEd+YNK1j+7myTfTeJ8m5S+S2o9IK2fkN4vyJgoMiearIonexTkjIrc1JKn
OhKt47F6NQQVmVj/BKv1TzjBo47sI7iL4DYeyGMVi+XBjJQLCM61CTs8iuAw
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
40cmTkP/sufI1PrH6F9wWvpntf5lTv9SrH9/jf690/qXCf17P+tfRvonW/8+
Pv17fH7nwN49vhk7sWkFB8eaIdLsgPrJxTqlfVv3GDB2UHd3l9KrL0SJamTG
6FFt65e39/Dh9K/rj5tPmxT3Qmq1nTZz/HcL1i74bviMJT+3K93odLz4NB0o
BTUvc/onMMM+0wxzvg4q32a89PTO/jqoduhPqLtVtkCZiwp8dfngvgsRiM8a
+1W9bsLtI9s37DJbquSdzSPz+dTl41CZ/n1i8i76l8H69w7699etfzL9ewf9
k6x/Mv37k2IxMcV7a/OYnI6BLyQdbHxe1eWLsVsYC9q56scBvbsUyE2+3/tY
/Kjli9bWTu8VUK7O2HGj2zduMGPZfumafesX9u/VOSWlmJMl8Xo9Jyheumrn
0MHtG3qXCOwk6T22McMS1y7IWbL+aQ1Mna4c26tkQPUJkyYGV/Gv9dVEbjJT
d2tSpmf4PrMmMeLFy+jYeFY77ZPGZV223GXVOLtsYD63Wg8ZX9J0r+/XbuJ6
nV7x4vnLmLgEyfZY06nMvscSMdK2KFOg9+Kz4tGykT18y9RIKYjTQ2XvYB8n
3wqN24UM6N6iUP7iu+6yRUMPzy0v7lTwy66Dhg/o2jl03HM1+2VXWOvZODAg
qP0EjdiUmPOVcxf2LFWxU68hHRp5e1fuJBLSizuWDujVw8ctX/Xm3az0j1V0
99oFtr2kY32hHdc10N2nyqjxY2pVcCtXuy+be4pjeXqXqtir16CmFaF4vVA+
IaXq3Kh0j3l7TZokJZtMlibT44c3Lle7x/inz579OKpzYPNBYi+d/Tm0Qqt+
7Ir4J/MGtibEbtSai2jDtD+aZGn9g2TrX+b0b+h/mv69p/VPpn8fk/5hWjP6
s72Tq7TqIQ1Nv+/dKLjvQun8mlHNa3YYJx0/3T2hYus+qfdq1LEG1bveenoz
pG7pup1Hv4170KxkGTbYijzo7xR0RbL+MXMiq+rzI/MKOvhfE/WU8UlNr6I/
HH0jKowgj9IXos3T2xfzajEV8Ukdp6AHiNtGdqjXfoo4Jox9crxeCcdWY1Yg
Xzzz99sry8cU2fon07/Pj/6xfaPs75tmZUt8v5tRvj92zfSr3o5NYliSdXKv
YO+5B5ilTs1Yh6VnfZ/gwb+mXM0X9AmpKQ8+Q8mZl+pmpS9y9vvxIP/mZS3P
gotOsZXPOkb3EtsHOc85wFKKn/RP9pfwrnD8IetAU/SV6p4u634XaZupf/NS
JI+9n29JV7Av22EEo2q6J839C9dq12/SN2FlvUtOWXeRZ64Z2rI0yVnIz8/X
qWjhBqFTWOlxF2q5lNl0NUqkoVt/CM1fpNQlkdNF7C/mVeHEI5uCbojHlrDg
kj5Nh6t5Xn1bVuz/ywWxUi0D7LvP2GvtJWY40z3Z75NSz5gr1TycNt0xoOlu
pby5B8w/ZG1moUUnX0nXdKvvtvSi1ZYpttRqfOsZ7DXvYIR0/PzwnPwu5f6Q
rJT6P8o55Zp1JAqF+xXz5Or/4wF28uket0L+xyPFbjaM7BT4RWEnXy+PCtWa
rb3yIDnf16dKO9nZ2VFS0OfwU9b0jePa1O8y7nXEzVq+0OWbqR0a1/l6DmtI
siOLjyjvsv69g/79t61/Mv37b9I/5JMLWjV74s78OqBM4y782VP0bxWQvRB4
ujg6ung6FswV2Hm0hj+IZ1cMDmjUSRwr6lUJRqaFDlQo3zIW8bvO1dpN2Cny
tWZlS++NYPSvNNS8HG/hyk5IXkVhfFHTNd+k3S/1t1YW9a7FDO26R82qlFh9
+NKEfo2qNA05e+lAvcqtRPK4b0pXSrJ7+RQr4ende9zPivSeAGT5NORDWf9k
+ifTv/+UmDgr2DC+bUCL0eLBrB612o1ei4z9GfQmATVRravDD/uYtUrPrX/P
Lmyu413Uu0zFniPnPFYmb6xjW+e0r3lKZtNjLCThUk2XsieiBEYwjYouwcWH
rWZTqGq2Yjq+XU3n2XzyV5SIY4vzFcjt4eFZ1MHBw80tvwMsZQzK3Dk4oM+i
Q2hUR75+m5CkYGXrI5qWKli/44A2ge6egV2jzVKHG75u4PfV1C2CoH/z+m2S
UsWWGCb9HlQoTz5wL+7pUrlmix3nWf0fH1qUv2Bud5uClvCCvmoYMG4bo74q
jU6vVmjMbOa6pnP545HikV6t1Rv0zHb37OhP4uW8nkU93NzzFXVYcT4Odder
QpmTr5Ob2Tm4xIg1l1mXqKJEijt951223FGtlZb56ay9lNL2vbNC6oR8Ix4k
JYoUUBjYumKXeScQ7wY6BJx8zZh10qODAY6lDjxhWwpVSkVMbIwiOnpO3+Bs
UJnP6MaE1ipbo+ukZ8/vhTX3c6vQOg7x+MIwNwA//yoTlx8VUwxqVaHLbMYk
jcaPvfxPpn8y/fuI9E/ahsayurJmWPmmXbn1TxPatHz3uWySIi4+XnyULRZR
4zH9dHnN0PItQvmF7LlQ3NzsW7HFU/E5M2m1FkYHG/s7bbhtwdeH/Z1q3VCl
FmPgExYzOtdoNXLp1tn963Wbys6qXnzdqsyg4ZN/mL9m9reDRowa1ahdf/GV
sHlE+3odpioFS2KClMUn+IaQRaZ/Mv37TOmftMNX+2i3r0/tuy+ftq5Udsd9
DaZaq9Qd67jOO/zC5owoxpund3dq4F+6UV9mJ5QsiKhKScm3vl2p417xyHPu
CgETW1R0WXgiEpMVPVv7F34keRnb65M/OQQ0eKJCkzopUaW2mM06dr2ua9Ny
IzfdTKkmK1v3tGk5l9+Y1TApqKhdkzGrpBp+3dC/5/yjaOu8K+FyLeeAzdej
dIqElDmhqCwK6t603KCVF1jdUvy2qu7UdHPfcNNG6SNGnki+3KhOSlKpTUYj
n2W+HORS7nBKMys4zT/K1yua4zvUdltw4o1NBtb+rO2a0vazS8JKNuiZkqJj
dac+v1wT6V9Vx4B93EqpfXqotEPpQ8/0aX6yhDOQG46+QcXFxbmKlH8kRU4Q
nvjlJTOORsefmk2yu52NkJLGNCpTdKa0y+bfnfyV6Z9M//55+mfh9O/SqsHl
mnaXnt7dc3o6elY//TDGqFPfOnvi5O3HUuq3537NXcBx/dVnqoS3KjPGX1jp
XOurWMbsuBME0+vmFYosPqfAt0dKFql85GmcNik+OiY2SaU1S1v4D4V7ehT3
8y/14/6HLDtD4oA2PnZQasPF6OgLq4s55C3dbIh4eu3gVsFd57IEZhNzA/oJ
vh9kQXnyV6Z/nyv9E9kbq7VqUIeg+u2aNu0xgW/SMLPle4lJfJdu0cmbrgl6
ldIgoFFzZPeG358+F5NcXD4sl18DbqMyxCcqUlPqFCpRQSZeKJ/bc9FhkXjo
1k0KcfFvGcm0qiEhUamPfdI8OU+lQqQuqke1vPL3mLxRaTQkvYzYd+DQa2Zs
03UJ9u+94BCaNFFv3ibEc58muifBAbDkBONOZ38dnsu+3C2+9aNz3ZJd5zAD
l8FgQmlzXvylGo4BB58zRc3UruTeX/mQFTRpQ0pBUbygkEb+g1czk52e28ck
3zPjWpR0Dux673WSIvbpyWPHYsTi1Q+DkuupV7x6vmf/gVix7UlXajiUXnKM
NXPt5M5F/RpFaNlKdGbKCy5RNmR8gkEfEx3Dt+6aE1J76bqgS1Kb0fzqmHue
omM2HTFZjDtmDbN3L3stHkVWJ9K//Y/Z76B+fMC3SMkDzCohJMTHxsbEv41+
3OvL4n4NB4rlJF7fYJ/bYca2qzq97urWGY65HTfeUqP+cVCxwn1+2GawGDdN
7uwR0Fra9fzxb02Z/sn07yPSPyZ6DdPDV9YOL9O4M9v6wRSy8qex7Vw8vNw9
3UpWa7j5FBsK8a1d6h9HtXUt5upQMG+niauirm4v3bgbX+LH71pM6h7sw4Zv
CZcrQGFHV49ixYo52ResFzo1OUyd8XVbv7x5SrV+bUp2dTClW1XiVOO++NSq
71d3JL4tR4qpNo7q3C6MrTw0Gz60a2tZPqLIWz9k+veZ0j/m90/8e2fPnGzZ
ss/b94d4zAxbhsje9fyKOrk6Fi3i7OLi6Om77kKU2MLFk0K8ivu4uoJ31Trr
Lt1l12tfhtZPk3L9xTciNxnfNdjD29nT3b1ardYn771lKXU2KZ1dHL381p1j
trJnlzY0qOYHrl5uJby/GhYexzSlbnRIYK4CRUsUL+7m6lgioO0dcTBvfNa2
hu/mG3xriDGyXfkS36xgtC20aaX+i48j27lsSZ4DYl4HaxxmXgdRcrhi4Wt2
Xl7ZWN9aUMdh4bF8P0mf9jXHbLwmHhn4W0FygCNEPxzbtp5XcWdXl2LN+81J
4AbOF1c21a/mK17uXsK7w5B5bMme4kaN/Llz2bsW93SvXKvVvnsxaPUP9vzy
9jqBHs7urq7F/fffF4nmm6/r+jo4W3uJtZ3x2IsbF9Xwdndzd/Wq0WjTZcar
TXFXmvgFHX7K6J/m2bGqxSoffWFBIarnl372Tq7+pcp0HDAtInnfsrD15wkl
nb2KeXp5eFeavvqC9INGXNoY5Ovl4uriUzv4HK+S5d/w/Sxv/ZDp38ejf4KQ
4qtp+/g2lVqwNRVoSiZrWrUyJjZWlxxyJ/VZ0KgSYmJilBqdWRzTqdS28Xk0
KoVBHBgLZmVSYnxcXFx8fFxsbKJSk5LCoFMotCx/6Sq9VqVQ65K/0igVaqZ8
DFqNWpvWdC/LJyiy9e8/Tf9kxy9/XwSTUqlMnSEULMrE+Ni4uMTEpIR48SBe
b108plYqYuLikqccWZPTp9RZU6qUcTExcdIxZyAZ8hTLS+40i6hd45Qp862C
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
6830arKyDeFNK7rvZlbD1AAnhyZj1so17P5l+R4Lj6L94l3Jl2q7+W67FmNQ
JaePCcW8oqCuTSsOWnOB1S19REbzR60inptv2il9xOgTaYebtampGq3FbOaj
zJcC3CuGpDezsuvCo3y+ojWpfZ0ii048t8vA1p91PNLbfnZ5n1INe6Sn+Kam
a+9frkr0r7qL7wFupdRHhJQpXPJkAsYdn+9co5WeseUlDeo2rV+/7E+7Gf2b
2bFxhxGb+HnMVEyaJJ+BPHD0OaouLstduNIjOcaCGFbmEzLjaFzSqdkkZ5Gz
kXLS+EZ+TjNlf5y/Y/BXoX8K/n76J3D6F7p2cMWmXeW7d++cHi7eNU8/jDcb
tLfOnjh5+7Gc+sW5X/Pkd9l0JUKT/EJjxaQLa9xqf53AmB1fBMES27xy4WXn
VPjiSKnCnx0JT9SnJsXFJ6Rq9FbZhf/wfG+v4mXKl10Q/JBlZ0oZ0KakA5Td
fDEu7sK6Yk6flG85XNo9t3tNt9Jt7sampETealTSreUYNm4iWN7lMteK/AOi
0D+F/n2Y9C/ND00zqH1Ag3ZNm3abwJ00rGz6Xkoq99J1mrL1qmjUqE0imnVH
9m6+ER4lJbm4aljuMg25jcqUlKLKSGlQaST1lnKhUh7vJSESnTBsnNzRvXzL
aKZVTckpamNCWPO0PNUqiZBoHtUumq/blC1qsyn1aeSBg4dj2euyoXNg+V6L
DqNFF/P8RXISX6nEEBboC8tPMO509tfhuR0r3uKuH53qleoyh5mtTCYLys55
SaGfu/geiuLjoVa2CCxrovohK2jy5vSCYnhBHRuVH7yOmeyM3Oolrz0zrkUp
N/8ud2NTVQnhJ48di5eK1z4MSKunUfUsal/wwQSp7amXP3cut/wYa+aGKZ2c
yjSK1LOXe2bKCyxRoeP4ZJMxPi6eT8mzJmf00jXRkKq1ovXZMc+8TmO2HrEI
5p2zhjl6VriahBJXk+hf8GN2HnRhh0vm9zkejy+Oznaq0TqRNSO+V0AJiU8t
O8J48MyOXzYPWmJEa1zsi8TkZGZgREGVkhgfnxQX97jnF8XLfDlQqlHKtc2O
eZxn7LhiMBqubJ/hksdlyy0tGh8HFCvU+6cdJsG8dUonL9/Wsn/0u7qIFfqn
4B+kf0yMOqaHL28Y7te4E3P9YApZvXRsO3evop7eRUrV+HLbKfaCw127tAtG
tfUo5uFc4JMOk9bGXPm9XONv+RQ/ftViatfAkuz1LflSZSjk4uFVrFgxV8cC
9YO+TwtTZ45tW+aTvGVbx1rSljqY+m114vr5fYl0au9Xdybl241mhWgix7Vv
4OMIriV8Wo9Zonp5GXhF3g9R6J9C/z5Q+sfW/ZM+/9g3J0eOnPMO3EN5/RBT
dK/6ZZxcPVycCru5u7t4l954IUZq4bLJHYsWL+nhAT7V624MvcOO1z8NapAp
5aaLzyXGMb5LoJePm7enZ43arU/efcFSGuxSurm7FC2z8RyzlUWEbm5Yowx4
FC1SwufrYfMTmf41jO7onzu/U4nixYt4uJTwbfuHpFfNEW0/L73tOp9LbY5u
V6nEd6sZbQtqWrX/suPIPJeFtDEgturg5yFs1UGUF1yRV897enlLA1tB3wyb
n8D9SXp/VWvMlqvSlok/FeQFcMS4h2Pb1i9a3M3DvVjzfnOS+fv6k8tbG9Qo
LR3uWcKn/ZB5bMqe6vrn+fLkdvQo7u35We1WB+7Go219sKhLv9f193Lz9PAo
Xj74vkQ0n3evV9rZzdZLrO2Mx17csuRzH88inh5FP2+09RLj1ZbEy03KBISE
M/qnjzxerWjlM4kYf3JxycBu3AEGT//6nYPDx6vOsrmUv4zq8Enu/D7FixX1
LOLsVWpTaBxinFSQo6tH+bJ+3wyYFpnm4Sxu/3lCKbeixbyLevlUnb7ugnzq
I0O3BJQu6u7hXrJO4Dle+Xc4LqW4fij45+ifKKav1fT7+DZVW7A5FWhJI2t6
rTo+IcGQFnIn4wrXaZLj4+PVOoNVeqfTaO3j8+g0KpP0Yixa1akpSYmJiUlJ
iQkJKWpdegqTQaXS8xkX/KtRr1Fp08Z5TTq1WmtIL0iTlJCo0eHLhSvy3oiy
8Mt/mv4pC7/8dREtarU6Y9xPFNQpktpKTElJTU6SNpKMtilhWrUqPjExbSCR
NfnllAZbSo06MT4+Ud7mvCJLnlJ5aZ0mSNo1UZ0+3ioadOokpnYTuepVcROl
oJV0ss06ZTZoU1VMqeo0ap0x83hKlpgjmEFsXi5Ir9XIDsgZR9tCO2lVCfGJ
atvhQtbDheTL9bwqbr/ORpmtdslsyyOaEhPjE5OSeZ2za7ssJn1cXLwpvZJp
lZeXBbSoVWr2FLJIjyddWssFs0qVIh9uMuiSeTfxrkqSrX+soIQElVpva05a
F4t6TXxcvNZkO8FyJQVTXFxcRunvTt7XhV+yo3/Kwi//ZfrHbwVh5YwhLb/t
MaZvl6IuPiuOsem1soOtxS7uoTXDQVjMGi3x3Yt0A6fHEVbcfd9bUZZ9VpZ9
/sDp35sIW0TfTn++JoCRmBEek7nLvZZXCHa/C8IbKknxpf9vIm9RkJ3exrRA
AciiRaUfbmXOfGLiOb883vv50nks+K59uNA3a4iQHgme9dI7fh5ZLRnhfe3C
oIrpoUjtS3/n89GVZZ8V/DP0T36/iYs4NXlC/979Jh66wrzvM0VCFLNfpF20
SXomL+VpnyZLJlm+ifbbf166Iu+LKEHflKBvH2rQt3TJqgCz1XtZtdlfT5lN
4uxSZqtws9Wtr9G32VTyzVLa7cS0UWZ99Jq5Pz/kg7LZsqeXKv/q50j2jx7M
/BjKJsErein7J072e/+uESkl6JuCV+NdB33LfA0rvrWKvEOR6F+4Hf2bx6x/
B1r32Fyt4UqfcoudXRY55lnmStcXo7v96Cl/eqMmDatOYyvSpBJU7Ua1Bagh
j4MpRy4LzSvQAkidkLoh9UJaAmk5pJWQ+iMNQPoF0kZImyNth7Qj0q5IeyHt
j3Qo0lFIJyD9HulMpHOQLkK6AukapBuRbkO6C+kBkR4R6SmRXkB6BektpA+Q
hiONRhqHNEmkagvV66k5mQrRFB9QvELxGMXtFH+mOI3iYIodKTakWImiF8UC
VMxJrZSaaA49zaGmOZKpQxyl0Q40Mid9lJPey0HvUHqb5rxJ892k7rdp+Tu0
zgPaJowGRdGxMXROHF2bRPel0jMaelNHww00zkA1UvlaiiqKyRTjKUoViaT4
iOIdKl6n4iUqnqPiCYohFA9Q3ENxB8UtFNdR/JXiMoqLKM6l+CPF7ylOoDia
4nCKAyn2ptiNV78dxZYUm1BsQLE2xeoUK1P0pViSt8mVoiPF/FTMS625qSkn
1eagKZTGUxpDaSSljyhr03VKQyk9S+lxSg9Tuo/S3yndQulaSldSuoTSuZTO
pHQapVMcHCT6N8vV9cOgf4q8pYjZbCliE5n+zZo1SyJ+uXLlYjbA3A55C9CC
bhSKU29fWtKflq9LKzem1dvQ2p1ogx60cT/aYihtO5p2mEK7/kiD5tN+S+jg
lXTEOjp2C530O522j/54kM4+ShecokvP05WX6OprdP0tuukO3Xaf/v6Y7omg
B57Qw9H0SAw9/oKejqfnE2loMr2cSq+p6A0Nva2ld3X0gZ4+NNDHRhpholFm
+tRMYyw01kqfW2m8lSYINFGgySJNEWmqpDhFqkGqQ6pHakBqRGpCakFqRSog
FZGigreAAyd+ufjnLPlKeSfXmyhYeYxu0+vHGhRR5G1Fepvg1r+4E1cjtx66
PWfV2YGT97fourFSveVFSi4sWGhBfoeljmStJ9lVhpysTG5UI2FVyfNyJNmb
aByJLi8xOhATIRaSUyAfIxv/dULihsQbSUkkvkgqI6mOpDaS+kiaIGmFpD2S
zki6I+mDZBCSEUjGIZmCZDqSn5AsQPIzklVINiDZiuR3m/XvpEjO21n/ImzW
v2SRaKzEYCCWlCzWv2UEp3AjWnuC9fhYqRvBvEQkzPpnJsRAiIaQZG4mi+Fm
sseE3COy9Y/cJHluEufbpPQd8vkD0iKM9HhCRsWQn+LJmmSyV0VOa8kNPQk3
kjgj0crWP3UW698fBG3WPzxO8DDB/QR386HpTQTXEFxJcCnBhQRnE5zB6zuW
4HcEhxDsR7AnwS4EvybYmmAzgo0I1iVYk2BVgn4ESxMsytvkyEd+8xDMSQTK
WqYjJNVm/Yuys/5d5Na/Y3bWv02ErCFkBSGLCJlNyHRCphAykZAxhMxwdFTo
3/9XES1mZQ3X7EWmfzNmzCDp4kA+yks+cSSFvYh7GVK0CilVi/g1JFVbkppf
k7pdScPepMkg0mokaT+RdJ5OeswlfRaRAcvJ0DVk1GYyYQeZupdMDyazjpB5
J8nic2T5JfLrNbL2Jtl4h2y9T3Y8JrsjyX5u/QuJtVn/ksjFFHJZRa6qufVP
R+7qmfXvkZGEmUiEmVn/nllIjJVZ/17YrH9JdtY/Dbf+6ZEYMlv/BMX691cx
Q75S/t0LVRFFXi8S/XuSpLn7LOnCH9F7Tz1csfXKxLnHug/b1eirjZ8FrC5b
blVpz3W+sKMaHK4LFwPhXlN42hgSvgBVddD7grG4i9nT1erqIYCXCMURyiD4
IVRBqI4QgFAfIRChBUJbhG8QuiD0QuiHMBhhOMIYhEkI0xBmIcxDWIywHGEV
wgaEbQg7EfYiHEI4hnBGhFCEawi3Ee4jRCA8Q4hDSEZQIehFMJtBUIMYBxgB
eBvwHOB+wPWA8wEnAPYDbA9YH7AyYHEQ3UB0AQFczeCmB1c1QDJAHECMGzxx
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
X0H/xJfoX9Tb0L/UP6N/WRlgVvpn+cDo30fvkP7JN92jczsH9+k5aMiwMeMn
bzl8XrC9c6lirk+Z0Ceo78TDl59JX41x92aNH9OmQSXwKTNg+Nh+vbrO2XRU
Uhn1vD8ZuDpUzjAqZK5bybrRUs4RByp7fXE5md/+IrfoiTH1iuYfuCot5ZMj
c52L1VMh7pk3fOSSY7f3fe9cKiBKKlZg93j4wTlFG/eyr+p7+Ij4fy1vbf17
9/Qvq/VvM+dDL9M/O+ufPf1Lt/6l0T94Nf3r/F+jf1mtf/8K/XvJ+veh0D+Z
5ITuXf3zbyFoo3whW1esP3hL2ti/dm7vAcN+WrzibgxrnY2aCCd2rO3bp8/E
KXOi4lU8GzF4w/wgu5RM8SZdrOvlH/JH5PrZY3uOnXY3SYsZo5Pqr+u4zwkO
l7bMtiHgQzvn9erVc8rcneq0qhm6Nq86NfhJpurqw1t8VvT3u+xh8XDf9HxO
la6z8vVdv6wwdP2NTO1KulTP2z80lX+Jv1SqYJ7v99yVfwrZNV8qaKpUUNq5
Mu3ZturWM/Xlfct7BfUJPsGSWXk/JEdfnDZpbJ/e/X8LvoxpbC2tnlPn7VTJ
tkTtk41Ltj2Li140aUyfCT/cjmfNPL3jl4E9u5b2yh/Qsuuo4YP7DRl57Rl7
69+/fp59f9qIom735rl9+vSeNnd3qsGW59JtT+OiF04a03fS9HsJcpeYv2tS
7pvJW9LbyO0RqdfOnZftexdXBuUpXvuFdHjYPp8iZY+E80dq9GHHj/JvvclY
6D8fmTiT9e8V9O9l618W+vdzZvoX/C7on+Ht6d/L1r93S//+P1r/3j39e3x+
18Be3b4bO6lpZWeXWh3l0QFt2MW65Uq37jZg7KCunu7l1l2IkdTIjNGj2jao
5OhVqv/wMf2Dus9ec0BKOadbzUptJ8j35Oye9QK+ZfMStff3+LnVDk1Km2di
MTPNMKd7QKU249NS9qgb0JUNYZuN7Ea8sWl4Pp/PI802+hf8k1PVxnejU1OS
k+WqvmdPiP/38qbWv/8A/aNvRv/eJ+vff4T+wQdK/yxM8d7aNiaXi/8TWQeb
o6q7fzz2N8aCdq1dMKBX5/x5yI/7H0tf9XzS2obpPX0r1h07bvRXjRvOWBks
H3Ng0+L+PTulp2TKL+VafVcoXq56p6DBX33pU8K/A7e/WZhjhpDYLsBNtv7p
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
w0PKOpY89hyt97Z6l2qWZEvZrb7nwDWX5O3FAwNcfduFc28S6e/B/mkOub1O
R8g/xjfyc5ope9kog78K/fsP4W+hfwKnf6FrB1ds2lW+e/fO6eHiXfP0w3iz
QXvr7ImTtx/LqV+c+zVPfth0OVybmpii1stWvceH53t7lShTruwCPvLLxibC
g8s5VwsJS9CrkuLiE1QavVV24c9I+Qj5sgYmXYrWhCdW9P/Eq9r1WK1OwyYX
W4zahLgXyWrtsd9mOuUttPQ4e+9Ld/lX5L8vCv1T6N+HTP8k9sZqrRnUPqBB
u6ZNu03gThpWNn0vJZV76TpN2XpVNGrUJhHNuiN7N98Ij5KSXFw1LHeZhtxG
ZUpKUWWkNKg0koJMuVApj/eSEIl4GDZO7uhevmU006+m5BS1MSGseVqeapX0
Iq55VLtovm5TtqjNptSnkQcOHo5lTMbQObB8r0WH0aKLef4iOSmFvbEbwgJ9
YfkJxp3O/jo8t2PFW9z1o1O9Ul3mMAOXSXqFl53zkkI/d/E9xBzwmMutIC/v
r37ICpq8Ob2gGF5Qx0blB69jVMrI7WPy2jPjWpRy8+9yNzZVlRB+8tixeKl4
7cOAtHoaVc+i9gUfTJDannr5c+dyy4+xZm6Y0smpTKNIvbz4ijgwsESFjuOT
Tcb4uHjuy2xNzuila6IhVWtF67Njnnmdxmw9YhHMO2cNc/SscFVieKqLEv0L
fszOg/bxoTKFSx4It7IB+uJO307YIF1ix9dOcHUue/ope9ItGPDVJx7lTofp
TZqkF3Hxeimh6kG9EoWCZu0wCeatUzp5+baWvZ7/+UtToX8K/fsH6R8To47p
4csbhvs17sSm4jGFrF46tp27V1FP7yKlany57RR7FeJjvZoFo9p6FHN3KVyg
3Yj5orxggeV529Kf5C3bOsac9lZrfHrG393Ryd2zWLFi4FigftD3aWHqzLFt
y7CUsRZmzpN2XNw81du5kIeHWyFHZ3AqVK/7JGln6KZJXs4FixYrXj2g6fJ9
bPjjJVd/Rf7jorh+KPTvg6Z/bN0/6fOPfXNy5Mg578A9aZsZtkzRveqXcXL1
cHEq7Obu7uJdeuOFGKmFyyZ3LFq8pIcH+FSvuzH0Djte/zSoQaaUmy4+l/jf
+C6BXj5u3p6eNWq3Pnn3/9i7Drgojrc9gzEajRobQxEVG/ZKb3aRImIXu3Le
gSgqeorYiL2hYu/GXrArKnakNxGxgyAIKB2u151vCwdH0ZB8/qMx9/4ez71l
dnZmbvfdZ58p7ycqpVgtpa6eduuOJ8IorSw16tQg845Iv3WLdoZj523Np7yp
eJGraZ2Gzdq1bdtCX7td15FJ5Mu8LHWkpdHZJ/TUEFnmqJ7tFhymaBvLoY/H
bmrVOzklcNF9QNSqg5bB1KqDmFlwhVk7JSPm9EDVicbN25pHzyeZOdpq8ek4
cktKPxWYThwi543PyAGt2+rq67Vxct9cSAuc6TFnBpobkYcbtDMc4+VPDdkr
eWLZoG6dpvptWxkY2wy/8SIXq9YHex99oa9pS10Dff22XYJekUTz47R+Rs11
Va1E1Z3isZGnd1oaGrQw0G9tOeRMNMWr5fkx9h2tg99R9E+Yetesremdd1RF
UmIuDDAxJE/ewbTvkWtJ5B5Jemj3xnUa67fp0LZ1a4MWjfTb+d+g9r8NP2nT
0VBPX7e9rV0YXSTlt1j7WUP/NPTvn6N/BFG2VtMF3xF9hlFjKrC8lKyJBLzc
vDxxaSyO8ntByC/My80rEYjK9kjFJSUitUjESjmvuKggP7+goCA/L6+IJ6wu
JZWhTCIkExQUFhUXF+Xnkymp+1cmFlCH5eWXBg35Fusvaez/Y/8i9U+z8Itm
4Ze/b4Scx+OV9xASSh41ajm/qKi4sIAavixRDR4T8Epy8/NLHR9V5copxaqU
fF5+bm4+s00zkCp5ypVlE1hJN5nPK+tvJcRCHulxGSsoKKElSqWAXyJV6Vik
ay0uobyxkM8TSiqOpq4ScwSXU6DKJxIJ+MwE5PKjVaGdBCV5uaXTbMvWaalw
uLIwpl/LHuefUL3MCrVkquURpfn5ufkFhXSZq6s7Y1JRTk6utKyQpYVnlgWU
80p48vL4HtKc3ByJquWpMAd8Hvl8yc2jHk/kh4hs+dLleaQ5OTnleX4L0yz8
oqF//wz9o+8k5f61Xs6Tpy/mTGqtbbjvXnk3q1wtQqKiXHwjKi0D+j8wtfuO
vFe/aQRGjf090yz7rFn2+Qde9vmvGaEeeUzdl1aTklBjkoovMhCl2t+Vyhp2
UxKV/q+J/YUTke667OlQGigAU9Giyg5XSKkOo/ywbnVbXacX2ZNTfy3PsoYV
Ke2Yxkwrfel5RLZ82RLdX35ylZ+a+rm+2TX53S77/Dfon2bZ5++Z/jEvRzmp
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
iUt2J/rueeq77+nS/QnLDiYsP5Sw/MiTFUefrPzjid/xeL8T8b+fjF91Om7V
mbjVZ+PWnI9dExi79mLsuksx6y/HrL8as/5a9Ibr0RuDojfeit58O3pzcPSW
u9H+96K33Yvefj9mx4OYnQ9jdz2K2xMSvzckft/jJwdDEw6FPj0clng0PPFY
xLPjkUknIpNORj0/HfXibPSL8zGvAmNfXYh9fSnuzeX4t1eeJF97knwjISXo
6btbianBz1LvJKXdS3p//3n6g+fpj15khLz8EPoqM/x1ZsSbrKg3WdFvs2OS
P8alfIpPyUl4l5uYmvssNS8pLf/F+4JX6QWvMwrfZBQlfyh+96E4NbPkfRYv
I5uX8ZGf+VGQnSP8lCPKyRXl5onz8sT5+dKiIrUQFxortWpZcXXrE2vsx7TK
M3+1tQ1UM3/NjFD/rsihFxplQs/8tUWeA0pn/vo5o/Uj0baxlWf+3vBCwd7o
wSJq5m/kMhTrhxLWoOcb0Gtm5u8OlL4bZe6nZ/7+gfKOo4JTqOgsKglE/EtI
cBUJbyDxLSS5g6T3kPwhUoRQ034VEUgRhZSxSBmPlAlI+Uw17ZeZ85uCiFRq
sQIinV59IYue7fuJnu3LTPVVn+crVE3slanN4SW+z4m33xza/7uZvwq5nF78
T8rE0CFf8MkXECm1o3w9QCW1QiCVSiKtvEigQi6jd0uZhaNJxy6TkUmZPCTy
/3mcOI19X8Y8qshX1yZNmpQtYFW7du0GDRo0Jx1ay5bt27fv0qVzzx49jHv3
MjPubWHSx8q0t7Vp775mfQaY9xlsaWxnZWpvY+pkY+bc12xEP/NRA8zHDrRw
HWQ5cbDl5CFW04ZasRys2I5Ws5ysZjtbzh1uuWCExaJR5r6jzZaPNfUbb7Jm
gvH6Sb23TO61bWqvHdN77prRa49br/1ufQ6wjA+zTI+wLI6yLI+xbI6z+p5i
9T/NGnSGNeQca+h5luMFlvMllstl1sirrNHXWGOvs1yDWBNvsabcZk27w5px
l8W6x+I8YHk8Ynk+ZnmFsuaFsbwjWAujWIujWb6xrGVxrBVxLL+4mb/HzVwd
y14b674uxn19tMeG6Fmbojy3RHn6R83eFjUnINJrR6TXzoi5uyPm7YmYvy98
/oFw74PhCw6FLTwStvBoGPdY6KIToYtPPl58+rHPmZAl5x75Bob4XghZdilk
2eWQ5VdCVl575Hc9ZNWNx6tvPF4TFLruZtiGW+Ebb0dsDo70vxO17U7U9rvR
O+7F7Lofu/tB3N6Hcfsexh949ORQSMKRx0+Phj79IyzxeHjSyfCk0xHPz0a+
OB/1MjD61cXo15djXl+JfXMt7u2N+OSg+OSbT1JuJ7y7k5h6LzHt/rP3D5+9
D3me/vhFRtiLDxEvMyNfZUW/zop5nR335uOTt5+eJuckpuQkvct98S7vVWr+
67SCt+8LU9KL3mUUp2WUpGfyPmTyMrP42dn8j9mCTx8l+fk/Kv0r5Wk1YGuf
S/lXeF4lPyyX0n6X9sYyJne5XMb4YZlaAE2FgkoprZRSVpZSXqUM/z/yWSPu
SigUCtUTRP3QmrZnlXOSjyFZ2aOKfEgxmSsV8s8EgKPaqmJDkW1CN4iiQuxR
ReVkX82+sO5fyyrr/o1n1v0zrrLu33B63b9xqnX/ZqrW/ZtXvu7fCz963b/1
IG0zyNhWGvWDWvdPFfWj5DTgnQeCC0B4GYiuAXEQkNwG0rtAdp9a9K805EcU
UMSUhvxQMiv+vQTEayrcG5FML/enHuiNWeivbJW/InpxP2ZZP2ZBP6lqsb7v
d8297wFfdd0/onKsD6LKipxEdW+lKu+trBR0sVqvXjVPjf3AVkb/dHR0KA+m
pVWrVq169eqTbFBPX79N27adO3fu0bOHsXEfC1MTK3MzGwuzvpZm/S3NBlqZ
DbE2H2pr4djPclh/y+H9rUYOtBo9yHrcYOsJdjaThtpOsbed7tDXzbEvZ1hf
j+F9Z7v0nTvC1nuULXe0zZKx1svGW610tVw90WLdZPONU822TjMNmGGyk2Wy
Z6bJPrbpAbbZIY7FEY7lHxybY5y+xzn9T3IGnuYMPsMZeo7jcJ7jFMhxvsgZ
cZkz6gpn7DXO+OucCTc4k25ypt7mTA/muN3lzLzH4dznzHrImR3C8XrMmR/K
WRDO4UZyFkdzfGM4y2I5K+I4fnGcVXHuq+Pc18Z5rI/13BDjuTFm9qboOVui
vbZGeW2LmhsQNW9H5LxdkfN3R3rvjViwL2LBgYiFB8O5h8MXHQlf9EfY4mNh
PidCl5wMXXL6se+Zx0vPPV52PmTZhZDlF0NWXA5ZeSXE72rI79dDaOL3eK2K
+226Hb45OML/TqQa94vZ/SC2IvdLILnfsdCnx8Oe0dwv6Uzk83ORLwKjXlyI
fnmJ4n6vr8a9uR73Nij+7c0nybcSUoKfvrubmHo/Me3Bs7RHNP0LfZERTtG/
D1GvMmNeZcW+zo5/8zGBon+fKPqXkvv8Xd7L1LzXaflv3hckvy98l1GUllH8
/kMJTf94WQwD/JHpH2lyaU3fzVUpGYaj4Jfw5WqtwjhNEb8kLy+/sKhYKv9S
i1XrYau4cmVNU1avRH4bq3l7lpta6dVrUsYGKz2SiErPMWq+Q4UGIEoPICqk
+9oPtr8T9cP8z6J+uNNRP+bCsAV01I+lFaN++MP0AJi5m476cQDmHoH5x2Dh
STrqRyDkX4SCK1B4HYpuQnEwlNyD0gdQ9gjKQqGcCfkRCxXxUJkAlYlQmQSJ
l5B4TcX7IJLpiEVpqkgfmXSkj090jI+yAB/FqqAeTDgPCR2zgwnP8e0DbXxX
+N9E/Sj1wKIH54/McffwXLL07rNU8vvLh5cXz/WaM9tz9tKVoc8ymbSvQq4s
9ppD7fRdGZJI7ySY1x/h7Qt7ORx336XrYt/lkt+LUuPWLF84Z7bX3LlzWDNm
nbj5FFPvXD+st9dYJSujfwgh0oNBCEkG+MsvvzRu3FhXT8/QsE3Hjh27d+/e
p3dvcxNjSzMTa3NTWwvTvhamAyxNB1uZ2dmYOdhaOPWzcO5nOWKA5eiBVmMH
WbkOsZ5oZzN5qM00e1s3B1u2k627s+3s4bZeLjbzR9pwR1n7jLFaOs5y5XiL
VRPM104y2zjFxH+qyfbpxjvdjHezjPfONDkw0/QQ2+wI2+Io2/oY2/Y4u98J
9oDT7EFn2HZn2fbn2Y6B7GEX2C6X2SOvsMdcZY+7zna9wZ4YxJ5ymz0tmD3j
Dpt1j82+z/Z4wPYMYc95zJ4XyvYOZy+MYC+KYi+JYS+NZS+PY6+MY/8exyHp
35pY93Wxs9bHzNoY7bkpevbmqDn+UXNIBrg9ai5J/3aSDDBi/p4IigHuD19w
MHzhoXDukbBFR8MoBng81Iekf6ceLznz2PdsyNJzIcsCQ5ZdDFl+KWTFlZCV
JP27FrKKZoBrgx6vuxm6npL+KPq3JThyK0X/ogLuxuy8F7P7fuweiv7F7X8U
f/BRwuEQiv79QTLAsMQT4Umnwkvp33mK/qnUv7hS9e9mfPItlfpH0z9a/Uui
1D+G/jHqXyyt/iWoqX8q+kepf1XoHz+LVv/+/fRPqZDL1RQhBRPHQkmxlOSr
62qBnzbdTCe35Yoy6UnO6GxK+tYgFGopb2Vgpi+nKG6okdWdVBH5TSimRvjQ
dI/Y6j26ceOmjbRbHA5h8lSWnZTKU0YdSu+SB5/Z5TV7tpeX1+xZnHncrR/E
5NHFp3eunjOH9O4eWy/fEanKG3x2F+ngqZSeVMpMCfk8+XRo3UrSwbvPmrX5
2KUSMZWOIUBlJyqjOgoFVV1mv7qSRhCKqj0+lQ8nCLLtSBdBdxDJGP5Eth8h
Fz++dT3i1SeydURiCVGplSq352fzlMpkSiX10/Dex/kuWfrwVR59gDDwqP/j
VwXk5uMLJ87fqvBIKqV0gsLAo3tYbtO3n7yp6vEqPr9lJWsmZ8fV+8x35oA7
l/zd2DP9z1wXM4f/+fVSU/s7MX/N/izmL0cV89e7YszftSB5oyrm7y6QvRd8
OgDyDoOCP0DRSVB8hlL/+BeB4AoQXgPim1TAX8ldIL0PZLT6J4+g1b9YWv1L
+Iz6l6ZS/zJV6l+uWnjfElVcD6EqkIdMFZ7j24ts3yG+bsxf+mKWZky1MNLr
bOu+kOsxZfyMRdvJfce9HBs06jhv6fLpY/o3atT6cAjloA55Dmv0W6f5S5fN
nNivUW299WeoOwgrchc49EKdLTwWLXGbOMJ91W5yX2rQeqD1iytn3vy5njOm
uZ8ISsAa+vdfss/Qv3ql9K9Nm06dOvXo0b1Pnz7mJiaW5qY2NP3rx9A/a7Oh
NuYOfS2G9bMY3l9F/wZbM/RvCkP/HG3Zw2w9GPo3wtabon82PmOtl42zWjne
ctVE83WTSfpn6j/NZPsMiv7tKad/5lXo32Ca/jmcZzsFsp1p+jdKjf5NUtE/
tzvsmffYHBX986Lp34JwNjeylP4ti2WviGPT6h9N/+I8SPpHqX8M/Yum6B+t
/pXSv92R3iT9U6l/5fSPVv98VOqf79nHS2n1j6R/K9Tp343Hq4MY+he2XqX+
bSlV/yj6R6l/9xn1j6R/Tw49KlX//qDUv8STlenfy0sk/VOpfzfi31L0L4Gi
fxXUv0r075U6/aus/v249K9MFmKqoFR9lTO9gdIPhwMOJGaK6T/hahWiUqmJ
Srk/keJeVEZEYZRF807X35UrXQoqZ4LHF4pzkx1Nmm8KSiF3ymhHWrHPRiml
9okn9tXXM3HyXeTNZrPmLfTPIDOWptjqAxPnmSsXues1qee0aB+dXjDZWq9J
l4GLFy/ksFlzF27JJB8mxdHdtOr0H+/uu9jD3Kh5e9NZH6k8K3WTEsx6RpUb
pLRTtXI/UJVyVj+CsUx4G2elvT2kqGx/KYes2p6Vi1Q1T+qHeH9/J+l8hrAC
qOSyHPue9Zadf01uLnOysJ+5n8pfIqOzoxIL3sc4dW1n7TjGg8PadiKI2qX8
OM/BxMp2hO/CmQbNgPv680zWR31G6Rj15i5Z2N3gt77uW8ty+CqmTv9q165d
Rv90flXRvxagfxn961FK/7xJ+tevnP7tHQkOk/RvAk3/3MBNkv55VqF/q1T0
z78y/cs/VoX+XQeiivRPpkb/FJ+hf4SG/n1l1P6K9I9xVvu97bU7jPhYfv1R
O4/NGztuzmFmB8e+07AVl8iNg7NGjZ19iNl5fIH9bz1Gkhs31o2vp23ypuyt
UiokP9OC/fV6u0jUzqXp/P1P2Z/Sv46dOnWn6B+j/lWkf1al9M+pAv2z+jz9
Y9Q/kv4x6h9F/2j176/SP8fq6N9ENfrHqkL/vEn6F1FO/xj1ryL9m/Xn9K+i
+ldG/0rVv79C/4Ir0z+V+vfkIEn/QsrpX/XqX3X070vq36v/oPrHkJyoq4f3
nAvGKi8afGbfsZuJ5Mb1o1tmzpq3cce+F1k8XE5NlA8Cj3LY7GUrN7/PLaGz
IYKOb2WppaToX0Fk35amwUlpxzb5zPBZ9aJAgMv7HHljbfU2B70jt2SqLuBb
F/3d3Gas3HKRV1o08RSnPn5B6RWKK3o3zLj1hRfUw+LNtTUNmvV8Qp1fNGVw
97nHEirUqyC6XyvTqGL6S250h9/q/n7lBfOn4EtbyRP5kScq9eLSK2cPJX7g
xVzb68ZiBz2gkinodijMjFy13Ic90+NcUAwuZWul5fTzv1jCaImC9BM7z37I
yQxYvpi9dPWzXKqaIYEHPGdMMWrZ0Np5Cnf+HHevhfEfqIfK9WP+6u2pIorC
y6e2sNkzV225XCxW5bnrbEZO5vZlizgr1iZ9LCR3vr4Z0KmfrfMgx6sv+BiX
jOnbcuM1ij9vmOTo6n0cq/qU6YLLve07j1txuqw1qJLKi+PDwhl9L3I/q25b
m0/kiVKuGbbodOcd/fDNvN20dsMzTym++rViGFdQ/z5D/6qqf95V1L9y+vfX
1b/8qurf9crqX03on0b9+37pH/MKJXpl3Kz+isuvyM3sDx8+5uTkFVB32bF5
o/u5LMmXK9/EXBg0YMDBe1SP8EHPEfaTNzNHPz+7oG67ASTBc+3dxHX9LXKP
gCeQU0tAUDdU6m3/Ju0sI9MK8j9mfsj6KBBrwhP/t6wm6l85/TOvCf37gvpX
Tv/K1L+1f0f9q5b+Tfoi/VvwVejfZ9S/U39d/atC/yqofyFfUv/+jP6l1Yj+
/fjqn1JOebPEs4t/1jZNZxyb7L2Z3i8+5ygWdOnotlluExvWBeuvJ5NfRTTB
OL5mRtcefX2WLBo9dNDa/UHMMTdO7vCYMaEsJZmTsih+gA5q29lsAmvO6MGG
7UzH0/qbnJqYocwfZa3LqH8iKcVXjvjM6NDVYumK5XYmXWzGLqclM8Fk+27T
t95QCIvS0jNIV06VTpQytLveuedUMUL3e/7awuYNRWiEUwZ2HLX8pFhSkv4+
Ize/kNEerXS63UimAzFj0bBuDd12h5Jb+xdONepmWXYimh7y3Oza6xj1GjrK
ddaUYb81aHvlOdWp+ibsUFudRv0nzZ4/a9IE1pL3AsoJHFaVc6hpV+vRS4Vk
VXLDjes2btWp9/gZXmOGGBoajycJaeTFfbNmTG3f4lcLp8kq+kcV9OrxAPVW
ElNtIVoyydSgvQnXd7FNrxY9bDn55B/yqTwNO/WeMX22Yx/d1rZTpRgnX/q9
w3D2kXXzXH2OkElGmDdbe5VqwDXjh4ye+wemxAo5020uS79r3tM5RYqFeVlZ
+QybLpUUlRKKncad9P7V0IosZ8Ret57OHtQfClL8PV0A0OIei8RqnPz/aX+N
/vWonv7trQn9+4L6p6F/3ym+Hv2j9WpJ6p22DRuefkq+Z310G9ytSaP6LQex
yev48opJtcBPRl27NPgZtBroSXsh/Me8sYPHrCS9Q17K/YFtmzn5nMC4yMKw
/oLT8bh0mApJKik/8/7Bvl9/Brqt2rVrbaDdutPpyEz89d6PNPb92/+A/v1F
9e9fRf/Cf0T696Oqf9RsUOrzo2P3duuvUpTv5ZV1HS1GUXqTstQnz7Az3HKT
UuoE1BA25fSB7e3mHCw7mh7QR5SnvEW9XFND/fhP+/zys/u2W/RfMmxaNdr5
KIvcElOuumi0te7mm1RK8pskJaidYa/7byiiIs+JsWildyKBdMxyD6dOoF7T
jkYd9FHT7mO8KaomTnHq0thmlPuKBezuhh38TkTSmQvnOncGP//WsaORTrPG
g1h+1NnzI2z0up2JzSJp6PmNrAZNOkWRnC4tqE3rXg/eqp3oCbmtZNt1aO8w
X0DnxXHu7XEggiyUc9emU9ZeV7US5e7FKUHty8qZG2PeUudMkhTLn/epX3fW
9tuqav628+EH5pjJA1vsi1RpmWrTNKbbtfa/lcZsvw/e3ECvx0tGpZS87KFT
Z8OdLEy86l2vjgfTdGk3dH/tEMnHH4PX6wyYkZsSYWo5KCWfP7W/zurLFIdc
6zp07LxjVP4yBTN8PTv0EGrVZsgguzYtW2i3aue9NRAzcyIVNPfGPNdu+nZz
95JbZ3ycB070zU5LsDFCExf8PmZo32mbqSrLZF9nIQ4N/dPQv3+C/hHM6Iaw
zo0bH4rMJd0PT6yMPb38t97O5PV+at6IAaNWFBEk03s6rEcLx/nUiJGzS1x/
Aj+1atemXas2LJ/dlLuTvbM0bMQ9/YTcFFNvUoRUQr2ypd72b9rBJj6LzyvI
zckvkMi+/gR5jX3P9u3UPw3909C//7nJ6Wf9Kd+RXYctIjc2TLUZtYjqTFTK
pBI5gYVZLhZo4w2KaUho9S814mxfw2aG3XpPX7g5mUc7Q0IpkSmxKJtOSUlS
FAErjLLS6/4gi6AIpqxkol3beX9QXagCGdUxPMpKdxPd+Uta2r3dvzas27Jl
q2bNm7ds0aJBc7SPYlCKCXZdZ+68jWWCzOxPhcUl1LklaQ6dGg0cN2uEqUEr
00k5CoZ5SqcN6jj293MEIfmY/amYx6eGGBYnWP9W71dk0LaVnrHVsIvhVPmT
b+9s0KiugdqJ9tInGju465JAivryhWKJoESooHqurXR73s8ktyQCkaT0QXB3
F3k4Xc5mLVsY/Nqs+eHwfCyON0PdHmaXVnOCXTvvY9FUk/CzSIq75tJzarij
QMQM8xOrWqms7tc3uPZ1XUBuFBeRFJDwdOk90f8Bxs9Nm3d9mE1dUcXJt7s0
bXc/B+fe39LYlBqhtMq1n+/285wRHf3OU/1ca8fbjaHVP7lErlRQj9G0Ozt+
1W11OCicJxK+une4RTPd008oPVNMtSDx+/hOLXpO/Uj/brcCPAyQtlFnk+WH
7pJfZw/vNXHTTUzRtq/zjNPQPw39+yfoH3nvUfdX7iDDutMCQphdOY9361mO
Inef9HIZ5raT2fnkyOxWfUaRGye8XAaNXcUjlEWFVAcB7bxlU82b2bjtwqrv
jJH0T7vz4AwN6fuvmob+aTp/f2D6x8zwFb29atTe9nnGO5c+3S++osY8q9Qq
wbi++v7B6Wp7SJM9Dbk6flCXzkM41IszoyBifllKeuZvTF+D3nfeM4Omi4b1
1tvxgOo3oR09NfZv650MJq/sh7uadx2UwsdyQXERX6BUKGiiIp7k0GMhMyOP
Nurc4ncOPfQuU6phsXUzLfvFR5kSThvcZfr2u1ht1ipRGG2j2/VsfJa4pLDs
h8n6zImmOPSYfSSCKptqKi7mJ1m1MDj1lK/eTpkPSg+XCYqL+QK5TEb3Mkdb
6/UILqtmL53td+nxioqCMbYtAh58VMtA1Z62+mV1D93L7jBoelmKcRY6Mw/E
kfTPTLvrDVqlFKUGd2zS/mEezrm/tbn5cBHFlncO7OswYECnjfQwp3WuQ8d7
nyzPnmyap6fbdnTMV+U5dYCB55FoZnuHp7VO11Hv6Hkn5L/X11dp1WkZksr8
MXdIt2brmPk4ms5fDf37N9E/rKAXLri/ywv8or/7+mOpkgg5OK+2kZ2Son/D
+41cXqzEOVmxoyzbjVtE3SyH3J3tJ2+hj6Tm2Cvo9ckTL6wDoM7KA7eEQlHa
2/hrdx+SO9NubWzcoX+KmD6Jps/3v2eazl+N+vcj07/Sd2f+7DHWA0c5OExd
Sk/SUFDD94qK6Vm6zVaeiSMkfJ6UwDLhnaunEt69J5NEHppXp+MgWqOSFhSV
lKcUl/BJb1oU0bNuq53BJJ0Qn1jhqtfFOZPy0NLCIp4kL8WpNE9eiZQ881ub
1g2mrjzNk0mLM9Ju3LydTTlb8US7Lm4Bt7FcmPXxU2FBEaUoilPsuqK9Dyju
FHpwfp2mPRLpqR8T+nWYtJmSraRSOdMTRBREWWp3vfWemQ2hJJkefQ+/oU60
4lTZibLoE7kO6TLnD4ogMT07zNozS4Z10DWd9CK7uCTv3cN793LJ0wveWJeW
U1Ly4f21oJt5ZN2LYyybd957j6rm8ZUTmnUckiZiVqEgPO3adXf1LZRKcnNy
6bnMisLyVoonxMUCBVZ8uGdQr9niM3fkStnFDfOaGnSPK8C4JJKkf0HJ1O8g
TLndvqHh/Vz86e6mZuYu+bTK4WbdDoDau+9QvG2d62An1k4JVuRkfyooLBBS
4mq2c/tmk5ceJ/3W/aNLdZp3CsmgHq/bZo2ur985JEUk5Rd8yskVkXUted2v
XWPWhkCpUnZm5YSWXV2Y+dFf6yGnoX8a+vfP0D9culoUPrd1ca82eq0MWndo
04e17gS559padqOf6rdu16Z9WyP28j259MTeU4unjGZTAUcU0tJTM9OwHh7d
bNlBz8CwZVtDoxV7LmJKS9/e1nT4e8r7aMjff9E0Uz/+derfn8781dA/dWPm
uCVd21yr1k/+N16S25SwJc10G9CxmY6+drMm5HWu3croREQWeTfsXuHaum17
fX1kaNb3RNRz6nhRBmtghZQnIz+S/M93kl1LQ91WBgbmNi4PX3yiUorVUurq
abfueCKM0spSo04NMu+I9Fu3aGc4dt7WfMolixe5mtZp2Kxd27Yt9LXbdR2Z
xCeLlTrS0ujsE3pqiCxzVM92Cw5TtI3l0MdjN7WWnZySreh+VmrVQctgatVB
zCy4wqyelxFzeqDqROPmbc2j55PMHG21+HQcuSWl580yPyWR88Zn5IDWbXX1
9do4uW8upAXO9JgzA82NyMMN2hmO8fKnhuyVPLFsULdOU/22rQyMbYbfeJGL
VcHO3kdf6GvaUtdAX79tl6BXJNH8OK2fUXNdVStRdad4bOTpnZaGBi0M9Ftb
DjkTTfFqeX6MfUfr4HcU/ROl3Tdp3etxPs59uKO93VR6AgwOObiA9ECHQqmx
lAe44+vXaWjYtm1rA/3mrUrbMyU6cICJIVnMDqZ9j1xLIvdI0kO7N67TWL9N
h7atWxu0aKTfzv8Gtf9t+EmbjoZ6+rrtbe3C6MJXDpzw/zAN/dPQv3+M/pWv
yCIV5ubk8fil41dlYlFRQUF+Xl4JT1x+ZYqFAqGk0vGlhxOi3LwcHr80sVIu
LeEJNMzvP2uahV/+dQu//Kn6V7OFX/4r9K/UCDl5kZf3+xFKXlFBXn5+UVFx
YQG5UT7sWcAryc3PZ4K103dH5ZRiVUo+Lz83t7QfkuYVVfKUK8umpZIuOp9X
1t9KiIU80m0zVlBQQkuUSgG/RKpSp2RiQXEJ1U8t5POEkoqzFarEHMHlxKby
iUQCPjMBufxo1a8pKMnLLZ08W7ZOS4XDlYUx/Vr2OP+E6mVWqCUrexTl5+fm
FxTSZa6u7oxJRTk5udKyQpYWnlkWUM4r4cmpoYWSEr5QtYCzrKSkiDlcKhYW
0s1E/qvYntKc3ByJ6jci8xHweeRTMJdMRJ9dRE0VYRbykebk5JSf/euZZuEX
Df37B+kfZXK1CI/KKp218mriP1YwhULt8K97M2js32maZZ+/82Wfn1VV/2q0
7PNzzbLPf9kI9XhihEL5+VoTak1CVPXEFUyp9ndyu2Zel6j0f03sL5yIJExl
Kz8TpYthK9WG/ygVUmqOSX5Yt7qtrtNL51HBd9UWba5hRUo7pjHTSl/nKqLm
+aoy/UxEYNXZleVn/+qPu+922ee/Qf80yz7/K+gfbQRRYfV0QmWVknz5+Apf
v2rxNPZvMk3Qt39Z0LdARv37q0Hf/ovLPleySo6OqGiV9n/dlNUkri5ltU68
Wl/+BaddTSFrllJtJy7tZRZlHtmy5w3dKVste6pU+M/UvZqmqLpd7c5qW6lq
+qpnJz6f8muZJuibhv59Hl836JvGNPY/MUJF/3R0dEgPRnK/WrVq1atXv0mT
Jnr6+m3atu3cuXOPnj2MjftYmJpYmZvZWJj1tTTrb2k20MpsiLX5UFtzx36W
w/pbDu9vNXKg1ehB1uMGW0+ws5k01HaKve10h75ujn05w/p6DO8726Xv3BG2
3qNsuaNtloy1XjbeaqWr5eqJFusmm2+carZ1mmnADJOdLJM9M032sU0PsM0O
cSyOcCz/4Ngc4/Q9zul/kjPwNGfwGc7QcxyH8xynQI7zRc6Iy5xRVzhjr3HG
X+dMuMGZdJMz9TZnejDH7S5n5j0O5z5n1kPO7BCO12PO/FDOgnAON5KzOJrj
G8NZFstZEceh1T93kv6tjfNYH+tJqX8xszdFz9kS7UVyP1r9m0fSv12R83dH
UtxPpf5xD4cvOhJOcT9a/VuiUv+Wnnu8jFb/ll8MWXE5ZOWVED+S/tHcbw2l
/oWuuxm2QaX++Zeqf9E77tHq3wNG/Ys/8OjJoZBS9e9YaCKj/p2OKKV/gYz6
R3I/lfoXFP/25hNK/Qt+qqb+JVHqX6iK/kW9yoyhY/7GV1T/XqjUvzfvC6rQ
P15WFj+bZIA/Dv3T2F80opotjamMoX8bNmygiN/PP5OfdX7S+q0u1G0A2zaB
3RE0N4D9DaFjBzi6C5zUA7KMoac59LaGvv3gqsFwkwMMcIZ7R8LDY+HJCfD8
VHjFDd50h3c84cO5MGwBjFoE45fCxJXwxSr4ei1M3gjT/GF6AMzcDbP3wk8H
YO4RmH8MFp6ExWdgSSDkX4SCK1B4HYpuQnEwlNyD0gdQ9gjKQqE8AiqioCIW
KuKhMgEqE6EyCRIvIfEaEm8gkQyJVIjTIM6A+APEmRBnQ/wJ4lyI8yEugLgQ
4mKIeRDzIRZCLIJYArEMYgXESoixBurQoonfz/TnBuZK+bYXqsY09jkro39N
mzYFKqtdu3aDBg2aa2sbtGzZvn37Ll269OzRw7h3LzPj3hYmfaxM+9iY9ulr
1meAeZ/BlsZ2VqYONqZONmbOfc1G9DMfPcB87EAL10GWEwdbTh5iNW2oFcvB
iu1oNcvJaraz5dzhlgtGWCwaZe472mz5WFO/8SZrJhivn9R7y+Re26b22jG9
564Zvfa49drv1ucAy/gwy/QIy+Ioy+oYy+Y4q+8p1oDTrEFnWHbnWPbnWY6B
LOdLLJfLrJFXWWOuscZeZ7kGsSbeYk25zZp2hzXjLot1j8V5wPJ4xPJ8zPIK
Zc0LY3lHsBZGsRZHs3xjWcviWCviWH5xM3+PY6+OZa+NdV8X474+2mND9KxN
UZ5bojz9o2Zvi5oTEOm1I9JrZ8Tc3RHz9kTM3xc+/0C498HwBYfCFh4JW0j1
/4YuOhG6+ORjn9OPfc6ELDn3yDcwxJfu/112OWT5lZCV1x75Xaf7fykSWMoA
N96O2Bwc6X8nSo0Bxu5+EFeRAT6lBMCwxOPhDAN8fjbyxTl19S+2VP0Lik++
yah/T1PvJabdL1P/nmeEUfQvk1L/XmfF0OrfE5X696xU/ctn1L+U9CKa/pWk
Z/IY9S+bVv8+aejff9kIuUwTBKB6Y+jf2rVry9ymFgD1tECzOqBVA9CpCTDW
ATYtgJ0hcOkAXLuA6T2BuzGYaw58rIFff7BhCNjmAHYPBwdHguPjwLmJ4PI0
EDQTBLuDB7NB6DwQtRDE+4DEZeC5H3i9GiSvB2mbQcY2kLkTZO8BOftA3iFQ
cBQUnQAlpwHvHBBcAMLLQHQNiIOA5DaQ3gUylfqnCKfVvxha/XuiUv9eVFT/
3qvUvyyV+penUv+KaPWPD7AAYBGt/kkBltPqH/HNdbbvGWuZK+XbXqga09jn
jKF/fD6/c+fOJAPU0dHR1dVp1apVhw4dunfvYWJqam1t3b9//yGDBzsMtXOy
HzrcYaiL49CRjkNHOw0d62zv6uIwcYTj5JGOU0c6TR/txBozjD3W2WOcs+f4
4XNch8+d4OI90YU72WXxVBffaS7Lp7v4zRi+ijV87UznjZxhW9wdt81yCJht
v9tr6P65dofm2x3xtju2wO74wqGnFg49w3U4x3U8z3UO5Lpc4I68yB19mTv2
Knf8Ne6E69xJN7hTbnKn3+a6BXNn3uFy7nE97nM9H3DnPOLOfcz1DuUuCONy
w7k+kVzfKO6yGO7KWK5fHHfVE+6ap9x1idyNz7ibkrhbkrhbkxZtS1ockLR4
x7MluxKX7E703fPUd9/TpfsTlh1MWH4oYfnhJyuOPln5xxO/Y/F+J+L9Tsb/
fjpu1Zm4VWfjVp+PXRMYu/ZC7NpLMesux6y/GrP+WvSG69Ebg6I33ozefDt6
c3D0ljvR/nejt92L3n4/JuBBzI6HsTsfxe0Jid8bEr/v8ZODoQmHQp8eDks8
Gp74R8Sz45FJJyKTTkY9Px314mz0i/MxLwNjXwXGvr4Y9+Zy/JsrT95ee5J8
IyE56GnKrcTU4Gepd5LS7ia9v/88/cHz9EcvMkJefgh9lRn+KjPidVbkm6zo
t9kxyR/jkj/Fp+QkvMtNTM19lpqXlJb/4n3By/SC1xmFbz4UJX8oTsksTs0s
eZ/FS8/mffjIz/woyM4RfsoR5eSKcvPEeXmSgnxpURHxlUZtaUxjP4wxM6AD
AgLq1Kmjr6+v3bx5Cz3UzgB1M0SmHVC/Lsi+JxppjCZaIDcb5NkfLRiCltij
lcPQ+pFo61i0ZwI6NAUdn4HOzEQXPdD1OSh4PnqwCIUuQRHLUKwfSliNnm9A
rzaj5K0oNQCl70aZ+9HHQyjnKMo7jgpOoaKzqCQQ8S8hwVUkvIHEN5EkGEnv
ItlDJA9BijCkiEDKKKSMRUQ8IhIQ8QwRSYh4gYhXiHiLcDIiUhF+j4h0hDMR
zkL4I8KfEM5FOB/hAoSLEC5GmIcwH2EhwiKExQhLEZYhrEBYiTBBA2tQCc0x
1se4Dnl1MFfKt71QNaaxLxtJAkkGyFMZX2UClQk/Y6LPQCyqBpIqkIqrgexL
EDGQVwPx56AQSz4DqeqzCiRVIasZ5BUg/SuQKRQyOQ1FVSgZyGsMakW4akCU
QVkzaMYGa0xjnzGpVFpSUlLuOSnnyRPQoKZsC3giGmISQgoSGlISolLIaMjF
apDwFGpQSqsBIasCeTXAis9D+Wcg/gxYgy+ghAkQpDGNaUxjGtOYxjSmMY1p
TGPflVWeOvefNPwfQ02bRWMa01h1RtCLBZVZRdn87wNr8ANAM2VKYxrTmMY0
pjGNaUxjGtOQ4u/P5CQICjIllimo2KAyKZZJsExMQ4SlapCUQUhBXBEiQTmE
/EogBAwEJJQM+AyEioqQ80UMZHwxAylfQkLCl1IQSMUCGQ25iIZQoKChFAhL
wRcSpRCpICZ4DCQqSFWQqSBXg0INShJKNSgqoHzITaUxOVI1SHi4DOKKEPEI
dQgrQlAFfJ6yIhRVICfBoyBTg1QNEhXEKohUEKogEgiwRgDU2D9nNb/Yvv1l
qT72j6+CQIXSO0gFsRrKbr2ym1H9JpVXhKIKlJ8B8beANfi64JOfJeTF8a0v
z/+5aXqIfgAjud8DjG8q8U0+DsrA15/gq7fx5WP44iZ8fgk+MwufmI6PTsIH
JuLdk3DAFOw/BW+cjNe6Yr8xeNkI7DMMc+2J+XZ49iDs3p9wsyWmWhKTzPC4
PnhUdzy8C3boiIcYEYOMlP07Kmy7SK27Cyx6F5uZ5pmYf+pt9aGH7ftu/VM6
D3xtNPh5+6GJbR3jDYdHtR4d2sr1fqspt1u7XTP0uNB2/qn2Sw51/H135w3+
Xbev67F3Za+jPn1Ozze56GEaNN3s3gTz0FGWcY7WzwfYJlv1zzAZmN1zSF4X
h+IOLvy2o0WtJ0haTpUbzFS08FToeSv0lih1/ZS6a5W6m5W6AUqdfUqdI0p0
QonOKdAlBbohR3dl6JEEhYtQjBAlCNBzHnpbjN4VoPRc9OEjyvqAPqahT29R
zguU+xTlxaL8SFQQigrvo+JgxAtC/KtIcAEJzyLRCSQ5gmT7kXw3UgQg5RZE
rEfEakSsQMRShBcjYgEivBAxCynZSOmGFNOQYhJSjEOKUUjuguROSGGH5AOR
3BbJLJHUDIlNkLA34vVERd1RXhf0sTPK7IgyOqB37dHbtuilIXrWGiW0RLEG
KLIFeqyP7uuhYF10Qxdd1kXndNAJHXRYB+3TQTt1kL8O2qCDVuug5TrIB6H5
CHkiNBOhqQhNQGgMQqN0dIY1bTq5SxcRn4oCprnH1a3a1tA4w/+OVZ75q63d
AqE2CHVCqBdCFgj1R2goQsMRGofQZIRYCHkgNBehRQgtRWg1QhsQ8kdoJ0L7
EDqC0AmEziJ0AaGrCAUhdAehhwiFIhSBUDRCcQg9Reg5Qq8QeotQCkJpCGUg
lIlQNkKfEMpFKA+hAoSKECpBiIcQHyEBQiKExAhJEJIiJKOhqAilCoTqswy4
4gbWoCbQ1sb6+rhOHfLiYC6Uf+Bq/Nsuh1AqFaWheb6m11LIZRKJhHw5YqLt
EIRSJpNKqR1Scr/8i8F6NPYPm4zkfhgHynFgET7/Dp+LxGcu4ZO78LGl+Ig7
Pjge7xmGdwzFW+zwhqF4tQNe4YB97TF3MJ7XD8+2whwz7NaHmNqLmNCdGNOZ
cOmgdGpD2LXEA/WwbXNs0QQbN8Q9GxDdGig6N5R2aCxs17zYUDevlcHHFq0/
6LZL1e7wtmnnl791TWzQI75+75hfTCLqWDz62fZO7UE3ajtc+tnlbJ2xx36Z
uq+++7aG89f9tmRF098XNd84V2cHR+/A1BbHxxqcd251bUjrOzZtwozbxXcx
etG2c4pB13TU42Nj4/xfLYvr9uXXHiys5SjWGikBrjIwTQbc5WCuAnDlYJkc
rJaDTXIQIAd75eCwDJyQgvMScFUEbgnBPT54zAORxSC+ECTlg1c5IDkLvMsA
71NBxhvw4TnIfAKyokF2GPj4AOQEg9wbIP8yKDwPik6DkmOAdwjw9wBhABBv
AZL1QLYayJcDhQ9QLgCEFyBmAYINiOlAOQkoxgPFKCB3ATInILMD0oFAagsk
lkBiCqS9gKQrkBgBcVsgbAUELQBPFxQhkNsMZDcBGb+BtIYgpQF4VQ8k1QUJ
dUBsbRBVC4RqgQcQBANwHYBLAJwD4AQAhwHYA8B2ADYBsBaAlQAsAWABALMB
YAMwFYDxAIwEwBGAwQD0A8AGAFMAHJo0EfKoyLA/HqsprVEN6vW5lH+lRSqk
VcjlUtod0k5SxuQul8sY9yiTl0fpVSiolNJKKWVlKasG+vz//Uw1+pUJ8pGh
cuzqh9a0PT+XrZx+aqhVn6wpXXGZvCxXpumqNtQ/bFXX/aNWfgagEQA6ABgC
0BmA3gBYAjAAAHsARgAwFoDJALAA8KTvO/LuWwHAGvp+DABgLwCHADgGwGkA
AgG4AkAQoG7h+wA8AiAcgGgA4gF4CkASAC8BeANACgBpAKQD8AGALAA+ApAD
QB4ABQAUAlAMQAkAPAAEAAgBEAEgpiEBQAqAjIZcBYUKShWIKsAa/CWsXctc
KN/qEv1fG6GQUhG5Cwp4QrH67krrhFW7bCyhWU70uzHy/eQWxhfk+EIhDnyH
z0fis5fxqT34xAr8hyc+NBHvG4F3OuGtjniTI147DPs54+VO2MceLxiE5/bF
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
T+/Jm8WURq2kV06tGFq2WQ+dTY8Y42qVKDx63QXxvF4aUAtGbiG8u2+2W2id
8/FqVUpiQnKKwfTKNuzLkl3edPonW//eTvon7VMQ/66d0D6i1cckjYvrdPh4
FUnsz2gQNaY2vm0N/GqXZK0ycOvf3ZMb6gW5B5Wt1Gf0zNsqrqMEq8FkJd0j
nlKy6UkELPV0Le9yh+MFiWCalN2jgkeslKZQNSbJZtWhltfXfPJXlNhfvi1Y
OK+/f4C7h4e/r28hD1wsMShLt6iIDxbsI5Pm4aMnqelKqWxDbPPSRRp2Htwu
0i8gskeCxab0jb0blXrvs42CYHj86Em6Si0tMUy/WLto/oLoFxzgXaVWq62/
SfW/vW9BoSJ5/ZwKWsQLeq9xxPjNEvVVa/UGjVJrkWaua3lVOPRQPDJodIYM
/XxwoXg5r6e7v69fQXePZb8lk/58NSx75FHGbXaLChn14xmpSdTxIsWduu2q
tNxRo7Mt89PbW8lx7ztndK3XVbI8pKeJFFD4sG2l7rMPE12N9Ig48kgibOm3
94W7hfzyhJKOLciH/st2/6bSaW/8sszXXbHmvHhJat/aZWv2mHw37lr/FqEB
kR3jJGODVatWJSYlqhISZg1okgurXkmjV2IClOmfjP+O/tkHOKr7N5fPHu3r
pZix5Yr4cemH7Vv1mWP76uzyIWEN+4gHHzQp/f5saXiVLBEts1EnaaxNEztF
ch3oEItJsh+eWTm8QqtoRznivzt7ZnnX7pBk36ZmK/mb6AZYueudNGnyYWqX
Jh2Gr5TuTCepjnOrR5Zv0cuSkdTcq5p7nX4LbZV2lCXSP88yje/LpO+1FJn+
yfTvjaR/to1sulvbw0rWvXr/TtvK5bbekDiE3Vql6VzPZ/b+e05nRDFdOra9
S6PwMk0GSHZCmwWR1I6UfOfv2Xp+lQ7E2dYyp7Wq5D3/sDSdwRW9tPZvzoGM
xWmPjiz0iGgUoyazJj1NrbFaLHrpen2P5uVHr7/kqKZUtv5O8/LeP0lWw/Ta
7i7Nxq6w1bB34/A+cw+S0+yLkHqmjlfEhvPxemWqQ8PGP6Ogns3LD1l+Uqqb
fSsuqa/U8vVbe0nt3E4PD2dcbtKkp6s1ZpOJzzKfqe1dfr/jNisq5h7k6xUt
KZ3q+s47/NgpA3t71vVx3PvxRf1DG/VxpOhcQ/HBknMi/avmGbGLWyl1d/aX
div5y2OyXF8fENoixZ6yZz3FiI23rZeWv1Ok3G1b52m9VabIO5O3Xcv046Yc
UxTw3R1j4D8f/cci0z8Z/w39s3G/B5eO7zp0IEUvkOFhw/KK3vMOiSeXDe1Q
O2rcYwsl3zhco6RiwDfSorttX/bAwJrHbiaY9Jo/Thw5fPG6ePLRqaVu7+Sf
+OMRvU51/cKx05czxmhPTvyQtzCuORujUaYmp0qW+phdMzxrtneoPiO31H3S
rkLJlsPEl/bkz3OC8ubrMn6DeFKbmqS30P4F0aXe7RCvEtJSpJnpP7ZMY8x1
ypK9Wq0u9tb5HQePiCdj935VLPTdGIktWizynO9rJm86/ZMnf99W+ieqMKnW
6iGdajfs0Lx5r4l8k4Y0m5GWls536bpPWX9OMKhVRoFM2gPb1168EycmObV0
hGupRtxGZUxJUz5NqVeqxbcl7WSFvAEL9seI/Gr15K7e4a0fSjrSmJqmMiTF
tMzIU6UUh93qW3UCC/Wask5lMqbfj921Z98jSQfqu0eF95u3j8za+MdPUlPS
pPG5PiYqAhcdlrjT8R9GurqVv8y3fnSrH9pjpqTVjUazbYurkHK6pmfE3jhJ
OfPF1ZzYqW5KBU1e6ygonhfUtUn40JWSyc424WLzPTO+VahXZI9rj9KVSXeO
/PJLoli85mbtjHoalA/iduzekyTee/rZmh5lFv0i3eaqKd3cSzWJ1dnG+MKH
USHluk5INRoSExL5XmZL6tNWOi/o0zUWsjz4xS+/+9j1B8xW09YZI9z8yp0T
GZ7ylEj/dt+WfgfN7b2lipfcdcciTdAHu78/cZX4jB1a+QkWL3kymQxXNxTL
4/7llnN6g/73jVM98+H6ixJDTE1JSkpKSUi43efdEqWihkss9pU7fpHpn4yX
SP+kx/vRpZ+j6pX18Q1AP58O46Y/Mkov/aZJPcUHzy8kOCQg+IOpK7QZVygX
juvg7R/oF+AbWr3xxqMxtrNnVs6uUcbXP8AvsEyDVUelKQO+CUz9zZj2PkFe
6Fas3fCvSKJqs8Oa9kqVsrcI9tLvn93SoKRn8eJezTp2jm4SNXj8WvHkiRWf
BGJxH2+Fu6cC3Ys1jP7Utt/3yIqZNUO9/IL8g4PCJn+3VcrzwNzgyDZxkpqT
yd9rJ/LWD5n+vaH0j2xbz67smJkr1zuzd0kDYcmwZXzYr0Epd4WPp3txL29v
z4Cw1SfjxVv8dnLXwOCSPj4YVK3e6tNXpet196MbZkq55tRjkf9N6BHlH+QV
4OdXvU7bI9eeSCn1Tim9vD0DS60+IdnK7p5e26h6KfQJ9A0Jem/EnGSpN9B/
3DXStbB7SHCwr49nSET7KyKJMd1tXzNswwW+NcT0sEOFkI+WSbQtunnlQd9K
I32ztBSRz7NKXgdr7pe8DmZYvawZKnpdQ3tBnUfMSeL7ST7oWGvsOmkldoZP
V5s36YSb49o3CAz28vEu0XLgzFRu4Lx3dn3D6mHi5X4hQZ2GzZYMAcoLNQvl
dXXzCQ7wq1Knza5riWQPdhZ3Zku9SH8vPx+f4PDdN0Si+bh3/TAPL3srSfcu
8dhT6xbUDPLz9fMJrNlk/RmJV5uTzzYrVXv/HYn+ae8erBYceeCOdCMxYv9S
JUgsPLRq3RX8ZxJva9N3E0O9AksEBPoHVZm64gRv5HvRDUsXR5/w0mU7D/48
lm9Rtr6KJ1Pe+iHjv6F/9DSejiU5KSlVxVfy8td59Uddmnb9QiVY01Jtxnyr
w9uTTqNKTErSCxnXZ7Auqy4xMVGty/AE6Mhfq05NSkxSqvnqCnEAqNFmcQLF
b0QvpuEnLBqNgZ/QiPVJSU0TRTxIU2nJQe8EXWJSgkqdEQ3EajYqVRqZ+b2e
Ijt+kR2/vKn0L0MEs0qlehqLQ7Cq0lKSkpPT0tJTU8SDp6uRNSplYnKyLVg7
v+WsKfX2lGpVcmJixk487jQvW55ieRmNZhXVY7LKMd8q6LUqKV4Sl5QUJTdR
WjVqpdE+RSuq1nSlpE61apXWkNkXa7aYI/YK5FCQTqO2bUB+erV9TY5GmZSY
rLJfbs1+uTX1bH3/8psuSLPMFqdk9r7EmJycmJySyuuc073bxKhLSEg0OiqZ
UXnbpl2zSqnijZSRYUJigiHj93F0I+rEhES1/ffIKCgpSanK8Cz2SrgfvUHW
P9nxy+tP/8jpjSBbUA+uE77vF1Wn/VTplBSpw5FAsDiFTbTY1w1aLE+9wTvt
lhIyOwzN+W16+j46fIY++73LUtD/527jrZDX2O3zT//A7XPZ/8bt81XZ7fOb
JYKQSSv+xX5SwSmOpaQQ/6plrE7fi8fP14hClv+fR/5GQSLxcuh8IYNAWZ1W
5Vgt0tySkHyibN6AnXek/sssffs0y+e8Ebt7CVsr/dX6PKmbsCd19EdWi1Mv
lm15n8X8Kl1HyG6fZfyX9M8mgpDhoNTGwi7t3bRm6wnK9KZkTfk8pwW7OD4+
q3T7QebLMl/ulGcO18ryuskbHfStkBz07W0O+uaQnLRTDorrGXrsX6XMIXFO
KTNfknH+WUr8L24zayWfL6XTScqYZdY9XD7ru5vcK2GORCtL5Z9x7zk0xbNu
JIfK5phdTjX/j+X/adA33TOCvsnWvxeJlxD0Lbs83e7+qt8FWf5fi4P+bc1s
/Vs9mVZ+SEu70+J2tKAlzWlBX9usf61pUksa14w+akTD69HgWkL/6kLfqsL7
lYSu5YWO4dY2YUKLYIoKoAbeVAepujtVKS5UKm4p52YI99SU9k4P9U8KKfEo
qKRk/fMJv6Uod92z4h9uVc4XizxbpMbJQnWOFWhwMH/T3flb/VSgw8ZC3VYV
6buk2Ifz3EbP8PjkU8UX431mjvJbMDjgh75Bq7uW2Nw+ZGfzkgffDTtRo/T5
ChHXSpWLCapwz7fKI6yRVLxuWuGGqgLNNPna6PK+p8/Tw5i7n+mdD025Rplz
jTPnmmLONc3sMsvsssAM35tghRHWGGCzHnZoYZ8GDqnhVyWcTocLqXAlCW48
gdvxcOc+xN2FezfhwVV4eAEenoH4E/DoCDw5AAm7IelnSNkMaeshfRUol4Fq
MWgWgG4O6L8C4zQwfQqWiWD9GISRIAwFYRBYo8HaGyzdwdwZTB3B2BaMLcAQ
BYYGoK8L+ppgiAR9BdBHgK4UaENAHQRKf0j1hUQveIRw3xNi3eF2cbhRFK4U
hosF4fcCcDofHM8LR1zhQG7Y9Q78lAs25YK1uWCFCyx2gfkuMMsFprvAZy4w
0QXGuMBwFxgE0BegB0AngNYAzQAaATRwcanJWBuF4s2gf7L8TRFyOJLFLjb6
N2PGDJH45cmTR/rr4lIIwAPADyAUoBxAJEBdgCYArQA6AnQD6A0wAGAYwBiA
iQCfAXwJMAtgPsBigOUAqwDWA2wB2A6wB+AAwGGAYwC/AZwBOA9wCeAKwHWA
mwC3Ae4CxAHcB3gI8AjgCUAiQDJAKkAaQDqAEkANoAHQAug49AAGACOHicPM
YbHDaoeQDSTjr+HiIhG/PHmkvzNm2B6Ul/cQWi0Wsxw5V5Z/J+IDuodos5k2
p9Emm/VvG61ZSD9OpOUD6Ycu9F0rmt+UZkXR9Kb0RXOa3JwmNKMxjWlEfRpS
iwZUo+jKQq+KQrdyQqcyQttQa8sSQpQ/NfSmuh5UozhVKUwVCgllC1nKFDaG
FdOGeKQHeSUF+D32DXzgHXLXM/SWW5nrRSMuFyp/vkCls/mqnnStcTRP3QO5
G+3K3XxbnrYbXN/7MV+vxQUGflN45JdFx092++xjz6+GK+YP8F7Sy3fVe/6b
WgfsaBJ4oE6JE1VCzoeHXQsuE+MXcQ/LPy5WJblgzfS89dS5m2hztdS7tDdA
VxPrbWIDzWyEmY0xs0/M7Asz+9rM5pnZIjNbZmKrjWyTgW3Xsb1a9oua/api
p9LZ+VR2JTmT9e++3foXb7f+Jexnibsk61/qJpa2jil/ZKqlTP0d085j+lnM
MJ2ZvmDmScwyjlk/YsIwJgxmQn8m9GHWHszShVk6MHNbZmrJTE2ZsSEz1mWG
mswQyYwVmSGCGcKYPphpA5jGl6m8WBqyRHf2qDi7X5TFFmYxhdiN/OxKPnbR
lf2em51+hx13YYeB7WdsJ2PbGNvI2GpuW/iOsbmMfc3YNMamMDaesY8YG8It
Er0Y68JYe8ZaMNaEsfrccBHJWHM3N5n+va0imE2yb/6cxUb/pk0T36Sn4spY
EcYUjAUxVoaxSoyJA6gGfDVFO8beY+x9xqIZ+5C/d+LbN5mxqfx9nMfYIsaW
MvYjY+sY28TYz4ztZtIrfIixo8+w/sUwFpuT9S+FW//SGVNy65/D9KfnMDzb
9Cdb/14kpk2zPSiv+EmVRZa/FDPRYZEBWmm3inbdp50XaPs++ulH2vI1bRpH
6wfT6j60vAct6U7fdqd579PsnvRVD5ralT7tRJ+0pXEtaUwzYUQUDWlEA98V
+tURetUUukdS50rUoRy1DqfmpahJqNAoVHg3zFKnjKFWOU2NiunVqiZVqf6k
Uq2H5evERdSPKdPwz7DGV0s2vRzc/HxQm9OBHY4HdD0U8P6+wH47ggZtCR6x
puT4pWGfLSwzY3bEN1+WWzSlwopxldaNqLJ1YOSuPtV+6Vb9ePua55rXutqg
7u1a9e9XbfCofJOk8ObpoW3UJTrqAroZ/HuZ/D4w+3xo8R5l9Rpv9frUqphm
9ZppVcyzKhZbcbkVV1txoxW3WXCXGQ8Y8agBf9PhWS1e1OBVFd5MxzspeC8R
HzzG+If4OBaf3MKEa5h4CZN+x+RTmHIcUw9h+n5U7UL1dtRsQe0G1K1Gw3I0
LUHzt2iZh9ZZKExH4XMUJqMwEWksCh+hMAyFwWjtj9Z+aO2Nlu5o6YzmDmhu
g+YWaIlCcwM01UVTTTRUQ30V1FZCVXlMK4tJ4fi4DMaXwvuheCcEb5bA64H4
RwBe9Mff/fCUL/7qjYe8cJ8X7lTgNgVuVOBqBS5T4GIFzlfgbAXOUODnCpyE
OBZxJOJgxGjEnohdETt5erZXKFq6ub1fpoxOLe0FkOmfLLI4xLYDet68ea6u
rj4+Pp4eHj6IQYilESsi1kB8F7EpYhvE9xDf52/WIMThiGMQJyJ+jjgDcTbi
fMTFiMsRVyNuQNyC+DPibsQDiEcQjyOeRDyDeA7xEuJVxBuINxFjEGMR7yM+
RHyE+AQxETEJMQUxDVGJqEJUI2oQdYh6RAOiEdHEYUa0cFidIOQEynxAMp4H
Hh7k40OuruLDYXtQXvGTKoss/0vMNghSqD6TRfIPZjKSyUAmPYeOjE4wOKCV
oHeCTpMJWnUmaNRCBjQirDaobdBaMsOs1tlgkqAXYVQbRBjURhv0GpMIncZs
g1ZjEZGRq1bMT4SQAZ2g0vG/ehtIZbDDaIdJhCDB7ASLE6wirE6wOMGsEpxh
coLxKcjgBH1m6CQIDmgzQ5MZagnWzLBkhlmVCSY7jE4w2KG3Q2eH1g6J+8nE
TxZZchKj0ahUKlV2Uduh4Xj6EtnheNEcr57jZTQ5IcvLa8kG6zMg/E2QjJcE
pVJ8OF714ymLLLLIIossssgiiyyyyJJVhDdGyAFrjqAXAOHFQHi98MwWlUUW
WXISgTsLcojwQkEy/l9D1pyyyCKLLLLIIosssry2InPVt1XEMaxWo3EsWdE4
LVlxXqnivEYl+7oUa7bVaIIzsqxes69qIwd02aDPBkNmGLPBlBPM2WB5Bqw2
qP8HBBGa/wXtM6B7CrJBnxMM2WDMBlNOMGeD5Rl4flOnLLK8hvL8T+bLeoad
1/5lWfin+TsL//77tX+vfnXcm40XvvZPnoeR5UWL7ZHSqNV1wsNLu7lVUiiq
Idbje9Y68E2ggxFHI05B/ApxIeIyxHWI2xD3Ih5R4CkFXvDCq9540wfv+OI9
f4wPxCdBmBiMKSGYFoaq0qiNQEM5NFdES2W0RKK1JlrroLUBWhujtSlaW6LQ
FoUOKLyH1BWpB1JvpH5IA5AGIw1FGok0Gmkc0kSkKUifI01DmoE0C2ku0gKk
75C+R1qKtAJpFdJapA1Im5G2Iv2EtFNBexS0X0EHFXRIQUcVdMKLTnnRGS86
50UXFfSHgq550Q0vuuVFMd5014fifOmeH90PoAeB9LAExYfQ41B6EkYJZSgx
nJLKUko5Sq1AaZUovQopq5KqGmmqk7Ym6WqTvi4Z65HpXTI3JEtjskSRtTlZ
WpG1DVnbk7UTWbuQtTtZe5K1D1mjSRhAwmCyDiVhBAkfkfAxCeNJ+ISEKSR8
TjSVaDoJXxPNJppLtJDoO6LviZYSrSRaTbSWaAPRZqJtRNuJdhHtIzpA9AvR
UaITRKeIzhCdI7pIdJnoKtENoptEt4hiiO4QxRLFEd0juk/0gOghUTzRY6In
RAlEiUQpnATKkkly1MXydPnbI1l3/np6+iKWyGnnb+fMO38/RvwE8Qv7zt8F
9p2/axA38p2/2xH3ZNv5ex7xMt/5+yfiLcQ7Tjt/HyMm8G2/yYipiOlO2361
9m2/zht+LTlt+H31G2bfGHh6vsydv8+lWwSr1WILuJNZF1nMJoPBII5ZbKHY
BMFqMhmN0gmjeF52Ifi2ia2rEkesocWLF2HMm7EAxkpxj1V1uQu4zoz1Y2w4
YxO4g/q5jC3hTuS2cKf0Rxg7xb1R/cHYDWC3c7HY3OyBK3uUjz3Jz5IKsdQi
TFWcaT2YXsEM3szoz0wlmDmUmcswczlmrsQskcxSk1nrMuFdJjRm1JRRS0Zt
GXVk1IVRd0a9GPVl1J/RYEbDGI1iNIbReEaTGH3GaBqjGYxmMfqG0XxG3zH6
ntFSRisYrWK0ltEGRlsY/cRoO6NdjPYyOsjoMKOjjE4wOsXod0YXGF1mdIXR
dUZ/MroFdNuF7rxDd/NQbF6Ky0/3C9CDQvSwKD0qRo/d6YkHJSAleVGKD6X4
UloApQeSqgSpQ0gTSrpSpC9DhggyliNjRTJVIXM1Mtcgc20y15doobkJmTkn
tLQjS0eydCaLEyG0DiTrh2QdRsIoEkaTMJaEiUSTiUQ2OI1oBtFMojlEC5yo
4ApOBdcRbSLaSvQz0U7uyvEA9+hzzM4DzxKdJ7pE9Afngdc5FfyTU8Hbmdmg
MxVMeFPpXwZPew629qyUf4fnZdHDZiPXu1wbm2y5m80mmx42PQ3ZKQXQNBoz
9PPTlCZHSnO2Ovw78vlc3FUQOxd7D+J86fO2Z7YyxW7I5Ig5J3ZStsytFnP2
WG+2K8y8I3NqKLFNeBOZzI7ybY2cvUlfiLwQv39TuN+/mXa/f8vsfv82O/n9
yxL07TJjV+1+/+5wv3/OEd8S7SE/0u0hP5yd/jk8/pmzxXd79V7y3jy8UL9/
Rp1WozX8iwykxaSZPgs5vFmC7OXzbRIH/YtQKNxF7ufiEgJQlvurb8ADQHQH
6A8wEmASwAzunf4HgDUAWwH2usARFziVC86/A3/khhuucDsfxBaAB4Ugvgg8
KQqJxSHVHZQIGm/Q+YE+AAzBYAwDUziYyoO5MpgjwVwTLHXB2gCExiA0A2oJ
1BaoI1AXoO5AvYD6An0ANAhoKNBIoNFA44AmAk0B+gJoOtDXQHOA5gEtBFoE
9APQcqCVQKuB1gFtdKGtLvSzC+1wod0utM+FDuaiI7noWC46kYtO56LfXehC
Lrqci67kouvv0J+56aYr3c5LMfnpTkGKLUxxReheMXrgRg89KB7pkRc98aYE
X0r0p+RASgmi1BBKL0nKMFKVJnU4aSNIV570FchQmQyRZKxOplpkqsu5XyMy
R0ncz9yazDbu10XifpaeZLFxvwFkHSxxP+tIO/ebQMIkEj7LsASSsyVwMdEP
RMuIfiRaQ7Q+sxlwL9FBoiN2+nfaTv8u50T/HMbAu9mMgW8s/RPFbHzesbk9
pY3hWNRKtdmpVWxKU6dWJiUlp6alG81/1WI5athszNL6vClfJ4+Mz9+eT+UZ
MeAcbDBLl+QcmNn2OTvjzNkCm1N/94/l30f9+IRH/ZgOMJvr1e+fHfXjV4CT
AGd51I/LAFftUT9iAGJ5yI8HAPEAjwESAJIAUp4R8sMR78PkFObDKofzeL2j
fpiN0shl3dienQbMJ0nJqJ1dsQuCxTY0zLD2SaG7Kfnulc07jiiNgsmgM5kd
C3i0+7YsGjBg4ISJX/5+J1H8nHb33NRJo4cOGTZ8+NDovoNX77lE9mjCsrwN
4qB/ZRDdGBMVVzBj4Txa5bs8/Gs3xj5gbCRjnzA2nY9Sf2BsDWNbbdY/YKdc
2Plc7I932I3c7LYri83HHhRg8YXYk8IsqRhLdWNKT6ZVML0PM/gzYxAzlWSm
0szETX/mqsxSg1nqMOu7TGjEhKaMWjBqw6gDo86MujHqyagPo2hGgxgNZTSC
0WhGYxlNYDSF0ReMvmT0NaPZjOYyWshoEaMljJYxWsloNaN1jDYy2gr0E9AO
oN1A+4AOutBhFzrmQidc6BTQ70AXXOiyC11xoeu56M936GZuup2HYvLRnfwU
W5DiCtO9ovSgGD10p3gPeoz0xIsSfCjJj5IDKCWQUktQeggpQ0lVijRlSBtO
urKkL0+GSmSoQqZqZKpJptpkrmc3/TUjcysytyVLB27660aW98nam6z9yNqf
07+hZB3B6Z9tLngS0adEX9jp3yw7/VtEtITTv5V2+rfJTv92/lP6F2unfw/e
DPpntZjNTvHQLbY4FlaJpdze/mUu9s7Xe8SbJbPFYXoy2+xsVlvsW4tTyr33
iS+mpLRzTcNqHbirEz9p9dIKH073hDmjOhYr5lbE03fZMVueVkehNsMUZTSl
ef/6hcOGDBk2bNiQwQNGjJnzQC9enb5uwRdDhw4dOGjQnJ8O6Oz13b9h4fBh
Q6WUH0opHxrEDuXJ0i+nDBNTDh4888dtSr2UzkZ3HAU5ugeLRbpd23lnSxrv
NbLO+GS9XBDEthNVBJ8gMtn6HLH9BLP+1707T954IraOTm8QsrRS1vZ8Zp5G
k8lqlX4aVdy5CeMnHrmRxC/Qbl4x+9cbKeLhr1tWb9qbqUvKMGFoUjev+C66
X5+5a/bYi0nfOufTAR8Mmjx16f00m5HELDbd0CFDho8Y0T+6zzer99jsic/5
2PxP+Zcxf8dki/n7PWPL7TF/tzjF/D3M2K+MnczJ+hdjt/49yGb9yxLw12H9
y2IAlK1/LwUvNOavbUi1Ymj7Rl2mO07abHdZqJq0D50rgpht40pH9XKc529u
yqhmFTC8xqCPx/fr3m7g59+Kp+7uns5c8nUdMGLk8A/79h64evfF7HnK8gaL
g/6Fc/rnz+lfBI/2JdK/1pnp3wyupp7SP8hM//Kw23lZbH72oCCnf0We0j+N
F9P5SvTPUIKZQpmpzFP6Z3bQv8bZ6F93O/37wE7/Rtrp30Q7/Ztup3/z7PTv
hyz0D/6K/p12eQb9c+X0rwDFFrLTv+Kc/nnSI0UG/Ut00L/gzPQvgnTl7PSv
qp3+1XGif83t9K+jnf71JIuN/g2w07+Rdvpns/596mT9m+Vk/VuS2fr37+nf
3TeJ/jmMQBna0v7RbJsKND5YNm/J5Yd6ytCQOUx9ZJiapJTfX5a4Fzc2pZ6u
4VF6552nli6LlLOgUmv1ibdbVPX4erfYmGTiitSaKVOrUTqn717Px7tqywkf
j+rfP3rE6Nn3pZ09MXV9WNXWH0z5eKB38fwtP17M02ver+1dPLzh2LGjB/SP
Hj561kOxM0k/U9bF9d0uAyeMHVQ9zKNk5ODHUp6WbF1BDsZDIWNSNes8ULZ6
5mw/cxjeOtfynHsszXE+g0Nmb8+sVcqep/RDxB1aINKnJtHzpOSmhGYV8n+y
SXws6ZOWNZp98L2Uv8HEs5MSa+LOtowIqd2i06AB0d+s3s1/yJTR7aqFlG82
ZuzYlhUDQ6t2iZUIoLZbXV+vKi0mjh3dr2/veWv32th89pv6Z+JM/3Lnzi39
ZawgY+52+lcuJ/rXm9O/YXb699nfoX9n/xf9cwR9y5H+6XKifxaZ/r0M5M79
wunf8qEdOw2YH3PlSL++fZbtPko84K/49/GdE5MnDOo/ePL+E6K6JmPC9Rnj
x7ZrWAGDSg0eOXZgdO+ZK3aI53dM71rAs+pNx6jSqBX/xu6f7V2prfOMsjz5
+1ZJFuuff2brX+ts1r/5z2/9c6J/2uehf9mtf3+L/s19Fv37Z9Y/V7v1Lwv9
83gO+hf+v+hfdutfT7v1Lzv9+wvr38ugf7FvDP2zkZzT25d9t3E/2Snf/vWL
f9wjtgDtXDHrg8Ejvpq/+Fp8RkRjrvishzevGNC//ydTZsYlKnk2wu5Vc6Kd
Ukr0L+VUPf/I/Vdif/x6XN9xn19L0fAcbKpT9V5d75m7xZYkk30KeO/W2f36
9Z0ya6sqo2r6ni0rf7r7Xqbq6u60qhK45ZrUWdzcMbWQe4ULUvm6no3LDf/x
Yqb7SjlTPyDydDr/kHgmtGjez36+Zvtq/7Y5YkGfigVlaHHjzxuWXn6gOrtj
Ub/o/rsPS8ksvB1SH576fNK4/h8M2rj7LGWwtYx6fjp7q9JmS9TcW71gw4OE
h/Mmje0/8Ys/EqXbPLZ5yYd9e4b5F67duueYkUMHDht9/oHUqez8cbZze9qJ
ovantbP69//g81k/pevteS7ccD/h4dxPPh4wedqVx6niyT/3zCtdv27rRi22
X1MTKTvV8/9qh8SfZ/Ro0XXUKrL3gLzi5lHNynSevM65QYx39/gVCPlNzT+Y
LpYvFLT1tpHI0L1F5c/23H+a7iVM/mZY/3Kifzla/3pntv79Lfr3P61/j7n1
T6Z/rx4vlv6ZpOd+wye9sYBX7aadh/br5Fm4wMwdovamWyeWhyiKtOk+aMjA
Dm6FcP7OW2SMm/bx6PaNKrj5hw4aOW5Qv55f/yhpv44V3LpNF3sE0qg04mDN
ys31d/fNLh5S81RsSvLjhw/iH2v0cnjit0typH8R/5j+5eX0L5v177no37+0
/j2T/v2l9e/V0L+/Zf0bb7f+/Tf0782x/lnNkja7vGFsHs/IezbFZoqr5p1v
3EaJBW1b8c3gft0L52XTd94WP+o4wVg1tW9E+Xrjxn/csWmjad/vtl2za838
QX27OVKKOVnTzjdQYHCZat2ih3ZsHBQS2YXb38zSxgxrcofaXjbrn44v2lk+
rm9oRI2JkydFVQ2v894kbjLTvN+sbJ85uyzatNh79xOSUqTa6WKalvPeeFWq
xvHvPyzoW+emxJe0PRuW6jBpjd6gvBd3PzE51WZ7rKUou+u2je7oWpUt3O/b
4+LR96N7hZWt6SiI00NVv6iSirCKTTt0HdyzVdFCwT9flSZVb55YGqwo8m6P
ISMH9+gWPT5OIymBZfZ6No2MqN1xola8lcTfquQtFlC6Upe+wzo1CQqq0kUk
pKe2Lh7ct1dJ34I1Wr5vp39SRbevmufcSnqpLXTje0T6law6ZsLYOhV9y9cd
kCx+kSzlGVS6Ut8+Q1pU9gqs20skare3fRbapv/yL0d0HbdcTNKuuvu07VID
Tu3SpOPwlSQZK8y2h9B072D1Cq1jjKRNio9P5rxd+pcysln5ur0m3Ll7d87o
LrXajUrkjdytSZnes3eatelqwzNsu/9C/g39e3nWP5n+vRZ4Cda/DeM6unvX
vsJf+i861azb9zvxoHsNr3afbLYl2zK5tU/t923mvZifJ1Ru2/9pFoY7tUsW
/WjtOcpYpiK+C1KecYcXF8zDvAJCQgL9PANLrzv1kCeQDYBvi7wF9O81tP41
z8H697rQv9g3hv5Ju0Glv49blAuZvl2ifNd//rJUjQ6SvcmaoZP7RgXN2iNZ
6jQSQ7D2aVgyaugPjqv5gj7hacq9IjeW/C2S+lLlfHkGfrOXf3O/TkCRBUfj
xSO9RPfSOtb2mrlHSil+MsTsDgmqeOimRFTMCWdrBHivvihqcPOglqVZfrdS
YaE+6Fau0yiJquljWoYXq9Nh4OSP+pcLCv109SmeuXZ46zIsT9FSpcIU7sUa
RX8qlZ58so532fW/x4s0dNNX0YWKlz4tcrrY3SUCKx6+5VTQBfHY2j8qtGTz
kRqe14DWlQYtOSlWqnWEW89pO+2tJKl7fczuko56Jp6t7q9Yf8VI5quVC+Qd
PHef/TaLLjjywHbN+w19F5+y2zKdtmn0iQqcvTfWdhy3f2Yh7/LXbVZKw/Xy
CtcZB+JJuFEpv+sgW9PF7vIqGHpKTY/3T1c06JsYczKyZqOYZHWvdxVf/CRx
yGldm7434kcpf5PFNm/76PhSDCjRpFFUCX9fT/+QUd9syajBo6NlFC4uLsAK
hxx+YHtc9eO6RboWxbBA/4rVW6w6e4OcJq//vcjWPxn/Jf1bMbR92/4L+AnL
nD6NGvSeT5TauLTbusviy60VB2BPTvygKBd1Uyk94b8uHVK2SZdUC5m06Trx
vTHG1ipReMy6C+JXeik3wWiQhmx39812C61zPl6tSklMSE4xmF7w7nhZXnN5
C+jf62z9k+nfyxUz322xdkL7iFYfiwczetXp8LE0mWg1GQ1mgbTxbWvgV7sk
pmHgOvbuyQ31gtyDylbqM3rmbRVXhoLVYLKS7hFPKZmkJAKWerqWd7nD8YJE
ME3K7lHBI1ZKU6gak2SJ6lDL62s++StK7C/fFiyc198/wN3Dw9/Xt5AHLpYY
lKVbVMQHC/aRSfPw0ZPUdKVUtiG2eekiDTsPbhfpFxDZI8FiY57G3o1KvffZ
RkEwPH70JF2llpYYpl+sXTR/QfQLDvCuUqvV1t+k+t/et6BQkbx+TgUt4gW9
1zhi/GaJ+qq1eoNGqbVIM9e1vCoceigeGTQ6Q0ZHcHCheDmvp7u/r19Bd49l
vyWT/nw1LHvkUcZtdosKGfXjGalJ1PEixZ267aq03FGjsy3z09tbyXHvO2d0
rdf1I/EgPU2kgMKHbSt1n31YfPAiPSKOPJKeqPTb+8LdQg4lUOKhWcUi24tn
Pu9af8LcTQPalfp0k8TWpnWJ6sStf2aD2WqRutHYA/MLegUs2/2bSqe98csy
X3fFmvNi5ql9a5et2WPy3bhr/VuEBkR2jJNWNlm1alViUqIqIWHWgCa5sOqV
NHqBJkCZ/sn4r+ifpIhWDu/UvMdXtod3Tu+G9XuJ9M/YpEyxuYcTbMnu7fmi
WHjjB9zV9OmVIyq0irad55cYe1X3qNNvIf/8VJmL9M+zTOP7Mul7W0WmfzL9
e4Ppn22Hr+7W9rCSda/ev9O2crmtNyRmYLdWaTrX85m9/57TGVFMl45t79Io
vEyTAZKd0GZBJLUjJd/5e7aeX6UDcbZF02mtKnnPPyzNm3BFL639m3MgY8nZ
oyMLPSIaxajJrElPU2usFoteul7fo3n50esvOaopla2/07y890+S1TC9trtL
s7ErbDXs3Ti8z9yD5OTvRUg9U8crYsP5eL0y1fHDxD+joJ7Nyw9ZflKqm30r
Lqmv1PL1W3tJ7dxODw9nXG7SpKerNWaTic8yn6ntXX6/4zYrKuYe5OsVLSmd
6vrOO/zYKQN7e9b1cdz78UX9Qxv1caToXEPxwZJz4oNXzTNiF7dS6u7uL1W8
5JEkSjg0x6N6G53Elhc0rNe8QYPSX/0k0b8vuzbtMmrN0+zFprm0LrhUi2R7
nj3rKUZsvG29tPydIuVu27pZ660yRd6ZvO2a891RyjFFAd/dMQb+Q9MLEZn+
yfiv6B/f+jGkXdMeX9vOzO7VsHbnr0jigfUVVbtcS1elxVxqFObd+bM1tgRP
TvyQtzCuORujVaYkp0priC9vER801ylL9mq1uthb53ccPCKejN37VbHQd2Ok
8Z/FIs/5vn3yFtA/efL3LaZ/InvjD/iQTrUbdmjevNdEvklDCniXlpbOd+m6
T1l/TjCoVUaBTNoD29devCPePp1aOsK1VCNuozKmpCmfptQr1aIyTjtZIW/A
gv1ii+lXT+7qHd76oTSCNqamqQxJMS0z8lQpxZG4+ladwEK9pqxTmYzp92N3
7dn3SFK2+u5R4f3m7SOzNv7xk9SUNGnIro+JisBFhyXudPyHka5u5S/zrR/d
6of2mLlHyl3sBfgEqJByuqZnxN44224Iyb+/dIuqm1JBk9c6CornBXVtEj50
pWSys83s2HzPjG8V6hXZ49qjdGXSnSO//JIoFq+5WTujngblg7gdu/ckifee
framR5lFv0i3uWpKN/dSTWJ10gSqZMqLCinXdUKq0ZCYkMj3MltSn7bSeUGf
rrGQ5cEvfvndx64/YLaats4Y4eZX7lwKkfKUSP9235Z+B23MvpKFgw4l0pOD
X7tXb5ss3UZiv9ohIpP69oDEg7/s2rhl9AIDWRIePUlJTdFKxtVHrUu6vz9x
lai4Dq38BIuXPJlMhqsbiuVx/3LLOb1B//vGqZ75cP1FaYljakpSUlJKQsLt
Pu+WKBU1XOK7L8nxi0z/ZLxE+ic9tGvtfv9EWTi4bWt+bE2OmdCxSaBC4RUc
1HbcQj6isz3i6m/GtPcp4e1ZvEjHj+bwM9YjK2fVDPXyC/IPDgqb/N1Wkmzp
c4Mj28RJ2kcmf2+jvAX073W2/slbP1662Pa4XdkxM1eud2bvkrbLSYYt48N+
DUq5K3w83Yt7eXt7BoStPhkvvg3fTu4aGFzSxweDqtVbffqqdL3ufnTDTCnX
nHos8r8JPaL8g7wC/Pyq12l75NoTKaXeKaWXt2dgqdUnJFvZ3dNrG1UvhT6B
viFB742Ykyz1BvqPu0a6FnYPCQ729fEMiWgvreg23W1fM2zDBb41xPSwQ4WQ
j5ZJtC26eeVB3x4iaedyhvtWQfI6WHO/5HUww5Zl8553/+y6hvaCOo+Yk8T3
k3zQsdbYddKSbyPfN2tzgCMk3BzXvkFgsJePd4mWA2emcgPnvbPrG1YPEy/3
CwnqNGy2tGRPeaFmobyubj7BAX5V6rTZdS2R7MHO4s5sqRfp7+Xn4xMcvvuG
SDQf964f5uFlbyXp3iUee2rdgppBfr5+PoE1m6w/I/Fqc/LZZqVq778j0T9d
7KGqgRV/TabEI/NLRvXiG2Do2A8fubjkW3pcWku5ZEyXAq6Fg4KDA/18PAIy
2jPmzOYGVYPEaoZWrbuC/6BiA2z6bmKoV2CJgED/oCpTV5zgP8e96Iali6NP
eOmynQd/Hss3M1tfnINseeuHjP+G/tnEOeqHQafR6J4GFFYnJyartfwwI+6O
7bxWnZqUmKRUS4oig94JusSkBJVab0tgNRuVKo3M/N5aeSmOX/4Z/ZMdv8iO
X16eCGaVSvU0FodgVaWlJCUnp6Wlp6aIB0+XPWtUysTkZJtu5W9H1pR6e0q1
KjkxMWMekjvNy5anWF4G37AmJyUlqxzzrYJeq0pJSbZJSoqSmyitGrXSaJ+i
Nek16UpJpWvVKq0hcyiNbDFH7BXIoSCdRm3bgPz0avviH40yKTFZZb/cmv1y
a+rZ+v7lN12QZpktTsns6+eMyWK/k5LK65zTvdvEqEtISDQ6KplRedtWXLNK
qTJLSwsNSrU2486tJqUyzXa5Ua9N5c0k/svcnsaExARDxi/p6NnUiQmJavsv
l1GlpCSlKsPZ2QvkfiRb/2T8t/QvZxFfIftuJqvD0zr/Inu0RIvlqTd4q1Um
fbLIbp9lt89vuPXvb4jgHE9MsPzFLlHBKWCmYP3rZTNWp+/F4+fTukKW/59H
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
w3t9a+rEqKlxc/clpkjoXMkr+uFVyuyZY8MjZyVdy0a0fZCJbpzcMVMpT+b9
4mNSLnxM3Owlb4opG/jst+nT+rRvCO1cIifGRoSOWL7rNJVI8Pb2lAnKBSFJ
SeaqxQsffhTShkb44f6ipZtzSrFpKM65OycuPHRMXNLt9/TNnlw8tK5Jk+eK
0a+wlPqbmRRv7tOrvFKb/K92Sf8pqcT+fQ78o9m/avBPwf5pMOyfDsP+6X8h
+/f34N/fY/9qgn+savCPZv90GfbPkGH/qsA/mv2j4Z+j5GvZv5hq7N+v1di/
r4F/Pz77R4OcGye2rT+YhBjIl7R/484zVCOgUzuWjY6csHj1xvQcLqqAJtJL
f+wYEx7+85ylWXkcko0sYdfyMKWUGP4Vpra29k16lLlzyfRR0+elF/JJDrRJ
4vZvZb40AZNXIsYFnHgkPjR01JxlR7jyqgmGdWs8N+FNpeqWverexPZwOu4s
np+cr2vc8C4uv2xYR6/xO+9Vuq/Cm21sfG+UkA95N530tX45nk5/lXR0OVXQ
XKog+S8mPH5g64N33LSTG0LDwhMu4WT0pJyi7NR5s6aHjx57MCENydGavJ5z
449waC6R/2b3mgPvcrNXzYoNj/v1YR6+zct/bB43apiztZ5/j2FTJ0ZHxEy5
8w4b61M745XbkwGKpcf2LgsPHz1v2bESAZPn2gNvc9+tnBU7Ztb89DxelV9N
8vxoI59Oz3Bifki3Jr+cqdRKgowz9pYu516RLjX7rJG63v77GIV+/8jENcI/
BfunybB/9Rj2Txn+sZkpfxZKs/7saod/NPtXHf75VYN/7WuCf90rw7++3xr+
Ta8F/s37avj3N9i/I9+a/Uv5G+zfN4V/UgmxCaeXGLFNmrZqHxY1rqUdO2A4
zrz4/smuPXtHTJ4+NXQwW6/BlquZ+OTzpAA3yw79In6eGeFpyh5CnL/clzd+
jpveqREb+g3E75YY/3mdusMe1u8VEhk1po+xntnKo9ipWvjgtHKeW6+9JbXg
xYU0MXFuETV96uA+3deduIfKsxZMm9KnQ0MjaycC/4bT8K8062bczIqCJNgG
crq41h+6JIm+nbNLhxl6dKNMieDF5VZuLr2HjY0dN8zawn3Ln9SbLuztbTJk
USKVjM/lU4NKKXErvD4bb+jgl5pZWPAh+13OB75AFUb528gXs3+1w786SvBP
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
j0sJjyifaCmXW0ZUQLScyxUSFREVE5UwKlVSGVaeQlEl5StpaWUtq6yCalpe
WYXVVFRNxbWopJpKa1Cesso+pXyFohq0tJqWVVNBZS2vpsJqKqqm4moqqabS
2lVWk6pEJSqpWYRCIYfD4dYivM9T/mdo6Zdo2Wer4Eu0/EtU+HdV9LdU/C2U
7sqUu7W/rxyOTCj86wdIJSpRiUpUohKVqEQlKlGJSr6vyMiuF3gTCEakzN+v
VGbx3n9EpV+iNWdSC0v2H1GVqEQl30los/kJkan06xT97+q/vThdJSpRiUpU
ohKVqEQlKvkGokK1P5ZQY9hSfimPy+Nx+XLllTJaRlTA41NaTlQo11JKRUoq
5JUpazlPoKyCCi2vomVyFVbR0hpUxPzFyv9L5Ytp5SlraW0q4ZUpqaCaliup
sLKKqqlYwq+iEklpZS2rrAIppVKFliupUFZJRdVUXFklOCikssqkn6G18J0q
Ucn/jHzXx7XGuX+fOeXvM2f9/RMT/77tlL+vnNFX2xw8SS1Ty5nZ5VjRf1Y5
HPSN5/59YgvPv5/TJ7bWVMkPL/Tvzufx27i3djdy9zZt7AV9vcwDvKw6eNp2
87Tv5+kyzMN9jIfXBI9GMzya/OLebJF7i+Xu/uvcW29xb/e7W+Bu1857Xbrv
c+61xyl4l8OAHfZDtjQYvt5u1Crb0ctsxv5mHTXfasIvVpNmW06Ns4ydYTkj
1jJuiuXsiZZzx1vOi7aaP85qYYTVonCrJaFWy0ZarRhutXKo1eohVmsHWa0f
YL2hr/XGYOvNfay39LLe2sN6ezebHV1sdnay2RVos7ujzZ72Nnvb2u5vbXsw
wO6gf4M/Wtof9nM42tzpWDOX475uJ5p6nGzifdrHJ6FRkzONmp1t2CLJu2WS
V6vznm0ueLS/6N7xkltgsmuny85drzj1uOrY+5pD8HX7fqn2A1PtQ27Yj7hh
H3rTPiLNYVyaQ0ya4+RbjrG3nOJuOc257TzvtvPC2y5L7rguv+u6+q7b+ntu
m+65bbvnvvO++94H7oceuB956HH8oefph15nHzU8/8jn4uOmfz5udiXdLyW9
VWp62xvpgWlPu95+2vPus+D7zwY8fD7k8fPhT16EPnsx5sWLyIyXMa9fTsrK
iH2bEZedMef9q3kfXy3Me72k4PWKosw1JZkbuFmbeVnb+W92lb3dJ3h7qPzt
EeG746LsU+LsRHHOOcn7S5IPlyUfr0o+pkpzb0nz7krzH8ry02UFz2SFL1Hh
a1T0BhVno5L3qOQDKvmISnIRJw9x8hGX1gLEK0T8IsQvkWsZBwn4KgRYXWrb
i1hlS/+fSJWVv2w221Rp5a81hDZk5W8DpZW/Lkorf70g9GZW/jaGsClZ+duc
qB9Z+RtAVv7Sy37bkWW/HcnKX3rZb1cIu0HYg6z8VSz77Qthf7Lyt8qy3+HM
st8wZtlvBISRzJrfaLLmdyKz5rfGBb+K1b6/ktW+9FLfxRAuIet86UW+q8jy
3nVkeS+9tncLWdW7g1nPu4es5D1IFvDSS3dPkOW6iWSJ7gUIL5EFuSlk+W0a
WWn7gKyofQrhSwgzIXwH4UcICyDkQlgOoQRCGYTov6ZsNrKwQJqaiKz8Rf/w
yl+Fualhc/ha0n9OthKxqLy8nBrd0IF1ZDKpSCQU4hNC6rxY8tcRfFTy3xf5
xi9cnpuhiwHLgM0yN2FZm7AcjdU8jTV8jbXbGOl1NTLoZ2Q8zMg0wtBioqHN
DMMGcw0dfjNwiTdwX6PfcEP9xpv0mm3W9dtYr9U6nXartYPitbou0ugxT73P
rDr9p/80aIrasIlgZDQIHccKj2BFjGaNC2XFDGdNGAomDVabMhBM6w9mBIO4
XmB2dzC3K5jXCcwPAgs7qC1q99Pi1mpLA35a5v9TvF+dFc3rrPKts7qJ+lof
9XUN1dd7qW/0UN/kprHFRWObk+Z2R60d9to7G+jssq23x1pvr5XBPkujAxbs
g+Zmf5haHDa1PsK2O2pif8zY6YSR60lDj1MGXgn6Dc/U90nUbZpUr/m5ui0v
6LS6qN3mknb7ZO1Oydrd/tTudVm73xXtgVd0Qq7UHXm1bvjVepEp9can6E66
pjvtml7c9fpzrtefn6q/KFV/2Q39lTcM1t402HTTYHua4a40o723jA/eMjly
Gx6/bXb6jmXiHZukuw3O33W6dM/tz3veV+43TXnQ4vqDgBsP2qU9DLzzsOu9
R70ePOr7+PGAJ4+HPEsf+SI9/NWTyMwn4988nfTuaWzOs7gPz+bmPZ9f8Hxx
0Yv4khcrOS/X8TI28zO2l77aVfZ6r+D1QUHm4fKs48I3p4Vvz4renRO9uyTO
virOSZW8T5N+uCv9+ED2MV2W+wzlvUT5r1H+G5T/FhW8QwXZqDAHFb5HRe9R
8QdU/BEV56ISAghLChCnAHGLUCnnR4V/ckv4GXdXW8ovaZdKaSVisZBYU2Jj
RXTuYrGItq6iilCYOAKmUCi3uhUpRYqU4mp1+Lof67N+a5lEImH6BeVLP7c9
q5VJdS4iRcw5quuhM5dKxJUjiuLYcfi2y+k/lMivotuzhtYjvZjymW8ln973
TxH743P2/asS+ffTsT+UQ781Z0K/KTb9a0v2/aM3/QtiAn90ZeK+9VaK+zaA
xH1TRP0YTnb8G8Xs+Bdeebs/Rbg3xV5/05ld/hRR3ugIv4rN/ZaRbf3oPf3W
kt38NpJ9/LaR7ft2Mbv2HSQ79R0jW/MlkO34zpHoG1fJJns3yX5691msdBbr
OYv1msV6x2J9ZLGKWCw+iyVksaQsFvrPKtn3D32jff/E5aVcflnN30klX/SA
C8tKS8swMykTC4sKcdBxbqlA6XtZlfCMShEulRP9mJ3C/yuRs39cnrepJ5vF
tlCzMQf25upu5lo+ZnX9zOp3MDPqYcoeaGo+0tRqnKntZOgQB53mQdfFbM8V
7IZrTZpsNG62xbjlFqNWmw3abdAPXFu/ywrdHkvq9Zlft/9cnUFx2kNjtUZO
1gyboBkeozF2nMa4CI2YcI0JoRqTRmhOGaY5LURz+iDNuP6as/tqzu2tOa+H
5vxumgu7aC7qpLUkUGtpe634tlrL22ivaKW9yl97jZ/O2uY66311NjTR2dhY
Z3MjnS1edbd51N3uXm+Hq+5Ol/q7nPX3OBjutTfe34B9wM70oK3FIRvrw9a2
R6zsj1o6HbNwOW7uftLM6xRseJrtc8akSaJxs7NGLc4Z+p/Xb32xfrtLeh2S
9YKS9br9qdfrsl7fy3oDr9QPuaI/4qp+2FWDsSkG0SmGE68ZTr1mNP2a0azr
xvNSTRammiy5YbL8hsnqG+z1N9lb0uCONLj7lum+W2aHbpkfvW154o51wh27
s3cdzt11vnDXPfme9+V7Ta7eb3HtQUDqg3Y3HwTeetjlzsOe9x8FP3g08PHj
IU8eD3+aHvYifeyrJ9Gvn0zMejr17dMZOc9mf3g2L/f5b/nPlxa+WFH8YnXJ
yw3cl1t4GTv4r3aXvtpX9vpQWeYRQdaJ8jcJ5W+ShG/PC98li+Tw75bk/V3p
hwdSCv59fCbLfYnyKPiXVQH/CnIqEGARjQDzUEk+UQoBFv7A8I8SsfBzx+ZM
ShrhSHgcnljJKNINVMbj5OcXFBWXCMWfGh3XPCqv+ln6uSn//QBoFfL57Vkh
NcaAo5Ab078oOpra7rOGYMKk9SpFBP7W3dVXRv0wV4r6YUuiftgzUT+cK0f9
8AagYeWoH4qQH/4k6kdrJuRHewA6kqgfnZiQH91IyI+eJORHcLWQHyEADCUh
PxTxPkYz8T7GVg72MbFypA9FmI/ZSgE+FiiF9qDjeqwgET3WklgedCCPrSR+
x04SuWMfCdhxiMTpOE4Cc5whwTjOk9AbV0mUjTQSTeM+AOkAPAfgNQBvAfgA
QCEAPADKAZACgP5TqqaGgZ+GBv5Lon58PfyTkBwurInw7RFRjsgwkRooEsAn
lsiQrHBsYwMj32g+9VmK3z4MBqXUOElMaDplXCgt5VMwT7Y8LHjo1N3U56K7
J7xdbA3qaTUbFEtyljDWpfTs4Q1jxkTMjFt461Ue9bn49e35s6ZER8WMHx8d
Nipy95n7pCAVB/i/LQr2zwt6mLBMzIG1KauB2U+uppqNTHVamOq2hwbdockA
aDoCWkaybSazG8xkO85juywycV9u4r3WuPFGI9/Nhn5bDAI26bddr9dxjW7n
5fW6L9bpPV+73xytgTM1Q6ZpjJisETpePTxaPSJSPXKMevRo9Qmj1CcNV58y
VGPaEI3pAzXi+mnMCtaY00tjXneN+V01FnTW+C1IY3FHzaXtNJe10VzeWmtF
gNbKllqrW2ivaaa9rqn2+sbaG3y0N3lrb/bU2equs9217g6Xer876+5y1Ntt
r7+3geE+O+P9tvCgjfkhK8s/LG2OWDQ4au5wzMz5uKnbCehxiu192qRRgnHj
RKOmZw2aJ+m3PF+/1QW9Nhd121/SDUzW7fqnbs8/dYMv6w64ojfkit7wK/VD
r9aPuKoflaI/McVgyjWD6dcMf75u9Euq0YJU4yWpxvE3jFfdMFl/02RzmsmO
NPbuNLjvFjx0y+zobfMTd6wS7tgm3rFPuut04a7bpXtef95rfOV+85QH/tcf
tLnxoGPaw853Hva4/6jPg0cDHj0e/OTxsKfpoS/SI149iaLg35unUwj8m0XB
v7znCyn4V/RiOQX/OC/XczMw/Cul4N9rCv4dFDDwT/jmrPDdeVEF/CPs3wfC
/lHwL68a/KvAfpR+xPCvJE+O/Sjl/s/DP8oMKttACR3HgtjJlycW/sSqs+TM
G0QbUnkCMc2zSenYtxKllIlvEdlLERXf7uTc8txrajAuLhXgcTSBe7Llk/oa
GBjVZ1tuu0znKVUUivMUEeOMT4iT9q+NiYqKiYmJihwzYeryd9gql+xb82t0
dHTE2LHLj51jxvmSpANrx8dE45TjcMpsykyLPm5dOCeGShkZuXTnUQ4ZuNM/
kaIgxQ8mkeDbpc8rM2kymaS6H6fq5TKqp5FQJoK4fUQ0fqLaTyYWXEk8df3p
R6p1ygTlsiqtVLU9a81TKBJJpfin4WbdnjkjLvlpPrmg9I8d8VeeFlKHVw7v
PpR4n/wKUhrRFb5ImRQVPi6aarwoqq0mTJ116uYr6nzi3tUx0VHjx08IDxu5
YvcZxGDCc0fiQ8NHx+8/RbMb3/A5/nTMX5r0+8yYv9Yk2Icdi2VfjffzILyf
d+28n39l3o+O96HM+3Un1F8vhvdTDvg7hAn2oYj2G8ZE+42oHOpXEeZjqlKM
jzgmwu8vDPW3kFB/i0lg33gS0YOO57uOBPLYREJ4bGfCduwl0ToOkSAdx0lU
jgQSieM8ibtRG/v3lmH/eP9l9q9OHfyXxPz9VvAvcWmIU9uhlK2RisrlXzCk
XHri3u2HUyXkTA1EHW3HlMZI60K79R63jToo5xRRb+/Z1aHuQSHY4EiFxFAW
TOrcELq3GDttRuiQ3hHz1lGnXif8xlLTHjRmwsTx40aNiNidcA+p4N//vlSH
f2YU/Kvjaobhn5+pXgdTwx4Y/pmNpOAfpOCffZwc/nmskMO/ZluMMPzbrN92
Q30K/nVZUa/H4rq95+v0m6M9aKZWyDRNDP8maNDwb1wEA/9GaFTAv/4Y/s2l
4F8PjfndNBZ20VgUpLmEgn/tNZe11VzeRmtFK62V/lqr/bTXNtde56u9oYn2
Rgr+NdTe4qWzzUNnuxuGfzsp+OdUf4+9wd4GRvvsTA7Q8M/a6g8rmyOWDY5a
OB4zdz5u5nbC1JPAP58E4yaJRr5nDZufk8O/tpd02yfrBtHw77IC/tUffrV+
2FX9iBT96BQDAv8MKfg3C8M/44UM/FtN4N+WNDYD/0wJ/LNQwL9zDPy7fK/x
1fvNrz3wT33Q9iaGf10I/Aum4N/jz4Z/CvaPgX8V7B8N/5TZP6ky+1cb/Cv8
MeGfgi+i/RdS5qOYdpYI321btflBtoB8hWpkiKS02cQpNz3A2AtnJCu60cLE
9dSrCqZLgnOWcXmlgryXXZuaLEnIoE6KJNU4KMrC4nOCIa0tzJt2mzltUnh4
2IQp8W/xrt4ZrSxYTXuMnjMtwtxQp9u0jSQ9f6i/uaF7+9jYKWPCw8ZPWZZN
dQUlNz3VNNsOjJgZO7a5s4mjb+QHnGdVNym9RVHVBpE7Vat6d6rVs+YZjFKm
ExnQkr3ycrHivBxDVm/PqlWqnif+IbIuUhiBFRi2CicX5XZuqPPzoWfU4c/d
WnQevQknEspDz9DwLyo6JnJc9LQJo/UAK2bHLep8fz8zqj3jYqeEjhyxem8i
/cPsmB5s6uwzdcYULyv91hHLSYW+mRdYGf6pq6srx3pThn+0z5fCfgYM/DMh
Pl8zEuuNhn+KWG80/HOqFuvNm8R68yGx3nxJrLfmJNYbDf9aM/CvPQP/OjHw
rxsD/5TdvjT8G8zAvxoDvY0l8C+KgX8TleBfbGXP79xq8E8R021FNc/vViX4
t68a/DtTDf6l1QL/Cv/j8E9d/ZvDv7Pxw907DOORM4e3LFyyM4E6KHt7Z8qE
cVPj5u5LTMEb9xOzdvv0kbN/Pn549dSoUaPXn0lGZK4G9bf0w5P5sdOmzZjc
xs1tUOxehL3AGPTd3j3Ru3NIObZN+OPJRSF12U2eK8afwlLqb2ZSvLlPr3Kl
Wqmcvz+A1Ab/5OyfXntIwz/TkXL2TwH/3Bn450vDv01V4F9l9m8Cw/5F1MT+
9WfYvx6E/euC2b8lNPvXthL7t5Zh/+Twz1Nnm3sl+Mewfyb7FfBPzv45ytm/
CvjXmIZ/SX8N/z6T/dtSwf5VhX9JSvDvCoF/1+Xw7++wfyUv11eGf1XZv+rw
7y/Yvx8R/tEg58aJbesPJiEG8iXt37jzzAPq4NSOZaMjJyxevTE9h4sqoIn0
0h87xoSH/zxnaVYeh2QjS9i1PEwpJYZ/hamtrX2THmXuXDJ91PR56YV8kgNt
ELn9W5kvTcCUlIhxASceiQ8NHTVn2RGuvGqCYd0az014U6m6Za+6N7E9nI5N
/fOT83WNG97F5ZcN6+g1fue9SvdVeLONje+NEvIh76aTvtYvx9Ppr5KOLqcK
mksVJP/FhMcPbH3wjpt2ckNoWHjCJZyMnidUlJ06b9b08NFjDyakITlak9dz
bvwRDs0l8t/sXnPgXW72qlmx4XG/PszDt3n5j83jRg1zttbz7zFs6sToiJgp
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
DIlKz53Ye+9VFpUkdesETZcOhKMSFhZzKlIKODwKgBRfb6hlsyaJghOC3bMH
mbv3yMbjYmFRMbc8P6ObPE8uhxqL814E2OoOn7OPKxKWvM08febse2xCBUOC
3ENXnUXi0pwPH4sKi/GgXZAR5AE3XMLY6eqWiZpG3g/I0o/BbZxClmLaSigU
035PWeENP7ZHYhYGQmRuNkFA3Oe4oNl7FQXlkIIGBbpH/44pO9pfQ+89M6O7
k5lvSPr7Ek7+q+QLF/Ko4vnP/eX1LOe8yzqZcCafuveSND8Ttw0X8G3umjPY
2CUws4ymCGTjghy8Bs0sEpbn5eaRtcySoopWuiMTlPAlSPLugpWOcez+c2Kp
6MiiCUZWXrcLEeKkUvAv4SX+HUozzjrq2V3MQx/PLzFu3qsA30ZeqD+FgNTX
ncM4eOGgjt3C1pQjSe77jwVFRUKxlN7lek7vRq1G4JW8dM9INQu3uCAvrzA3
9+XItg1cA6MxuCx+3MbRMGzRH0KpaP+cwdYevej10d/qUVY5f1Xw73vCvwtr
x/p2DyezOHJHNXXxGzSPOkrdNduGbWhhYWZkAs1MDFsNnUWd3D9tcL8I2vmL
1kb26hGOg4/wXl7t0dFZV99o0JRFi2NGh0/GpHrKjp9toaGFuakx2xQaG7QP
m0uv903esdTPyczKztreznn2+iPUmcxzK+19e2ZhO6UCfz+OqJZ+qJZ+/NDw
D9Er1x6dXPrTT3XiT+NFcJjYEmaHtnMxNrVgGxuamZuzbZx3X8+h3oZ1swfZ
2jtaWEC7Zq1333iMry97G9a+Uso9qR8obDEzJMjazszGyqp5QK/k9I84pUAp
pZk529Zldwrmyl7f2NuhuQu0sLV0sOs/YXkBtuWCaYN8NfWMHeztLS3YDh59
HvGoar3u4+d84C5ZGiLKDm7oMHkbhm1hXRqPXXcR4ZXLUppkk+FdB/2S8K6D
iN5whd49723avvZMQQMmLM8nTtHRfVvG7sMTuYVkwS+9eFaW+3x6n3a29mYW
5g26RSwtIgTnm7T97Zs7U5dbOdj1i4nHU/Y4d/10tTSNLOxtrJoE9DydnoeY
YGdZNw+39rU2s7KwsHdPeEoBzQ8j2jibmDGthO8d49jUfWv87KwsrSxs/QL3
38S4WlyQ1tnFP+kV7sfKMi82tW10pQDlJa92DBpOFsCgy1smq6lpb72K51Ju
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
/QMAAICfhVSocm9dvvesuOjlzYXzF6Xcfip9SCgk6r68k+tGeM6R6h/xdS7i
Zd44Fuy/bKl/0PVXZZItEK6IVhVHhQQuXeZ/4eYzYl2k/Oz+KxmvHgQGxZAY
jOOJW/c/KJBslJt1k1h9iX/QjbSP0ie6ETunh7L5e3bTSxLyWPhtxf0E9ZHe
3DYvFez8/b1op3+S9q9F/wa26J+cRP+I9q9V/yYT+ne9Rf9Wf0v/oPb6R7R/
uP5FPmhq/9rrn8Y0Sfv3bf0j2r+2+mcv0b9RLfpHtH9z27d/yy2pHdq/jd9u
/2Ja2r9W/Wtt/w5J2r8j0vbPiGj/zvx4+zesTfv3tf61tH8d9Y/Wqf5J27/P
bdu/sO+1fy36R7R/d0D7BwAAAL8FAh4hb8fXTftDVsnW1Wf1qnnayt23ncrH
B3kcQsgyjq429pC0fwLihl5829PL22/D5o2LZqr00j388jM+yPqSOdrMYOqc
VWv9Z3qPX/AW1zckewTU3cTNw1xPd8Bwm/FjRnbTcC4TYpy3tz28vJcHbA5Y
NBPuNfDPlyT8ebxHKM+KuYtvh4kwBUJiHzS+XH4vod9g24wKCrm2uopUy+SA
qxv/ZvwN/ZNrp38/2v59U/+2dK5/32///lr/vm7/JPrX0v6t/6v2D9e/ne30
j4Hr359S/Wtu/45K2r+THdo//b9q/4y+3f45S9q/TvSv8/avSf9WM77Z/u3p
vP37Ef0D7R8AAAD8Ggh4hGtdDJkKazu+RYmRe1HTh45eiEuhiEPczzqG65+k
/RN3FLANHpbjVqXiC1UP93TpP/QNuWmch3+is4uHy8pE3Hz3atd8JcMZdMob
C1WrdHK7+i7Azcxz3VkMo1lr9wg4k0e8mKYfAxIv6fOT/X8oQmo6gwcP0FIZ
YHgmo1oyARSAvw3/nf5d//X07xvt3ypJ+7fuO+3fN/UPadW/4S36Rz/xrfbv
L/Tv2+1f5/r33favo/511v4B/QMAAIDfFQGXcK2jKydNWJRM3BVjJde2adh7
0/A7fCZ+k3l09XD32UQPKGn/hA2lfhNtVHv1U9dWk4cU54dfJLbCp+5ePk5V
WdneY/rBO9nECDXbtLfS3TrxxXXe45cdEtMyhvazyMa3Ry1d4mWj1htfXV0e
kp8TcR3DyNaaPTaeI3YNcwgXFfO4xBOV30tQ0rPPI6EIpaGeTOHyhT/nHxDg
P+Vf1/5Zf7P960T/LH5E/xid6R9o/wAAAADwf420/Tu2evL4+YnSkazUlUau
8/mEhxG/wSN++zduHuFeQqL9273YBTab8YmGf2iLt08f67v2eMumkMr3RxI3
asDK8XcqMFHJiB69b1YLrwVOdZ23F0OyDfpYlGHYAT8X5ZEzyunE6pHTx3qt
OoGvONu0j8Ni4nCPtseM4PqnMnRsJZC+3xagf0D/gP4BAADAr4n0t38n10+1
dQ2sE2Hkd0+sB8Mrkh7gg0x6I0eI3U9ebOA8mYSIG8lUfDB00ogh41cjGJZ+
LXFgt27TAs/ig59znt5++pDCFmE8kouR8qKDWRhWOlSxx60a0eUNk8YQ+pc1
6A+zcgyLmjJi0LjVKLF6gm63blM3ncFXzz+zDYK6Rhy4y2KxKz7k3Xj4FB+s
uBvbV8/5o6RxFIJ9vr8hYOcv2PkL9A8AAAB+TQSSnaoXw+ZAkIzW4EGDtQct
jTyGSB5KP71VR7mvhoaakjKs2r+v84Jw/JO6OuucyxBYqZ+qx+Rpi8a6+Qef
xmdW51x2dxqhoakDa2v6bNpRjw8xCuw1de7VCG+Fz/NZcViM5FkNcHrDw8j5
F50Gq0hWn75ojOuqsHOSpxI/O77TVk9Na6D2oIH64fsu40MVD3YPspz4mYcv
Avn7LfnXtX/g0A/Q/gEAAMC/hOb2b7r7jO2IWESjSg7/kHwmC7hMcmMjhUrD
wRfoCKvpvH18TmNDo2RJyGQ1n5pFLMTnUFFm0z2xEGUw+CJ8LovJ5mHEXbTp
wI2vVm86a6CY3dhYj6BNVxgRCXgMhAnM7/cFnPgFnPjl+yd+AfoHAAAAPwu+
5NCPA4vc7Hx2EPeJa3V8z7nEzY+K25yCWdxmFZFQ+J0LB3eyuuS+UCho3cJ3
XwDgd6GD/oHTPoPTPoP2DwAAAH4RpBb2+u75U5dfYc3ncG5G3IG2DzQvdJzd
cY649c/vr968BezraYDfEXDRN3DRN9D+AQAAwC9L69U0gG4B/jla9G+wjlEP
+f5KXbX7dxms2sVIS9FSV9HZUGGCscJMM4Ul1vLr7OVDXeSi3eT2jJc96C17
YorshZkyN+bL3Fsi88hf5skamScbZZ4EyzzcInMvSuZ2vMz13TKX98qcPyh7
+pjsiVNyR84pHLyouO9q1z03u++880fUg15bHvcJftYv4FX/1Rkqy3JUFxRo
zC7UmlasM7l0oPe7wV4f9MeVDfX8NNzjk4l7+Ui3CkvXzzZjv9iNqXR0qXJx
qR7jTHJ3rB0naf8m2dVPtmuYOqpxhm3jbBvyXBvKAhui/VtiTV1mLWn/rGir
rGhrrGjrrCTtnyV9syUj2JIRasEIt0C2WCDbLIj2L8ocjTGXtH9mkvZvJJJk
iiSbMvaaSNq/EUT7l2osaf+G004Mp50yop0ZRjs3lHphKPWioaT9M6BcN6Dc
1Kfc1iff0Sff0yc/MCA/NCQ/Hkp+YiRp/0zIL0ZSXlpQXlkR7V/GKEqmAyW7
Q/s3TtL+eVOLfCTt3xRa6XRJ+zeHVjZP0v4tlrR//kT79wXXv43N7d82hBQl
0b9Eov2r+7vtX9ZX7d9bPhPoHwAAAPxkREJip+/PfhWAfxVN+oegOmp6ClDv
nnJqvWV0lGT1VWVMtSH7wZCHITTVGFpoDq22gYIdoMgx0C53aP8E6LgPdH4a
dH0OdHch9NAPerwSerIeerwZehgO3d0B3YqFriZCF5OhswegU0eg4yeh1LPQ
gQvQ3iuyu2/Ix91W3HG/W/ijHoHPeq572ds/o+/iHKW5+SrTC1UnF6t7v9Wc
8F7H84Ou28chrp8Mxn4aNqbcePRnU5cvFs6V1k5VoxyqHRxITvY1Y0bVutnW
jbOpn2Dd4G3d6GvVONWSPN2CMsucMseCMs+cstCMuticutSM5jeSvsKMttKM
vtqMvnYkY4MpY6MpEjiSEWSKhJigYSboFlPmNhPmjhHMKBNmzAhmnDFzpzGa
OBzdPRzdY4QkGzH2DkP+HMo4MJRxyJBx2JBxxIB+zIB2Qp9+So92Ro92fgj1
wmDapcHUK4Mo1wZRbuhSbumSb+uS7+qS7w8iPxhMfqRHfqxPfmJIfjaM8tyY
+tKE8sqMkmZBSbeiZNhSsuwo2Q7UXCdangstfyytwI322pNWOJ5W5EUt8aa9
9aGXTqa/n0b/MIP+cTb901x6+Xx6xWLGZz/6F39G5Rqkcj1StQmtDkFJEWjN
dmZNDLN2J6tuN6t+L6v+ALshld14gkM+zaGc51Auc6nXubTbXNo9Hv0hj/6Y
x3jKY7zgM17xkXQ+kslHs/ko0f4JmIUCJmj/AAAAAAD4dyLVPybKtDC1G6Bm
qK810kDTykjTwUTDzVLDZ5T6HCd1v7HqAR5qERPVYn1Vk6erHp6temq+6qUl
qjeXww/XwM8C4Feb4fQwOH0bnB4Nv0qAnyfBj/+E7x+C7xyDb5yGr15QvXRF
9fwN9dO3NI7f00p9pL3/6YCkF7o704ZEZ+ptzTEIKRi2sdBobYnxincmSz+M
XPTJfH6F1dzPtrMq7WZWOc6ocplRPWYayW1qjefUWq8pdd6+9b6+DVN8GqdP
Is/ypsydSFngRV00gbZkPN1vHH2FJ2OVJ7LGE1nniWzwQDZ6IIEeaJA7GuKO
hrmjEe7MLe7Mbe7MHe6sKHdWjBsrzo29042d6MbZ7crZ48pJduXsG8vZP5Zz
cAz70Bh26mj2kdGsYy6sE86sk86s087Ms07Mc07MC47Mi47oZQf0qj163R65
aYfcskPujELu2SIPbJGHtshjW8ZTW8YzW8YLW8bLUYw0e0a6AyPDiZHpwsga
g+S4IrkeSJ4nkj8eKZiIvPFBCn2RoilI8TSkZAbydhZSOgd5Nx95vxApW4R+
XIx+WoZWLEc/+6NfVqNVa9Gq9czqjUxSELMmlFkbwardxqqLZNfHsRsS2Y17
OI37OOQDXHIql3KcSz3No53n0S/z6df4jJt8xl0B8pCPPBGgz4XoKwEzXcDM
FDKzhaxcIStfyHotZBcK2cUi9lsR572IU0aE+0nErwT6BwAAAADAvw9cAplM
JoqgKIrfSsNiEmHjYSEcFsKVhMcmwm+OgNMcbpvwWsPnt4kA4QnQlnDxCIlw
2oQtYnYWFquTsImIO4Tz7XC/Hd73wyTC/24EPxChNKzvht0uopZwOgu3fXjt
IsbDbxNBZxF+HawpotYAAAAAAAAAAAAAAAAAAAB+c8Ri4nw/4pb8VLDfNNjP
CgAAAAAAAAAAAAAAAADALw/oMH4ebX771x58UBqWNCwibBazJZx2YbUNlwi7
TTjtw20TXlPYLeG3C6clgtZwWyIkwmsKr0P4X0XwVYRCvpC4lS50HlG7CL4T
cVOEfzOiv5nmn+uJ/qP8cBULAAAAgN+EH//U/juf7+AL4d+HuPnIX7Phlloq
A3S19XR19AcNHjrYwGiI8Qh9czMDWytDR9uhY+yHeToZeY8ePtnVeIaHyZxx
pgu8zJZ4W6zwsV7la7vW126Dr+NGn9GBk1yDvMcFe00MHT8pbNyUcI/pWzxm
b/OYv91j8Q6PZTs8/SM910SOD4icsDlqYmiU95aoSZFRPrFRvglRvknRk/dG
T90fPe1Q9Iyj0bNPRM89Fb3gbMzi8zHLLsYsvxKz6nrsupuxAXdiA+/FBj2M
DX0cF/EsbvvLuKi0+JiM+PjM+MTsnUk5CXtzE/fn7TqYtys1f8+xgqQTBcmn
C1LOvd578fW+y6//vPZm/803B+4UHrxfeOhR4eGnRakvio+kFR/NLDmWU3I8
r+REQcnJNyWnikrOFBefKyk+X1p04V3RpfdFV8oKr3wsvPap8EbFm5uf39z+
8uZO5et7Va8fVBc8rCl4VFvwuC7/aX3+88a8l+S8V5S8NGpuOi03k56bxcjN
YeTlInl5SF4+kl+A5L9G8guRgiKkoBh5XYK8fou+KUXfvEfffEALy9DCj2jR
J7SoAi36jBZ/YRZXMourmCXVzBISs6SGWVLHfFvPLG1gvmtkviOz3lNYHyis
MiqrjMb6RGeV01kVDPZnBvsLwq5E2VVMItUsTg2bSC2HU8/lNHA5jTxuI59L
xiPgUgRcqoBLE/BoQh6dCJ8hCSIJKhQwRUK2SAj+kwcAAIDfih//0P7PP95b
dPBHNiEU8LlcLo/Hk14yTiwW8fk8HjHAw8fBWQ3/90j/7SEIqtlfRxZS6Cr3
Rxf5nt269+neS6lHf5WeGuq9dLV7G+j2MdbrZ26oZGvU39FEeYwZ7G6h6mWt
7mOrNc1uwCx73bkOQxbYGyyyM1oyysTP1mKFtY2/pd1KC6fV5mPWmLmvMxu/
wWxSgNnkAPPpG83nbLRcuNFq2SablZts124atXGTXdAm+4hNDtsDHaMDneMD
XRIDxyZtdtu32XP/Zq9DQZNSgyYfC5p2MmjWmeB554MXXgpeciXY73qw/62Q
NXdCNjwICXwUGvQkNPRZ2JYXYdtfhkenRcSlb0lI37o7Y1tyxva9mTsOZEYe
zow+lhVzIiv2TFbcuez4i9kJV3MSbuTsup27+17e7kd5Sc/yk1/mp6Tl783I
/zMrf39O/sG8vMMFeamvc48U5h4ryj1RnHPybc7p0uyz77LPf8i+UJZ16VPW
lfKsqxWZ179k3qzMuFWVcYeUca8m/X5t+sP69EcNaY8b056S055T0l5S015R
09No6em09ExaRhYtI5uWmUskK5+aVUDLekPPLqRnF9GzS+g5b+k5pfTcd/Tc
D/S8MnreR0beJ0Z+BSP/M6PgC6OgilFQzXhNor+pYbypRYrqkOJ6IiUNyNtG
xjsy8p6CfqCiZVT0Iw39REfLGWgFwvyCB2VWMpnVTCaJxaxhs2o4rFoOq47D
queyGoiwG3jsRh6bzONQeBwqnwiNCJcu4OESCPQPAAAAfgt4bBaTxf2LSeIf
nimdLuRRKGQyhYKwOB0fEwkFws7Wab8BUXu56/RkYmJwJeH/LeLmq34MVB/S
FerRs2u/nt379eqt0qe/al91jX4DdPrrD1I20lcZOQy2NlZ1MFUbbaHubqU5
3kZrkp3OVAfdWU6D5zrrL3AZutjZaKmTiZ+jhb+DzSo7+9W2Tmtsxqyzdl9v
PT7AynuT1eRN1tMDrWdvtlmw2XbJZrsVQfZrghw2BDkGBjmFBjlvDXKJChod
Gzw2Ich1d7B7Ssi4/SFeB0MmpYZMORo6/XjozFOhc8+GLrwQtuRymN/VMP8b
Yatvh62/G77pYXjQ4/DQp+ERzyO2vdwS+WpLbNq2nenbdqVvT8qITMmM/DMz
6lBm9JGs2ONZcSez4s9m77yQnXApJ/Fazq6bubvv5O65n5f0OC/lWf7el/n7
0vL/zMzfn51/MDf/cH5eakHe0dd5xwpzTxTlnirOOf0252xpzvl32RfeZ18s
y778Metqeda1iswbnzNvVWbersq4W51xvyb9QW36o7r0x/VpTxrSnjWmvSCn
vaSk4/qXTk3PoGZkUjOyqBk51MxcamYeVaJ/1Ow3tOxCWnYRLaeElvOWlltK
y31Hy/1Ay8MN8CM97xM9v5ye/5le8IVeUEl/XUV/XU1/gxtgLaOojlGMp55R
0sAg9K+R8Z6MfKAgZVTkIxX5REPK6UgFA/2MoF8QtBJFq5hoNROVGCCzVpI6
DrOew2zgEBLYSIRN5rIpPDZVEqkBoiKgfwAAAPDzaS7Q+FJRanspELFIyGHz
8IUzgXOnLEvCF9goKmgjVLhxSWo2Hj4m4At/ZCaxbTExk1F821hfp1/PrlYz
AglfFAvwG4FQjIkpy836KlmuYhKvRiB9hYJmHcRfEp8vaDY91r1Lfy5b5hcc
EpXzqQG/TyvP3REWsGrl6jVrVi1euOLknddY8wWOAf8bxM1X/RigNkgR6vZH
lz49uvbt2at/r35wb1X1vjra/YboKg3T629qqGw1HLY3UXUxU3OzVB9nrek9
SnuK/YCZjoPmOOktcDZY5DRsieMIPwezFfbWK0fZrbJxXG09eq2V2zqrcRss
J2609N1kNW2T1axA6/mBNosDbZdvtlu92X79ZofAzY4hm522bHaODHKJDRqz
M2jsriC35GDPP4MnHAz2Phwy+WjItOMhM06FzDkbuuBC6OJLoX5XQldcD111
K2zd3bCND8I2PwoPeRIe/ix864sIXP9i0rbGp29LTN+2J2NHSgahfwczo1Mz
Y45nxZ7MijuTHX8+e+el7MSruP7ltOhf8rP8lJf5e6X6l5V/ICf/kET/jrzO
PVqYe7wo92Rxzqm3OWdKs8/h+vcB17+sS836d/0z0f7h+nenWf8e4vrXkPZE
0v69oOD6J2n/CP1L70T/aFkt+ldM6F/Od/WvoJpOtH8kBq5/hRL3a6N/yHtK
G/2jt9E/tEn/SCy0pkX/JO5Xj7tfG/3D3a+t/tEFXND+AQAAwM+mY4EmanMh
4LYPHV3lM2Z6dIfVcBNruy6Xze9kpriTmVIfE3BQjhC7l7RomNtsov4T8Vsm
lNw9feRShlD6TG1eUft+j7zewwQeZrN8U9CiWZP8tu3Fh8pvR0Oy3WYsW7tu
jf/C+X4nbxdgQP/+t7TVvy5Q9z+69P2jG65/yr2U4D5quP7p9NPT7W+kpzxy
qIq1RP9Gm+P6pzHORnMSrn8OA3H9m+uM65/hIudhS51G+Dmar3CwXmlnt8rW
cU2z/gV01L8lgaOa9c9Rqn9bN7tEBo2W6J/rrmD3Zv2b1Kx/M5v1bwmuf1dD
V9wIXS3Vv4dhQY/DQ56Ghz+P2NasfzsJ/dtO6F9mk/4dyYppaf/Ot7R/7fRv
b4v+ZRP6d7hJ/5rav5PN7d839C+zE/1rSHvaKNW/77d/f1v/mtu/wq/bv2/p
X3P7R2K20T+2VP/atX8ULtA/AAAA+KWQfgIziQJt6bKQLTs/1RElXP6d86ev
pklnZFw/mXruBb6Q6u8zxS/5Y9HTxfPnp9x6RjwmJGyNQcqPCFm6aGnIg7wa
6SpHV0+ZsiwJn7lo4YLU28RMsVDQMnPxspB7OSRiUIRbGbGFvFPrRnjOIfRP
SDw7p7ogYK3/xpAtZ+6+EhE6SpjbjSPRyWceSbf/JfdmcPAufP7t2Fndlc3f
s5v+MkIeC7+tuJ+gPtK77b5nsPP3f0z79q9F/4j2r4+0/cP1T9L+Nemfy7f1
T9L+mTe1f9/Tv8Xf17+gr/WvXfsn0b9VLfonbf+eh39P/zKl+hd3lmj/Ei5l
f0//strqX+6x5vbvu/rXWfvXqn8t7V9n+vfftX91P9b+IZ21f2zQ/gEAAMAv
jrTAYwXPMlM2sPEPDJg1xXvXmVf40L75Y+19tksnRU21Mp2wFV84s2mmak/1
Ua5T1qyZq63cY9vJHHyQ8e6V0zAD77krNvvP1dYcfujxR3zwdNBc1R5qdu5T
Vy+aotKrx86bpfggnZipL52ppWF09EU5PsjjEtKXcXS1sYek/RMSN6wvOSFB
ge6mKrDtdOI+n7gpuBgOQT1PluCCV22r1XXmlmu4GPqM6D8z5i7+KBNhCoQi
kUQyy+8l9Btsm1FBIddWV5FqmRx+x7834P+Yb7R//Yn2r53+Df1r/VvqKGn/
/mv966T9+4f0L/5v61/ej+nf99u/tH+2/SP9F+1fJ/oH2j8AAAD4RREJJM3b
mSBlbctSVtMgn03UZifWTfNamCgd2bPEY/TseHzhzIaJypoOJQgx+CBm+hDH
BfhCzDxHN78U6cwTgV6WXgH4wtkAr/6a9kUoMbh96ij7+cn4wo45Tu7Lk6Uz
j2+cYDs5EF8QsIlJWcdw/ZvTsvNX+q1QcSvC3Gue5IAQAU9AeOqRoPFDzCdt
njfGenY4McwpsxvSZ8OpXGKGZNeuWPIrwc9P9v+hCKnpDB48QEtlgOGZjGrJ
BPBd87/jn9S/Jf+Q/v1K7d8P6t9ft3/f1L+f3v4B/QMAAIBfFAGX+GFdqv8k
r8XEYRosOoMnEHAlXdmx1b7us2Ikn87ihAVjHabFEDOXjfdaQpieQIy9vbYV
tvPBnWu1l75cH7UBGioqatqqfbuZ+qwjVvf3mrhU6oTCXQtdHeck4Et+HkMU
+qrpqKuoqOuo9OlqMT0AF00xjzi2I/Po6uEes4lduJKdv0Iesfji4HIjt1mS
QeLAEx7xYsleGhDUy6ySJ9k2t2KUbq+AM/n4IocnIDYm6RLL7yUo6dnnkVCE
0lBPpnD5f338MOCfBbR/P1v/QPsHAAAAgM4R8AjTuxAyxXLCpg4Ppfr7eC9J
ki7vnj/GYUYcvnAUF8VFu6WDWakrDccuxheWuBrOSSB2v5IJ0eJLD/04vmaK
5+xY6Yf7LtweZxNF4sIxQ+cmSmZSKBweXyQk+jhpX5d7cp3JuHnEEiY91INY
zD+9vnlQJBQQf5bd32c+wkh3oHbUmTzJttnzbZTtFko8s83xILj+qQwdWwmk
7+cB9A/oH9A/AAAA+DWRWlZtVqqSXPeQE884bKT09cu03Lf44L24OcraLh/J
2P0jW3pCkKukyju0xN3UIaBOhDWWPh41WGPNvqf44JWoOfAA2+fv6/kcZlHa
0wc5xM/8Uld4e8yJkz5LwrzR9pKjgK9FzoQHjpLOfPPy6ZM37/FBNoPCFmD3
k5cYOE+uZogZdBo+yEWpLD4+uNjA2ZcYpFGI7wnKm2Fwj+3XPny8th3qMeBZ
OVEbFlyIgqAuEQfusljsig95Nx4SL6nibmxfPeePkp8SCsE+358B2Pn7s/UP
7PwFAAAAwDeRnlEl69hOm6Ga2jpaA4a6nHhKWBmvvmTmGOOePfuOnr08YN7k
2Sv34IP51w/YGmlpDNAeNGDwuu1HJafpw//HSNnsq649QEtbQ9/W9dSDd/jQ
yYA5U/2aysOU5d4Tpct8ckrQZHUtyUwb1zOPiJmvTkQMUOmroaGmpAyrKvdz
mh+GD2aeCtNR6aehoaqkrKqq3Ndx/hZ8cLuPhdmUcGnHFzHNdMS4QOnxvk+P
xdvqqWkN1B40UD9832V8pOLB7kGWEz8TO4iB/P0cQPsHDv0A+gcAAAC/Mk2G
JGI1NDSgbOkJ+qSSJWxsbJA+hjZfkkMsZJIb6xmo9Kwq+Md30wc4m4k0NDZy
m+6J+ZzWq35w2Uwmu1kVO87EBFwWubGRQqXh4As0hOj0+Fxmu0GUjYkE5IZG
ofSSbpLXQW6kCERY85Xh2A2N9Qja9CJFAh4DYQLz+4n8/3Hil1Rw4hdw4hcA
AAD4fRHiH8XNy9KT7LWeaVnUuvu07TmghUJhy3Cba7OJhaLvnF35x2d+cwvt
/ujsxYNvlF8BcNrnX+i0zyV/77TPnVz0DZz2GQAAAP61iCV0HOqw0Om0TkbF
Hdb4ztOIO/CtwQ7P+vXdDs/yV39fwP8h4KJv4KJvoP0DAAAAAOD/K5r0D0UH
qg/uCvXo2bVfz+79evVW6d1fta+aRr8BOv31Bykb6auMHApbG6s6mKqNtlB3
t9Icb6M1yU5nqoPuLKfBc531F7gMXexstNTJxM/Rwt/BZpWd/WpbpzU2Y9ZZ
u6+3Hh9g5b3JavIm6+mB1rMDbRZstl2y2W7FZvs1QQ4bghwDg5xCg5y3BrlE
BY2ODR6bEOS6O9g9JWTc/hCvgyGTUkOmHA2dfjx05qnQuWdDF14IW3I5zO9q
mP+NsNW3w9bfDd/0MDzocXjo0/CI5xHbXm7B9S82bdvO9G270rcnZURK279D
RPsX29L+XWhp/3Jb9C9F0v7ta27/DuY2tX9Hm9u/U83t33lc/97j+pd9uVn/
bnzOvCVp/+42698jXP/qifbvWWPaC/Jftn/Z7du/3O/q3+uqpvavsNP2j9xG
/2idtH/VhAG2tn91X7V/5PbtH40P9A8AAAAAgH8b0m92BEE1++vIQgpd5f7o
It+zW/c+3Xsp9eiv0lNDo5eudm8D3T7Gev3MDZVsh/d3NFEeYwa7W6h6Wav7
2GpNsxswy153rsOQBfYGi+yMlo4y8bO1WGFt429pt9LCabX5mDXm7uvMxm8w
mxRgPjnAfPpGizkbLRdutFq2yWblJtu1m0Zt3GQXtMk+YpPD9kDH6EDn+MDR
iZvHJm1227fZc/9mr0NBk1KDJh8LmnYyaNaZ4HnngxdeDF5yJdjverD/rZA1
d0I2PAgJfBQa9CQ09FnYlhdh21+GR6VFxKVvSUjfujtjW3LG9r2ZOw5kRh7O
jD6WFXMiK/ZMVty57PiL2QlXcxJu5Oy6nbv7Xt6eR3lJz/KTX+anpOXvzcj/
Myt/f07+wby8wwV5qa9zj7whfv53ojjn5Nuc06XZZ99ln/+QfaEs6+KnrCvl
WVcrMq9/Idq/W1UZd0gZ92rS79emP6xPf9SQ9ljS/j2npL2kSto/Wno6LT2T
lpFFy8imZeYSaWr/XtOzC+nZRfTsYnrOW3pOKT33HT0Xd78yXP8YeZ8Y+RWM
/M+Mgi+MgipGQTWDaP9qGG9qkcI6pKgeKa5HShoQQv/IyHsK+oGKllHRjzT0
Ex0tZ6AVCPMLHpRZyWRWM5kS92PVcFi1HFYdh1XPJcSvgctu4LEbeWwyj0Ph
cah8IhL3A+0fAAAAAAD/QprbP+ZIIwstlQG6WnoDdfR0Bw0dbGA0ZPgIPTMz
fRtLQ0fboWPsh3k6GU0cPXyyq/F0jxGzx5ku8DJb4m2xfJLVKh/btb52630c
Aya5BE5yDfL2DPHyCh03KcxzSrjH9C0es7e6z9/uvni7x7LtHit2eK7ZMS5g
x4TNkV6hkRO3RE7aETkpNtInIdJ3T9TkvVFT90dNOxQ942j0rBPRc09FLzgb
s/h8zLKLMcuvxKy6HrvuZuyGO7Gb7sUGPYwNfRwX8Sxu+8u4qLT4mIz4+Mz4
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
lMnWlMpWlchWFMmWFcm9K5IrKZJ7UyyXVyKX9VYurVTu+Xu5J2VyDz/K3f0k
d6Nc7mqF3MXPsucqZU9VyR6rlj1MkttfI7e3VnZPvVxCg1xcg3xkvfyWWoVQ
UpfNlV03lHdf/e4Pv8JeC3P6zHnVb/qT/r73Vbxuqnlc1hh9VtPhhLb1IZ2R
KQOHJw7Si9bT3aavEzFUK8xIK9REJ8x8YLj14K12etsdDSNdhkW7GkV7GsdM
GBE7yTTWd2TcVPP4mRY751omLLBOXGK7y89ut79D0hqn5A0uKZtcUoJc9oa5
7N3ilLLDISXGLnmn9Z7dlruTzXb9aZJ4yDjhqNHOU4Y7zxrEX9CLuzI49sbA
mDs60Q80o56oR71QjUxX2ZGttCO/7/bCXltL/tj6rseWsm4R5V3CviiGVCoE
VckHVssHVMuvJ8mvIcmvJMkvJyksrVZYVK0wv1phLklhFklhGklhCknBh6Q4
sUZxQo2iZ42ia43i6BpF5xpFh5oudjVdbGq7WNR2MavtYlKrOLxWcWiton5t
18F13XXr/hhY329Ag6oOWVubqqdFG65FN9NCbDVRJw2Wmzp7ghrHV403XZU/
FxYugUUrVbANylhQfyxCCYvshyX0xfb2wVJ7Y6d7YRd7Yjf+wO73wJ51xzK7
Ya+7YqVdsAoFrE4eo8thHFlMJCN5O0CStwbQPwAAAPjJCL/q0MS47Um6OqGI
MD98hFF821hfp1/PrlYzArnEDIG4w0xh8zWCRUIBvppYhI/z+XwRMcS9lhq1
auUq/5UrwlKOk+jETKkBEq0gV7q6SLou/ie5vOjijacMnpg4P5tA2PwiBdKZ
AmkvSGyCcv1c8tJlfiFb4stqmRgwwF+DFv2DJd/0Mi3tHw+BWGQZhCRD/SzT
UCZTWypTVSJTUSRTViTzrki2pEj2TbFsXols1lvZtFLZ5+9ln5TJPvwoe/eT
7I1y2SsVshc/y5yrlDlVJXOsWuZwjeyftbIptTJ76mUTGmRjG2R3NMhtqZMP
ISkEVnZZX9511bvuywp7LsjpPftV32lPlHzuK0+4AbtfVnM5q2F/XNPqkLZp
yoBhCbpDogcP3KanHW6oGTpMM3SEVqiZTriV7pZRQ7Y5GOxwHho1dli0x/Do
8cYx3iNifUzjpoyMn2G+c45FwnyrxMU2u5aN2r3Cfs9qx6T1TskbnVOCnFNC
nVMiHFN22CfHjEraabVnt/mu5JG7/hyReGh4wtFhO08axJ/Vi7swOO6KbuyN
ATF3tKMfaEQ9UY18oRKZ3n9Hdt/t+b23FfbcWtJ9y7tuEWVdwssVQr/IB1fK
ba6S21QtF1Att44kt5ok50+S8yPJLamWX1QtP48kP4ckP5MkP5UkP5kkP4mk
4FWjML5GwaNGYWyNgkuNglONgn2Nom2tonWtonmtommtwoha+WG18oa1Cnq1
ioPqug6o66HT0Ee7UUWLoqVJHaJJG6bJGKmB2GgwHdVZrmrs8apcH5g3DRbM
UREuVhb598fWK2Gb+2Hh/bDIvlhCH2xvLyy1J3bqD+xCD+x6d+x+N+xZVyyz
C/ZaEStVwCrksTpZjC6DcWQk7Z+M5E0BA/0DAACAn4pYJPqLIZFEzAQclCPE
7iUtGuY2m6j/RPyWh1pnir7xy0ARxctYztBpenBQwDhXi34DzW8WN+DDwvZz
8XWlTvjxymZDt3ltX1CH7eHSiN9+Sb/iM3H6ug2BU0aZ6Fp4f0QkU8H3yc/m
P9A/2f9A//bXtNU/uch6Qv9CSYq4/m0g9K+HX2HPhTm957zqO/2Jki+hf6ru
l9VHE/qnZX1Ie2TKAKMEXb3oIYT+RRhqhhnh+qcdajYg3GqQVP8iXXD9M8L1
L2YCrn8mEv0zk+ifpP2T6p8/oX/J651TNjXrH9H+SfXPes9ui92E/pk0659h
/Fn9+AtD4q4MaqN/apEv4Mh05R3Z/Zr1r4dE/7qGlyuGfVEIqZQPata/9c36
t5wkL9W/+dVN+jetWf8mNuufa43C6BoF5xoFhxrFUTVN+jeyVnFErYJRrYJE
/7oMqus2sK7HgPq+Oo2wNkVbi9A/I1z/NAn9c5Lo3wRc/1R502E+oX8qIn9l
bH1/LEipjf71xlJ7Yad7Yhf+wK73wO53x551wzK7Yq+7NOufHNA/AAAA+JWQ
fvYy7136c9nSZSEROz+T+dIHaj+9Cg9evnRF2P00knSiSEg8lHdy3QjPOYT+
iflSSWyZ+SCdJF23sfT5setP0YaK7RsXh25PqSV+4k2d4qhzOFv6Y28sau5I
NcfFxOYErMybx4NXLFu6Mvj6y/f4AK/hbUxQ4KTRJvBAgxXrApctmrfr5B1J
S8jJvHEs2H/ZUv+g66/KpC9ewBc2/0Uo9po9DqSR8SW+EHyh/GT+R+3f/g7t
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
5nxpzSnryBF0J4V9jMWDm5SPbCyxbyybbCSfYaiY14h2awiLGsCK+rCqPgQa
wHZ92K8LwfXghA5EaUO8FqRpQk5dyKsDdzXgKQGvEXxE8AWBBCnbP1WMsP5h
MBgMBvNPQvUXXQDQVvlnngNgDDRJy0mFmJR+4YgKOfz3nNJfOMUvOR9/5rwv
IN/kc17mm/ycz3lWYPLoZ86955xbLznXX3Ou/sLJfcPJfsvJfGeS9o6T/Csn
4QMn9iOH94lzpohzoogTWsw5XsI5Uso5UGqy57PpzmLTrYXmGz9YrH1rueol
d/mzposftPC81dLlamunizazM9s5pHSYFN9pXEznkae6DAnt2v9Id9t9tt12
9eqyvU/nbf07bx3UZeuwrttH9Ng5xjbIvveeiX33Tum/b/qAfbMG7p8z+IDT
kIPzhx5yG37Yy+7IopFHfUYdWz4m2Hfc8VXjQ9ZODA2cGLppYtjWiaE7JoTu
Hheyf0zI4RHHg4cfCxl6LGLQ0dMDjvD6HT7b51B8r0NJtgdTexzI7Lo/u8u+
3E57r7bfc73dntttd99vFfS4RdCzprt+5u58abXjjcX2d+bbfjXb8sF00yeT
DZ9M1hWarC00WVVo4ldosqLQdOkn0yWfTL0LTT0LTd0KTRcUmjoXms4rNHMs
MptVZDa9yGxqkdmkIrMJRWb2ReZjisxHFpsPLzYfUmw+qNisf7FZn2KzXsUW
PUosu5Vwu35u+VNpuy5lXTrzbTsJ+ncWDe0kHtWxfEJH6bQOslnt5U7tFC7t
KC8b2seG9msLa9vAplawvRXsaQlHWkBYc4hsBrFNIckaMrhw0QryLOGuBTyx
gBfm8N4USkxAyAE5B2hj5Y+DkfJHQ1DthwWDwWAwGMw/AVr5B55fFZpPq0JV
hFJFURUFE6oq8q8iqxkpE7oqEkoVgSrlioqI5VURyZgI2UiFQlUkbARsRMLK
SFURV0ZUkfKvIvkq0q8iE9aIvDICNoqaUb8A9eupnfJvRfxVRN+JsCoCIV09
QiYCNiJ1xFWBcnUk6kjVkSkjV0ehDsVnQ6tT9eMgwOKHwWAwGAwGg8FgMBgM
BvN3h6ZpqmYw/w3gRwv8kWAwGAwGg8FgMBgMBoPB/JvgZuFHgKZpoVDIVyMQ
MBEIlREpI2YiFJSrw74DT/2WO1mtiFURVEauSnn18GtGIJcIFN+L9PuRVURe
MzJ5jUirIpSwETEpl4tVEcvLmYjkEmWk6shqRCavjJiNgo20KuVsqFqRSGpH
Wj3lFZGVK74VeWXkFZFVRVIRRa1Ia4SqHtnXkdPymlFURlEZoPBF2jEYDOZv
Q9XJJgzm+6h+QhjZs7GxMTIy4nA4JiTJNTVpY2HWhWvRp7nVsNbW9u2aTevY
cm6X1u7d2vr0bOffu0Ngv047BnY5OKRbqF2PM6N6xoztGWffM2FCz6TJ3ZOn
/pTs0ClpRofEWe2SHNskzW2V4tQibUGzdFfrDHerDA+LTC+z84tMs5aYXFhm
krPC5NJKk1w/sysB5tfWWF1fZ30zsOntjc3vbm55f2vrh9vbPtpp8ySo3dM9
7fP3d8g/2DH/SMdnRzs+Ce74KLTD/fD2d07Y3DjV5lpkq8u85hfPNr1wjpsZ
b5maZJmcYhGfZh6bYc47b3EqyyrsQrPg7NaHctrvyflpe07vDTmDA3LGrMiZ
sijH0TXHZW7Oohk5vpNz1o7L2TIqe9fw7ANDso4NOh8xMPPMoPToIWnnhqYk
Dk9MHRWXOS42a0JMzpSoyw5nrs08dcMx4u7csIfOIU8WBD9zP1Lgefj5ooMv
ffa/Wr7v1crdr/x2vQrY8WrttleBW19t2vxq66ZX2ze8Dlr/et/a1wdWvz4c
8ProqlfB/i9D/Z6H++af8Ht6yu/Rab/7kX53eX63Yvyux/pdjfPLjffLSfQ7
n+ybkeqbmu6XmOkXd97v3AX/2IsBZ3PXxFxZH3NtQ8z1TTE3tsTc3hZzd2f0
/aDoh3tiHu+LfnqAV3CI9/xI1Mtg3usQ3puw6LcRMe9Px36IOvcxJv5TbGJR
fHJxUurntPTSzMyyrPOCnGzh5Yuia7nl16/Ibl+T38tTPLiheHSTenyL+vkB
KLABYjAYzD8fhVwmlUolEolUJv9df6QpSqFQ3kLu96bSlIJ5UqlURqknyuUy
diuqbTEPyOXYVv9kVPrH5/MNDQ2RGi2EGmggUy2NFrqanepr9zKsN9hYf6xJ
/anmDedyjdybNfZpSa5ua7qlvfneLlbHunHDe3JP9eJG9rXiDbDgDTLlDeFE
DWsSNcIwamQD3hiDGHu9sxPrxU7WPje1bpyDRvwMlDAbJc1FyU4odT5Kc0EZ
7ui8J3FhYd2Li7VyfXSuLNO9tkL/ul/9mwENbq9pdHed0f3Axg82NnmwxfjB
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
8RbWzWa5rZxu382kVY97H5h15bzDgU4L3Lw83Bcv9xtva6XbasQndg18CvjP
49v6V5fVP0td7dYNVPpXf5hpw/EWhtMZ/WtOqvRvbQfLbZ25+7s1C7ZV6l+/
5lEDmkWr9M/OnDfShDea0b/G0faNzk5U6t80vbjpjP5pJ8zWVOufRpqrRrpb
nQxPzSxvrexF9S766F1eZnBlRYM830bXVxndWtP49romdwPJGvoXZHpvj+nt
fSY3DnCuHja+dKyxSv/SWf3TZfQvltG/s1qR5zRPxmuGJdbSP6vVFfrX25XV
v7EOrP7NHVlN/7qx+reb1T9V+xfLtn8V+ncyWaV/dkr9Y9s/tf5NZ/RvB6t/
zoz+bcp3U7d/SyrbP1b/2PavQv+8Wf3bw+if5+ODav0LrqZ/pzwuMPoX6ZHK
80iqrn9JFfp3gtW/pWr9q2z/KvRP2f5tC6vSvwOM/lVr/07Wav8q9E/V/olV
7R/WPwwGg/khUDmRMC3mkMsCF/81O14Xy1QPfHhxebWf2wL3gPQr71UTKQX7
0O0TizuOnMXqHy1TSWLlzIyr71XrFj29GBafLSh8FbjMeVXg/g/szZ0+T+5v
FXxDdZsn2DS7i0l/Z/bp5KK8xHA/d5cFnn7xufnMgLTwyRbfFeMHdyKtW7sv
XuHi5Bh0IkXZEpbnJYT5ebjM9/BNuPKz8mnEToOaOe3IUr2QeX0txy07Wevl
Bc7o77orlVmQyeT/leOH+Ra/o3/11fqnbP9Y/Wum1r/2lsr2r4b+VbR/dma8
ESr9M6rSv2+0f5X6V1epf2z7d1nZ/uWp2j9G/9Z+pX9s+2darf2rrX9nVfqn
bP++0j/LSv1Ttn9jp32lf10r9S/+eO32T61/w9X6Z/89/QvM96ze/v2G/nl8
T/+yVPpXq/2roX+/0f59W/+U7V+Euv2LVrV/CcXq9q/sAqN/qvYP6x8Gg8H8
CKhKPpHfjJ+atLb1WLF0xiT7vdFXmKGfLx9vzmlgP8PN02VC4/omu889ZAal
5WLm67XQhR1GKNs/Ofvty2uhzcgG9jPd2ZkNTHfF3GEGn8RtaUw26dZvsLOn
Zx/rxr3n7mLsbUIPo00JjOCxHlZ2K9zAoEVeKcjyU+zG2LstXbnUaYaxAfd4
3icQPd+wYtmEwZ2MLFsy+ufqPGdXeCLznF8eJo4cN97Vh51JGnCPXvsE8LpP
C8NT90XMrjATcnY52Y7xollPFJaLRczCy4zdTSw63SuF/6d3GmL+KH9U/0zV
+tf8j+if+Tf0r6L9+239q97+fVf/7v37+mdVS/++bv+q65+q/fsN/ftu+xeo
bP/WsO3f7+jfd9u/Sv37A+2fX6327zf0r1b7d65G+4f1D4PBYH4kKOX509un
fZtYdn8qqhiUypjfyVLHfhb2fjzVSMyasWa9Z0jZt+8JmW+vhzH6N0uifCce
43LVZ55dM86k51TGKN9l7dFpYHIw4ykzWHhxv3mvyUKZxKEvuT31tWpm2e3T
DRo0TX8uqb4/PnZdxyyKUC2/jPfrYr+g2r7W+EuxdERXOy925sIh1p0n+JVI
5J+LX3mMbdt96jL2YVquOqe8cETrqetjAVd/fzr/sv79ofbvP9E/Vfv3Q+hf
h9/Tv99q//6g/v1++/d9/fP59/Svsv2Lxe0fBoPB/MjIJeyv3+Me48c672UW
RGV8qVTCepLo5+EdTE7fFQCIywE+XT5GthvynFlSsHVfXujC9iNmilWnjcXP
h3fgVM28cty4zYA3AG9TNpv0VxqjVCSTlpfyJUB9ntTHZGvSc2YlRjrL7p1u
1KjN5SKA0qfzx9qaNDA0tTSpgzTnrjmr2rfLIV7thk37rACpiC+RsjulKHzq
Os7WpD47sy7SclwVxQyWFeRNHtjW0KhJuy5De7WxHD5nAzNISViXfZtzsIkx
9/KvwH5wBVd/fy4/Xvv3P6Z//0n79+/rHw/rHwaDwfz4yKVs+8fzn9x9zPKa
D7y360QGZX1UffdLyoaGbQazH6qg2FO+7Hv/RjmqP4v7wa6jcdXM1I0NWvYr
AXiTsoXTZ1IRa22VHyT+PKmvaVDGG9V3OUFzG7YcxSzsc+pn/NP0F6XM89GB
U4dOWlzR/t2IWNRpjHPFqsqvQc6DyJ8cXpSyn0MOnDZ04qLwyv0tKWbfUrht
3hjnTQnMgkjEvi5f+/bDFh5m91Em+/86Ypg/CNY/rH9Y/zAYDObHhKZYP/t4
/bhRHV3/iJxyMf/ZvUu5t9jPXwQ5D+F0m/q4jF/6/N7Q1qZT1rBWJvpSJFZA
+j7n1gMnvefTxcWfmcHd84dyuqpm3h3axnzyquPMYH78RrL3xM+sAshp1QVi
6M8TexkHnLoJitKMU+tIbc2AE7eZh33HdGg5xpsPcDVul7WOzjT1eeSPV47p
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
d2TBS/L1M/L9A86nG5ySXPJLJilIIMujSFkYhzpkQu02o7ZZ0hua0mta0n7t
6GWd6CVd6YU9afc+9PwBtOMQarodPXk0Pd6eHjOJtnOgBs+i+82hbZ3orgvo
jm7QZiHdbAlYraTNA2iTQIqzjSL3yclgKXmynBMjMkkSmmTxOZe/cG5+Ju8X
kY8/kvnvyOevyVcF5JtH5Lu75K83ycKrZMklsiyLFKaS4gRSEkvKo0hFBEcR
bKI4aKrcQTNqozm12oJaaUkvtqI9uPQCa3pOU3pGc5jcCuzbwqj2MLwTDO4K
/W2hd1/oMQi6DofOo6G9PbSdBC0doNlMsHYE7lywcgarBWDlBlx34HqCtRdY
e4P1YrD2AevlYL0SuL7A9QduAHDXAncdcAOBuxG4m4G7FbjbgbsTuEHA3QPc
fcA9ANxDwD0K3GNgfRysQ6FpODQ9Cc1Og3UkWEWBJQ8sYsAiFizjwCoRmqZA
63TolAW9csHuBky7B275sOo1BH2C8DJIkMJFGm4BPAF4jQ0Qg8FgfgT+Kx7y
n9gNRdW+hVylLf3/7qtCLpNIJFKpVHVbOZqmZDKpCmZcrrzFHKVQqL5nvlTc
WRjzfWj1df8MjQzVl/2rg5ApQp0RGo2QM0L+SGMX0glGDc4g8hyyTkJt0lCX
86j3JTTkOhp7D019iua8QK5vkPcH5FuM1n9B2wVovxAFi9BJIYotQ6mfUc4n
dO0duvMSPXyGCu6jVzfQu0voYwYqikdfIpHwOCrfh2RbkWI9UvjXoZZqUwv1
KTdDyplUzDFTzOQqpjZXTGijGN1eMawzNaA71acX1aM/1WWIot0IqtVoynoc
ZT6RbjKVbjCTrjeHrruARp4U8lEgfxnaKEFBYnRYiML5KKoMJZaizGKUW4iu
/4ruvEUPXqEnBSj/EXpxG73KQ7/kovdZ6GMaKklEX84iwRkkOoHKjyPJQSQN
QrItSL4Oyf2RfBkh99JQLKijcKxLOWhSE7WoMTr0MF16gAHdqyF0awydSWhn
Bq2toVlLsLIBs07A6Q6Ne0PD/qA/BOrZgfYo0BwLmuNBcyLUnQKa00BrOmjP
AO1ZoO0I2vNA2xm0F4CWK2i5g5YXaHmD1mLQ8gGtZaC1ArT8QGsVaK0BrXWg
FQhaG0FrM2htA60doLULtHeD9l7QPgA6h0DnKGgHg+Zx0AgBIgw0IkDjFNSN
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
ePrFX85nn4H/8szh2GuXM1b4bnlfVhYRtO5Aym1m/GZCdFrO44e5ifPmOB1I
zlFtrvDpxbD4bEHhq8BlTv6BB4rYCo+VhA8vLq/2c1vgHpB+hXUq9dnXggHm
Xe7Iq/ZW/O7eskUey/zXnk69rFDPo+Tsrt4+sbjjyFmsgNEySikeqp13cvFP
v/VetXpRxdZfM1tfteHgx1L2qeM3z9Qz7pqvPgGrkIqYr6/Sd5p2sa91Ojx8
0dSpXsdVy/OHtx6/IZ5ZKBeza96q3DqlLBUpaV5CGHuUPHzjL/8MVToqZGvG
BS6r1u58/oF98ak7HG2GOAqUj8Uc27g9IhWqvf6/NV+1f9X17+v2r5r+VbZ/
06u1f/+K/qEq/QupqX/Lv6N/Y39T/6q1f9Q32z+Nf6H9q6l/32n/GP1TtX96
Ve1fv8ZV+mfzHf2r3f45qNu/WvrnWlP/vm7/1inbv1r6p2r/qulfjfbv5Fft
H9Y/DAaD+UGRy1gtiVzlSOqZ9B422XvhbMsmeutP3GQGy55dHmDT2n62+0qP
2RZm7UNyWI0puZ80apy9q8/KZU4zjA2sgvOKQHKnParX2W5k15bW3Ha2o4d2
0SIHfmCe02eKLmHUa9iEhV6zrYz11oVfZ1Z/HLelMdmkW7/Bzp6eva2N+85m
K8cXucHNOQ3tZ7h5ukxsbEDuSXjGmNoOn8UuzlPM9IxGz3LzcnFaezCK+UMh
en3d32+lXWdjsvc01rooKbCiympaXujCDiOU/Zuc/SJ8frV/21bjHZmdn2Vp
1v54Nmuqj+O3Vm69j3WTXo47mMGJHQynb2GlS8gXyhXs2Wpm+WXaTsPmva69
Lin+8Pbdh49fytjnDPOeNMDet1hOFdyIGTxgUGjuL8ygRMI+dK3m1r88Sh45
VnWUphvXbxp85Y3yYAv8Z3Zt0trWY8XSGZPG747MZYZSts1sMXA2s3BuxzzN
htaJt1j7pf4RBeBv6t+439E/u/9I//719u939a/xf0n/fqv9Y/Svsv0b/Mfa
vyr9m/Qv6t/X7d+/pH8RWP8wGAzmb4Sq/YtaOamxWd8nfHYkY8u0Fv3nMgtb
HPsPd92vmha+bEyvSStB+Z62ynV9hncZtSQK4G0bhNYm518OmmPUxqGs9EFn
o64PAZLXTGls3v+psthK3+zQWik5b8/vqdfA5GDGU2a56NJ+sx4TZADO/U3H
+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
rQb93zOF4skvvX1so2bt5gav7VtAUbUSv8iUSmV5d64eOZHFDeZlLm/o0iFX
LqyEHPN9//jn6R85+Ev0j0AgEN4bdIVdyurpXo2s7OwcXRp5D1uxjxse2afN
9OTv+Nek93u71GoSPoX/Sd+THyeHBTpYWNs4O4ZPWfSE5a8QzQ1nb1/h72Jl
62jn5Og6b+NBbiTv+Bon396/KlE2BeE9g5z6QU79IPpHIBAI7zD6K7IopQVP
C0Vi3Sm6rFQilivLjt0qZaWlEln5jT5ERQWFpeKymcv1jpUVFD4VieW6ca1a
WSqSEPN7byEXfiEXfiH6RyAQCO84arW6fBes1Wgq7o4NnrHa8iO5hpNpNAaz
v3gHOcL7CLnsM7nsM9E/AoFA+CfAGt7gt8K9ftnKz6rYY78wXOU0hPcEctM3
ctM3ctM3AoFAIBDeK563fxaDA6mQDh/06UAP6EgPDabHdKGnd6cX9KQ/7UVv
jqCT+9JHBtAnh9CXhtLXP6Zvjabvj6efTKKfTaMlM2nZXFqRSMsX0NIltGg5
XZxEP1lNP1hL566nf/mc/mEzfWUrfXE7fWYXfWIvnbHvg69TPvgq9cNd+6t/
ub/Gxv21Pt1fZ+l+o/mp9WamNpicajwu1fTjVPPoVIt+qVZhqTbdU207pNr7
pzbyTnXySG3sut/Fab+rw0E3+6/dbb/2sDnkaXO4qfXhZlZpzS3TvJh0b7OM
liZHfYwzWzU45lv/m9YffdOm7gn/Oif8a58MrHkqqPrpttWy2n2Q1Z7O7kBn
d6SzO9HZwXR2Zz5ZXYR0pbO60Vnd6awedDaXEDq7J50dSmf34pPVm84KExJO
Z0XQWX3obC6R9Jko+mxf+lx/+vwA+uJAOmcQ/e1g+ko0fS2G/j6W/nEYfSOO
vjmcvjWCvjOSzh1F34un88bQ98fSD8fTjxLoxxPopxPpwsl08RT+My2dTotn
0NKZtHw2rZpDa+bSbCKN+TQ+obGQxmIaS2ksp7GSRhKN1TTW0PiMxjoaG2h8
TmMTjc00vqSxjcYOGjtp7Kaxl8Y+Gl/RSKVxgMZBGv+hcZhGGo0MGkdpHKNx
nMZJGqdpZHHu94HQ/lkQ/SMQCAQC4d9Euf6FmvT3o7oGUWFBVFRbKro9NaoT
NaUzNb8btSqE+qIXtTeCOtyXOjGQuhhNXR/GH8O8P4Z6mkD9PpmSTucPUSrn
Uor5lGwhJVpKlaygniRR+Z9Sdz+jftlI/bCJ+m4LdWEblb2TOr6bSt9LHdxH
JX9F7UiltqRSG1I/WJVabXFqzbkptael1JmQYhSfUm9YSoNBKcZ9UsxCU5jO
KRZBKVa+KbZNU+xcUxwapTrapTrZ7He2OtjY4qAL87Urc8jN/FATsyMepkc8
G6Y1q5/e7KOM5kZHW9TN9K59rGXNYz41jvtWO+H74Qk/+mQb6pQ/dTqAygqk
soKo7LZUtr4GzOLSkTrNJZhPVmfqtFADZnPpVnYFmKwQPqd7UqdDqdO9+Ohq
wOxwvgM804c6F0mdj6Iu9KUu9aMuD6C+G0hdHUx9P4T6MZq6EUPdHErdiqPu
DKdyP6bujaR+HUU9GE09HEM9Gks9GUcVjKeKJlAlE/nPVDSFkkylZNMpxQxK
NZPSzKbYORTmUUgUCsCFrzz+u0F//HdzpeO/yfrjv/v1BWB5+5dBIZPCNxRO
lLd/QnJMoCb6RyAQCATCvwed/snEshj30aEmgyIs4iLMR/VhJkQxM/sxCwcw
qwczm6OZvUOZQx8zx0cx58cy1yYwNycz96Yzj2YzxYmMeCGjWMKoljPqJEa9
mlGuZWQbmNJNTPFm5smXTP525u4u5pc9zI19zNVUJucAc+5r5tQhJvOIxeE0
iwPpVvvSrXem225Ot1uX7pCU3mhJmvP8NJdZaW5T0tzHpnmOSGsam9Z8QJpX
RFrLkLRWwWm+bdP82qS38U339zka4J0Z2CIzqMWxts2Pt2t2vH2zEx08T3by
OBXc5HRn19OdXbK6Omd3czrT3fFsD4dzIXbnQ2zPh9pc6G11MczyUrjFpXAm
J4LJ6cPkRDI5UUxOXz6XuPRjLvUXMoC5NJBPziAmZzCTM4TJieZzKUZILHNp
KHNpGJ+cOCZnOHP5Yz7fjWSujGKujmauj2Z+GMPcGMv8NJ65mcDcmsDcmcjk
ch/cFObXqcyDaczDGcxvM5jHs5ins5nCuUzRPKYkkfl9PiP6hBEvYKSLGPli
RrmEUS9ltMsYdgWDlQySGKxm8CmDtQw+Y7CBwecMNjHYzGALg60MtjHYwWAX
g90M9jBIZvAVg1QG+xkcYPA1g0MMjjBIY5DB4CiDYwyOMzjB4BSD0wzOMDjL
4DyDiwwumSPHgne/a+7Q6M4gI/pHIBAIBMK/CJYzQLlUJNNHLkQhEymFqISo
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
75vjZfpX3v6V65+u/Wv/P7d/74b+LX+5/sX/kf4J7R+nf7JgiDsK+veH7V9r
vv17Uf+qav92VWr/XtQ/x0r6Z/Nc/2LK9c+g/dPpX3n791z/qmz/avLtn2k1
Xv8aEP0jEAiEt4laxbvVV3NimLqWAV2iEsZH25nX/WTnZW7w50PLTBmzVm07
DR87NsDRvG3MMm5Qcjdn9qwZ3bzMGf/+vFup+T+Pf9znavlRWP9Rg8N9KIpq
32+xkvtenhtjXtcysFvf8XF9zYxqrT72KxT3Fk2bGhHcwsTOZbSgfyu2c9+n
WD86uK6le/rVe7pNYrW8kUrvX5k9czq/ooD+OolTFt0W9K+5qZ0LZ4+j4mJX
7+Rnl9w5187dLTwmfvqYaDtrjy3Z97lpw5ubDVqWyb8qkqg1Wq2GX+a9Y6uM
nf0v5RUXPX6Y/9tjiVz1t3/e7xF/Xv9aGehfCNG/F/VP1/69lv69sv37X/WP
qaR/xpX076My/XPT659duf5VJ/pHIBAIbx1d+5cyI9LUOuimsCf+ZukAtw7R
3IP8k2tr17fc8A33RYqnZzY4+Ic/4VWR79vy0hN9QmMUgEbOq9mWEZ0DIubr
Fhgd4jHnID/Lzsnh5jaBN4Rfdi+I9O/08UbdBHcPz/IOG1FhI+RPF8b3MjOq
79s9KiX7Bj+iP8zMr6hXDP9TQrbslODcQzNbhleYfWlc567Cjww5dk0NaR01
j5PHAIfak5Ov8W9Q6Ad1Svnr6U1GNShLe2dnB1tzhybJlx4KE5CvnjfCf9f+
Ef2rqv17Xf17l9s/on8EAoHw9tH/9i88dPg6CLL08+GFlm16SDlZSl9s1X6Q
kts3K6VKpVIkEvOXxFXyvnd2c7xn10HcI62CP6h6dtMERyf/nNxn9y7vtWXq
LDt0ixvcHB8WPmKdsBLN6qFdgmNW6dZ4fus4zy79SzRQSkVKNX9qic7rSu7/
PH902AdUjcRdF7inKplEWNFoz26D+HVw+qfitgXnvhyrm10lLZWouDll8b08
qjWwsLcyN7eyZ+rX8B44G9riQIc6U5L5n/bJ+TfIKhW8Qt47tsrEJejqb2JR
ccHTomKF6o/OXib8DxD9e3v69860f0T/CAQC4Z1Ep387J/TtNexT3UjO1vFN
O/Pt3720xVZBkYX8689PjtBqeWW6tndSi5AYoQvkleynzA0tXJy9mrhZNHKe
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
8Oc/jHcj7BsIgUAgEN4M/w+Gz1YR
    "], {{0, 554}, {853, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> False],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{853, 554},
  PlotRange->{{0, 853}, {0, 554}}]], "Input",
 CellChangeTimes->{
  3.8130422452361565`*^9, 3.8131328567231054`*^9, {3.813150462952524*^9, 
   3.8131504656835785`*^9}, {3.813402076110377*^9, 3.813402083900344*^9}, 
   3.8139963658824496`*^9, 3.814027814222474*^9, 3.814339281863591*^9, 
   3.814693212706772*^9},
 ExpressionUUID -> "646e08c8-7bc0-4fb1-bbcf-48291ea55b0d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], "*)"}],
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "These", " ", "values", " ", "of", " ", "refractive", " ", "index", " ", 
    "for", " ", "the", " ", "most", " ", "common", " ", "optical", " ", 
    "glasses", " ", "and", " ", "birefringent", " ", "materials", " ", "are", 
    " ", 
    RowBox[{"defined", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
  GraphicsBox[{{{{}, {}, 
      TagBox[
       {RGBColor[0.915, 0.3325, 0.2125], AbsoluteThickness[1.6], Opacity[1.], 
        LineBox[CompressedData["
1:eJwV13k8VF8bAPAxIWslfkKWyJalRUgqzyRbSAjJliVbJULWypIlS8kWIkvR
orIropQllNKCso1mjNHMhLGF3Jv3vH/N5/u59z7nPM85cxZZd39rTyKBQNDj
IBD+/yv9Imh3GWsQyl5yZht8x+FdioXd4u9BSIv1fiiCbDc09Fn07yDUWR05
rdWPA13Z20xn/RD82Cazxe4bDiGh8x2nRIYAm/n7KeQLDtzvokiRskOwrWUg
IacXB0WPXK3XB4bA1/nmnx8fcHheLV81ZjIEN9TOVqx042BEqFbhsBuCmlVD
L4kuHLzudssYBAzB3zy837Edhwff//K+Lx2ClIHz9eRmHLQVE+NY1UNQVWbi
t/YS9TdYeE2gZQj6guUVtjWi/gmpLRwfHAIp4ZEst3rUvrkzuV9wGCqOmwXT
nqF4b1pqKCHD8Llrx15mIYq30Vx9XdwwLORwsfjuonjOPx7Kpw+DuDflnmo+
iveXXeD9ZBjcuPI2++WgfI9e2ZLUMAwJfcHvb2SjfHN5M8o7hqH8vmVsRSYO
t+nZAj1fh+FToJpubzpqX0sucWpsGOYO88zNpKH8r1VwbJwaBmvDYrC4ifL/
qnt5999hmDqaFvkvFeXvf+JikMgIyJ3wm3dJRv19HOe4YjICqZ47xmXiceh5
pXl91HYEbKtq9Aau4TD/hVb31n0EZFYP3EmNxYH012BD8uURqLllYbUShcOw
KddbiaoR+NEU1PI1AodNv+MVD24ZBfnNr/PjA3CI2Jk4e3ViFF69trZhOeJQ
rL9P2mNuFBJ4RypLHHDotJs0NV4bBUsbT377UziIRBmXbhQnwzgjtLXdDofK
3vUni83JwPvf3d2FVjgMjL+4FneKDF9PK6baWOKALXlX+XiRoaC8cpLvOA6m
27p490STYReptTDUHIcAzTDt/26QYSXZ7K+6GQ45JsoeK3lkaO3vs6UdxYEW
cL35bS0ZbM9NClgZ48AXr8Moe0OGvkJFZ3UjHPbk/fov+SMZSrMiw6UNcbj6
1sTfepIMBtEKNYQjOJT1L+drL5BBJCTi0+xhVD/Goy4JjjGgnetlUkk4zOH2
i/8Ex6DOTX59H+AgvplXblxiDJxnxHzf6aF6KjZadCqNwUG/sd7FQ2h8dH0j
n2iOgSSrTFsBuc69uy/IYgyG6RqccQdwsKhNSuSMHYNTZPOiwzo43DOzmOS7
OQZLpyT4o/bh8Gd8s7HQnTG43T8Z0qyNQ6FIAbd0zRh864m12KeFw8ylivh9
1DGwaGrA1TRwMClgHNaS/Qn6ufJOYmo4MF02kHxifoKaNSY2I4PG4wnb/1zi
T/jwsTtODVlv6WvRhRs/wfdoDttXGoeMtJy14Lyf8ICk0UWTxEH3zbaWmOqf
ILvLJ3RIHIcU2b16+ZSfICrQ198hjIMa7eTBT4cpsNbxJKNgPQ7JNo4GJ0wo
0M/tktXNjQOj3cX8hwUFyo033f7DheZnmacT1ZECdt3BeZacOHCK+p7xdqeA
Gp9S/pV1OHgknD//24cCHGaDBeVEHFr/+Adf9KfA95SUwu8cOGzzDrr85xIF
nvUcKuZEvvo9JC7yMgUuZQvetCHgMGockUq4RgFPt6jpljUM7ijHFPDdooDh
invl7X8YiDBvNkuXU4Bzh8oeAwyDQIeM9vtVFFhYyE+vXMXgy/vsHuUXFBh/
IzgngXzzScGIRjsF2uxna2ZXMODxK8eMyBSIvd6gWbSEAT7TcdB/MxUIv4x0
/s5h4OTabbAgRgV2bUOuJ/LLzz3m4TJU+BmlsvJ5FoOw6m9O19So0LJlw8uH
bAzmAimXc4yocNW4/4DtNAb0Ray5JYIK+AMPqGJgYOBF6DCIocJUYH/RVuT7
A+s+didSYUTPmJD4CwPXF3yj37Ko0Dyg8tZ5EoOhMDF8soIKkdxz+vwTGOgw
tnL51VPh3FeP+yE0DHJOyQjONVHBsbB/HXUcAxtdRSmsiwq62o3tDVQMasp3
KMT0UkGFqKogjyy0VV2dewA9nxbWOEHBICBlt1bKCBWGea12Pf2JwafVvYc2
jaP++9SRdZCPVLx1UWRQgZJ9d9/HMQwaXI9HH5yhgkFbwi035PsdZ9t8VqnA
J31KP5mM6pFWcvSt8Djc/oaXDY9gsH37RrtAg3F4pmfsd3UQPTdlXugrG4cR
kaHVtq8YTGGht5hPxgH022zskd0ruWoINeNwz//ps99fMDgmIruo9nocfN5f
Pf0fshz5ZGT8wDgsRG1v8+rFoOdiR6L2ehrws84n8/ZgIJtXXJzrQ4ODSTqM
4g4Ubydp660LNHhu/mjsCPK9trHsxGAa7N4kNkBvx0B+WjolJJoG8jlLrWrI
ikfuXrLJpYFA2fOChlYMVKbyTDd10aBoB3vkVwsGmoczFxKVJqBSlzb68iUG
wQMa/lHqE3DlaOp4AHL9ua+MkL0TYG6vyVBE1r4tNOYJE8C8FLeQ0YjBflZa
95GTEyBfLc9/rgEDvezUwrWECbij5Kmz9TkGJox4k1D6BCSI0DMiqzF4dc8o
n/17AjKeVlmoIms4rZ/2nZ+AQoNIvuEqDCR7r2c6EejwInhTrC4yuy6FfFiC
DpN9uhdXKjDIi04PFrCgg3F22vHQpxhs0LXujLehwwl1B34l5Lj5zRJrDnQ4
3SHfOfAEgwteWS2z3nQIXWzU00bWN8/h+x5Dh0e2NPXFxxi84LJ3trxOh7qp
CkYpslqLWFX3TTq8iQ8vs0EuCRskHsmmQ4+UgRsnsqjGHdvmfDr8qN8gVfcI
gxSWwyOte3TQeUY/5odMKNu6WvGIDhJupWQtZOaWu8Ul9XQgd8kQOh9icPqL
87xEM4p/efRWGnJfsrRRVisdSnbny9ojv8aLWAm9dPDMFT3CeIBBxvg97fMM
Okx5CybwIx+ofNSjLTUJGPcqv2UpBqlGdcsf4iZB3HBgy2AxBmL6a2cGkifh
ffFulzLk0kOmX37emoRILLn0InKT5s/HiwWTMFoLe/iQmXICjjL1k1Ai99j0
QBEGR9c8XgVOTIIy4fKVu3cx4G4QjhU3+gXaTbLjbncwiNkRxO+9ngEn9vhV
MDNRPY+OHZ8XZECc/UJBDTLR1ywrSoQB9VGRKRHIsY+2S+XKMkDsU5IPH3Kc
Ut/O7gMMGDn7QE4lA4MEBS1r1QAGeJaO3fa9hUGy7FLuzA8GhGyxjvqVioHp
YY/RyDEGPNQb9KtC5nPrleWhM+CHp6tTGHJK8cPybfMMOFB3YT8PcqqMfbOV
IBPWLFPmlVLQ+ijVOFZ7mAnXk9u9vZNQPcUjFcPKmZCHa1vS4zGQllxpm6hi
gso1LcNK5MfSoW4nXjDhJY+mbhjym+1BBTvbmTAsvEeeD3lG/dzmiVEmSKmo
LqvHYRCxm1FpTWNCReWOqT/XUL32eh97w2SCnpYytQVZWsfjev4SE06TFHqs
kM31Hf9ZCbHgnp1M8aVYDH4YDOa3bGGBxohUth6yh/HJ/erSLGhzk0xejxxh
fiKYR5UFtPPiwXkxKP7xL0Ihe1gQPLfF1x053ep45fg+FnCFibqoIkvafDS3
0mNBNi5yYiEag0d2ZszXBixoXr6y+y2y5qnuRDUzFjwTZbUXIbc4GivcsWJB
oab9qavIA65HXC+5sCA6QCP2ADLXuQMDqmEsMPhF/1YfhcEtv8agvKss0OK2
8clClgzYJ7Q+ngWK8m+xQGTNS3vNqeks4HHNV9iN7B6l2pr7hAU934+Hll9F
8ztzawXXGAtsOhskiq6g9bN5NX7M8DeceZDsdj0SAwkOzkNks9/gLJ2s7Yv8
ylBgYcTqN9jeTuI3RSb2SroPOf8Gw4Tr9fzIKZRDev2XfoOCVwJvWgQGhdzR
f96X/Qa6Qmx1djgG7Zac3s+5psC7LJzjfigGGycETG50TMHZUp+SV0EYtEp4
b672nIGGh5ZSpucwqOqQaGo9NwM9JV/TVJDvBnzy6Ls4A5R8GyI/ctg7rfql
KzPAe8t+8sNZDHYGctrr3Z4BxzDX6mPI+d0ldz+8mwHcJMDQyhcD3YMXROaF
2aDPTPOz98agWqjr16ooG+xoQj91kJUnZV9xSrDhLDnTWhz5v4x+T9FtbMj8
mrNvyAutf5MHX+xXYwPtZRGHE/KDTH6HaAM2VOX73wr3xEDK13NnkjEbRCJb
hd2Qs/RaiBmmbAh3+C/HBDmGEfjkviVqX7zp7hZkJxjC3jmxof8295P6Mxhs
Zj0qErzEhpX0ux2zHmj/sxZ2PRnGRvcd/kPfkTVfXtlWEskGk9/hdc3IdknW
JZqxbLhtZHc/EfmOEnbPMY0NGqsbYqSQ5c4cf/D4MRvOnYk+eNQdg9oPjV7z
T9mQkT5duxPZYK+80qEqNjS+dlIVQfYirjz8/JwN68X3S4y5YVBefO/xUhsb
Sj/OLgUja4wuPjUks2FU26O22BWDNgNXvzQKGzjPfFFJQLZ5+l59kMYG1XS4
dw45JLKo4jwL5c/amq6NvH6c1//5NBuKxZJ5JJFzTYN3EebY0Gm4HMWBvKOG
PHN0kQ3TgV5L9NPoPCR+tCpzmQ0fWMXm35DNYmoDRldR/1SonW+QR35J7VFa
Q/X02X6kAvnfi7nql1yz8JJWtj8JWd+uoJayeRYej5YrAvK3V9zBqqKzMLH1
d4ka8hmFi5qXxGdB1kFdSgI5YcGwnmfbLOQOVAovumDwPmPm+S71WUjsrSM8
Qbbq1X95xXgWvN6+HhJFNlHWVmownQX1BcunnMh6MTuy5o7NwqLi+JU5Z7R/
7d10wdtmFq6lrpf9hMydMypr5TYLJSctveORm13CkuQjZ2FkijI/74TOB9PP
7D9UzIK1BJfgF0cMVgXEl8RE50AvyAxSTmFw5cY+z+8Dc6Do+fL5MVsMbmRF
fP/8cB4KQbKjzhLVm8wVOXV2AZQcXOm+5hh0x3wkaaksQnYOJV/TBI3nk0a+
hpVFyHxl++v+EZS/2DSXS9MfKNn+1NgNMHjKb8wFN5YAAhcPteliMOb6USv0
1hJwpcpIViNvfn7CqzJzCT6UHf1biBzq6topc2cJTg7efR6BrF8fnkR4uAT+
JKNdGsg/XJ4Ktr5ZguINOdtK9qP1q0ZI1HBhCQhPdNZF6aDz5vpcoytLS/Cu
3Z1yHvmsk3Ro/d8luEFObXFA/syt+kOBYxndmyiR2sgFjgZ3uDcsw57wpIWp
fWg+coVKdyktg5vx0IQTsov9iKKZ4zK0jkd26Wqj9z8p0cxcluF6wix5B/KQ
QVCJudsyHN/hvSiGfHIPn6SF9zIMX7CWW9LCwJJPR8gqaBkWV5Qv1yIfbs5c
tUtZBm5e0euALL/N7LN70zKoSoh5+2piwJhsDI/YugIhByUVXmmg9fBf02ca
awV0XF3MJHdhMG/HfSqw4i9E11bvb1TF4DjvjXWqfqsQvzX8gLcyOq/p69RI
H8TguXvEZI88Gu9XqhlaOAbnB1MdA2TRfH9zJCTxE7r37RoM/yCFzoNcpSlY
+j94XqftekYC/Z9KSW0FVmswbMHjsGELWm9o0WtNmwikfhYj0FIY7Ue5XNpN
FwkkOf0bTV0b0X6SVjD9fYhA2nlFzmeRH9W31kqHT5+D1LG6cXovDzpPrpRL
WNzjIB2b4uGp5cRgPEY0qpKPSMpqm4+nE9B+/obPTEuASGosOGD3A1lz7Z9o
kyCRRL50TfE9ctzlyYp3m4gkZWXhzmfIiqEN5FFRIqkpVYPnEvLZ8w56AtuJ
JKrtxeR1yGy7QtznAJG0+9f0zW1rq5CbndE9fZBIsn2rfXoz8uG+hOxgPSIp
4s7VXZzIGVb+6tGHiaR28w2fJ/+twl5zknOOMZF0slpdqBI55DC1ueMEkXQ1
4nzmIWRMVfGy3HkiqUeAmeOAr8LJcZfCYj8iiWCcU2mOXHMn5420P5G0N8ag
Uw/Zl5eXa2sgkZS3WPhHDnmAzrohHEYkeZJP2LKwVdhTKF+VHk4k5Ypx+I0i
p9o6f90YSSR9sK6I60U+0v5JVOAqkbSnk6euFrmqpLqIM45Iwitfbb6MzH+K
+TY2HuXLPKtyAdlr03YaIZFI8pAX03dFlorKUsaTiKT3uYEXDZDDtD+aRqag
77/KJGkj901x+a2kou8FPxYrIyc7hVYvphFJt2OUPgsgTwhXfQtKJ5K6m/pQ
eVaB9OHX4mwGkYQtxqyxkfNjZcUCsoikXbt3bRlH/rPfQXc6m0hyPzuysx/Z
ajbD6XwOkZRdmmTUifz00YerzFwiqYus7dKInO6WG3w7j0g6XSQkWYv8P/5i
KW8=
         "]]},
       Annotation[#, "Charting`Private`Tag$68537#1"]& ], 
      TagBox[
       {RGBColor[0.83, 0.46, 0.], AbsoluteThickness[1.6], Opacity[1.], 
        LineBox[CompressedData["
1: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
jHSC7DMK/tGKXu3EmeOaQZDN2RxT9ej/A9jRfBs=
         "]]},
       Annotation[#, "Charting`Private`Tag$68537#2"]& ], 
      TagBox[
       {RGBColor[0.9575, 0.545, 0.11475], AbsoluteThickness[1.6], Opacity[1.],
         LineBox[CompressedData["
1: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
ZinDej4xuWFK7fTLRraMOuX6wSID6v8BaslUfQ==
         "]]},
       Annotation[#, "Charting`Private`Tag$68537#3"]& ], 
      TagBox[
       {RGBColor[1., 0.7575, 0.], AbsoluteThickness[1.6], Opacity[1.], 
        LineBox[CompressedData["
1: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
Ig==
         "]]},
       Annotation[#, "Charting`Private`Tag$68537#4"]& ], 
      TagBox[
       {RGBColor[0.6175, 0.715, 0.], AbsoluteThickness[1.6], Opacity[1.], 
        LineBox[CompressedData["
1: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
Op2OJxT18eYsI/8f/68MVw==
         "]]},
       Annotation[#, "Charting`Private`Tag$68537#5"]& ], 
      TagBox[
       {RGBColor[0.15, 0.715, 0.595], AbsoluteThickness[1.6], Opacity[1.], 
        LineBox[CompressedData["
1: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
+tT/A4XBzGI=
         "]]},
       Annotation[#, "Charting`Private`Tag$68537#6"]& ]}, {}, {}}, {{}, {
      {RGBColor[0.3625, 0.545, 0.85], AbsolutePointSize[6], AbsoluteThickness[
       1.6], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"\[Square]\"\>",
          StripOnInput->False,
          FontSize->15], {0., 0.}], {{{0.8, 1.5462}}, {{0.8, 1.4819}}, {{0.8, 
        1.4633}}, {{0.8, 1.3867}}, {{0.8, 1.5472}}, {{0.8, 1.7522}}, {{0.8, 
        1.6614}}, {{0.8, 1.6488}}, {{0.8, 1.5015}}, {{0.8, 1.3751}}, {{0.8, 
        1.5383}}, {{0.8, 1.76013}}, {{0.8, 1.4533}}, {{0.8, 
        1.0002663791983342`}}, {{0.8, 1.5108}}, {{0.8, 1.7761}}}]}, 
      {RGBColor[0.677, 0.358, 0.595], AbsolutePointSize[6], AbsoluteThickness[
       1.6], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"\[Square]\"\>",
          StripOnInput->False,
          FontSize->15], {0., 0.}], {{{0.633, 1.5506}}, {{0.633, 1.4819}}, {{
        0.633, 1.4669}}, {{0.633, 1.3888}}, {{0.633, 1.5516}}, {{0.633, 
        1.7579}}, {{0.633, 1.668}}, {{0.633, 1.6488}}, {{0.633, 1.5074}}, {{
        0.633, 1.377}}, {{0.633, 1.5426}}, {{0.633, 1.766}}, {{0.633, 
        1.457}}}]}, {}}, {}, {}, {{}, {}}}, {{{}, {
       {GrayLevel[0], AbsolutePointSize[6], AbsoluteThickness[1.6], 
        GeometricTransformationBox[
         TagBox[InsetBox["neBBO633", {0., 0.}],
          "InsetString"], {{{0.553, 1.5506}}, {{0.553, 
         1.5506}}}]}, {}}, {}, {}, {{}, {}}}, {{}, {
       {GrayLevel[0], AbsolutePointSize[6], AbsoluteThickness[1.6], 
        GeometricTransformationBox[
         TagBox[InsetBox["neCCO633", {0., 0.}],
          "InsetString"], {{{0.553, 1.4819}}, {{0.553, 
         1.4819}}}]}, {}}, {}, {}, {{}, {}}}, {{}, {
       {GrayLevel[0], AbsolutePointSize[6], AbsoluteThickness[1.6], 
        GeometricTransformationBox[
         TagBox[InsetBox["neKDP633", {0., 0.}],
          "InsetString"], {{{0.553, 1.4669}}, {{0.553, 
         1.4669}}}]}, {}}, {}, {}, {{}, {}}}, {{}, {
       {GrayLevel[0], AbsolutePointSize[6], AbsoluteThickness[1.6], 
        GeometricTransformationBox[
         TagBox[InsetBox["neMgF633", {0., 0.}],
          "InsetString"], {{{0.553, 1.3888}}, {{0.553, 
         1.3888}}}]}, {}}, {}, {}, {{}, {}}}, {{}, {
       {GrayLevel[0], AbsolutePointSize[6], AbsoluteThickness[1.6], 
        GeometricTransformationBox[
         TagBox[InsetBox["neQua633", {0., 0.}],
          "InsetString"], {{{0.553, 1.5616}}, {{0.553, 
         1.5616}}}]}, {}}, {}, {}, {{}, {}}}, {{}, {
       {GrayLevel[0], AbsolutePointSize[6], AbsoluteThickness[1.6], 
        GeometricTransformationBox[
         TagBox[InsetBox["neSap633", {0., 0.}],
          "InsetString"], {{{0.553, 1.7579}}, {{0.553, 
         1.7579}}}]}, {}}, {}, {}, {{}, {}}}, {{}, {
       {GrayLevel[0], AbsolutePointSize[6], AbsoluteThickness[1.6], 
        GeometricTransformationBox[
         TagBox[InsetBox["noBBO633", {0., 0.}],
          "InsetString"], {{{0.553, 1.668}}, {{0.553, 
         1.668}}}]}, {}}, {}, {}, {{}, {}}}, {{}, {
       {GrayLevel[0], AbsolutePointSize[6], AbsoluteThickness[1.6], 
        GeometricTransformationBox[
         TagBox[InsetBox["noCCO633", {0., 0.}],
          "InsetString"], {{{0.553, 1.6488}}, {{0.553, 
         1.6488}}}]}, {}}, {}, {}, {{}, {}}}, {{}, {
       {GrayLevel[0], AbsolutePointSize[6], AbsoluteThickness[1.6], 
        GeometricTransformationBox[
         TagBox[InsetBox["noKDP633", {0., 0.}],
          "InsetString"], {{{0.553, 1.5074}}, {{0.553, 
         1.5074}}}]}, {}}, {}, {}, {{}, {}}}, {{}, {
       {GrayLevel[0], AbsolutePointSize[6], AbsoluteThickness[1.6], 
        GeometricTransformationBox[
         TagBox[InsetBox["noMgF633", {0., 0.}],
          "InsetString"], {{{0.553, 1.377}}, {{0.553, 
         1.377}}}]}, {}}, {}, {}, {{}, {}}}, {{}, {
       {GrayLevel[0], AbsolutePointSize[6], AbsoluteThickness[1.6], 
        GeometricTransformationBox[
         TagBox[InsetBox["noQua633", {0., 0.}],
          "InsetString"], {{{0.553, 1.5426}}, {{0.553, 
         1.5426}}}]}, {}}, {}, {}, {{}, {}}}, {{}, {
       {GrayLevel[0], AbsolutePointSize[6], AbsoluteThickness[1.6], 
        GeometricTransformationBox[
         TagBox[InsetBox["noSap633", {0., 0.}],
          "InsetString"], {{{0.553, 1.771}}, {{0.553, 
         1.771}}}]}, {}}, {}, {}, {{}, {}}}, {{}, {
       {GrayLevel[0], AbsolutePointSize[6], AbsoluteThickness[1.6], 
        GeometricTransformationBox[
         TagBox[InsetBox["nUVFS633", {0., 0.}],
          "InsetString"], {{{0.553, 1.457}}, {{0.553, 
         1.457}}}]}, {}}, {}, {}, {{}, {}}}}, {{{}, {
       {GrayLevel[0], AbsolutePointSize[6], AbsoluteThickness[1.6], 
        GeometricTransformationBox[
         TagBox[InsetBox["neBBO800", {0., 0.}],
          "InsetString"], {{{0.88, 1.5512}}, {{0.88, 
         1.5512}}}]}, {}}, {}, {}, {{}, {}}}, {{}, {
       {GrayLevel[0], AbsolutePointSize[6], AbsoluteThickness[1.6], 
        GeometricTransformationBox[
         TagBox[InsetBox["neCCO800", {0., 0.}],
          "InsetString"], {{{0.88, 1.4819}}, {{0.88, 
         1.4819}}}]}, {}}, {}, {}, {{}, {}}}, {{}, {
       {GrayLevel[0], AbsolutePointSize[6], AbsoluteThickness[1.6], 
        GeometricTransformationBox[
         TagBox[InsetBox["neKDP800", {0., 0.}],
          "InsetString"], {{{0.88, 1.4683}}, {{0.88, 
         1.4683}}}]}, {}}, {}, {}, {{}, {}}}, {{}, {
       {GrayLevel[0], AbsolutePointSize[6], AbsoluteThickness[1.6], 
        GeometricTransformationBox[
         TagBox[InsetBox["neMgF800", {0., 0.}],
          "InsetString"], {{{0.88, 1.3867}}, {{0.88, 
         1.3867}}}]}, {}}, {}, {}, {{}, {}}}, {{}, {
       {GrayLevel[0], AbsolutePointSize[6], AbsoluteThickness[1.6], 
        GeometricTransformationBox[
         TagBox[InsetBox["neQua800", {0., 0.}],
          "InsetString"], {{{0.88, 1.5672}}, {{0.88, 
         1.5672}}}]}, {}}, {}, {}, {{}, {}}}, {{}, {
       {GrayLevel[0], AbsolutePointSize[6], AbsoluteThickness[1.6], 
        GeometricTransformationBox[
         TagBox[InsetBox["neSap800", {0., 0.}],
          "InsetString"], {{{0.88, 1.7472}}, {{0.88, 
         1.7472}}}]}, {}}, {}, {}, {{}, {}}}, {{}, {
       {GrayLevel[0], AbsolutePointSize[6], AbsoluteThickness[1.6], 
        GeometricTransformationBox[
         TagBox[InsetBox["noBBO800", {0., 0.}],
          "InsetString"], {{{0.88, 1.6614}}, {{0.88, 
         1.6614}}}]}, {}}, {}, {}, {{}, {}}}, {{}, {
       {GrayLevel[0], AbsolutePointSize[6], AbsoluteThickness[1.6], 
        GeometricTransformationBox[
         TagBox[InsetBox["noCCO800", {0., 0.}],
          "InsetString"], {{{0.88, 1.6488}}, {{0.88, 
         1.6488}}}]}, {}}, {}, {}, {{}, {}}}, {{}, {
       {GrayLevel[0], AbsolutePointSize[6], AbsoluteThickness[1.6], 
        GeometricTransformationBox[
         TagBox[InsetBox["noKDP800", {0., 0.}],
          "InsetString"], {{{0.88, 1.5015}}, {{0.88, 
         1.5015}}}]}, {}}, {}, {}, {{}, {}}}, {{}, {
       {GrayLevel[0], AbsolutePointSize[6], AbsoluteThickness[1.6], 
        GeometricTransformationBox[
         TagBox[InsetBox["noMgF800", {0., 0.}],
          "InsetString"], {{{0.88, 1.3751}}, {{0.88, 
         1.3751}}}]}, {}}, {}, {}, {{}, {}}}, {{}, {
       {GrayLevel[0], AbsolutePointSize[6], AbsoluteThickness[1.6], 
        GeometricTransformationBox[
         TagBox[InsetBox["noQua800", {0., 0.}],
          "InsetString"], {{{0.88, 1.5383}}, {{0.88, 
         1.5383}}}]}, {}}, {}, {}, {{}, {}}}, {{}, {
       {GrayLevel[0], AbsolutePointSize[6], AbsoluteThickness[1.6], 
        GeometricTransformationBox[
         TagBox[InsetBox["noSap800", {0., 0.}],
          "InsetString"], {{{0.88, 1.76013}}, {{0.88, 
         1.76013}}}]}, {}}, {}, {}, {{}, {}}}, {{}, {
       {GrayLevel[0], AbsolutePointSize[6], AbsoluteThickness[1.6], 
        GeometricTransformationBox[
         TagBox[InsetBox["nUVFS800", {0., 0.}],
          "InsetString"], {{{0.88, 1.4533}}, {{0.88, 
         1.4533}}}]}, {}}, {}, {}, {{}, {}}}, {{}, {
       {GrayLevel[0], AbsolutePointSize[6], AbsoluteThickness[1.6], 
        GeometricTransformationBox[
         TagBox[InsetBox["refIndexAir", {0., 0.}],
          "InsetString"], {{{0.88, 1.0002663791983342`}}, {{0.88, 
         1.0002663791983342`}}}]}, {}}, {}, {}, {{}, {}}}, {{}, {
       {GrayLevel[0], AbsolutePointSize[6], AbsoluteThickness[1.6], 
        GeometricTransformationBox[
         TagBox[InsetBox["refIndexNBK7800", {0., 0.}],
          "InsetString"], {{{0.88, 1.5208}}, {{0.88, 
         1.5208}}}]}, {}}, {}, {}, {{}, {}}}, {{}, {
       {GrayLevel[0], AbsolutePointSize[6], AbsoluteThickness[1.6], 
        GeometricTransformationBox[
         TagBox[InsetBox["refIndexSLAH800", {0., 0.}],
          "InsetString"], {{{0.88, 1.7761}}, {{0.88, 
         1.7761}}}]}, {}}, {}, {}, {{}, {}}}}, {{{}, {
       {RGBColor[0.915, 0.3325, 0.2125], AbsolutePointSize[6], 
        AbsoluteThickness[1.6], GeometricTransformationBox[
         TagBox[InsetBox["refIndexNSF6", {0., 0.}],
          "InsetString"], {{{2.325, 1.77895}}, {{2.325, 
         1.77895}}}]}, {}}, {}, {}, {{}, {}}}, {{}, {
       {RGBColor[0.83, 0.46, 0.], AbsolutePointSize[6], AbsoluteThickness[
        1.6], GeometricTransformationBox[
         TagBox[InsetBox["refIndexNBK7", {0., 0.}],
          "InsetString"], {{{2.3254, 1.51921}}, {{2.3254, 
         1.51921}}}]}, {}}, {}, {}, {{}, {}}}, {{}, {
       {RGBColor[0.6175, 0.715, 0.], AbsolutePointSize[6], AbsoluteThickness[
        1.6], GeometricTransformationBox[
         TagBox[InsetBox["refIndexMgF2", {0., 0.}],
          "InsetString"], {{{2., 1.344}}, {{2., 
         1.344}}}]}, {}}, {}, {}, {{}, {}}}}, {{{}, {
       {RGBColor[0.9575, 0.545, 0.11475], AbsolutePointSize[6], 
        AbsoluteThickness[1.6], GeometricTransformationBox[
         TagBox[InsetBox["refIndexUVFS", {0., 0.}],
          "InsetString"], {{{2.1, 1.42659}}, {{2.1, 
         1.42659}}}]}, {}}, {}, {}, {{}, {}}}, {{}, {
       {RGBColor[1., 0.7575, 0.], AbsolutePointSize[6], AbsoluteThickness[
        1.6], GeometricTransformationBox[
         TagBox[InsetBox["refIndexCaF2", {0., 0.}],
          "InsetString"], {{{1.97009, 1.413965}}, {{1.97009, 
         1.413965}}}]}, {}}, {}, {}, {{}, {}}}, {{}, {
       {RGBColor[0.15, 0.715, 0.595], AbsolutePointSize[6], AbsoluteThickness[
        1.6], GeometricTransformationBox[
         TagBox[InsetBox["refIndexSLAH", {0., 0.}],
          "InsetString"], {{{2.32542, 1.73466}}, {{2.32542, 
         1.73466}}}]}, {}}, {}, {}, {{}, {}}}}},
   AspectRatio->NCache[
     Rational[1, 2], 0.5],
   Axes->{False, False},
   AxesLabel->{None, None},
   AxesOrigin->{0.1, 1.3640000003918369`},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{
      FormBox["\"refractive index (adim.)\"", TraditionalForm], None}, {
      FormBox["\"wavelength (\[Mu]m)\"", TraditionalForm], None}},
   FrameStyle->Directive[
     RGBColor[
     0.22222222222222227`, 0.22222222222222227`, 0.22222222222222227`], 39, 
     Thickness[Large]],
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->{{165, 35}, {165, 35}},
   ImageSize->1250,
   LabelStyle->{FontSize -> 39, FontFamily -> "Cambria", 
     GrayLevel[0]},
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{0.1, 2.5}, {1.3640000003918369`, 1.8650556393655873`}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}]}]], "Input",
 CellChangeTimes->{{3.813422150217678*^9, 3.813422202905407*^9}, {
  3.81342252916336*^9, 3.8134225316300974`*^9}, {3.813471035221882*^9, 
  3.813471060643385*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Special", " ", "Instructions"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"SetOptions", "[", 
    RowBox[{
     RowBox[{"EvaluationNotebook", "[", "]"}], ",", 
     RowBox[{"AutoStyleOptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<CommentStyle\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"FontWeight", "\[Rule]", "Plain"}], ",", 
          RowBox[{"FontColor", "\[Rule]", 
           RowBox[{"Darker", "[", "Red", "]"}]}], ",", 
          RowBox[{"ShowAutoStyles", "\[Rule]", "False"}], ",", 
          RowBox[{"ShowSyntaxStyles", "\[Rule]", "False"}], ",", 
          RowBox[{"AutoNumberFormatting", "\[Rule]", "False"}], ",", 
          RowBox[{"FontFamily", "\[Rule]", "\"\<Consolas\>\""}]}], "}"}]}], 
       "}"}]}]}], "]"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8129731903134627`*^9, 3.812973190651091*^9}, {
   3.8130308991518793`*^9, 3.813030970304807*^9}, {3.8130310140882893`*^9, 
   3.8130310405719213`*^9}, 3.8130381698126163`*^9, 3.8134022033355036`*^9, 
   3.813549233076646*^9},
 ExpressionUUID -> "5ec6339d-b098-4ce9-af52-1ec07e7f5838"],

Cell[BoxData[{
 RowBox[{"Off", "[", 
  RowBox[{"InterpolatingFunction", "::", "dmval"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Off", "[", 
   StyleBox[
    RowBox[{
     StyleBox["Set",
      FontColor->GrayLevel[0]], 
     StyleBox["::",
      FontColor->GrayLevel[0]], 
     StyleBox["wrsym",
      FontColor->GrayLevel[0.5]]}], "MessageName"], "]"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", "Constants", " ", "*)"}]}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"um", "=", "                  ", 
    RowBox[{"10", "^", 
     RowBox[{"(", 
      RowBox[{"-", "6"}], ")"}]}]}], ";"}],
  FontSize->12,
  FontColor->RGBColor[1, 0, 0]], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"mm", "=", "                  ", 
    RowBox[{"10", "^", 
     RowBox[{"(", 
      RowBox[{"-", "3"}], ")"}]}]}], ";"}],
  FontSize->12,
  FontColor->RGBColor[1, 0, 0]], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{
    RowBox[{"waveLength", "=", 
     RowBox[{"0.8", " ", "um"}]}], ";"}],
   FontSize->36,
   FontColor->RGBColor[1, 0, 0]], "\[IndentingNewLine]", 
  StyleBox[
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"waveLength", "=", 
      RowBox[{"0.532", " ", "um"}]}], ";"}], "*)"}],
   FontSize->36,
   FontColor->RGBColor[1, 0, 0]], "\[IndentingNewLine]", 
  StyleBox[
   RowBox[{"(*", 
    RowBox[{"Select", " ", "your", " ", "main", " ", "wavelength", " ", 
     RowBox[{"here", "."}]}], "*)"}],
   FontSize->12,
   FontColor->RGBColor[1, 0, 0]]}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"k0", "=", "                  ", 
    RowBox[{"2", "*", 
     RowBox[{"Pi", "/", "waveLength"}]}]}], ";"}],
  FontSize->36,
  FontColor->RGBColor[1, 0, 0]], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Protect", "[", 
    RowBox[{"um", ",", "mm", ",", "k0", ",", "waveLength"}], "]"}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], "*)"}],
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{"Refractive", " ", "Index", " ", "for", " ", "various", " ", 
     RowBox[{"materials", "."}]}], " ", "*)"}],
   FontSize->18]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"refIndexNBK7800", "=", "1.5108"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"N", "-", 
      RowBox[{
       RowBox[{"BK7", " ", "@", " ", "800"}], " ", "nm", " ", "from", " ", 
       RowBox[{"https", ":"}]}]}], "//", 
     RowBox[{
      RowBox[{"refractiveindex", ".", "info"}], "/", 
      RowBox[{"?", "shelf"}]}]}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"glass", "&"}], "book"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"BK7", "&"}], "page"}], "=", 
      RowBox[{"SCHOTT", " ", "."}]}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"refIndexSLAH800", "=", "1.7761"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"S", "-", 
      RowBox[{
       RowBox[{"LAH64", " ", "@", " ", "800"}], " ", "nm", " ", "from", " ", 
       RowBox[{"https", ":"}]}]}], "//", 
     RowBox[{
      RowBox[{"refractiveindex", ".", "info"}], "/", 
      RowBox[{"?", "shelf"}]}]}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"glass", "&"}], "book"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"OHARA", "-", "LAH"}], "&"}], "page"}], "=", 
      RowBox[{"S", "-", 
       RowBox[{"LAH64", " ", "."}]}]}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Here", " ", "is", " ", "the", " ", "refractive", " ", "index", " ", "for",
     " ", "the", " ", "medium", " ", "between", " ", 
    RowBox[{"components", "."}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"refIndexAirTab", "=", 
   RowBox[{"{", 
    RowBox[{"1.0003128650267126", ",", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"-", " ", "source"}], " ", "Optica", " ", "Software"}], "*)"}],
      "\n", "1.0002824469995648", ",", "1.0002738810151126", ",", "\n", 
     "1.0002701958763696", ",", "1.0002682603645856", ",", "\n", 
     "1.0002671145835633", ",", "1.0002663791983342", ",", "\n", 
     "1.000265878696659", ",", "1.000265522494052", ",", "\n", 
     "1.000265259898407", ",", "1.000265060708263", ",", "\n", 
     "1.000264906006238", ",", "1.0002647834467842", ",", "\n", 
     "1.000264684692264", ",", "1.0002646039456309", ",", "\n", 
     "1.000264537074204", ",", "1.0002644810670525", ",", "\n", 
     "1.0002644336882403", ",", "1.0002643932490562", ",", "\n", 
     "1.00026435845473"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"refIndexAirTab", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{"i", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"0.2", " ", "um"}], ",", 
          RowBox[{"2.1", " ", "um"}], ",", 
          RowBox[{"0.1", " ", "um"}]}], "}"}]}], "]"}], ",", 
      "refIndexAirTab"}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"refIndexAirFun", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{"refIndexAirTab", ",", 
     RowBox[{"InterpolationOrder", "\[Rule]", "6"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"refIndexAir", "=", 
    RowBox[{"refIndexAirFun", "[", "waveLength", "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "The", " ", "refractive", " ", "index", " ", "is", " ", "evaluated", " ", 
    "at", " ", "the", " ", "working", " ", 
    RowBox[{"wavelength", "."}]}], "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"@", " ", "800"}], " ", "nm", " ", "from", " ", 
     RowBox[{"https", ":"}]}], "//", 
    RowBox[{"refractiveindex", ".", 
     RowBox[{"info", ":"}]}]}], "   ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"noKDP800", "=", "1.5015"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Potassium", " ", "Dideuterium", " ", "Phosphate", " ", 
     RowBox[{"(", "KDP", ")"}]}], ",", " ", 
    RowBox[{"ordinary", " ", "index"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"neKDP800", "=", "1.4633"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Potassium", " ", "Dideuterium", " ", "Phosphate", " ", 
     RowBox[{"(", "KDP", ")"}]}], ",", " ", 
    RowBox[{"extraordinary", " ", "index"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"noBBO800", "=", "1.6614"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"\[Beta]", "-", 
     RowBox[{"Barium", " ", "Borate", " ", 
      RowBox[{"(", "BBO", ")"}]}]}], ",", " ", 
    RowBox[{"ordinary", " ", "index"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"neBBO800", "=", "1.5462"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"\[Beta]", "-", 
     RowBox[{"Barium", " ", "Borate", " ", 
      RowBox[{"(", "BBO", ")"}]}]}], ",", " ", 
    RowBox[{"extraordinary", " ", "index"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"noMgF800", "=", "1.3751"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Magnesiun", " ", "Flouride"}], ",", " ", 
    RowBox[{"ordinary", " ", "index"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"neMgF800", "=", "1.3867"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Magnesiun", " ", "Flouride"}], ",", " ", 
    RowBox[{"extraordinary", " ", "index"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"noQua800", "=", "1.5383"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Crystal", " ", "Quartz"}], ",", " ", 
    RowBox[{"ordinary", " ", "index"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"neQua800", "=", "1.5472"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Crystal", " ", "Quartz"}], ",", " ", 
    RowBox[{"extraordinary", " ", "index"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"noSap800", "=", "1.76013"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"Sapphire", ",", " ", 
    RowBox[{"ordinary", " ", "index"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"neSap800", "=", "1.7522"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"Sapphire", ",", " ", 
    RowBox[{"extraordinary", " ", "index"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nUVFS800", "=", "1.4533"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"Ultra", "-", 
    RowBox[{"Violet", " ", "Grade", " ", "Fused", " ", "Silica"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"noCCO800", "=", "1.6488"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"Calcite", ",", " ", 
    RowBox[{"ordinary", " ", "index"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"neCCO800", "=", "1.4819"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"Calcite", ",", " ", 
    RowBox[{"extraordinary", " ", "index"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"@", " ", "633"}], " ", "nm", " ", "from", " ", 
     RowBox[{"https", ":"}]}], "//", 
    RowBox[{"refractiveindex", ".", 
     RowBox[{"info", ":"}]}]}], "   ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"noKDP633", "=", "1.5074"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Potassium", " ", "Dideuterium", " ", "Phosphate", " ", 
     RowBox[{"(", "KDP", ")"}]}], ",", " ", 
    RowBox[{"ordinary", " ", "index"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"neKDP633", "=", "1.4669"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Potassium", " ", "Dideuterium", " ", "Phosphate", " ", 
     RowBox[{"(", "KDP", ")"}]}], ",", " ", 
    RowBox[{"extraordinary", " ", "index"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"noBBO633", "=", "1.6680"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"\[Beta]", "-", 
     RowBox[{"Barium", " ", "Borate", " ", 
      RowBox[{"(", "BBO", ")"}]}]}], ",", " ", 
    RowBox[{"ordinary", " ", "index"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"neBBO633", "=", "1.5506"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"\[Beta]", "-", 
     RowBox[{"Barium", " ", "Borate", " ", 
      RowBox[{"(", "BBO", ")"}]}]}], ",", " ", 
    RowBox[{"extraordinary", " ", "index"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"noMgF633", "=", "1.3770"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Magnesiun", " ", "Flouride"}], ",", " ", 
    RowBox[{"ordinary", " ", "index"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"neMgF633", "=", "1.3888"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Magnesiun", " ", "Flouride"}], ",", " ", 
    RowBox[{"extraordinary", " ", "index"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"noQua633", "=", "1.5426"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Crystal", " ", "Quartz"}], ",", " ", 
    RowBox[{"ordinary", " ", "index"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"neQua633", "=", "1.5516"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Crystal", " ", "Quartz"}], ",", " ", 
    RowBox[{"extraordinary", " ", "index"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"noSap633", "=", "1.7660"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"Sapphire", ",", " ", 
    RowBox[{"ordinary", " ", "index"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"neSap633", "=", "1.7579"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"Sapphire", ",", " ", 
    RowBox[{"extraordinary", " ", "index"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nUVFS633", "=", "1.4570"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"Ultra", "-", 
    RowBox[{"Violet", " ", "Grade", " ", "Fused", " ", "Silica"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"noCCO633", "=", "1.6488"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"Calcite", ",", " ", 
    RowBox[{"ordinary", " ", "index"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"neCCO633", "=", "1.4819"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"Calcite", ",", " ", 
    RowBox[{"extraordinary", " ", "index"}]}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"refIndexNSF6Fun", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.047*^-7", ",", "1.86506"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.358*^-7", ",", "1.84738"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.800*^-7", ",", "1.8298"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.861*^-7", ",", "1.82783"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.461*^-7", ",", "1.81266"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.876*^-7", ",", "1.80518"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.893*^-7", ",", "1.80491"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6.328*^-7", ",", "1.79883"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6.428*^-7", ",", "1.79749"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6.563*^-7", ",", "1.79608"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"7.065*^-7", ",", "1.79114"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"8.521*^-7", ",", "1.78144"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.0140*^-6", ",", "1.77486"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.0600*^-6", ",", "1.77341"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.5296*^-6", ",", "1.76307"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.9701*^-6", ",", "1.75541"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.3254*^-6", ",", "1.74895"}], "}"}]}], "}"}], ",", 
     RowBox[{"InterpolationOrder", "\[Rule]", "6"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"refIndexNSF6", "=", 
    RowBox[{"refIndexNSF6Fun", "[", "waveLength", "]"}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"https", ":"}], "//", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"shop", ".", "schott", ".", "com"}], "/", "medias"}], "/", 
       "SCHOTT"}], "-", "datasheet", "-", "N", "-", 
      RowBox[{"SF6", ".", 
       RowBox[{"pdf", "?", "context"}]}]}]}], "=", 
    "bWFzdGVyfHJvb3R8NDgyODE3fGFwcGxpY2F0aW9uL3BkZnxoMjIvaGRkLzg4MjI1NjQ3ODIxM\
TAucGRmfDk3YmIyMzgwMWFlMjk4NDYxOWRkYzdmZTM2MmNkNmM0NjQwM2VkNWIxYThiYmI4MzlhMDg\
3ZDUzYTRiMmI0YWE"}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"refIndexNBK7Fun", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3.126*^-7", ",", "1.54862"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.341*^-7", ",", "1.54272"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.650*^-7", ",", "1.53627"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.047*^-7", ",", "1.53024"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.358*^-7", ",", "1.52668"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.800*^-7", ",", "1.52283"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.861*^-7", ",", "1.52238"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.461*^-7", ",", "1.51872"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.876*^-7", ",", "1.5168"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.893*^-7", ",", "1.51673"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6.328*^-7", ",", "1.51509"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6.438*^-7", ",", "1.51472"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6.563*^-7", ",", "1.51432"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"7.065*^-7", ",", "1.51289"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"8.521*^-7", ",", "1.5098"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.0140*^-6", ",", "1.50731"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.0600*^-6", ",", "1.50669"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.5296*^-6", ",", "1.50091"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.9701*^-6", ",", "1.49495"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.3254*^-6", ",", "1.48921"}], "}"}]}], "}"}], ",", 
     RowBox[{"InterpolationOrder", "\[Rule]", "6"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"refIndexNBK7", "=", 
    RowBox[{"refIndexNBK7Fun", "[", "waveLength", "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"https", ":"}], "//", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"shop", ".", "schott", ".", "com"}], "/", "medias"}], "/", 
       "schott"}], "-", "datasheet", "-", "n", "-", "bk7", "-", 
      RowBox[{"eng", ".", 
       RowBox[{"pdf", "?", "context"}]}]}]}], "=", 
    "bWFzdGVyfHJvb3R8NjkxODAwfGFwcGxpY2F0aW9uL3BkZnxoZTUvaDM4Lzg4MTAzMTYxMDM3M\
TAucGRmfGJjNmI4ZjFmY2Q1NjMxMTE0MjkzMTUwOGRmMTUzOTg2NWJjZTgzMjA0OTc2NTNiMThjN2R\
hMjI4NGZmMWM4MWU"}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"refIndexUVFSFun", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1.900*^-7", ",", "1.56572"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.000*^-7", ",", "1.55051"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.139*^-7", ",", "1.53431"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.267*^-7", ",", "1.52275"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.302*^-7", ",", "1.52008"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.399*^-7", ",", "1.51337"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.483*^-7", ",", "1.50840"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.652*^-7", ",", "1.50003"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.753*^-7", ",", "1.49591"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.803*^-7", ",", "1.49404"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.894*^-7", ",", "1.49099"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.967*^-7", ",", "1.48873"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.022*^-7", ",", "1.48719"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.303*^-7", ",", "1.48054"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.404*^-7", ",", "1.47858"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.511*^-7", ",", "1.47671"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.611*^-7", ",", "1.47513"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.650*^-7", ",", "1.47454"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.047*^-7", ",", "1.46962"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.358*^-7", ",", "1.46669"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.416*^-7", ",", "1.46622"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.579*^-7", ",", "1.46498"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.765*^-7", ",", "1.46372"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.861*^-7", ",", "1.46313"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.880*^-7", ",", "1.46301"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.965*^-7", ",", "1.46252"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.145*^-7", ",", "1.46156"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.320*^-7", ",", "1.46071"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.461*^-7", ",", "1.46008"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.876*^-7", ",", "1.45846"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.893*^-7", ",", "1.45840"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6.328*^-7", ",", "1.45702"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6.438*^-7", ",", "1.45670"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6.563*^-7", ",", "1.45637"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6.943*^-7", ",", "1.45542"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"7.065*^-7", ",", "1.45515"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"7.860*^-7", ",", "1.45356"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"8.200*^-7", ",", "1.45298"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"8.300*^-7", ",", "1.45282"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"8.521*^-7", ",", "1.45247"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"9.040*^-7", ",", "1.45170"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.0140*^-6", ",", "1.45024"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.0640*^-6", ",", "1.44963"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.1000*^-6", ",", "1.44920"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.2000*^-6", ",", "1.44805"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.3000*^-6", ",", "1.44692"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.4000*^-6", ",", "1.44578"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.5000*^-6", ",", "1.44462"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.5500*^-6", ",", "1.44402"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.6600*^-6", ",", "1.44267"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.7000*^-6", ",", "1.44217"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.8000*^-6", ",", "1.44087"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.9000*^-6", ",", "1.43951"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.0000*^-6", ",", "1.43809"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.1000*^-6", ",", "1.43659"}], "}"}]}], "}"}], ",", 
     RowBox[{"InterpolationOrder", "\[Rule]", "6"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"refIndexUVFS", "=", 
    RowBox[{"refIndexUVFSFun", "[", "waveLength", "]"}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"https", ":"}], "//", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"www", ".", "cvilaseroptics", ".", "com"}], "/", "media"}], 
       "/", "wysiwyg"}], "/", "cms"}], "-", 
     RowBox[{
      RowBox[{"pages", "/", "pdf"}], "/", 
      RowBox[{"material_properties", ".", "pdf"}]}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"refIndexCaF2Fun", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1.5763*^-7", ",", "1.55927"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.9300*^-7", ",", "1.501804"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.4830*^-7", ",", "1.46793"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.8040*^-7", ",", "1.458251"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.9673*^-7", ",", "1.454649"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.1257*^-7", ",", "1.451744"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.3415*^-7", ",", "1.448497"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.6501*^-7", ",", "1.444893"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.0466*^-7", ",", "1.441490"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.3583*^-7", ",", "1.439470"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.8000*^-7", ",", "1.437272"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.8613*^-7", ",", "1.437014"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.4607*^-7", ",", "1.434932"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.8756*^-7", ",", "1.433843"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.8930*^-7", ",", "1.433803"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6.3280*^-7", ",", "1.432882"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6.4385*^-7", ",", "1.432676"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6.5627*^-7", ",", "1.432455"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"7.0652*^-7", ",", "1.431667"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"8.5211*^-7", ",", "1.430024"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.01398*^-6", ",", "1.428795"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.06000*^-6", ",", "1.428506"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.52958*^-6", ",", "1.426115"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.97009*^-6", ",", "1.423965"}], "}"}]}], "}"}], ",", 
     RowBox[{"InterpolationOrder", "\[Rule]", " ", "6"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"refIndexCaF2", "=", 
    RowBox[{"refIndexCaF2Fun", "[", "waveLength", "]"}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"http", ":"}], "//", 
    RowBox[{
     RowBox[{
      RowBox[{"www", ".", "yuanch", ".", "com"}], "/", "pdf"}], "/", 
     RowBox[{"fhg", ".", "pdf"}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"refIndexMgF2Fun", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1.14*^-7", ",", "1.742"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.17*^-7", ",", "1.68"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.19*^-7", ",", "1.651"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.21*^-7", ",", "1.628"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.30*^-7", ",", "1.566"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.40*^-7", ",", "1.509"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.50*^-7", ",", "1.48"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.60*^-7", ",", "1.461"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.70*^-7", ",", "1.448"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.8*^-7", ",", "1.439"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.90*^-7", ",", "1.431"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.00*^-7", ",", "1.423"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.20*^-7", ",", "1.413"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.48*^-7", ",", "1.403"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.57*^-7", ",", "1.401"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.66*^-7", ",", "1.399"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.80*^-7", ",", "1.396"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.00*^-7", ",", "1.393"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.30*^-7", ",", "1.389"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.37*^-7", ",", "1.389"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.50*^-7", ",", "1.387"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.55*^-7", ",", "1.386"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.00*^-7", ",", "1.384"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.46*^-7", ",", "1.379"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"7.00*^-7", ",", "1.376"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.087*^-6", ",", "1.373"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.512*^-6", ",", "1.370"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.000*^-6", ",", "1.368"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.500*^-6", ",", "1.364"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.030*^-6", ",", "1.36"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.571*^-6", ",", "1.354"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.000*^-6", ",", "1.349"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.546*^-6", ",", "1.341"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.000*^-6", ",", "1.334"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.569*^-6", ",", "1.324"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6.060*^-6", ",", "1.314"}], "}"}]}], "}"}], ",", 
     RowBox[{"InterpolationOrder", "\[Rule]", "6"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"refIndexMgF2", "=", 
    RowBox[{"refIndexMgF2Fun", "[", "waveLength", "]"}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"https", ":"}], "//", 
    RowBox[{
     RowBox[{
      RowBox[{"www", ".", "crystran", ".", "co", ".", "uk"}], "/", 
      "optical"}], "-", 
     RowBox[{"materials", "/", "magnesium"}], "-", "fluoride", "-", 
     "mgf2"}]}], " ", "*)"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"refIndexSLAHFun", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3.65015*^-7", ",", "1.83016"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.04656*^-7", ",", "1.81666"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.35835*^-7", ",", "1.80888"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.4157*^-7", ",", "1.80765"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.8000*^-7", ",", "1.8006"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.8613*^-7", ",", "1.79963"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.4607*^-7", ",", "1.79196"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.8756*^-7", ",", "1.78800"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.89290*^-7", ",", "1.78785"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6.32800*^-7", ",", "1.78453"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6.43850*^-7", ",", "1.78379"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6.56270*^-7", ",", "1.78300"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"7.06520*^-7", ",", "1.78018"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"7.68190*^-7", ",", "1.77737"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"8.52110*^-7", ",", "1.77433"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.01398*^-6", ",", "1.76996"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.12864*^-6", ",", "1.76750"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.52958*^-6", ",", "1.76026"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.97000*^-6", ",", "1.75220"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.32542*^-6", ",", "1.74466"}], "}"}]}], "}"}], ",", 
     RowBox[{"InterpolationOrder", "\[Rule]", " ", "6"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"refIndexSLAH", "=", 
    RowBox[{"refIndexSLAHFun", "[", "waveLength", "]"}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"https", ":"}], "//", 
    RowBox[{
     RowBox[{"www", ".", "ohara"}], "-", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"gmbh", ".", "com"}], "/", "fileadmin"}], "/", 
       "user_upload"}], "/", "export"}], "-", 
     RowBox[{
      RowBox[{
       RowBox[{"data", "/", "pdf"}], "/", "product_datasheets"}], "/", "S"}], 
     "-", 
     RowBox[{"LAH64_English", "_.", "pdf"}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], "*)"}],
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{
    "Here", " ", "some", " ", "custom", " ", "Color", " ", "Functions", " ", 
     "are", " ", 
     RowBox[{"defined", "."}]}], " ", "*)"}],
   FontSize->18]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"val1", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "9"], ",", 
     FractionBox["23", "63"], ",", 
     FractionBox["13", "21"], ",", 
     FractionBox["47", "63"], ",", 
     FractionBox["55", "63"], ",", "1"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"val1WP", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "63"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "9"], ",", 
     FractionBox["23", "63"], ",", 
     FractionBox["4", "9"], ",", 
     FractionBox["11", "21"], ",", 
     FractionBox["38", "63"], ",", 
     FractionBox["47", "63"], ",", 
     FractionBox["55", "63"], ",", " ", "1"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"val2", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["5", "6"], ",", "1"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"val6", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "9"], ",", 
     FractionBox["23", "63"], ",", 
     FractionBox["50", "103"], ",", 
     FractionBox["115", "206"], ",", 
     FractionBox["13", "21"], ",", 
     FractionBox["145", "206"], ",", 
     FractionBox["47", "63"], ",", 
     FractionBox["55", "63"], ",", 
     FractionBox["390", "421"], ",", "1"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"val7", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["4", "5"], ",", "1"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"valsCD3", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["2", "9"], ",", 
     FractionBox["4", "9"], ",", 
     FractionBox["5", "9"], ",", 
     FractionBox["6", "9"], ",", 
     FractionBox["7", "9"], ",", 
     FractionBox["8", "9"], ",", 
     FractionBox["17", "18"], ",", "1"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"valsCD97", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["3", "10"], ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["3", "5"], ",", 
     FractionBox["7", "10"], ",", 
     FractionBox["4", "5"], ",", 
     FractionBox["9", "10"], ",", "1"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"val8", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "8"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["5", "16"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["9", "16"], ",", 
     FractionBox["3", "4"], ",", 
     FractionBox["13", "16"], ",", "1"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vals34", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["5", "64"], ",", 
     FractionBox["1", "8"], ",", 
     FractionBox["9", "64"], ",", 
     FractionBox["11", "64"], ",", 
     FractionBox["3", "16"], ",", 
     FractionBox["7", "32"], ",", 
     FractionBox["15", "64"], ",", 
     FractionBox["17", "64"], ",", 
     FractionBox["9", "32"], ",", 
     FractionBox["19", "64"], ",", 
     FractionBox["5", "16"], ",", 
     FractionBox["11", "32"], ",", 
     FractionBox["3", "8"], ",", 
     FractionBox["13", "32"], ",", 
     FractionBox["27", "64"], ",", 
     FractionBox["7", "16"], ",", 
     FractionBox["29", "64"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["33", "64"], ",", 
     FractionBox["17", "32"], ",", 
     FractionBox["35", "64"], ",", 
     FractionBox["39", "64"], ",", 
     FractionBox["41", "64"], ",", 
     FractionBox["21", "32"], ",", 
     FractionBox["43", "64"], ",", 
     FractionBox["11", "16"], ",", 
     FractionBox["45", "64"], ",", 
     FractionBox["51", "64"], ",", 
     FractionBox["13", "16"], ",", 
     FractionBox["27", "32"], ",", 
     FractionBox["31", "32"], ",", 
     FractionBox["63", "64"], ",", "1"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"vals22", "=", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      FractionBox["1", "32"], ",", 
      FractionBox["1", "8"], ",", 
      FractionBox["5", "32"], ",", 
      FractionBox["13", "64"], ",", 
      FractionBox["15", "64"], ",", 
      FractionBox["17", "64"], ",", 
      FractionBox["3", "8"], ",", 
      FractionBox["13", "32"], ",", 
      FractionBox["7", "16"], ",", 
      FractionBox["35", "64"], ",", 
      FractionBox["19", "32"], ",", 
      FractionBox["41", "64"], ",", 
      FractionBox["21", "32"], ",", 
      FractionBox["11", "16"], ",", 
      FractionBox["23", "32"], ",", 
      FractionBox["3", "4"], ",", 
      FractionBox["51", "64"], ",", 
      FractionBox["53", "64"], ",", 
      FractionBox["29", "32"], ",", 
      FractionBox["15", "16"], ",", "1"}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"col1", "=", 
    RowBox[{"{", 
     RowBox[{
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 
             Rational[9, 16]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.375],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 9/16]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 
              Rational[9, 16]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 
        Rational[9, 16]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 1],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 
             Rational[1, 2], 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.3333333333333333, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 1.35 CurrentValue["FontCapHeight"]/
             AbsoluteCurrentValue[Magnification]}],
          PlotRangePadding->None],
         "RGBColor[1, 1/2, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 
              Rational[1, 2], 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 
        Rational[1, 2], 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[1, 2], 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.3333333333333333, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1/2, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[1, 2], 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[1, 2], 0, 0],
       Editable->False,
       Selectable->False]}], "}"}]}], ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"col1WP", "=", 
    RowBox[{"{", 
     RowBox[{
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[17, 20], 
             Rational[19, 27], 
             Rational[17, 20]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.5666666666666667, 0.4691358024691358, 0.5666666666666667],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[17/20, 19/27, 17/20]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[17, 20], 
              Rational[19, 27], 
              Rational[17, 20]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[17, 20], 
        Rational[19, 27], 
        Rational[17, 20]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0.5, 0, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.33333333333333337`, 0., 0.33333333333333337`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0.5, 0, 0.5]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.5, 0, 0.5]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.5, 0, 0.5],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[1, 4], 0, 
             Rational[13, 16]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.16666666666666666`, 0., 0.5416666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1/4, 0, 13/16]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[1, 4], 0, 
              Rational[13, 16]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[1, 4], 0, 
        Rational[13, 16]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 1],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 
             Rational[4, 5], 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.5333333333333333, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0, 4/5, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
              Rational[4, 5], 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 
        Rational[4, 5], 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.33333333333333337`, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1, 0.5, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0.5, 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[1, 2], 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.3333333333333333, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1/2, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[1, 2], 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[1, 2], 0, 0],
       Editable->False,
       Selectable->False]}], "}"}]}], ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"col1WO", "=", 
    RowBox[{"{", 
     RowBox[{
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[19, 27], 
             Rational[659, 864], 
             Rational[17, 20]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.4691358024691358, 0.5084876543209876, 0.5666666666666667],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[19/27, 659/864, 17/20]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[19, 27], 
              Rational[659, 864], 
              Rational[17, 20]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[19, 27], 
        Rational[659, 864], 
        Rational[17, 20]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 
             Rational[51, 256], 
             Rational[51, 128]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.1328125, 0.265625],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0, 51/256, 51/128]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
              Rational[51, 256], 
              Rational[51, 128]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 
        Rational[51, 256], 
        Rational[51, 128]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[1, 4], 0, 
             Rational[13, 16]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.16666666666666666`, 0., 0.5416666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1/4, 0, 13/16]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[1, 4], 0, 
              Rational[13, 16]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[1, 4], 0, 
        Rational[13, 16]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 1],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 
             Rational[4, 5], 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.5333333333333333, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0, 4/5, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
              Rational[4, 5], 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 
        Rational[4, 5], 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.33333333333333337`, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1, 0.5, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0.5, 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[1, 2], 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.3333333333333333, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1/2, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[1, 2], 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[1, 2], 0, 0],
       Editable->False,
       Selectable->False]}], "}"}]}], ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"col2", "=", 
    RowBox[{"{", 
     RowBox[{
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 
             Rational[1, 2], 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.3333333333333333, 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0, 1/2, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
              Rational[1, 2], 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 
        Rational[1, 2], 1],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 1],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.33333333333333337`, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1, 0.5, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0.5, 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"col3", "=", 
    RowBox[{"{", 
     RowBox[{
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0.5, 0, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.33333333333333337`, 0., 0.33333333333333337`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0.5, 0, 0.5]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.5, 0, 0.5]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.5, 0, 0.5],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 1],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0.5, 0, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.33333333333333337`, 0., 0.33333333333333337`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0.5, 0, 0.5]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.5, 0, 0.5]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.5, 0, 0.5],
       Editable->False,
       Selectable->False]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"col6", "=", 
    RowBox[{"{", 
     RowBox[{
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[1, 4], 0, 
             Rational[1, 4]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.16666666666666666`, 0., 0.16666666666666666`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1/4, 0, 1/4]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[1, 4], 0, 
              Rational[1, 4]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[1, 4], 0, 
        Rational[1, 4]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[9, 20], 0, 
             Rational[1, 2]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.3, 0., 0.3333333333333333],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[9/20, 0, 1/2]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[9, 20], 0, 
              Rational[1, 2]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[9, 20], 0, 
        Rational[1, 2]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[4, 5], 0, 
             Rational[3, 5]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.5333333333333333, 0., 0.4],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[4/5, 0, 3/5]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[4, 5], 0, 
              Rational[3, 5]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[4, 5], 0, 
        Rational[3, 5]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 
             Rational[2, 5], 
             Rational[4, 5]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.26666666666666666`, 0.5333333333333333],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0, 2/5, 4/5]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
              Rational[2, 5], 
              Rational[4, 5]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 
        Rational[2, 5], 
        Rational[4, 5]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 1],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 
             Rational[3, 4], 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.5, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0, 3/4, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
              Rational[3, 4], 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 
        Rational[3, 4], 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 
             Rational[1, 3], 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.2222222222222222, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1, 1/3, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 
              Rational[1, 3], 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 
        Rational[1, 3], 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"col7", "=", 
    RowBox[{"{", 
     RowBox[{
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[1, 5], 
             Rational[1, 5], 
             Rational[1, 5]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.13333333333333333`, 0.13333333333333333`, 0.13333333333333333`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1/5, 1/5, 1/5]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[1, 5], 
              Rational[1, 5], 
              Rational[1, 5]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[1, 5], 
        Rational[1, 5], 
        Rational[1, 5]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[2, 5], 
             Rational[3, 10], 
             Rational[1, 4]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.26666666666666666`, 0.2, 0.16666666666666666`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[2/5, 3/10, 1/4]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[2, 5], 
              Rational[3, 10], 
              Rational[1, 4]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[2, 5], 
        Rational[3, 10], 
        Rational[1, 4]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[3, 5], 
             Rational[2, 5], 
             Rational[1, 5]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.4, 0.26666666666666666`, 0.13333333333333333`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[3/5, 2/5, 1/5]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[3, 5], 
              Rational[2, 5], 
              Rational[1, 5]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[3, 5], 
        Rational[2, 5], 
        Rational[1, 5]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[4, 5], 
             Rational[2, 5], 
             Rational[1, 2]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.5333333333333333, 0.26666666666666666`, 0.3333333333333333],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[4/5, 2/5, 1/2]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[4, 5], 
              Rational[2, 5], 
              Rational[1, 2]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[4, 5], 
        Rational[2, 5], 
        Rational[1, 2]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[3, 4], 
             Rational[1, 2], 
             Rational[7, 10]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.5, 0.3333333333333333, 0.4666666666666667],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[3/4, 1/2, 7/10]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[3, 4], 
              Rational[1, 2], 
              Rational[7, 10]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[3, 4], 
        Rational[1, 2], 
        Rational[7, 10]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[19, 20], 
             Rational[9, 10], 
             Rational[9, 10]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6333333333333333, 0.6, 0.6],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[19/20, 9/10, 9/10]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[19, 20], 
              Rational[9, 10], 
              Rational[9, 10]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[19, 20], 
        Rational[9, 10], 
        Rational[9, 10]],
       Editable->False,
       Selectable->False]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"col8", "=", 
    RowBox[{"{", 
     RowBox[{
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], "]"}], NumberMarks -> 
          False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{0, 0, 0}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[8, 15], 
             Rational[3, 85], 
             Rational[1, 15]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          
          FrameStyle->RGBColor[
           0.35555555555555557`, 0.023529411764705882`, 0.044444444444444446`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            RowBox[{"{", 
              RowBox[{
                FractionBox["8", "15"], ",", 
                FractionBox["3", "85"], ",", 
                FractionBox["1", "15"]}], "}"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[8, 15], 
              Rational[3, 85], 
              Rational[1, 15]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[8, 15], 
         Rational[3, 85], 
         Rational[1, 15]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[197, 255], 
             Rational[23, 255], 
             Rational[47, 255]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          
          FrameStyle->RGBColor[
           0.515032679738562, 0.06013071895424837, 0.12287581699346405`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            RowBox[{"{", 
              RowBox[{
                FractionBox["197", "255"], ",", 
                FractionBox["23", "255"], ",", 
                FractionBox["47", "255"]}], "}"}], "]"}], NumberMarks -> 
          False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[197, 255], 
              Rational[23, 255], 
              Rational[47, 255]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[197, 255], 
         Rational[23, 255], 
         Rational[47, 255]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[4, 17], 
             Rational[11, 51], 
             Rational[37, 85]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          
          FrameStyle->RGBColor[
           0.1568627450980392, 0.1437908496732026, 0.2901960784313726],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            RowBox[{"{", 
              RowBox[{
                FractionBox["4", "17"], ",", 
                FractionBox["11", "51"], ",", 
                FractionBox["37", "85"]}], "}"}], "]"}], NumberMarks -> 
          False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[4, 17], 
              Rational[11, 51], 
              Rational[37, 85]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[4, 17], 
         Rational[11, 51], 
         Rational[37, 85]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[22, 85], 
             Rational[71, 255], 
             Rational[143, 255]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          
          FrameStyle->RGBColor[
           0.17254901960784313`, 0.18562091503267975`, 0.3738562091503268],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            RowBox[{"{", 
              RowBox[{
                FractionBox["22", "85"], ",", 
                FractionBox["71", "255"], ",", 
                FractionBox["143", "255"]}], "}"}], "]"}], NumberMarks -> 
          False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[22, 85], 
              Rational[71, 255], 
              Rational[143, 255]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[22, 85], 
         Rational[71, 255], 
         Rational[143, 255]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[7, 15], 
             Rational[7, 15], 
             Rational[47, 51]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          
          FrameStyle->RGBColor[
           0.3111111111111111, 0.3111111111111111, 0.6143790849673203],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            RowBox[{"{", 
              RowBox[{
                FractionBox["7", "15"], ",", 
                FractionBox["7", "15"], ",", 
                FractionBox["47", "51"]}], "}"}], "]"}], NumberMarks -> 
          False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[7, 15], 
              Rational[7, 15], 
              Rational[47, 51]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[7, 15], 
         Rational[7, 15], 
         Rational[47, 51]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[9, 17], 
             Rational[9, 17], 
             Rational[217, 255]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          
          FrameStyle->RGBColor[
           0.35294117647058826`, 0.35294117647058826`, 0.5673202614379085],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            RowBox[{"{", 
              RowBox[{
                FractionBox["9", "17"], ",", 
                FractionBox["9", "17"], ",", 
                FractionBox["217", "255"]}], "}"}], "]"}], NumberMarks -> 
          False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[9, 17], 
              Rational[9, 17], 
              Rational[217, 255]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[9, 17], 
         Rational[9, 17], 
         Rational[217, 255]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[61, 85], 
             Rational[61, 85], 
             Rational[2, 17]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          
          FrameStyle->RGBColor[
           0.47843137254901963`, 0.47843137254901963`, 0.0784313725490196],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            RowBox[{"{", 
              RowBox[{
                FractionBox["61", "85"], ",", 
                FractionBox["61", "85"], ",", 
                FractionBox["2", "17"]}], "}"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[61, 85], 
              Rational[61, 85], 
              Rational[2, 17]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[61, 85], 
         Rational[61, 85], 
         Rational[2, 17]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[199, 255], 
             Rational[199, 255], 
             Rational[46, 255]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          
          FrameStyle->RGBColor[
           0.5202614379084968, 0.5202614379084968, 0.12026143790849673`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            RowBox[{"{", 
              RowBox[{
                FractionBox["199", "255"], ",", 
                FractionBox["199", "255"], ",", 
                FractionBox["46", "255"]}], "}"}], "]"}], NumberMarks -> 
          False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[199, 255], 
              Rational[199, 255], 
              Rational[46, 255]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[199, 255], 
         Rational[199, 255], 
         Rational[46, 255]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[82, 85], 
             Rational[82, 85], 
             Rational[44, 51]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          
          FrameStyle->RGBColor[
           0.6431372549019608, 0.6431372549019608, 0.5751633986928104],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            RowBox[{"{", 
              RowBox[{
                FractionBox["82", "85"], ",", 
                FractionBox["82", "85"], ",", 
                FractionBox["44", "51"]}], "}"}], "]"}], NumberMarks -> 
          False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[82, 85], 
              Rational[82, 85], 
              Rational[44, 51]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[82, 85], 
         Rational[82, 85], 
         Rational[44, 51]}],
       Editable->False,
       Selectable->False]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"col9", "=", 
    RowBox[{"{", 
     RowBox[{
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[2, 11], 0, 
             Rational[4, 15]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.12121212121212122`, 0., 0.17777777777777778`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{2/11, 0, 4/15}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[2, 11], 0, 
              Rational[4, 15]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[2, 11], 0, 
         Rational[4, 15]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[3, 8], 0, 
             Rational[4, 11]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.25, 0., 0.24242424242424243`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{3/8, 0, 4/11}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[3, 8], 0, 
              Rational[4, 11]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[3, 8], 0, 
         Rational[4, 11]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[7, 9], 0, 
             Rational[6, 11]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.5185185185185185, 0., 0.36363636363636365`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{7/9, 0, 6/11}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[7, 9], 0, 
              Rational[6, 11]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[7, 9], 0, 
         Rational[6, 11]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[5, 7], 0, 
             Rational[7, 8]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.47619047619047616`, 0., 0.5833333333333334],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{5/7, 0, 7/8}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[5, 7], 0, 
              Rational[7, 8]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[5, 7], 0, 
         Rational[7, 8]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[1, 7], 
             Rational[1, 24], 
             Rational[13, 14]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.09523809523809523, 0.027777777777777776`, 0.6190476190476191],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{1/7, 1/24, 13/14}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[1, 7], 
              Rational[1, 24], 
              Rational[13, 14]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[1, 7], 
         Rational[1, 24], 
         Rational[13, 14]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 
             Rational[4, 13], 
             Rational[7, 8]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.20512820512820512`, 0.5833333333333334],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{0, 4/13, 7/8}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
              Rational[4, 13], 
              Rational[7, 8]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{0, 
         Rational[4, 13], 
         Rational[7, 8]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 
             Rational[2, 3], 
             Rational[17, 18]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.4444444444444444, 0.6296296296296297],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{0, 2/3, 17/18}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
              Rational[2, 3], 
              Rational[17, 18]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{0, 
         Rational[2, 3], 
         Rational[17, 18]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 
             Rational[13, 14], 
             Rational[3, 5]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6190476190476191, 0.4],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{0, 13/14, 3/5}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
              Rational[13, 14], 
              Rational[3, 5]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{0, 
         Rational[13, 14], 
         Rational[3, 5]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 
             Rational[7, 8], 
             Rational[1, 18]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.5833333333333334, 0.037037037037037035`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{0, 7/8, 1/18}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
              Rational[7, 8], 
              Rational[1, 18]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{0, 
         Rational[7, 8], 
         Rational[1, 18]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[1, 34], 
             Rational[9, 11], 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.0196078431372549, 0.5454545454545454, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{1/34, 9/11, 0}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[1, 34], 
              Rational[9, 11], 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[1, 34], 
         Rational[9, 11], 0}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[13, 14], 
             Rational[28, 29], 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6190476190476191, 0.6436781609195402, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{13/14, 28/29, 0}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[13, 14], 
              Rational[28, 29], 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[13, 14], 
         Rational[28, 29], 0}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 
             Rational[11, 13], 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.5641025641025641, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{1, 11/13, 0}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 
              Rational[11, 13], 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{1, 
         Rational[11, 13], 0}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 
             Rational[1, 14], 
             Rational[1, 28]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.6666666666666666, 0.047619047619047616`, 0.023809523809523808`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{1, 1/14, 1/28}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 
              Rational[1, 14], 
              Rational[1, 28]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{1, 
         Rational[1, 14], 
         Rational[1, 28]}],
       Editable->False,
       Selectable->False]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"col34", "=", 
    RowBox[{"{", 
     RowBox[{
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[2, 11], 0, 
             Rational[6, 23]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.12121212121212122`, 0., 0.17391304347826086`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{2/11, 0, 6/23}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[2, 11], 0, 
              Rational[6, 23]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[2, 11], 0, 
         Rational[6, 23]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[13, 30], 0, 
             Rational[13, 30]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.28888888888888886`, 0., 0.28888888888888886`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{13/30, 0, 13/30}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[13, 30], 0, 
              Rational[13, 30]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[13, 30], 0, 
         Rational[13, 30]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[25, 36], 0, 
             Rational[13, 28]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.46296296296296297`, 0., 0.30952380952380953`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{25/36, 0, 13/28}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[25, 36], 0, 
              Rational[13, 28]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[25, 36], 0, 
         Rational[13, 28]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[19, 24], 0, 
             Rational[9, 17]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.5277777777777778, 0., 0.35294117647058826`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{19/24, 0, 9/17}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[19, 24], 0, 
              Rational[9, 17]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[19, 24], 0, 
         Rational[9, 17]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[11, 14], 0, 
             Rational[29, 34]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.5238095238095238, 0., 0.5686274509803921],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{11/14, 0, 29/34}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[11, 14], 0, 
              Rational[29, 34]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[11, 14], 0, 
         Rational[29, 34]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[31, 46], 0, 
             Rational[35, 36]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.4492753623188406, 0., 0.6481481481481481],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{31/46, 0, 35/36}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[31, 46], 0, 
              Rational[35, 36]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[31, 46], 0, 
         Rational[35, 36]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[11, 37], 0, 
             Rational[293, 294]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.1981981981981982, 0., 0.6643990929705216],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{11/37, 0, 293/294}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[11, 37], 0, 
              Rational[293, 294]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[11, 37], 0, 
         Rational[293, 294]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[1, 12], 0, 
             Rational[41, 42]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.05555555555555555, 0., 0.6507936507936508],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{1/12, 0, 41/42}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[1, 12], 0, 
              Rational[41, 42]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[1, 12], 0, 
         Rational[41, 42]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 
             Rational[1, 33], 
             Rational[11, 13]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.020202020202020204`, 0.5641025641025641],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{0, 1/33, 11/13}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
              Rational[1, 33], 
              Rational[11, 13]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{0, 
         Rational[1, 33], 
         Rational[11, 13]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 
             Rational[8, 57], 
             Rational[17, 21]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.0935672514619883, 0.5396825396825397],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{0, 8/57, 17/21}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
              Rational[8, 57], 
              Rational[17, 21]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{0, 
         Rational[8, 57], 
         Rational[17, 21]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 
             Rational[3, 11], 
             Rational[25, 31]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.18181818181818182`, 0.5376344086021505],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{0, 3/11, 25/31}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
              Rational[3, 11], 
              Rational[25, 31]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{0, 
         Rational[3, 11], 
         Rational[25, 31]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 
             Rational[13, 34], 
             Rational[19, 23]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.2549019607843137, 0.5507246376811594],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{0, 13/34, 19/23}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
              Rational[13, 34], 
              Rational[19, 23]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{0, 
         Rational[13, 34], 
         Rational[19, 23]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 
             Rational[11, 21], 
             Rational[14, 15]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.3492063492063492, 0.6222222222222222],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{0, 11/21, 14/15}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
              Rational[11, 21], 
              Rational[14, 15]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{0, 
         Rational[11, 21], 
         Rational[14, 15]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 
             Rational[22, 31], 
             Rational[326, 327]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.4731182795698925, 0.6646279306829765],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{0, 22/31, 326/327}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
              Rational[22, 31], 
              Rational[326, 327]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{0, 
         Rational[22, 31], 
         Rational[326, 327]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 
             Rational[15, 16], 
             Rational[21, 22]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.625, 0.6363636363636364],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{0, 15/16, 21/22}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
              Rational[15, 16], 
              Rational[21, 22]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{0, 
         Rational[15, 16], 
         Rational[21, 22]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 
             Rational[95, 96], 
             Rational[31, 39]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6597222222222222, 0.5299145299145299],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{0, 95/96, 31/39}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
              Rational[95, 96], 
              Rational[31, 39]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{0, 
         Rational[95, 96], 
         Rational[31, 39]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 
             Rational[189, 190], 
             Rational[11, 23]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6631578947368421, 0.3188405797101449],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{0, 189/190, 11/23}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
              Rational[189, 190], 
              Rational[11, 23]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{0, 
         Rational[189, 190], 
         Rational[11, 23]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 
             Rational[32, 33], 
             Rational[3, 23]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6464646464646465, 0.08695652173913043],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{0, 32/33, 3/23}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
              Rational[32, 33], 
              Rational[3, 23]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{0, 
         Rational[32, 33], 
         Rational[3, 23]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 
             Rational[5, 6], 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.5555555555555556, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{0, 5/6, 0}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
              Rational[5, 6], 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{0, 
         Rational[5, 6], 0}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[1, 292], 
             Rational[27, 34], 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.00228310502283105, 0.5294117647058824, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{1/292, 27/34, 0}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[1, 292], 
              Rational[27, 34], 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[1, 292], 
         Rational[27, 34], 0}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[1, 29], 
             Rational[10, 13], 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.022988505747126436`, 0.5128205128205128, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{1/29, 10/13, 0}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[1, 29], 
              Rational[10, 13], 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[1, 29], 
         Rational[10, 13], 0}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[5, 42], 
             Rational[18, 23], 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.07936507936507936, 0.5217391304347826, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{5/42, 18/23, 0}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[5, 42], 
              Rational[18, 23], 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[5, 42], 
         Rational[18, 23], 0}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[17, 25], 
             Rational[27, 29], 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.4533333333333333, 0.6206896551724138, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{17/25, 27/29, 0}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[17, 25], 
              Rational[27, 29], 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[17, 25], 
         Rational[27, 29], 0}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[41, 45], 
             Rational[49, 50], 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6074074074074074, 0.6533333333333333, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{41/45, 49/50, 0}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[41, 45], 
              Rational[49, 50], 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[41, 45], 
         Rational[49, 50], 0}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[34, 35], 
             Rational[140, 141], 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6476190476190476, 0.6619385342789598, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{34/35, 140/141, 0}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[34, 35], 
              Rational[140, 141], 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[34, 35], 
         Rational[140, 141], 0}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[194, 195], 
             Rational[150, 151], 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6632478632478632, 0.6622516556291391, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{194/195, 150/151, 0}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[194, 195], 
              Rational[150, 151], 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[194, 195], 
         Rational[150, 151], 0}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 
             Rational[42, 43], 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6511627906976745, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{1, 42/43, 0}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 
              Rational[42, 43], 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{1, 
         Rational[42, 43], 0}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 
             Rational[31, 33], 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6262626262626263, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{1, 31/33, 0}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 
              Rational[31, 33], 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{1, 
         Rational[31, 33], 0}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 
             Rational[19, 35], 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.3619047619047619, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{1, 19/35, 0}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 
              Rational[19, 35], 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{1, 
         Rational[19, 35], 0}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 
             Rational[18, 35], 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.34285714285714286`, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{1, 18/35, 0}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 
              Rational[18, 35], 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{1, 
         Rational[18, 35], 0}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 
             Rational[11, 23], 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.3188405797101449, 0.],
          FrameTicks->None,
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{1, 11/23, 0}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 
              Rational[11, 23], 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{1, 
         Rational[11, 23], 0}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 
             Rational[1, 60], 
             Rational[1, 773]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.6666666666666666, 0.011111111111111112`, 0.0008624407072013799],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{1, 1/60, 1/773}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 
              Rational[1, 60], 
              Rational[1, 773]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{1, 
         Rational[1, 60], 
         Rational[1, 773]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 
             Rational[1, 20], 
             Rational[1, 21]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.6666666666666666, 0.03333333333333333, 0.031746031746031744`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{1, 1/20, 1/21}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 
              Rational[1, 20], 
              Rational[1, 21]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{1, 
         Rational[1, 20], 
         Rational[1, 21]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 
             Rational[7, 26], 
             Rational[13, 48]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.6666666666666666, 0.1794871794871795, 0.18055555555555555`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{1, 7/26, 13/48}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 
              Rational[7, 26], 
              Rational[13, 48]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{1, 
         Rational[7, 26], 
         Rational[13, 48]}],
       Editable->False,
       Selectable->False]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"col22", "=", 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0, 
              Rational[24, 25], 1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0., 0.64, 0.6666666666666666],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          "RGBColor[{0, 24/25, 1}]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
               Rational[24, 25], 1]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}},
                {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0, 
          Rational[24, 25], 1}],
        Editable->False,
        Selectable->False], ",", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0, 
              Rational[12, 13], 1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0., 0.6153846153846154, 0.6666666666666666],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          "RGBColor[{0, 12/13, 1}]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
               Rational[12, 13], 1]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0, 
          Rational[12, 13], 1}],
        Editable->False,
        Selectable->False], ",", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0, 
              Rational[5, 8], 1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0., 0.4166666666666667, 0.6666666666666666],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          "RGBColor[{0, 5/8, 1}]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
               Rational[5, 8], 1]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0, 
          Rational[5, 8], 1}],
        Editable->False,
        Selectable->False], ",", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0, 
              Rational[5, 9], 1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0., 0.37037037037037035`, 0.6666666666666666],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          "RGBColor[{0, 5/9, 1}]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
               Rational[5, 9], 1]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0, 
          Rational[5, 9], 1}],
        Editable->False,
        Selectable->False], ",", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0, 
              Rational[1, 2], 1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0., 0.3333333333333333, 0.6666666666666666],
           FrameTicks->None,
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          "RGBColor[{0, 1/2, 1}]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
               Rational[1, 2], 1]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0, 
          Rational[1, 2], 1}],
        Editable->False,
        Selectable->False], ",", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0, 
              Rational[4, 9], 1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0., 0.2962962962962963, 0.6666666666666666],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          "RGBColor[{0, 4/9, 1}]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
               Rational[4, 9], 1]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0, 
          Rational[4, 9], 1}],
        Editable->False,
        Selectable->False], ",", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0, 
              Rational[3, 8], 1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0., 0.25, 0.6666666666666666],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          "RGBColor[{0, 3/8, 1}]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
               Rational[3, 8], 1]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0, 
          Rational[3, 8], 1}],
        Editable->False,
        Selectable->False], ",", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0, 
              Rational[1, 19], 1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[0., 0.03508771929824561, 0.6666666666666666],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          "RGBColor[{0, 1/19, 1}]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
               Rational[1, 19], 1]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{0, 
          Rational[1, 19], 1}],
        Editable->False,
        Selectable->False], ",", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
              Rational[1, 70], 
              Rational[1, 63], 1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.009523809523809525, 0.010582010582010581`, 0.6666666666666666],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          "RGBColor[{1/70, 1/63, 1}]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
               Rational[1, 70], 
               Rational[1, 63], 1]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{
          Rational[1, 70], 
          Rational[1, 63], 1}],
        Editable->False,
        Selectable->False], ",", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
              Rational[1, 14], 
              Rational[1, 64], 1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.047619047619047616`, 0.010416666666666666`, 0.6666666666666666],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          "RGBColor[{1/14, 1/64, 1}]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
               Rational[1, 14], 
               Rational[1, 64], 1]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{
          Rational[1, 14], 
          Rational[1, 64], 1}],
        Editable->False,
        Selectable->False], ",", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
              Rational[7, 10], 
              Rational[1, 6], 1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.4666666666666667, 0.1111111111111111, 0.6666666666666666],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          "RGBColor[{7/10, 1/6, 1}]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
               Rational[7, 10], 
               Rational[1, 6], 1]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{
          Rational[7, 10], 
          Rational[1, 6], 1}],
        Editable->False,
        Selectable->False], ",", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[
              Rational[11, 12], 
              Rational[1, 5], 1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6111111111111112, 0.13333333333333333`, 0.6666666666666666],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          "RGBColor[{11/12, 1/5, 1}]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
               Rational[11, 12], 
               Rational[1, 5], 1]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{
          Rational[11, 12], 
          Rational[1, 5], 1}],
        Editable->False,
        Selectable->False], ",", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1, 
              Rational[1, 6], 1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           FrameStyle->RGBColor[
            0.6666666666666666, 0.1111111111111111, 0.6666666666666666],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          "RGBColor[{1, 1/6, 1}]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 
               Rational[1, 6], 1]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{1, 
          Rational[1, 6], 1}],
        Editable->False,
        Selectable->False], ",", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1, 
              Rational[1, 7], 1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6666666666666666, 0.09523809523809523, 0.6666666666666666],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          "RGBColor[{1, 1/7, 1}]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 
               Rational[1, 7], 1]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{1, 
          Rational[1, 7], 1}],
        Editable->False,
        Selectable->False], ",", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1, 
              Rational[1, 12], 
              Rational[10, 11]], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6666666666666666, 0.05555555555555555, 0.6060606060606061],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          "RGBColor[{1, 1/12, 10/11}]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 
               Rational[1, 12], 
               Rational[10, 11]]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{1, 
          Rational[1, 12], 
          Rational[10, 11]}],
        Editable->False,
        Selectable->False], ",", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1, 
              Rational[1, 33], 
              Rational[2, 3]], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6666666666666666, 0.020202020202020204`, 0.4444444444444444],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          "RGBColor[{1, 1/33, 2/3}]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 
               Rational[1, 33], 
               Rational[2, 3]]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{1, 
          Rational[1, 33], 
          Rational[2, 3]}],
        Editable->False,
        Selectable->False], ",", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1, 
              Rational[1, 28], 
              Rational[5, 16]], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6666666666666666, 0.023809523809523808`, 0.20833333333333334`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          "RGBColor[{1, 1/28, 5/16}]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 
               Rational[1, 28], 
               Rational[5, 16]]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{1, 
          Rational[1, 28], 
          Rational[5, 16]}],
        Editable->False,
        Selectable->False], ",", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1, 
              Rational[2, 11], 
              Rational[1, 34]], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6666666666666666, 0.12121212121212122`, 0.0196078431372549],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          "RGBColor[{1, 2/11, 1/34}]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 
               Rational[2, 11], 
               Rational[1, 34]]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{1, 
          Rational[2, 11], 
          Rational[1, 34]}],
        Editable->False,
        Selectable->False], ",", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1, 
              Rational[1, 3], 
              Rational[1, 41]], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6666666666666666, 0.2222222222222222, 0.016260162601626018`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          "RGBColor[{1, 1/3, 1/41}]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 
               Rational[1, 3], 
               Rational[1, 41]]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{1, 
          Rational[1, 3], 
          Rational[1, 41]}],
        Editable->False,
        Selectable->False], ",", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1, 
              Rational[9, 14], 
              Rational[1, 6]], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6666666666666666, 0.42857142857142855`, 0.1111111111111111],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          "RGBColor[{1, 9/14, 1/6}]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 
               Rational[9, 14], 
               Rational[1, 6]]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{1, 
          Rational[9, 14], 
          Rational[1, 6]}],
        Editable->False,
        Selectable->False], ",", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1, 
              Rational[4, 5], 
              Rational[2, 11]], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6666666666666666, 0.5333333333333333, 0.12121212121212122`],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          "RGBColor[{1, 4/5, 2/11}]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 
               Rational[4, 5], 
               Rational[2, 11]]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{1, 
          Rational[4, 5], 
          Rational[2, 11]}],
        Editable->False,
        Selectable->False], ",", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1, 1, 
              Rational[1, 10]], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6666666666666666, 0.6666666666666666, 0.06666666666666667],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 1.35 CurrentValue["FontCapHeight"]/
              AbsoluteCurrentValue[Magnification]}],
           PlotRangePadding->None],
          "RGBColor[{1, 1, 1/10}]"],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 
               Rational[1, 10]]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[{1, 1, 
          Rational[1, 10]}],
        Editable->False,
        Selectable->False]}], "}"}]}], ";"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"colorData3tab", "=", 
    RowBox[{"{", 
     RowBox[{
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 1],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[2, 255], 0.89, 0.81], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.00522875816993464, 0.5933333333333334, 0.54],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[2/255, 0.89, 0.81]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[2, 255], 0.89, 0.81]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[2, 255], 0.89, 0.81],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[2, 255], 
             Rational[26, 51], 
             Rational[79, 85]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.00522875816993464, 0.33986928104575165`, 0.6196078431372549],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[2/255, 26/51, 79/85]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[2, 255], 
              Rational[26, 51], 
              Rational[79, 85]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[2, 255], 
        Rational[26, 51], 
        Rational[79, 85]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[13, 85], 
             Rational[29, 255], 
             Rational[25, 51]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.10196078431372549`, 0.07581699346405228, 0.32679738562091504`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[13/85, 29/255, 25/51]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[13, 85], 
              Rational[29, 255], 
              Rational[25, 51]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[13, 85], 
        Rational[29, 255], 
        Rational[25, 51]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[8, 17], 
             Rational[67, 255], 
             Rational[149, 255]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.3137254901960784, 0.17516339869281045`, 0.3895424836601307],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[8/17, 67/255, 149/255]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[8, 17], 
              Rational[67, 255], 
              Rational[149, 255]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[8, 17], 
        Rational[67, 255], 
        Rational[149, 255]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[227, 255], 
             Rational[1, 85], 
             Rational[25, 51]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.5934640522875817, 0.00784313725490196, 0.32679738562091504`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[227/255, 1/85, 25/51]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[227, 255], 
              Rational[1, 85], 
              Rational[25, 51]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[227, 255], 
        Rational[1, 85], 
        Rational[25, 51]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[77, 85], 
             Rational[7, 255], 
             Rational[11, 85]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.6039215686274509, 0.018300653594771243`, 0.08627450980392157],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[77/85, 7/255, 11/85]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[77, 85], 
              Rational[7, 255], 
              Rational[11, 85]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[77, 85], 
        Rational[7, 255], 
        Rational[11, 85]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 
             Rational[6, 13], 
             Rational[1, 13]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.6666666666666666, 0.3076923076923077, 0.05128205128205128],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{1, 6/13, 1/13}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 
              Rational[6, 13], 
              Rational[1, 13]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{1, 
         Rational[6, 13], 
         Rational[1, 13]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"colorData97tab", "=", 
    RowBox[{"{", 
     RowBox[{
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[1281, 2000], 
             Rational[931, 4000], 
             Rational[119, 800]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.427, 0.15516666666666667`, 0.09916666666666667],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1281/2000, 931/4000, 119/800]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[1281, 2000], 
              Rational[931, 4000], 
              Rational[119, 800]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[1281, 2000], 
        Rational[931, 4000], 
        Rational[119, 800]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[1411, 2000], 
             Rational[391, 1000], 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.4703333333333333, 0.26066666666666666`, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1411/2000, 391/1000, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[1411, 2000], 
              Rational[391, 1000], 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[1411, 2000], 
        Rational[391, 1000], 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[21, 25], 
             Rational[109, 200], 
             Rational[459, 4000]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.56, 0.36333333333333334`, 0.0765],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[21/25, 109/200, 459/4000]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[21, 25], 
              Rational[109, 200], 
              Rational[459, 4000]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[21, 25], 
        Rational[109, 200], 
        Rational[459, 4000]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[247, 400], 
             Rational[143, 200], 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.4116666666666667, 0.4766666666666667, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[247/400, 143/200, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[247, 400], 
              Rational[143, 200], 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[247, 400], 
        Rational[143, 200], 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[3, 20], 
             Rational[143, 200], 
             Rational[119, 200]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.1, 0.4766666666666667, 0.39666666666666667`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[3/20, 143/200, 119/200]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[3, 20], 
              Rational[143, 200], 
              Rational[119, 200]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[3, 20], 
        Rational[143, 200], 
        Rational[119, 200]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[29, 80], 
             Rational[109, 200], 
             Rational[17, 20]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.24166666666666667`, 0.36333333333333334`, 0.5666666666666667],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[29/80, 109/200, 17/20]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[29, 80], 
              Rational[109, 200], 
              Rational[17, 20]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[29, 80], 
        Rational[109, 200], 
        Rational[17, 20]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[23, 40], 
             Rational[167, 400], 
             Rational[17, 20]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.38333333333333336`, 0.2783333333333333, 0.5666666666666667],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[23/40, 167/400, 17/20]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[23, 40], 
              Rational[167, 400], 
              Rational[17, 20]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[23, 40], 
        Rational[167, 400], 
        Rational[17, 20]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[7093, 10000], 
             Rational[2111, 5000], 
             Rational[1271, 2000]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.47286666666666666`, 0.28146666666666664`, 0.4236666666666667],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[7093/10000, 2111/5000, 1271/2000]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[7093, 10000], 
              Rational[2111, 5000], 
              Rational[1271, 2000]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[7093, 10000], 
        Rational[2111, 5000], 
        Rational[1271, 2000]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[1379, 1600], 
             Rational[5827, 10000], 
             Rational[501, 800]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.5745833333333333, 0.3884666666666667, 0.4175],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1379/1600, 5827/10000, 501/800]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[1379, 1600], 
              Rational[5827, 10000], 
              Rational[501, 800]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[1379, 1600], 
        Rational[5827, 10000], 
        Rational[501, 800]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[1949, 2000], 
             Rational[3199, 4000], 
             Rational[611, 800]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.6496666666666666, 0.5331666666666667, 0.5091666666666667],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1949/2000, 3199/4000, 611/800]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[1949, 2000], 
              Rational[3199, 4000], 
              Rational[611, 800]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[1949, 2000], 
        Rational[3199, 4000], 
        Rational[611, 800]],
       Editable->False,
       Selectable->False]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"opticaCF", "=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Hue", "[", 
       RowBox[{
        RowBox[{"0.65", "-", 
         RowBox[{
          RowBox[{"#", "^", "0.5"}], " ", "0.65"}]}], ",", "1", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "^", "0.5"}], " ", "0.9"}], "+", "0.1"}]}], "]"}], 
      "&"}], ")"}]}], ";", 
   RowBox[{"(*", 
    RowBox[{"Similar", " ", "to", " ", 
     RowBox[{"Optica", "'"}], "s", " ", 
     RowBox[{"version", "."}]}], "*)"}], "\n", 
   RowBox[{"opticaCFBright", "=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Hue", "[", 
       RowBox[{
        RowBox[{"0.65", "-", 
         RowBox[{
          RowBox[{"#", "^", "0.5"}], " ", "0.65"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "^", "0.5"}], " ", "0.9"}], "+", "0.1"}], ",", "1"}], 
       "]"}], "&"}], ")"}]}], ";", 
   RowBox[{"(*", 
    RowBox[{"Similar", " ", "to", " ", 
     RowBox[{"Optica", "'"}], "s", " ", "version", " ", "but", " ", 
     RowBox[{"Brighter", "."}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"jetMLVPH", "[", 
     RowBox[{"u_", "?", "NumericQ"}], "]"}], ":=", 
    RowBox[{"Blend", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"val1", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"col3", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "val1", "]"}]}], "}"}]}], "]"}], ",", "u"}], 
     "]"}]}]}], 
  RowBox[{"(*", 
   RowBox[{"Cyclic", " ", "CF", " ", "simiar", " ", "to", " ", "Matlab", " ", 
    RowBox[{"version", "."}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"jetMLV18", "[", 
    RowBox[{"u_", "?", "NumericQ"}], "]"}], ":=", 
   RowBox[{"Blend", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"val1", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "^", "1.8"}], ",", 
         RowBox[{"col1", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "val1", "]"}]}], "}"}]}], "]"}], ",", "u"}], 
    "]"}]}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"This", " ", "is", " ", "MatLab", " ", "version"}], ",", " ", 
    RowBox[{
    "modified", " ", "to", " ", "highlight", " ", "low", " ", "intensity", 
     " ", 
     RowBox[{"regions", "."}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"jetMLVWP", "[", 
    RowBox[{"u_", "?", "NumericQ"}], "]"}], ":=", 
   RowBox[{"Blend", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"val1WP", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"col1WP", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "val1WP", "]"}]}], "}"}]}], "]"}], ",", "u"}],
     "]"}]}], 
  RowBox[{"(*", 
   RowBox[{"Rainbow", " ", "similar", " ", "with", " ", "MatLab", " ", 
    RowBox[{"version", "."}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"jetMLVWO", "[", 
    RowBox[{"u_", "?", "NumericQ"}], "]"}], ":=", 
   RowBox[{"Blend", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"val1WP", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"col1WO", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "val1WP", "]"}]}], "}"}]}], "]"}], ",", "u"}],
     "]"}]}], 
  RowBox[{"(*", 
   RowBox[{
   "Another", " ", "variation", " ", "starting", " ", "from", " ", "MatLab", 
    " ", 
    RowBox[{"version", "."}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"jetVLV15", "[", 
    RowBox[{"u_", "?", "NumericQ"}], "]"}], ":=", 
   RowBox[{"Blend", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"val2", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "^", "1.5"}], ",", 
         RowBox[{"col2", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "val2", "]"}]}], "}"}]}], "]"}], ",", "u"}], 
    "]"}]}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"VirtualLab", " ", "Fusion", " ", "version"}], ",", " ", 
    RowBox[{
    "modified", " ", "to", " ", "highlight", " ", "low", " ", "intensity", 
     " ", 
     RowBox[{"regions", "."}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ophirCF", "[", 
    RowBox[{"u_", "?", "NumericQ"}], "]"}], ":=", 
   RowBox[{"Blend", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"val6", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "^", "2"}], ",", 
         RowBox[{"col6", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "val6", "]"}]}], "}"}]}], "]"}], ",", "u"}], 
    "]"}]}], 
  RowBox[{"(*", 
   RowBox[{"Similar", " ", "to", " ", 
    RowBox[{"Ophir", "'"}], "s", " ", "Beam", " ", "Profiler", " ", 
    RowBox[{"version", "."}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ophirCFv2", "[", 
   RowBox[{"u_", "?", "NumericQ"}], "]"}], ":=", 
  RowBox[{"Blend", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"val6", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"col6", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "val6", "]"}]}], "}"}]}], "]"}], ",", "u"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GBPCF", "[", 
    RowBox[{"u_", "?", "NumericQ"}], "]"}], ":=", 
   RowBox[{"Blend", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"val7", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "^", "2"}], ",", 
         RowBox[{"col7", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "val7", "]"}]}], "}"}]}], "]"}], ",", "u"}], 
    "]"}]}], 
  RowBox[{"(*", 
   RowBox[{"Gray", " ", "-", " ", "Brown", " ", "-", " ", "Pink"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"colorData3", "[", 
    RowBox[{"u_", "?", "NumericQ"}], "]"}], ":=", 
   RowBox[{"Blend", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"valsCD3", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "^", "2"}], ",", 
         RowBox[{"colorData3tab", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "valsCD3", "]"}]}], "}"}]}], "]"}], ",", 
     "u"}], "]"}]}], 
  RowBox[{"(*", 
   RowBox[{"Similar", " ", "to", " ", 
    RowBox[{"Mathematica", "'"}], "s", " ", 
    RowBox[{
     RowBox[{"ColorData", "[", "3", "]"}], "."}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"colorData97", "[", 
    RowBox[{"u_", "?", "NumericQ"}], "]"}], ":=", 
   RowBox[{"Blend", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"valsCD97", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"colorData97tab", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "valsCD97", "]"}]}], "}"}]}], "]"}], ",", 
     "u"}], "]"}]}], 
  RowBox[{"(*", 
   RowBox[{"Similar", " ", "to", " ", 
    RowBox[{"Mathematica", "'"}], "s", " ", 
    RowBox[{
     RowBox[{"ColorData", "[", "97", "]"}], "."}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sternCF", "[", 
   RowBox[{"u_", "?", "NumericQ"}], "]"}], ":=", 
  RowBox[{"Blend", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"val8", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"col8", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "val8", "]"}]}], "}"}]}], "]"}], ",", "u"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ophirCFv3", "[", 
   RowBox[{"u_", "?", "NumericQ"}], "]"}], ":=", 
  RowBox[{"Blend", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"vals34", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"col34", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "vals34", "]"}]}], "}"}]}], "]"}], ",", "u"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ophirCFCN", "[", 
    RowBox[{"u_", "?", "NumericQ"}], "]"}], ":=", 
   RowBox[{"Blend", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"vals22", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"col22", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "vals22", "]"}]}], "}"}]}], "]"}], ",", "u"}],
     "]"}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"More", " ", "Color", " ", 
    RowBox[{"Functions", "."}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vals0", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["3", "50"], ",", 
     FractionBox["23", "100"], ",", 
     FractionBox["33", "100"], ",", 
     FractionBox["23", "50"], ",", 
     FractionBox["53", "100"], ",", 
     FractionBox["3", "5"], ",", 
     FractionBox["73", "100"], ",", 
     FractionBox["83", "100"], ",", 
     FractionBox["9", "10"], ",", "1"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vals1", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["3", "10"], ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["3", "5"], ",", 
     FractionBox["7", "10"], ",", 
     FractionBox["4", "5"], ",", 
     FractionBox["9", "10"], ",", 
     FractionBox["24", "25"], ",", "1"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vals6", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "10"], ",", 
     FractionBox["23", "100"], ",", 
     FractionBox["3", "10"], ",", 
     FractionBox["9", "25"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["14", "25"], ",", 
     FractionBox["63", "100"], ",", 
     FractionBox["7", "10"], ",", 
     FractionBox["19", "25"], ",", 
     FractionBox["24", "25"], ",", "1"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vals7", "=", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "9"], ",", 
     FractionBox["2", "9"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["4", "9"], ",", 
     FractionBox["5", "9"], ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["7", "9"], ",", 
     FractionBox["8", "9"], ",", "1"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"vals8", "=", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      FractionBox["1", "32"], ",", 
      FractionBox["1", "4"], ",", 
      FractionBox["9", "32"], ",", 
      FractionBox["5", "16"], ",", 
      FractionBox["15", "32"], ",", 
      FractionBox["1", "2"], ",", 
      FractionBox["33", "64"], ",", 
      FractionBox["17", "32"], ",", 
      FractionBox["45", "64"], ",", 
      FractionBox["47", "64"], ",", 
      FractionBox["49", "64"], ",", "1"}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"cololrs0", "=", 
    RowBox[{"{", 
     RowBox[{
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[43, 64], 
             Rational[9, 10], 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.4479166666666667, 0.6, 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[43/64, 9/10, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[43, 64], 
              Rational[9, 10], 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[43, 64], 
        Rational[9, 10], 1],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[79, 128], 
             Rational[49, 128], 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.4114583333333333, 0.2552083333333333, 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{79/128, 49/128, 1}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[79, 128], 
              Rational[49, 128], 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[79, 128], 
         Rational[49, 128], 1}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[51, 256], 
             Rational[17, 256], 
             Rational[127, 128]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.1328125, 0.044270833333333336`, 0.6614583333333334],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{51/256, 17/256, 127/128}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[51, 256], 
              Rational[17, 256], 
              Rational[127, 128]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[51, 256], 
         Rational[17, 256], 
         Rational[127, 128]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[3, 128], 
             Rational[1, 4], 
             Rational[47, 64]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.015625, 0.16666666666666666`, 0.4895833333333333],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{3/128, 1/4, 47/64}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[3, 128], 
              Rational[1, 4], 
              Rational[47, 64]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[3, 128], 
         Rational[1, 4], 
         Rational[47, 64]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[13, 64], 
             Rational[243, 256], 
             Rational[5, 128]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.13541666666666666`, 0.6328125, 0.026041666666666668`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{13/64, 243/256, 5/128}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[13, 64], 
              Rational[243, 256], 
              Rational[5, 128]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[13, 64], 
         Rational[243, 256], 
         Rational[5, 128]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[139, 256], 
             Rational[127, 128], 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.3619791666666667, 0.6614583333333334, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{139/256, 127/128, 0}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[139, 256], 
              Rational[127, 128], 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[139, 256], 
         Rational[127, 128], 0}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[109, 128], 
             Rational[237, 256], 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.5677083333333334, 0.6171875, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{109/128, 237/256, 0}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[109, 128], 
              Rational[237, 256], 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[109, 128], 
         Rational[237, 256], 0}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[255, 256], 
             Rational[57, 128], 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6640625, 0.296875, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{255/256, 57/128, 0}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[255, 256], 
              Rational[57, 128], 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[255, 256], 
         Rational[57, 128], 0}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[61, 64], 
             Rational[29, 256], 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6354166666666666, 0.07552083333333333, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{61/64, 29/256, 0}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[61, 64], 
              Rational[29, 256], 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[61, 64], 
         Rational[29, 256], 0}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[189, 256], 
             Rational[3, 256], 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.4921875, 0.0078125, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{189/256, 3/256, 0}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[189, 256], 
              Rational[3, 256], 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[189, 256], 
         Rational[3, 256], 0}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[33, 128], 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.171875, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{33/128, 0, 0}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[33, 128], 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[33, 128], 0, 0}],
       Editable->False,
       Selectable->False]}], "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cololrs2", "=", 
    RowBox[{"{", 
     RowBox[{
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[1, 8], 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.08333333333333333, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1/8, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[1, 8], 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[1, 8], 0, 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[7, 9], 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.5185185185185185, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[7/9, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[7, 9], 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[7, 9], 0, 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[25, 26], 
             Rational[1, 12], 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6410256410256411, 0.05555555555555555, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[25/26, 1/12, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[25, 26], 
              Rational[1, 12], 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[25, 26], 
        Rational[1, 12], 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 
             Rational[5, 16], 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.20833333333333334`, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1, 5/16, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 
              Rational[5, 16], 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 
        Rational[5, 16], 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 
             Rational[7, 12], 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.3888888888888889, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1, 7/12, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 
              Rational[7, 12], 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 
        Rational[7, 12], 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 
             Rational[11, 13], 
             Rational[1, 79]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.6666666666666666, 0.5641025641025641, 0.008438818565400843],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1, 11/13, 1/79]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 
              Rational[11, 13], 
              Rational[1, 79]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 
        Rational[11, 13], 
        Rational[1, 79]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 
             Rational[43, 44], 
             Rational[1, 5]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.6666666666666666, 0.6515151515151515, 0.13333333333333333`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1, 43/44, 1/5]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 
              Rational[43, 44], 
              Rational[1, 5]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 
        Rational[43, 44], 
        Rational[1, 5]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 
             Rational[4, 7]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.38095238095238093`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 4/7]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 
              Rational[4, 7]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 
        Rational[4, 7]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 
             Rational[9, 11]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.5454545454545454],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 9/11]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 
              Rational[9, 11]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 
        Rational[9, 11]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 
             Rational[8, 9]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.5925925925925926],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 8/9]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 
              Rational[8, 9]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 
        Rational[8, 9]],
       Editable->False,
       Selectable->False]}], "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cololrs2b", "=", 
    RowBox[{"{", 
     RowBox[{
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 
             Rational[1, 12], 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.05555555555555555, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0, 1/12, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
              Rational[1, 12], 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 
        Rational[1, 12], 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 
             Rational[11, 14], 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.5238095238095238, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0, 11/14, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
              Rational[11, 14], 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 
        Rational[11, 14], 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[1, 18], 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.037037037037037035`, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1/18, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[1, 18], 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[1, 18], 1, 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[5, 16], 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.20833333333333334`, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[5/16, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[5, 16], 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[5, 16], 1, 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[10, 17], 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.39215686274509803`, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[10/17, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[10, 17], 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[10, 17], 1, 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[6, 7], 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.5714285714285714, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[6/7, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[6, 7], 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[6, 7], 1, 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 
             Rational[1, 6]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.1111111111111111],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 1/6]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 
              Rational[1, 6]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 
        Rational[1, 6]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 
             Rational[4, 7]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.38095238095238093`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 4/7]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 
              Rational[4, 7]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 
        Rational[4, 7]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 
             Rational[5, 6]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.5555555555555556],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 5/6]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 
              Rational[5, 6]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 
        Rational[5, 6]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 
             Rational[20, 21]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.6349206349206349],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 20/21]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 
              Rational[20, 21]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 
        Rational[20, 21]],
       Editable->False,
       Selectable->False]}], "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cololrs3", "=", 
    RowBox[{"{", 
     RowBox[{
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[1, 10], 0, 
             Rational[1, 8]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.06666666666666667, 0., 0.08333333333333333],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1/10, 0, 1/8]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[1, 10], 0, 
              Rational[1, 8]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[1, 10], 0, 
        Rational[1, 8]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[1, 12], 
             Rational[1, 5], 
             Rational[9, 14]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.05555555555555555, 0.13333333333333333`, 0.42857142857142855`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1/12, 1/5, 9/14]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[1, 12], 
              Rational[1, 5], 
              Rational[9, 14]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[1, 12], 
        Rational[1, 5], 
        Rational[9, 14]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[1, 44], 
             Rational[5, 13], 
             Rational[4, 9]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.015151515151515152`, 0.2564102564102564, 0.2962962962962963],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1/44, 5/13, 4/9]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[1, 44], 
              Rational[5, 13], 
              Rational[4, 9]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[1, 44], 
        Rational[5, 13], 
        Rational[4, 9]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[1, 40], 
             Rational[10, 19], 
             Rational[2, 7]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.016666666666666666`, 0.3508771929824561, 0.19047619047619047`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1/40, 10/19, 2/7]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[1, 40], 
              Rational[10, 19], 
              Rational[2, 7]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[1, 40], 
        Rational[10, 19], 
        Rational[2, 7]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[1, 22], 
             Rational[7, 11], 
             Rational[1, 7]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.030303030303030304`, 0.42424242424242425`, 0.09523809523809523],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1/22, 7/11, 1/7]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[1, 22], 
              Rational[7, 11], 
              Rational[1, 7]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[1, 22], 
        Rational[7, 11], 
        Rational[1, 7]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[3, 11], 
             Rational[3, 4], 
             Rational[1, 21]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.18181818181818182`, 0.5, 0.031746031746031744`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[3/11, 3/4, 1/21]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[3, 11], 
              Rational[3, 4], 
              Rational[1, 21]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[3, 11], 
        Rational[3, 4], 
        Rational[1, 21]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[7, 10], 
             Rational[4, 5], 
             Rational[1, 10]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.4666666666666667, 0.5333333333333333, 0.06666666666666667],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[7/10, 4/5, 1/10]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[7, 10], 
              Rational[4, 5], 
              Rational[1, 10]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[7, 10], 
        Rational[4, 5], 
        Rational[1, 10]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[19, 20], 
             Rational[6, 7], 
             Rational[3, 5]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6333333333333333, 0.5714285714285714, 0.4],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[19/20, 6/7, 3/5]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[19, 20], 
              Rational[6, 7], 
              Rational[3, 5]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[19, 20], 
        Rational[6, 7], 
        Rational[3, 5]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 
             Rational[11, 12], 
             Rational[7, 8]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.6666666666666666, 0.6111111111111112, 0.5833333333333334],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1, 11/12, 7/8]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 
              Rational[11, 12], 
              Rational[7, 8]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 
        Rational[11, 12], 
        Rational[7, 8]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 
             Rational[16, 17], 
             Rational[12, 13]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.6666666666666666, 0.6274509803921569, 0.6153846153846154],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1, 16/17, 12/13]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 
              Rational[16, 17], 
              Rational[12, 13]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 
        Rational[16, 17], 
        Rational[12, 13]],
       Editable->False,
       Selectable->False]}], "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cololrs4", "=", 
    RowBox[{"{", 
     RowBox[{
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[1, 14], 
             Rational[1, 38], 
             Rational[1, 8]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.047619047619047616`, 0.017543859649122806`, 0.08333333333333333],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1/14, 1/38, 1/8]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[1, 14], 
              Rational[1, 38], 
              Rational[1, 8]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[1, 14], 
        Rational[1, 38], 
        Rational[1, 8]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[3, 8], 0, 
             Rational[10, 13]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.25, 0., 0.5128205128205128],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[3/8, 0, 10/13]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[3, 8], 0, 
              Rational[10, 13]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[3, 8], 0, 
        Rational[10, 13]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[7, 11], 0, 
             Rational[9, 14]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.42424242424242425`, 0., 0.42857142857142855`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[7/11, 0, 9/14]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[7, 11], 0, 
              Rational[9, 14]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[7, 11], 0, 
        Rational[9, 14]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[11, 13], 
             Rational[1, 8], 
             Rational[3, 10]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.5641025641025641, 0.08333333333333333, 0.2],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[11/13, 1/8, 3/10]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[11, 13], 
              Rational[1, 8], 
              Rational[3, 10]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[11, 13], 
        Rational[1, 8], 
        Rational[3, 10]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[12, 13], 
             Rational[6, 17], 
             Rational[2, 9]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.6153846153846154, 0.23529411764705882`, 0.14814814814814814`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[12/13, 6/17, 2/9]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[12, 13], 
              Rational[6, 17], 
              Rational[2, 9]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[12, 13], 
        Rational[6, 17], 
        Rational[2, 9]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[20, 21], 
             Rational[7, 13], 
             Rational[1, 5]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.6349206349206349, 0.358974358974359, 0.13333333333333333`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[20/21, 7/13, 1/5]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[20, 21], 
              Rational[7, 13], 
              Rational[1, 5]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[20, 21], 
        Rational[7, 13], 
        Rational[1, 5]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[12, 13], 
             Rational[8, 11], 
             Rational[1, 7]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.6153846153846154, 0.48484848484848486`, 0.09523809523809523],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[12/13, 8/11, 1/7]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[12, 13], 
              Rational[8, 11], 
              Rational[1, 7]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[12, 13], 
        Rational[8, 11], 
        Rational[1, 7]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[15, 16], 
             Rational[7, 8], 
             Rational[2, 5]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.625, 0.5833333333333334, 0.26666666666666666`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[15/16, 7/8, 2/5]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[15, 16], 
              Rational[7, 8], 
              Rational[2, 5]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[15, 16], 
        Rational[7, 8], 
        Rational[2, 5]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[30, 31], 
             Rational[14, 15], 
             Rational[5, 7]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.6451612903225806, 0.6222222222222222, 0.47619047619047616`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[30/31, 14/15, 5/7]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[30, 31], 
              Rational[14, 15], 
              Rational[5, 7]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[30, 31], 
        Rational[14, 15], 
        Rational[5, 7]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[46, 47], 
             Rational[20, 21], 
             Rational[5, 6]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.6524822695035462, 0.6349206349206349, 0.5555555555555556],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[46/47, 20/21, 5/6]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[46, 47], 
              Rational[20, 21], 
              Rational[5, 6]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[46, 47], 
        Rational[20, 21], 
        Rational[5, 6]],
       Editable->False,
       Selectable->False]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"cololrs5", "=", 
    RowBox[{"{", 
     RowBox[{
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[3, 64], 
             Rational[1, 32], 
             Rational[17, 256]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.03125, 0.020833333333333332`, 0.044270833333333336`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{3/64, 1/32, 17/256}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[3, 64], 
              Rational[1, 32], 
              Rational[17, 256]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[3, 64], 
         Rational[1, 32], 
         Rational[17, 256]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[31, 256], 
             Rational[47, 128], 
             Rational[17, 64]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.08072916666666667, 0.24479166666666666`, 0.17708333333333334`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{31/256, 47/128, 17/64}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[31, 256], 
              Rational[47, 128], 
              Rational[17, 64]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[31, 256], 
         Rational[47, 128], 
         Rational[17, 64]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[19, 64], 
             Rational[59, 128], 
             Rational[53, 256]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.19791666666666666`, 0.3072916666666667, 0.13802083333333334`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{19/64, 59/128, 53/256}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[19, 64], 
              Rational[59, 128], 
              Rational[53, 256]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[19, 64], 
         Rational[59, 128], 
         Rational[53, 256]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[73, 128], 
             Rational[61, 128], 
             Rational[71, 256]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.3802083333333333, 0.3177083333333333, 0.18489583333333334`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{73/128, 61/128, 71/256}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[73, 128], 
              Rational[61, 128], 
              Rational[71, 256]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[73, 128], 
         Rational[61, 128], 
         Rational[71, 256]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[197, 256], 
             Rational[127, 256], 
             Rational[67, 128]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.5130208333333334, 0.3307291666666667, 0.3489583333333333],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{197/256, 127/256, 67/128}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[197, 256], 
              Rational[127, 256], 
              Rational[67, 128]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[197, 256], 
         Rational[127, 256], 
         Rational[67, 128]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[207, 256], 
             Rational[19, 32], 
             Rational[203, 256]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.5390625, 0.3958333333333333, 0.5286458333333334],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{207/256, 19/32, 203/256}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[207, 256], 
              Rational[19, 32], 
              Rational[203, 256]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[207, 256], 
         Rational[19, 32], 
         Rational[203, 256]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[197, 256], 
             Rational[97, 128], 
             Rational[119, 128]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.5130208333333334, 0.5052083333333334, 0.6197916666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{197/256, 97/128, 119/128}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[197, 256], 
              Rational[97, 128], 
              Rational[119, 128]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[197, 256], 
         Rational[97, 128], 
         Rational[119, 128]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[209, 256], 
             Rational[231, 256], 
             Rational[241, 256]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.5442708333333334, 0.6015625, 0.6276041666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{209/256, 231/256, 241/256}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[209, 256], 
              Rational[231, 256], 
              Rational[241, 256]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[209, 256], 
         Rational[231, 256], 
         Rational[241, 256]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[115, 128], 
             Rational[123, 128], 
             Rational[61, 64]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.5989583333333334, 0.640625, 0.6354166666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{115/128, 123/128, 61/64}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[115, 128], 
              Rational[123, 128], 
              Rational[61, 64]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[115, 128], 
         Rational[123, 128], 
         Rational[61, 64]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[239, 256], 
             Rational[125, 128], 
             Rational[247, 256]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.6223958333333334, 0.6510416666666666, 0.6432291666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{239/256, 125/128, 247/256}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[239, 256], 
              Rational[125, 128], 
              Rational[247, 256]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[239, 256], 
         Rational[125, 128], 
         Rational[247, 256]}],
       Editable->False,
       Selectable->False]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"cololrs6", "=", 
    RowBox[{"{", 
     RowBox[{
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 
             Rational[3, 128], 
             Rational[39, 64]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.015625, 0.40625],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{0, 3/128, 39/64}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
              Rational[3, 128], 
              Rational[39, 64]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{0, 
         Rational[3, 128], 
         Rational[39, 64]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 
             Rational[139, 256], 
             Rational[125, 128]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.3619791666666667, 0.6510416666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{0, 139/256, 125/128}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
              Rational[139, 256], 
              Rational[125, 128]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{0, 
         Rational[139, 256], 
         Rational[125, 128]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 
             Rational[111, 128], 
             Rational[109, 128]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.578125, 0.5677083333333334],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{0, 111/128, 109/128}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
              Rational[111, 128], 
              Rational[109, 128]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{0, 
         Rational[111, 128], 
         Rational[109, 128]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[1, 128], 
             Rational[63, 64], 
             Rational[65, 128]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.005208333333333333, 0.65625, 0.3385416666666667],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{1/128, 63/64, 65/128}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[1, 128], 
              Rational[63, 64], 
              Rational[65, 128]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[1, 128], 
         Rational[63, 64], 
         Rational[65, 128]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[107, 256], 
             Rational[127, 128], 
             Rational[1, 64]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.2786458333333333, 0.6614583333333334, 0.010416666666666666`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{107/256, 127/128, 1/64}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[107, 256], 
              Rational[127, 128], 
              Rational[1, 64]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[107, 256], 
         Rational[127, 128], 
         Rational[1, 64]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[101, 128], 
             Rational[233, 256], 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.5260416666666666, 0.6067708333333334, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{101/128, 233/256, 0}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[101, 128], 
              Rational[233, 256], 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[101, 128], 
         Rational[233, 256], 0}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[31, 32], 
             Rational[161, 256], 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6458333333333334, 0.4192708333333333, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{31/32, 161/256, 0}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[31, 32], 
              Rational[161, 256], 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[31, 32], 
         Rational[161, 256], 0}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[255, 256], 
             Rational[65, 256], 
             Rational[7, 128]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.6640625, 0.16927083333333334`, 0.036458333333333336`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{255/256, 65/256, 7/128}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[255, 256], 
              Rational[65, 256], 
              Rational[7, 128]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[255, 256], 
         Rational[65, 256], 
         Rational[7, 128]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 
             Rational[11, 256], 
             Rational[77, 256]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.6666666666666666, 0.028645833333333332`, 0.20052083333333334`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{1, 11/256, 77/256}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 
              Rational[11, 256], 
              Rational[77, 256]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{1, 
         Rational[11, 256], 
         Rational[77, 256]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 
             Rational[11, 256], 
             Rational[11, 16]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.6666666666666666, 0.028645833333333332`, 0.4583333333333333],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{1, 11/256, 11/16}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 
              Rational[11, 256], 
              Rational[11, 16]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{1, 
         Rational[11, 256], 
         Rational[11, 16]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 
             Rational[3, 4], 
             Rational[255, 256]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.5, 0.6640625],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{1, 3/4, 255/256}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 
              Rational[3, 4], 
              Rational[255, 256]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{1, 
         Rational[3, 4], 
         Rational[255, 256]}],
       Editable->False,
       Selectable->False]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"cololrs7", "=", 
    RowBox[{"{", 
     RowBox[{
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[1, 4], 0, 
             Rational[1, 3]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          FrameStyle->RGBColor[0.16666666666666666`, 0., 0.2222222222222222],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            RowBox[{"{", 
              RowBox[{
                FractionBox["1", "4"], ",", "0", ",", 
                FractionBox["1", "3"]}], "}"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[1, 4], 0, 
              Rational[1, 3]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[1, 4], 0, 
         Rational[1, 3]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[1, 3], 0, 
             Rational[3, 4]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          FrameStyle->RGBColor[0.2222222222222222, 0., 0.5],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            RowBox[{"{", 
              RowBox[{
                FractionBox["1", "3"], ",", "0", ",", 
                FractionBox["3", "4"]}], "}"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[1, 3], 0, 
              Rational[3, 4]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[1, 3], 0, 
         Rational[3, 4]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[1, 2], 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          FrameStyle->RGBColor[0.3333333333333333, 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            RowBox[{"{", 
              RowBox[{
                FractionBox["1", "2"], ",", "0", ",", "1"}], "}"}], "]"}], 
          NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[1, 2], 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[1, 2], 0, 1}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[2, 3], 0, 
             Rational[2, 3]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          FrameStyle->RGBColor[0.4444444444444444, 0., 0.4444444444444444],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            RowBox[{"{", 
              RowBox[{
                FractionBox["2", "3"], ",", "0", ",", 
                FractionBox["2", "3"]}], "}"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[2, 3], 0, 
              Rational[2, 3]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[2, 3], 0, 
         Rational[2, 3]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[2, 3], 
             Rational[1, 7], 
             Rational[1, 7]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          
          FrameStyle->RGBColor[
           0.4444444444444444, 0.09523809523809523, 0.09523809523809523],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            RowBox[{"{", 
              RowBox[{
                FractionBox["2", "3"], ",", 
                FractionBox["1", "7"], ",", 
                FractionBox["1", "7"]}], "}"}], "]"}], NumberMarks -> False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[2, 3], 
              Rational[1, 7], 
              Rational[1, 7]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[2, 3], 
         Rational[1, 7], 
         Rational[1, 7]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[3, 4], 
             Rational[1, 4], 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          FrameStyle->RGBColor[0.5, 0.16666666666666666`, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            RowBox[{"{", 
              RowBox[{
                FractionBox["3", "4"], ",", 
                FractionBox["1", "4"], ",", "0"}], "}"}], "]"}], NumberMarks -> 
          False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[3, 4], 
              Rational[1, 4], 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[3, 4], 
         Rational[1, 4], 0}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[3, 4], 
             Rational[1, 3], 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          FrameStyle->RGBColor[0.5, 0.2222222222222222, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            RowBox[{"{", 
              RowBox[{
                FractionBox["3", "4"], ",", 
                FractionBox["1", "3"], ",", "0"}], "}"}], "]"}], NumberMarks -> 
          False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[3, 4], 
              Rational[1, 3], 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[3, 4], 
         Rational[1, 3], 0}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 
             Rational[1, 2], 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.3333333333333333, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            RowBox[{"{", 
              RowBox[{"1", ",", 
                FractionBox["1", "2"], ",", "0"}], "}"}], "]"}], NumberMarks -> 
          False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 
              Rational[1, 2], 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{1, 
         Rational[1, 2], 0}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 
             Rational[3, 4], 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          DefaultBaseStyle->"ColorSwatchGraphics",
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.5, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         StyleBox[
          RowBox[{"RGBColor", "[", 
            RowBox[{"{", 
              RowBox[{"1", ",", 
                FractionBox["3", "4"], ",", "0"}], "}"}], "]"}], NumberMarks -> 
          False]],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 
              Rational[3, 4], 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{1, 
         Rational[3, 4], 0}],
       Editable->False,
       Selectable->False]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"cololrs8", "=", 
    RowBox[{"{", 
     RowBox[{
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
            0.018608534191333927`, 0.30173098351473804`, 0.5341028414802669], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.012405689460889286`, 0.20115398900982537`, 0.3560685609868446],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{0.018608534191333927, 0.30173098351473804, \
0.5341028414802669}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[
             0.018608534191333927`, 0.30173098351473804`, 0.5341028414802669]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{0.018608534191333927`, 0.30173098351473804`, 
        0.5341028414802669}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
            0.027605114034911477`, 0.33102760822282185`, 0.5544028863447732], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.018403409356607652`, 0.2206850721485479, 0.36960192422984883`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{0.027605114034911477, 0.33102760822282185, \
0.5544028863447732}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[
             0.027605114034911477`, 0.33102760822282185`, 0.5544028863447732]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{0.027605114034911477`, 0.33102760822282185`, 
        0.5544028863447732}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
            0.2560578243434788, 0.9614753553859019, 0.9733941949110094], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.17070521622898588`, 0.6409835702572679, 0.6489294632740064],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{0.2560578243434788, 0.9614753553859019, \
0.9733941949110094}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[
             0.2560578243434788, 0.9614753553859019, 0.9733941949110094]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{0.2560578243434788, 0.9614753553859019, 0.9733941949110094}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
            0.3260536589221038, 0.9952803257889102, 0.9967625884812918], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.2173691059480692, 0.6635202171926069, 0.6645083923208612],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{0.3260536589221038, 0.9952803257889102, \
0.9967625884812918}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[
             0.3260536589221038, 0.9952803257889102, 0.9967625884812918]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{0.3260536589221038, 0.9952803257889102, 0.9967625884812918}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0.41582271757677647`, 1., 1.], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.27721514505118433`, 0.6666666666666667, 0.6666666666666667],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{0.41582271757677647, 1., 1.}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.41582271757677647`, 1., 1.]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{0.41582271757677647`, 1., 1.}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0.8835353216369666, 1., 0.9986448748524326], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.5890235477579777, 0.6666666666666667, 0.6657632499016217],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{0.8835353216369666, 1., 0.9986448748524326}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.8835353216369666, 1., 0.9986448748524326]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{0.8835353216369666, 1., 0.9986448748524326}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0.9586267202499148, 1., 0.9810831985231568], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.6390844801666099, 0.6666666666666667, 0.6540554656821046],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{0.9586267202499148, 1., 0.9810831985231568}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.9586267202499148, 1., 0.9810831985231568]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{0.9586267202499148, 1., 0.9810831985231568}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0.9817561083358612, 1., 0.9567061904847952], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.6545040722239075, 0.6666666666666667, 0.6378041269898636],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{0.9817561083358612, 1., 0.9567061904847952}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.9817561083358612, 1., 0.9567061904847952]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{0.9817561083358612, 1., 0.9567061904847952}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0.9938962627695225, 1., 0.9207705218673417], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.662597508513015, 0.6666666666666667, 0.6138470145782278],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{0.9938962627695225, 1., 0.9207705218673417}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.9938962627695225, 1., 0.9207705218673417]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{0.9938962627695225, 1., 0.9207705218673417}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1., 0.9998635569330274, 0.40797958032187454`], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.6666666666666667, 0.6665757046220183, 0.2719863868812497],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{1., 0.9998635569330274, 0.40797958032187454}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[1., 0.9998635569330274, 0.40797958032187454`]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{1., 0.9998635569330274, 0.40797958032187454`}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1., 0.991604647197464, 0.3188834314799063], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.6666666666666667, 0.6610697647983094, 0.21258895431993752`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{1., 0.991604647197464, 0.3188834314799063}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[1., 0.991604647197464, 0.3188834314799063]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{1., 0.991604647197464, 0.3188834314799063}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1., 0.9414022490779685, 0.25213625571602777`], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.6666666666666667, 0.6276014993853124, 0.1680908371440185],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{1., 0.9414022490779685, 0.25213625571602777}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[1., 0.9414022490779685, 0.25213625571602777`]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{1., 0.9414022490779685, 0.25213625571602777`}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1., 0.06490109017602629, 0.016071028583270648`], 
            RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.6666666666666667, 0.04326739345068419, 0.010714019055513765`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{1., 0.06490109017602629, 0.016071028583270648}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[1., 0.06490109017602629, 0.016071028583270648`]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{1., 0.06490109017602629, 0.016071028583270648`}],
       Editable->False,
       Selectable->False]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"spectralCF", "[", 
   RowBox[{"u_", "?", "NumericQ"}], "]"}], ":=", 
  RowBox[{"Blend", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"vals0", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "^", "1.2"}], ",", 
        RowBox[{"cololrs0", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "vals0", "]"}]}], "}"}]}], "]"}], ",", "u"}], 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"hotCF", "[", 
   RowBox[{"u_", "?", "NumericQ"}], "]"}], ":=", 
  RowBox[{"Blend", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"vals1", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "^", "2"}], ",", 
        RowBox[{"cololrs2", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "vals1", "]"}]}], "}"}]}], "]"}], ",", "u"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"radioactiveCF", "[", 
   RowBox[{"u_", "?", "NumericQ"}], "]"}], ":=", 
  RowBox[{"Blend", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"vals1", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "^", "2"}], ",", 
        RowBox[{"cololrs2b", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "vals1", "]"}]}], "}"}]}], "]"}], ",", "u"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kindlCF", "[", 
   RowBox[{"u_", "?", "NumericQ"}], "]"}], ":=", 
  RowBox[{"Blend", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"vals1", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "^", "2"}], ",", 
        RowBox[{"cololrs3", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "vals1", "]"}]}], "}"}]}], "]"}], ",", "u"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plasmaCF", "[", 
   RowBox[{"u_", "?", "NumericQ"}], "]"}], ":=", 
  RowBox[{"Blend", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"vals1", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "^", "2"}], ",", 
        RowBox[{"cololrs4", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "vals1", "]"}]}], "}"}]}], "]"}], ",", "u"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cubehelixCF", "[", 
   RowBox[{"u_", "?", "NumericQ"}], "]"}], ":=", 
  RowBox[{"Blend", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"vals1", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "^", "2"}], ",", 
        RowBox[{"cololrs5", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "vals1", "]"}]}], "}"}]}], "]"}], ",", "u"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"beamprofilerCFBlack", "[", 
    RowBox[{"u_", "?", "NumericQ"}], "]"}], ":=", 
   RowBox[{"Blend", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"vals6", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "^", "1.4"}], ",", 
         RowBox[{"cololrs6", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "vals6", "]"}]}], "}"}]}], "]"}], ",", "u"}], 
    "]"}]}], 
  RowBox[{"(*", 
   RowBox[{
   "Many", " ", "beam", " ", "profilers", " ", "use", " ", "something", " ", 
    "similar", " ", "to", " ", "this", " ", 
    RowBox[{"CF", "."}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GNUCF", "[", 
   RowBox[{"u_", "?", "NumericQ"}], "]"}], ":=", 
  RowBox[{"Blend", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"vals7", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "^", "2"}], ",", 
        RowBox[{"cololrs7", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "vals7", "]"}]}], "}"}]}], "]"}], ",", "u"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"brightSiteCF", "[", 
   RowBox[{"u_", "?", "NumericQ"}], "]"}], ":=", 
  RowBox[{"Blend", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"vals8", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "^", "2"}], ",", 
        RowBox[{"cololrs8", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "vals8", "]"}]}], "}"}]}], "]"}], ",", "u"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"visibleERFPerception", "[", 
   RowBox[{
    RowBox[{"wL_", "?", "NumericQ"}], ",", 
    RowBox[{"sat_", "?", "NumericQ"}]}], "]"}], ":=", 
  RowBox[{"RGBColor", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Erf", "[", 
        RowBox[{"sat", "*", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "/", 
          SqrtBox["\[Pi]"]}]}], "]"}], ",", 
       RowBox[{"Erf", "[", 
        RowBox[{"sat", "*", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "/", 
          SqrtBox["\[Pi]"]}]}], "]"}], ",", 
       RowBox[{"Erf", "[", 
        RowBox[{"sat", "*", 
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "/", 
          SqrtBox["\[Pi]"]}]}], "]"}]}], "}"}], "&"}], "@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"ColorData", "[", "\"\<VisibleSpectrum\>\"", "]"}], "[", "wL", 
      "]"}], ")"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"visibleERFPerceptionNL", "[", 
    RowBox[{
     RowBox[{"wL_", "?", "NumericQ"}], ",", 
     RowBox[{"sat_", "?", "NumericQ"}]}], "]"}], ":=", 
   RowBox[{"RGBColor", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"Erf", "[", 
          RowBox[{"sat", "*", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}], "/", 
            SqrtBox["\[Pi]"]}]}], "]"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{"(", 
              RowBox[{"sat", "-", 
               RowBox[{"2", "\[Pi]"}]}], ")"}], "]"}], "-", 
            RowBox[{"1", "/", 
             RowBox[{"\[ExponentialE]", "^", 
              RowBox[{"(", 
               RowBox[{"2", " ", "\[Pi]"}], ")"}]}]}]}], ")"}], 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"#", "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], ")"}], 
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}]}], ",", 
        RowBox[{
         RowBox[{"Erf", "[", 
          RowBox[{"sat", "*", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "/", 
            SqrtBox["\[Pi]"]}]}], "]"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{"(", 
              RowBox[{"sat", "-", 
               RowBox[{"2", "\[Pi]"}]}], ")"}], "]"}], "-", 
            RowBox[{"1", "/", 
             RowBox[{"\[ExponentialE]", "^", 
              RowBox[{"(", 
               RowBox[{"2", " ", "\[Pi]"}], ")"}]}]}]}], ")"}], 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}]}], ")"}], 
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}]}], ",", 
        RowBox[{
         RowBox[{"Erf", "[", 
          RowBox[{"sat", "*", 
           RowBox[{
            RowBox[{"#", "[", 
             RowBox[{"[", "3", "]"}], "]"}], "/", 
            SqrtBox["\[Pi]"]}]}], "]"}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{"(", 
              RowBox[{"sat", "-", 
               RowBox[{"2", "\[Pi]"}]}], ")"}], "]"}], "-", 
            RowBox[{"1", "/", 
             RowBox[{"\[ExponentialE]", "^", 
              RowBox[{"(", 
               RowBox[{"2", " ", "\[Pi]"}], ")"}]}]}]}], ")"}], 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"#", "[", 
             RowBox[{"[", "3", "]"}], "]"}]}], ")"}], 
          RowBox[{"#", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}]}]}], "}"}], "&"}], "@", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"ColorData", "[", "\"\<VisibleSpectrum\>\"", "]"}], "[", "wL", 
       "]"}], ")"}]}], "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], "*)"}],
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{"Here", " ", "are", " ", "some", " ", "options", " ", "for", " ", 
     RowBox[{"plotting", "."}]}], " ", "*)"}],
   FontSize->18], 
  RowBox[{
   RowBox[{"SetOptions", "[", 
    RowBox[{"ListLinePlot", ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"Axes", "\[Rule]", "False"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "785"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"Darker", "[", 
         RowBox[{"Darker", "[", "Gray", "]"}], "]"}], ",", "39", ",", 
        "Thick"}], "]"}]}], ",", 
     RowBox[{"ImagePadding", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"165", ",", "35"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"165", ",", "35"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Thick"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<r (\[Mu]m)\>\"", ",", "\"\<Intensity (arb.units)\>\""}], 
       "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"FontSize", "\[Rule]", "39"}], ",", 
         RowBox[{"FontFamily", "\[Rule]", "\"\<Cambria\>\""}], ",", "Black"}],
         "}"}], "}"}]}]}], "]"}], ";"}]}], "\n", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"ListPlot", ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"Axes", "\[Rule]", "False"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "785"}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
    RowBox[{"FrameStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{
       RowBox[{"Darker", "[", 
        RowBox[{"Darker", "[", "Gray", "]"}], "]"}], ",", "39", ",", 
       "Thick"}], "]"}]}], ",", 
    RowBox[{"ImagePadding", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"165", ",", "35"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"165", ",", "35"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Thick"}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<r (\[Mu]m)\>\"", ",", "\"\<Intensity (arb.units)\>\""}], 
      "}"}]}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"FontSize", "\[Rule]", "39"}], ",", 
       RowBox[{"FontFamily", "\[Rule]", "\"\<Cambria\>\""}], ",", "Black"}], 
      "}"}]}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"Plot", ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"Axes", "\[Rule]", "False"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "785"}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
    RowBox[{"FrameStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{
       RowBox[{"Darker", "[", 
        RowBox[{"Darker", "[", "Gray", "]"}], "]"}], ",", "39", ",", 
       "Thick"}], "]"}]}], ",", 
    RowBox[{"ImagePadding", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"165", ",", "35"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"165", ",", "35"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Thick"}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<r (\[Mu]m)\>\"", ",", "\"\<Intensity (arb.units)\>\""}], 
      "}"}]}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"FontSize", "\[Rule]", "39"}], ",", 
       RowBox[{"FontFamily", "\[Rule]", "\"\<Cambria\>\""}], ",", "Black"}], 
      "}"}]}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"DensityPlot", ",", 
    RowBox[{"ImageSize", "\[Rule]", "785"}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
    RowBox[{"FrameStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{
       RowBox[{"Darker", "[", 
        RowBox[{"Darker", "[", "Gray", "]"}], "]"}], ",", "39", ",", 
       "Thick"}], "]"}]}], ",", 
    RowBox[{"ImagePadding", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"165", ",", "35"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"165", ",", "35"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x (\[Mu]m)\>\"", ",", "\"\<y (\[Mu]m)\>\""}], "}"}]}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"FontSize", "\[Rule]", "39"}], ",", 
       RowBox[{"FontFamily", "\[Rule]", "\"\<Cambria\>\""}], ",", "Black"}], 
      "}"}]}], ",", 
    RowBox[{"PlotRangePadding", "\[Rule]", "0"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"BarLegend", "[", 
      RowBox[{"Automatic", ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"FontSize", "\[Rule]", "39"}], ",", 
          RowBox[{"FontFamily", "\[Rule]", "\"\<Cambria\>\""}], ",", 
          "Black"}], "}"}]}], ",", 
       RowBox[{"LegendMarkerSize", "\[Rule]", "554.5"}]}], "]"}]}], ",", 
    RowBox[{"ColorFunction", "\[Rule]", " ", "ophirCF"}]}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SetOptions", "[", 
    RowBox[{"ListDensityPlot", ",", 
     RowBox[{"ImageSize", "\[Rule]", "785"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"Darker", "[", 
         RowBox[{"Darker", "[", "Gray", "]"}], "]"}], ",", "39", ",", 
        "Thick"}], "]"}]}], ",", 
     RowBox[{"ImagePadding", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"165", ",", "35"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"165", ",", "35"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<x (\[Mu]m)\>\"", ",", "\"\<y (\[Mu]m)\>\""}], "}"}]}], 
     ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"FontSize", "\[Rule]", "39"}], ",", 
        RowBox[{"FontFamily", "\[Rule]", "\"\<Cambria\>\""}], ",", "Black"}], 
       "}"}]}], ",", 
     RowBox[{"PlotRangePadding", "\[Rule]", "0"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"BarLegend", "[", 
       RowBox[{"Automatic", ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"FontSize", "\[Rule]", "39"}], ",", 
           RowBox[{"FontFamily", "\[Rule]", "\"\<Cambria\>\""}], ",", 
           "Black"}], "}"}]}], ",", 
        RowBox[{"LegendMarkerSize", "\[Rule]", "554.5"}]}], "]"}]}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", " ", "ophirCF"}]}], "]"}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"SetOptions", "[", 
     RowBox[{"ListPointPlot3D", ",", 
      RowBox[{"ColorFunction", "\[Rule]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"spectralCF", "[", "#3", "]"}], "&"}], ")"}]}], ",", 
      RowBox[{"BoxRatios", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "1", ",", " ", "0.005"}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "785"}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
      RowBox[{"LabelStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"FontSize", "\[Rule]", "39"}], ",", 
         RowBox[{"FontFamily", "\[Rule]", "\"\<Cambria\>\""}], ",", "Black"}],
         "}"}]}], ",", 
      RowBox[{"PlotRangePadding", "\[Rule]", "0"}], ",", 
      RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
      RowBox[{"ViewPoint", "\[Rule]", "Top"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"PointSize", "[", "0.01", "]"}]}], ",", 
      RowBox[{"ImagePadding", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"165", ",", "35"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"165", ",", "35"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<x (\[Mu]m)\>\"", ",", "\"\<y (\[Mu]m)\>\"", ",", "\"\<\>\""}], 
        "}"}]}], ",", 
      RowBox[{"AxesStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"Darker", "[", 
          RowBox[{"Darker", "[", "Gray", "]"}], "]"}], ",", "39", ",", 
         "Thick"}], "]"}]}], ",", 
      RowBox[{"BoxStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"Darker", "[", 
          RowBox[{"Darker", "[", "Gray", "]"}], "]"}], ",", "39", ",", 
         "Thick"}], "]"}]}]}], "]"}], ";"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], "*)"}],
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
  StyleBox[
   RowBox[{"(*", " ", "Definitions", " ", "*)"}],
   FontSize->18], "\[IndentingNewLine]", 
  RowBox[{"(*", "     ", 
   RowBox[{
    RowBox[{"-", " ", "Typical"}], " ", "interface", " ", "functions"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SLz", "[", 
     RowBox[{"x_", ",", "y_", ",", "R_", ",", "Ck_"}], "]"}], "=", 
    "               ", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"x", "^", "2"}], "+", 
        RowBox[{"y", "^", "2"}]}], ")"}], "/", "R"}], "/", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"1", "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", "Ck"}], ")"}], "*", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"x", "^", "2"}], "+", 
             RowBox[{"y", "^", "2"}]}], ")"}], "/", 
           RowBox[{"R", "^", "2"}]}]}]}], "]"}]}], ")"}]}]}], ";", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"Standard", " ", "surface"}], ";", " ", 
      RowBox[{
       RowBox[{"x", " ", "y"}], " ", "\[Rule]", " ", 
       RowBox[{"input", " ", "coordinates"}]}]}], ",", " ", 
     RowBox[{"R", " ", "\[Rule]", " ", 
      RowBox[{"Radius", " ", "of", " ", "curvature"}]}], ",", " ", 
     RowBox[{"Ck", " ", "\[Rule]", " ", 
      RowBox[{"Conical", " ", 
       RowBox[{"constant", "."}]}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Axz", "[", 
     RowBox[{"x_", ",", "y_", ",", "R_", ",", "Al_"}], "]"}], "=", 
    "                 ", 
    RowBox[{"R", "+", 
     RowBox[{"SLz", "[", 
      RowBox[{"x", ",", "y", ",", 
       RowBox[{"R", "*", 
        RowBox[{
         RowBox[{"Cot", "[", 
          RowBox[{
           RowBox[{"Al", "/", "180."}], "*", "Pi"}], "]"}], "^", "2"}]}], ",", 
       RowBox[{
        RowBox[{"-", "1"}], "-", 
        RowBox[{
         RowBox[{"Cot", "[", 
          RowBox[{
           RowBox[{"Al", "/", "180."}], "*", "Pi"}], "]"}], "^", "2"}]}]}], 
      "]"}]}]}], ";", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{
      "Rounded", " ", "tip", " ", "axicon", " ", "with", " ", "tip", " ", 
       "radius", " ", "R"}], ";", " ", 
      RowBox[{
       RowBox[{"x", " ", "y"}], " ", "\[Rule]", " ", 
       RowBox[{"input", " ", "coordinates"}]}]}], ",", " ", 
     RowBox[{"R", " ", "\[Rule]", " ", 
      RowBox[{
      "Radius", " ", "of", " ", "curvature", " ", "of", " ", "the", " ", 
       "tip"}]}], ",", " ", 
     RowBox[{"Al", " ", "\[Rule]", " ", 
      RowBox[{
       RowBox[{"Axicon", "'"}], "s", " ", 
       RowBox[{"angle", "."}]}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ALz", "[", 
     RowBox[{"x_", ",", "y_", ",", "R_", ",", "Ck_", ",", "coef_"}], "]"}], 
    "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"x", "^", "2"}], "+", 
         RowBox[{"y", "^", "2"}]}], ")"}], "/", "R"}], "/", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", "Ck"}], ")"}], "*", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"x", "^", "2"}], "+", 
              RowBox[{"y", "^", "2"}]}], ")"}], "/", 
            RowBox[{"R", "^", "2"}]}]}]}], "]"}]}], ")"}]}], "+", 
     RowBox[{
      RowBox[{"Dot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"#", "^", "1"}], ",", 
            RowBox[{"#", "^", "2"}], ",", 
            RowBox[{"#", "^", "3"}], ",", 
            RowBox[{"#", "^", "4"}], ",", 
            RowBox[{"#", "^", "5"}], ",", 
            RowBox[{"#", "^", "6"}], ",", 
            RowBox[{"#", "^", "7"}], ",", 
            RowBox[{"#", "^", "8"}]}], "}"}], "&"}], "@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"x", "^", "2"}], "/", 
            RowBox[{"mm", "^", "2"}]}], "+", 
           RowBox[{
            RowBox[{"y", "^", "2"}], "/", 
            RowBox[{"mm", "^", "2"}]}]}], ")"}]}], ",", "coef"}], "]"}], " ", 
      "mm"}]}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"Even", " ", "aspherical", " ", "surface"}], ";", " ", 
     RowBox[{
      RowBox[{"x", " ", "y"}], " ", "\[Rule]", " ", 
      RowBox[{"input", " ", "coordinates"}]}]}], ",", " ", 
    RowBox[{"R", " ", "\[Rule]", " ", 
     RowBox[{"Radius", " ", "of", " ", "curvature"}]}], ",", " ", 
    RowBox[{"Ck", " ", "\[Rule]", " ", 
     RowBox[{"Conical", " ", "constant"}]}], ",", " ", 
    RowBox[{"coef", " ", "\[Rule]", " ", 
     RowBox[{"aspherical", " ", "surface", " ", 
      RowBox[{"coefficients", "."}]}]}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"OAP", "[", 
     RowBox[{"x_", ",", "y_", ",", "R_", ",", "x0_"}], "]"}], "=", 
    "            ", 
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"x", "-", "x0"}], ")"}], "^", "2"}], "+", 
         RowBox[{"y", "^", "2"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"2", " ", "R"}], ")"}]}], ")"}]}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", "     ", 
   RowBox[{
    RowBox[{"-", " ", "Typical"}], " ", "transmission", " ", "functions"}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Singular", " ", "Phase", " ", "Dislocation", " ", "and", " ", "related", 
    " ", 
    RowBox[{"functions", "."}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"T\[Lambda]", "[", 
     RowBox[{"\[Theta]_", ",", "\[Lambda]0\[Lambda]_", ",", "m_Integer"}], 
     "]"}], ":=", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"\[ImaginaryI]", " ", "\[Lambda]0\[Lambda]", " ", 
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{"m", " ", "\[Theta]"}], ",", " ", 
         RowBox[{"2", "\[Pi]"}]}], "]"}]}], "-", 
      RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", "\[Lambda]0\[Lambda]"}]}], 
     "]"}]}], ";", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{
      "Transmission", " ", "function", " ", "of", " ", "a", " ", "sectional", 
       " ", "SPP", " ", "designed", " ", "for", " ", "\[Lambda]0", " ", 
       "that", " ", "is", " ", "illumitated", " ", "with", " ", "wavelength", 
       " ", "\[Lambda]", " ", 
       RowBox[{"(", 
        RowBox[{"\[Lambda]0\[Lambda]", " ", "=", " ", 
         RowBox[{"\[Lambda]0", "/", "\[Lambda]"}]}], ")"}]}], ";", " ", 
      RowBox[{"\[Theta]", " ", "\[Rule]", " ", 
       RowBox[{"azimuthal", " ", "angle"}]}]}], ",", " ", 
     RowBox[{"m", " ", "\[Rule]", " ", 
      RowBox[{"topological", " ", "charge", " ", "of", " ", "the", " ", 
       RowBox[{"SPP", "."}]}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"T\[Lambda]Fourier", "[", 
     RowBox[{
     "\[Theta]_", ",", "\[Lambda]0\[Lambda]_", ",", "m_Integer", ",", 
      "kMax_Integer"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"\[Pi]", " ", "\[Lambda]0\[Lambda]"}], "]"}], "/", "\[Pi]"}], 
      ")"}], 
     RowBox[{
      StyleBox[
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"k", "=", 
         RowBox[{"-", "kMax"}]}], "kMax"],
       FontSize->18], 
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{"\[ImaginaryI]", " ", "k", " ", "m", " ", "\[Theta]"}], "]"}],
        "/", 
       RowBox[{"(", 
        RowBox[{"\[Lambda]0\[Lambda]", "-", "k"}], ")"}]}]}]}]}], ";", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "T\[Lambda]", " ", "is", " ", "decomposed", " ", "in", " ", "Fourier", 
      " ", 
      RowBox[{"Series", ".", " ", "T\[Lambda]"}], " ", "as", " ", "sum", " ", 
      "of", " ", "vortex", " ", "modes", " ", "with", " ", "indices", " ", 
      "between"}], " ", "-", 
     RowBox[{"kMax", " ", "and", " ", 
      RowBox[{"kMax", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"TN", "[", 
     RowBox[{
     "\[Theta]_", ",", "\[Lambda]0\[Lambda]_", ",", "m_Integer", ",", 
      "\[CapitalNu]_Integer"}], "]"}], ":=", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"\[ImaginaryI]", " ", "\[Lambda]0\[Lambda]", " ", 
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{"m", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Floor", "[", 
             RowBox[{
              RowBox[{"\[CapitalNu]", " ", "\[Theta]"}], ",", " ", 
              RowBox[{"2", " ", "\[Pi]"}]}], "]"}], "/", "\[CapitalNu]"}], 
           ")"}]}], ",", 
         RowBox[{"2", " ", "\[Pi]"}]}], "]"}]}], "-", 
      RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", "\[Lambda]0\[Lambda]"}], 
      "+", 
      RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", 
       RowBox[{"(", 
        RowBox[{"m", "/", "\[CapitalNu]"}], ")"}]}]}], "]"}]}], ";", 
   RowBox[{"(*", " ", 
    RowBox[{
    "Transmission", " ", "function", " ", "of", " ", "a", " ", "sectional", 
     " ", "Diffractive", " ", "SPP", " ", "designed", " ", "for", " ", 
     "\[Lambda]0", " ", "with", " ", "N", " ", "steps", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"i", ".", "e", ".", " ", "N"}], "/", "m"}], " ", "discrete", 
        " ", "levels"}], ")"}], "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"TNFourier", "[", 
     RowBox[{
     "\[Theta]_", ",", "m_Integer", ",", "\[CapitalNu]_Integer", ",", 
      "kMax_Integer"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"-", "\[CapitalNu]"}], " ", "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"\[Pi]", " ", 
         RowBox[{"m", "/", "\[CapitalNu]"}]}], "]"}], "/", "\[Pi]"}], ")"}], 
     RowBox[{
      StyleBox[
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"k", "=", 
         RowBox[{"-", "kMax"}]}], "kMax"],
       FontSize->18], 
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{"\[ImaginaryI]", 
         RowBox[{"(", 
          RowBox[{"m", "-", 
           RowBox[{"\[CapitalNu]", " ", "k"}]}], ")"}], " ", "\[Theta]"}], 
        "]"}], "/", 
       RowBox[{"(", 
        RowBox[{"m", "-", 
         RowBox[{"\[CapitalNu]", " ", "k"}]}], ")"}]}]}]}]}], ";", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "TN", " ", "is", " ", "decomposed", " ", "in", " ", "Fourier", " ", 
      RowBox[{"Series", ".", " ", "TN"}], " ", "as", " ", "sum", " ", "of", 
      " ", "vortex", " ", "modes", " ", "with", " ", "indices", " ", 
      "between"}], " ", "-", 
     RowBox[{"kMax", " ", "and", " ", 
      RowBox[{"kMax", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"T\[Lambda]Fourier", "[", 
     RowBox[{
     "\[Theta]_", ",", "\[Lambda]0\[Lambda]_", ",", "m_Integer", ",", 
      "kList_List"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"\[Pi]", " ", "\[Lambda]0\[Lambda]"}], "]"}], "/", "\[Pi]"}], 
      ")"}], 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"\[ImaginaryI]", " ", "k", " ", "m", " ", "\[Theta]"}], 
         "]"}], "/", 
        RowBox[{"(", 
         RowBox[{"\[Lambda]0\[Lambda]", "-", "k"}], ")"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "kList"}], "}"}]}], "]"}]}]}], ";", 
   RowBox[{"(*", 
    RowBox[{
    "Summation", " ", "of", " ", "certain", " ", "vortex", " ", "modes", " ", 
     "with", " ", "indices", " ", "included", " ", "in", " ", "the", " ", 
     "list", " ", "kList", " ", "with", " ", "the", " ", "Fourier", " ", 
     "coefficients", " ", "of", " ", 
     RowBox[{"T\[Lambda]", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"TNFourier", "[", 
     RowBox[{
     "\[Theta]_", ",", "m_Integer", ",", "\[CapitalNu]_Integer", ",", 
      "kList_List"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"-", "\[CapitalNu]"}], " ", "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"\[Pi]", " ", 
         RowBox[{"m", "/", "\[CapitalNu]"}]}], "]"}], "/", "\[Pi]"}], ")"}], 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"\[ImaginaryI]", 
          RowBox[{"(", 
           RowBox[{"m", "-", 
            RowBox[{"\[CapitalNu]", " ", "k"}]}], ")"}], " ", "\[Theta]"}], 
         "]"}], "/", 
        RowBox[{"(", 
         RowBox[{"m", "-", 
          RowBox[{"\[CapitalNu]", " ", "k"}]}], ")"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "kList"}], "}"}]}], "]"}]}]}], ";", 
   RowBox[{"(*", 
    RowBox[{
    "Summation", " ", "of", " ", "certain", " ", "vortex", " ", "modes", " ", 
     "with", " ", "indices", " ", "included", " ", "in", " ", "the", " ", 
     "list", " ", "kList", " ", "with", " ", "the", " ", "Fourier", " ", 
     "coefficients", " ", "of", " ", 
     RowBox[{"TN", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", "     ", 
    RowBox[{"-", " ", "Miscelaneous"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Not", " ", "yet", " ", 
     RowBox[{"defined", "."}]}], "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   StyleBox[
    RowBox[{"(*", "     ", 
     RowBox[{
      RowBox[{"-", " ", "Grids"}], " ", "of", " ", "parallel", " ", "rays"}], 
     "*)"}],
    FontSize->18], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CartesianGrid", "[", 
     RowBox[{"rad_", ",", "num_Integer"}], "]"}], "  ", ":=", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", "y"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"-", 
           RowBox[{"N", "@", "rad"}]}], ",", "rad", ",", 
          RowBox[{"2", " ", 
           RowBox[{"rad", "/", 
            RowBox[{"(", 
             RowBox[{"num", "-", "1."}], ")"}]}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", 
          RowBox[{"-", 
           RowBox[{"N", "@", "rad"}]}], ",", "rad", ",", 
          RowBox[{"2", " ", 
           RowBox[{"rad", "/", 
            RowBox[{"(", 
             RowBox[{"num", "-", "1."}], ")"}]}]}]}], "}"}]}], "]"}], ",", 
      "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"rad", " ", "\[Rule]", " ", 
     RowBox[{
     "the", " ", "spatial", " ", "extent", " ", "of", " ", "the", " ", "rays",
       " ", "bundle"}]}], ",", " ", 
    RowBox[{"num", " ", "\[Rule]", " ", 
     RowBox[{"related", " ", "to", " ", "the", " ", "number", " ", "of", " ", 
      RowBox[{"rays", "."}]}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"The", " ", "version", " ", "without", " ", "chief"}], "-", 
    RowBox[{
    "ray", " ", "is", " ", "more", " ", "suitable", " ", "when", " ", "we", 
     " ", "deal", " ", "with", " ", "singular", " ", "beams", " ", "with", 
     " ", "the", " ", "singularity", " ", "along", " ", "the", " ", "chief"}],
     "-", 
    RowBox[{"ray", "."}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "HexapolarGrid", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"\"\<chiefRay\>\"", "\[Rule]", " ", "True"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"HexapolarGrid", "[", 
     RowBox[{"rad_", ",", "num_Integer", ",", 
      RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], " ", ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"OptionValue", "[", "\"\<chiefRay\>\"", "]"}], "\[Equal]", 
       "True"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], "}"}], ",", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"p", " ", 
             RowBox[{"rad", "/", "num"}], 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Cos", "[", "th", "]"}], ",", 
               RowBox[{"Sin", "[", "th", "]"}]}], "}"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"p", ",", "1", ",", "num"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"th", ",", 
              RowBox[{"2", " ", 
               RowBox[{"Pi", "/", 
                RowBox[{"(", 
                 RowBox[{"6.", " ", "p"}], ")"}]}]}], ",", " ", 
              RowBox[{"2", "Pi"}], ",", 
              RowBox[{"2", " ", 
               RowBox[{"Pi", "/", 
                RowBox[{"(", 
                 RowBox[{"6.", " ", "p"}], ")"}]}]}]}], "}"}]}], "]"}], ",", 
          "1"}], "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"p", " ", 
           RowBox[{"rad", "/", "num"}], 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", "th", "]"}], ",", 
             RowBox[{"Sin", "[", "th", "]"}]}], "}"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"p", ",", "1", ",", "num"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"th", ",", 
            RowBox[{"2", " ", 
             RowBox[{"Pi", "/", 
              RowBox[{"(", 
               RowBox[{"6.", " ", "p"}], ")"}]}]}], ",", " ", 
            RowBox[{"2", "Pi"}], ",", 
            RowBox[{"2", " ", 
             RowBox[{"Pi", "/", 
              RowBox[{"(", 
               RowBox[{"6.", " ", "p"}], ")"}]}]}]}], "}"}]}], "]"}], ",", 
        "1"}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"rad", " ", "\[Rule]", " ", 
     RowBox[{
     "the", " ", "spatial", " ", "extent", " ", "of", " ", "the", " ", "rays",
       " ", "bundle"}]}], ",", " ", 
    RowBox[{"num", " ", "\[Rule]", " ", 
     RowBox[{"related", " ", "to", " ", "the", " ", "number", " ", "of", " ", 
      RowBox[{"rays", "."}]}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"LineGrid", "[", 
     RowBox[{"rad_", ",", "num_Integer"}], "]"}], "            ", ":=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", 
         RowBox[{"N", "@", "rad"}]}], ",", "rad", ",", 
        RowBox[{"2", " ", 
         RowBox[{"rad", "/", 
          RowBox[{"(", 
           RowBox[{"num", "-", "1."}], ")"}]}]}]}], "}"}]}], "]"}]}], ";", 
   " ", 
   RowBox[{"(*", 
    RowBox[{
    "Useful", " ", "for", " ", "graphics", " ", "or", " ", "optimization", 
     " ", "of", " ", "circularly", " ", "symmetric", " ", "optical", " ", 
     RowBox[{"systems", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"rad", " ", "\[Rule]", " ", 
      RowBox[{
      "the", " ", "spatial", " ", "extent", " ", "of", " ", "the", " ", 
       "rays", " ", "bundle"}]}], ",", " ", 
     RowBox[{"num", " ", "\[Rule]", " ", 
      RowBox[{"the", " ", "number", " ", "of", " ", 
       RowBox[{"rays", "."}]}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CircleGrid", "[", 
     RowBox[{"rad_", ",", "num_Integer"}], "]"}], "       ", ":=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"rad", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", "th", "]"}], ",", 
         RowBox[{"Sin", "[", "th", "]"}]}], "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"th", ",", 
        RowBox[{"2", " ", 
         RowBox[{
          RowBox[{"N", "@", "Pi"}], "/", "num"}]}], ",", 
        RowBox[{"2", " ", "Pi"}], ",", 
        RowBox[{"2", " ", 
         RowBox[{
          RowBox[{"N", "@", "Pi"}], "/", "num"}]}]}], "}"}]}], "]"}]}], ";", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"rad", " ", "\[Rule]", " ", 
      RowBox[{
      "distance", " ", "from", " ", "the", " ", "optica", " ", "axis", " ", 
       "of", " ", "the", " ", "rays", " ", "bundle"}]}], ",", " ", 
     RowBox[{"num", " ", "\[Rule]", " ", 
      RowBox[{"the", " ", "number", " ", "of", " ", 
       RowBox[{"rays", "."}]}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], "*)"}],
    "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   StyleBox[
    RowBox[{"(*", "     ", 
     RowBox[{
      RowBox[{"-", " ", "Functions"}], " ", "needed", " ", "for", " ", 
      "system", " ", "optimization"}], "*)"}],
    FontSize->18], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"FindFocus", "[", 
     RowBox[{"surfaceCoordinates_List", ",", "rayTilt_List"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"sc", "=", 
         RowBox[{"Transpose", "@", "surfaceCoordinates"}]}], ",", 
        RowBox[{"ta", "=", 
         RowBox[{"Transpose", "@", "rayTilt"}]}], ",", "rx", ",", "ry", ",", 
        "tx", ",", "ty", ",", "tz"}], "}"}], ",", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"rx", "=", 
        RowBox[{"sc", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"surfaceCoordinates", " ", "\[Rule]", " ", 
          RowBox[{
          "input", " ", "coordinates", " ", "of", " ", "the", " ", "rays"}]}],
          ","}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"ry", "=", 
        RowBox[{"sc", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"tx", "=", 
        RowBox[{"ta", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", 
       RowBox[{"(*", 
        RowBox[{"rayTilt", "            ", "\[Rule]", " ", 
         RowBox[{"input", " ", "direction", " ", 
          RowBox[{"vectors", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"ty", "=", 
        RowBox[{"ta", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "ta", "]"}], "\[GreaterEqual]", " ", "3"}], 
         ",", 
         RowBox[{"tz", "=", 
          RowBox[{"ta", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{"tz", "=", 
          RowBox[{"Sqrt", "[", 
           RowBox[{"1", "-", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"tx", "^", "2"}], "+", 
              RowBox[{"ty", "^", "2"}]}], ")"}]}], "]"}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Total", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"rx", "*", "tx"}], "+", 
             RowBox[{"ry", "*", "ty"}]}], ")"}], "/", "tz"}], "]"}]}], "/", 
        RowBox[{"Total", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"tx", "^", "2"}], "+", 
            RowBox[{"ty", "^", "2"}]}], ")"}], "/", 
          RowBox[{"tz", "^", "2"}]}], "]"}]}]}]}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "]"}]}]}], 
  RowBox[{"(*", 
   RowBox[{
   "This", " ", "function", " ", "return", " ", "the", " ", "position", " ", 
    "of", " ", "the", " ", "focal", " ", "plane", " ", "with", " ", "respect",
     " ", "to", " ", "the", " ", "plane", " ", "on", " ", "which", " ", 
    "surfaceCoordinates", " ", "and", " ", "rayTilt", " ", "are", " ", 
    RowBox[{"defined", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "FindFocusGaussian", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"\"\<radius\>\"", "\[Rule]", " ", 
      RowBox[{"1", " ", "mm"}]}], "}"}]}], ";", 
   RowBox[{"(*", 
    RowBox[{
    "The", " ", "option", " ", "\"\<radius\>\"", " ", "is", " ", "the", " ", 
     "radius", " ", "of", " ", "the", " ", "Gaussian", " ", "beam", " ", "at",
      " ", 
     RowBox[{"1", "/", 
      RowBox[{"e", "^", "2."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"FindFocusGaussian", "[", 
     RowBox[{"surfaceCoordinates_List", ",", "rayTilt_List", ",", 
      RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"sc", "=", 
         RowBox[{"Transpose", "@", "surfaceCoordinates"}]}], ",", 
        RowBox[{"ta", "=", 
         RowBox[{"Transpose", "@", "rayTilt"}]}], ",", "rx", ",", "ry", ",", 
        "tx", ",", "ty", ",", "tz", ",", "W"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"W", "=", 
        RowBox[{"OptionValue", "[", "\"\<radius\>\"", "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"rx", "=", 
        RowBox[{"sc", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"surfaceCoordinates", " ", "\[Rule]", " ", 
          RowBox[{
          "input", " ", "coordinates", " ", "of", " ", "the", " ", "rays"}]}],
          ","}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"ry", "=", 
        RowBox[{"sc", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"tx", "=", 
        RowBox[{"ta", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", 
       RowBox[{"(*", 
        RowBox[{"rayTilt", "            ", "\[Rule]", " ", 
         RowBox[{"input", " ", "direction", " ", 
          RowBox[{"vectors", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"ty", "=", 
        RowBox[{"ta", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "ta", "]"}], "\[GreaterEqual]", " ", "3"}], 
         ",", 
         RowBox[{"tz", "=", 
          RowBox[{"ta", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{"tz", "=", 
          RowBox[{"Sqrt", "[", 
           RowBox[{"1", "-", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"tx", "^", "2"}], "+", 
              RowBox[{"ty", "^", "2"}]}], ")"}]}], "]"}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Total", "[", 
          RowBox[{
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "2"}], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"rx", "^", "2"}], "+", 
                RowBox[{"ry", "^", "2"}]}], ")"}], "/", 
              RowBox[{"W", "^", "2"}]}]}], "]"}], "*", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"rx", "*", "tx"}], "+", 
              RowBox[{"ry", "*", "ty"}]}], ")"}], "/", "tz"}]}], "]"}]}], "/", 
        RowBox[{"Total", "[", 
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "2"}], 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"rx", "^", "2"}], "+", 
               RowBox[{"ry", "^", "2"}]}], ")"}], "/", 
             RowBox[{"W", "^", "2"}]}]}], "]"}], "*", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"tx", "^", "2"}], "+", 
             RowBox[{"ty", "^", "2"}]}], ")"}], "/", 
           RowBox[{"tz", "^", "2"}]}]}], "]"}]}]}]}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "]"}]}]}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "This", " ", "function", " ", "return", " ", "the", " ", "position", " ", 
     "of", " ", "the", " ", "focal", " ", "plane", " ", "with", " ", 
     "respect", " ", "to", " ", "the", " ", "plane", " ", "on", " ", "which", 
     " ", "surfaceCoordinates", " ", "and", " ", "rayTilt", " ", "are", " ", 
     "defined"}], ",", " ", "\[IndentingNewLine]", 
    RowBox[{
    "assuming", " ", "that", " ", "rays", " ", "carry", " ", "a", " ", 
     "certain", " ", "energy", " ", "that", " ", "changes", " ", "according", 
     " ", "to", " ", "a", " ", "Gaussian", " ", "function", " ", "with", " ", 
     "respect", " ", "to", " ", "the", " ", "optical", " ", 
     RowBox[{"axis", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FindFocusLine", "[", 
    RowBox[{"surfaceCoordinates_List", ",", "rayTilt_List"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"sc", "=", 
        RowBox[{"Transpose", "@", "surfaceCoordinates"}]}], ",", 
       RowBox[{"ta", "=", 
        RowBox[{"Transpose", "@", "rayTilt"}]}], ",", "rx", ",", "ry", ",", 
       "tx", ",", "ty", ",", "tz", ",", "W"}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rx", "=", 
       RowBox[{"sc", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"surfaceCoordinates", " ", "\[Rule]", " ", 
         RowBox[{
         "input", " ", "coordinates", " ", "of", " ", "the", " ", "rays"}]}], 
        ","}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"ry", "=", 
       RowBox[{"sc", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"tx", "=", 
       RowBox[{"ta", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"rayTilt", "            ", "\[Rule]", " ", 
        RowBox[{"input", " ", "direction", " ", 
         RowBox[{"vectors", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"ty", "=", 
       RowBox[{"ta", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "ta", "]"}], "\[GreaterEqual]", " ", "3"}], 
        ",", 
        RowBox[{"tz", "=", 
         RowBox[{"ta", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ",", 
        RowBox[{"tz", "=", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"1", "-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"tx", "^", "2"}], "+", 
             RowBox[{"ty", "^", "2"}]}], ")"}]}], "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Total", "[", 
         RowBox[{
          RowBox[{"\[Sqrt]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"rx", "^", "2"}], "+", 
             RowBox[{"ry", "^", "2"}]}], ")"}]}], "*", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"rx", "*", "tx"}], "+", 
             RowBox[{"ry", "*", "ty"}]}], ")"}], "/", "tz"}]}], "]"}]}], "/", 
       RowBox[{"Total", "[", 
        RowBox[{
         RowBox[{"\[Sqrt]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"rx", "^", "2"}], "+", 
            RowBox[{"ry", "^", "2"}]}], ")"}]}], "*", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"tx", "^", "2"}], "+", 
            RowBox[{"ty", "^", "2"}]}], ")"}], "/", 
          RowBox[{"tz", "^", "2"}]}]}], "]"}]}]}]}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "]"}]}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "This", " ", "function", " ", "return", " ", "the", " ", "position", " ", 
     "of", " ", "the", " ", "focal", " ", "plane", " ", "with", " ", 
     "respect", " ", "to", " ", "the", " ", "plane", " ", "on", " ", "which", 
     " ", "surfaceCoordinates", " ", "and", " ", "rayTilt", " ", "are", " ", 
     "defined"}], ",", "\[IndentingNewLine]", 
    RowBox[{"assuming", " ", "a", " ", "line", " ", "grid", " ", "of", " ", 
     RowBox[{"rays", ".", " ", "The"}], " ", "energy", " ", "carried", " ", 
     "by", " ", "the", " ", "rays", " ", "increase", " ", "linearly", " ", 
     "with", " ", "the", " ", "distance", " ", "from", " ", "the", " ", 
     "optical", " ", "axis", " ", "to", "\[IndentingNewLine]", "simulate", 
     " ", "a", " ", "circular", " ", 
     RowBox[{"beam", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FindDivergence", "[", "rayTilt_List", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ta", "=", 
        RowBox[{"Transpose", "@", "rayTilt"}]}], ",", "tx", ",", "ty"}], 
      "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tx", "=", 
       RowBox[{"ta", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"rayTilt", "            ", "\[Rule]", " ", 
        RowBox[{"input", " ", "direction", " ", 
         RowBox[{"vectors", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"ty", "=", 
       RowBox[{"ta", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"ArcSin", "[", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         RowBox[{"Total", "[", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"tx", "^", "2"}], "+", 
            RowBox[{"ty", "^", "2"}]}], ")"}], "]"}], "/", 
         RowBox[{"Length", "[", "tx", "]"}]}], "]"}], "]"}]}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  RowBox[{"(*", 
   RowBox[{
   "This", " ", "function", " ", "return", " ", "the", " ", "geometrically", 
    " ", "computed", " ", "divergence", " ", "of", " ", "the", " ", 
    RowBox[{"beam", "."}]}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "FindDivergenceGaussian", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"\"\<radius\>\"", "\[Rule]", " ", 
      RowBox[{"1", " ", "mm"}]}], "}"}]}], ";", 
   RowBox[{"(*", 
    RowBox[{
    "The", " ", "option", " ", "\"\<radius\>\"", " ", "is", " ", "the", " ", 
     "radius", " ", "of", " ", "the", " ", "Gaussian", " ", "beam", " ", "at",
      " ", 
     RowBox[{"1", "/", 
      RowBox[{"e", "^", "2."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"FindDivergenceGaussian", "[", 
     RowBox[{"surfaceCoordinates_List", ",", "rayTilt_List", ",", 
      RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"sc", "=", 
         RowBox[{"Transpose", "@", "surfaceCoordinates"}]}], ",", 
        RowBox[{"ta", "=", 
         RowBox[{"Transpose", "@", "rayTilt"}]}], ",", "rx", ",", "ry", ",", 
        "tx", ",", "ty", ",", "W"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"W", "=", 
        RowBox[{"OptionValue", "[", "\"\<radius\>\"", "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"rx", "=", 
        RowBox[{"sc", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"surfaceCoordinates", " ", "\[Rule]", " ", 
          RowBox[{
          "input", " ", "coordinates", " ", "of", " ", "the", " ", "rays"}]}],
          ","}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"ry", "=", 
        RowBox[{"sc", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"tx", "=", 
        RowBox[{"ta", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", 
       RowBox[{"(*", 
        RowBox[{"rayTilt", "            ", "\[Rule]", " ", 
         RowBox[{"input", " ", "direction", " ", 
          RowBox[{"vectors", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"ty", "=", 
        RowBox[{"ta", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "Preferable", " ", "to", " ", "use", " ", "the", " ", "input", " ", 
         "coordinates", " ", "for", " ", 
         RowBox[{"surfaceCoordinates", "."}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"ArcSin", "[", 
        RowBox[{"Sqrt", "[", 
         RowBox[{
          RowBox[{"Total", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"tx", "^", "2"}], "+", 
              RowBox[{"ty", "^", "2"}]}], ")"}], 
            RowBox[{"Exp", "[", 
             RowBox[{
              RowBox[{"-", "2"}], 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"rx", "^", "2"}], "+", 
                 RowBox[{"ry", "^", "2"}]}], ")"}], "/", 
               RowBox[{"W", "^", "2"}]}]}], "]"}]}], "]"}], "/", 
          RowBox[{"Total", "[", 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "2"}], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"rx", "^", "2"}], "+", 
                RowBox[{"ry", "^", "2"}]}], ")"}], "/", 
              RowBox[{"W", "^", "2"}]}]}], "]"}], "]"}]}], "]"}], " ", 
        "]"}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}]}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "This", " ", "function", " ", "return", " ", "the", " ", "geometrically", 
     " ", "computed", " ", "divergence", " ", "of", " ", "the", " ", "beam"}],
     ",", "\[IndentingNewLine]", 
    RowBox[{
    "assuming", " ", "that", " ", "rays", " ", "carry", " ", "a", " ", 
     "certain", " ", "amount", " ", "of", " ", "energy", " ", "that", " ", 
     "changes", " ", "according", " ", "to", " ", "a", " ", "Gaussian", " ", 
     "function", " ", "with", " ", "the", " ", "distance", " ", "from", " ", 
     "the", " ", "optical", " ", 
     RowBox[{"axis", "."}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FindDivergenceLine", "[", 
    RowBox[{"surfaceCoordinates_List", ",", "rayTilt_List"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"sc", "=", 
        RowBox[{"Transpose", "@", "surfaceCoordinates"}]}], ",", 
       RowBox[{"ta", "=", 
        RowBox[{"Transpose", "@", "rayTilt"}]}], ",", "rx", ",", "ry", ",", 
       "tx", ",", "ty"}], "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rx", "=", 
       RowBox[{"sc", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"surfaceCoordinates", " ", "\[Rule]", " ", 
         RowBox[{
         "input", " ", "coordinates", " ", "of", " ", "the", " ", "rays"}]}], 
        ","}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"ry", "=", 
       RowBox[{"sc", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"tx", "=", 
       RowBox[{"ta", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"rayTilt", "            ", "\[Rule]", " ", 
        RowBox[{"input", " ", "direction", " ", 
         RowBox[{"vectors", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"ty", "=", 
       RowBox[{"ta", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Preferable", " ", "to", " ", "use", " ", "input", " ", "coordinates", 
        " ", "for", " ", 
        RowBox[{"surfaceCoordinates", "."}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{"Total", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"tx", "^", "2"}], "+", 
            RowBox[{"ty", "^", "2"}]}], ")"}], 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"rx", "^", "2"}], "+", 
            RowBox[{"ry", "^", "2"}]}], "]"}]}], "]"}], "/", 
        RowBox[{"Total", "[", 
         RowBox[{"Sqrt", "[", 
          RowBox[{
           RowBox[{"rx", "^", "2"}], "+", 
           RowBox[{"ry", "^", "2"}]}], "]"}], "]"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "This", " ", "function", " ", "return", " ", "the", " ", "geometrically", 
     " ", "computed", " ", "divergence", " ", "of", " ", "the", " ", "beam"}],
     ",", "\[IndentingNewLine]", 
    RowBox[{
    "assuming", " ", "that", " ", "rays", " ", "carry", " ", "a", " ", 
     "certain", " ", "amount", " ", "of", " ", "energy", " ", "that", " ", 
     "changes", " ", "linearly", " ", "with", " ", "the", " ", "distance", 
     " ", "from", " ", "the", " ", "optical", " ", 
     RowBox[{"axis", "."}]}]}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FindSpotSize", "[", 
    RowBox[{"surfaceCoordinates_List", ",", "rayTilt_List"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"sc", "=", 
        RowBox[{"Transpose", "@", "surfaceCoordinates"}]}], ",", 
       RowBox[{"ta", "=", 
        RowBox[{"Transpose", "@", "rayTilt"}]}], ",", "rx", ",", "ry", ",", 
       "rz", ",", "tx", ",", "ty", ",", "tz"}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rx", "=", 
       RowBox[{"sc", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"surfaceCoordinates", " ", "\[Rule]", " ", 
         RowBox[{
         "input", " ", "coordinates", " ", "of", " ", "the", " ", "rays"}]}], 
        ","}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"ry", "=", 
       RowBox[{"sc", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"tx", "=", 
       RowBox[{"ta", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"rayTilt", "            ", "\[Rule]", " ", 
        RowBox[{"input", " ", "direction", " ", 
         RowBox[{"vectors", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"ty", "=", 
       RowBox[{"ta", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "ta", "]"}], "\[GreaterEqual]", " ", "3"}], 
        ",", 
        RowBox[{"tz", "=", 
         RowBox[{"ta", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ",", 
        RowBox[{"tz", "=", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"1", "-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"tx", "^", "2"}], "+", 
             RowBox[{"ty", "^", "2"}]}], ")"}]}], "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"rz", "=", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Total", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"rx", "*", "tx"}], "+", 
             RowBox[{"ry", "*", "ty"}]}], ")"}], "/", "tz"}], "]"}]}], "/", 
        RowBox[{"Total", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"tx", "^", "2"}], "+", 
            RowBox[{"ty", "^", "2"}]}], ")"}], "/", "tz"}], "]"}]}]}], ";", 
      RowBox[{"(*", 
       RowBox[{
       "This", " ", "part", " ", "compute", " ", "the", " ", "positon", " ", 
        "of", " ", "the", " ", "focal", " ", "plane", " ", "in", " ", "the", 
        " ", "same", " ", "way", " ", "as", " ", 
        RowBox[{"FindFocus", "."}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"rx", "=", 
       RowBox[{"rx", "+", 
        RowBox[{"rz", "*", 
         RowBox[{"tx", "/", "tz"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ry", "=", 
       RowBox[{"ry", "+", 
        RowBox[{"rz", "*", 
         RowBox[{"ty", "/", "tz"}]}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{"Total", "[", 
         RowBox[{
          RowBox[{"rx", "^", "2"}], "+", 
          RowBox[{"ry", "^", "2"}]}], "]"}], "/", 
        RowBox[{"Length", "[", "rx", "]"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  RowBox[{"(*", 
   RowBox[{
   "This", " ", "function", " ", "return", " ", "the", " ", "geometrically", 
    " ", "computed", " ", "focal", " ", "spot", " ", 
    RowBox[{"size", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"FindSpotSizeGaussian", ",", " ", 
    RowBox[{"FindSpotSizeLine", " ", "-", " ", 
     RowBox[{
     "will", " ", "be", " ", "defined", " ", "in", " ", "the", " ", "further",
       " ", 
      RowBox[{"versions", "."}]}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], "*)"}],
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Ray", " ", "Tracing", " ", "Functions"}], " ", "-", " ", 
     RowBox[{"Parallel", " ", "Version"}]}], "*)"}],
   FontSize->18], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Here", " ", "is", " ", "an", " ", "exemplification", " ", "of", " ", 
    "the", " ", "method", " ", "used", " ", "to", " ", "find", " ", "the", 
    " ", "intersection", " ", "of", " ", "the", " ", "rays", " ", "with", " ",
     "the", " ", 
    RowBox[{"surface", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1:eJzs3XWcVGUXB/ClkY6la+lYBAnpOT86JLZoWFhgu2aT7VmQLkE6JISlYYFl
gaVBOkVCQlFEpLsl332eZXBFQVB4Qfz98X3f63jn3mfu3OEjvzlzTtHuRnvX
lBYWFoHpE//HvltIvYCAbmEOadU/uHTzrlLZO1XiZp0UFhYHEqltC4teICIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIi+jdZciEaBs9oLCsZjQdpolF6fRgOzwxBsx2ROFHYH/e8
/LFmdwRSVfNBQ0tfwCIC+Y54485aH7idC3+6rR5X+5hcfDH65wj93GyfBSG0
d5Q+ZqqJkThYMOlclxKi9Xnf9mv/rzi2NBrf+UdjyIZoODtHYlvGcFwxRWF/
xiBYJfjD1ToC2wYlvb/J31O1rR5vbWHEd54RuNsuCOHLwjDUFI3WO036mG/7
tREREREREREREf2XmLO+pXOjMS1bpM7r0hePhOUSbzhZuWN/1UAE7qoFF7dy
MFp0g/2mc1LX86rUydQBixLmSe2+q2TsJHu02hsjMZbLxO1nu6fb6nG1z50v
14vn5g5wSHzuwZDscNzjikE+tWAVa48jqYJwarUHGnzgh+rfRWJ5XAR29TPp
7FGt7W1fn/eN+b1W17ln7WAU3xYOi7l2GPhYkPmUK34OyQSrarck4o4D2j9e
pN/f5O8p7tmhToY46Ru8W1Z/1A7pUuTDqZrNENc7Ah6OwTgnEW/9NRIRERER
EREREf0XPJv13cwSjvlpbLCmSR3sS9kNG2pdkrkdt0uTAfaocGyabD+5QM5/
aIf2hadJrZTLZMTPdpjaJUbyVVkmV39JygBnJMt4Tf3j9eNqnzwfL9b7f5h4
nM1bFuvjqGMuilkmPeGAUo3WyZSmj2TcaVe03twcmRxdYRcdga0twpj3vkaq
XjqFYzg2bI3UubrrZ/Vw58NuWHBxndTbsU56nLPFt1c/k03jJkmpi63QsMxo
qTZroeQfZoeoDDP0ezpmkj26zl0uPbrtk4hGnREw3RoL0nfAB8UjcX9BCI5W
jXrrr5OIiIiIiIiIiOh9pvoh5CkcrX+br3K5m23cdA3n1ym74eiCtVJ3xzrp
2NkWD3yGSK2ls6RpI3ukerxcKnS5I+nOu6B9aHXc2m6DoxsDscjKHbd6eWFR
o3DkffJbftdzSdvmx9U+Nfe3xvwPAnXtbj/rktiV3glBi09LuzJrpZaFHRzb
fy4xxaeLR4IdLn6+QioUeyhjT7ui78pWsHP10vW9qsZY9Y5gP4e/72BcOPpd
DsIwywgUy18fkb0t0RIOuFNloqyuO01Kz2uFs5tHyuX+K2Rylq6oUbsYKpxt
jqC0oVi/ykW/p2IRgcHHE9/nJkZ9/7S43xOR1yPgPCYaeRPvq8sJfH+IiIiI
iIiIiIjeFNXz9kDBaFTvEILCEUZYXArEpjylcX/2Tfk1wB5fDhkjuUvOku7n
bNEqZIlMfZgVNRO8MPqyIzY7umNVlkjU6RaGHU2T+uiKZ1KmF/cnuav5cbXP
0rORuJ8mGmXWhyF4VxAOxYWjQElnuPzQAuO7u+q8d1CVBGkTY4Oj5UfIncLz
xcbSAXf3XJKla8vpfg6fpTTqnsBq/azpfXUqG7+wL/H6pwzS2fuOB7XQJEdm
5P3aDqX9xsuVW3Mkc1pbXa/rnjMDvj3hhQ2rXFDS6I9ZxUzMb4mIiIiIiIiI
iN4BFyKiMHVBFGZ+5I+wXR3QoKw7Dv50XnJELpPMXW1RKW6CFHGLFUdDe9RK
Uwjf5LfFgM7hcM7XE1ftI3Hs4D/P+FROqHovqLz3wQcBuGoZput719/IgsOP
7RGYfoLMfBSj895PNsZIPc+rYunvhkNl2uhZb9vGRKFl6t/3A7j05Jgjepp0
TamaHTYj3l/XmqrZYUvOvL4ZYeYeF7PymvRxVN+DwPW++vjqXMlrXFsmq3FV
tdOXkmWkL1rzsLYRmDjAF2GfGeEfF4nwXaHokzYKTpNMerv4oSCdty8u66vn
2Zln3iWff7cp2A9jvvztcfU+Pizhgk3znWBX3h/7+hSC8eAZqbPOFj0mfC4T
rGfImWM2mPB4mvw6KD2iUnliyLhO+LJWD3TqHvbSc9bMs/MMT7J988y+zV1e
38w+dQ+YZ/apa2ie2fdP781ne1OrWnf1/ka5++s5dJ9Z/rbmZ9eprk+FeF+c
vBOh59YNtgmBqaZJz7NT9edHD76+7ybUcdTrVcdUx1ffuahzqfNWfuyv12Ce
l/fstTWvX72WVfv99OtS95j63ke9XvV+qXtVXQfWzBMRERERERERvXtUr9Sw
3lEoPMgP5Wq007PPerc+IW1Ni+RMFVsU7zFe+q1aqDNey5UFn2a8QUsDcc0+
8rXmVJKsN+wH6T0xpGB9ePl0w6niW6Vll11S6XhrNG+6Vpq6fSfRvXvgln1j
bD1lxIb0UfB/EP67Y6ns+vKGKHyWIwCxjTrBt5UHal94IAOv7JPwmq1xKX2C
dD2zS4aFtkWcY26cfNAYxzwjMOuDYBy+E/5K61b7n7mWlOuq49jt6A4Pm236
+BGJ5zptu0Kfd+7DztjWqIJez081I7HOIlSv82XWPGBDG/Qs8JWsnnlASsZ0
Q3CHGqj3QSfYHDVickAVOHa2hK1VJ5zMvkrPszPPvFPz0Xzj7FFi8ExZOfon
6eveXs+8239jvRSZYg+HrTPk0O44neue2TxSKnw5QW7UbInug3pJ7aEjpUDx
lqjS8lM5t26KrulVeW/sV3FSL8EOy7ovee41jPMI17moyqtDQ0P0zL5aD70x
1rLt05l9PcqVeW0z+3L5u6F6kdr4aKIDDF5hGD7NqM/7qrm9uW+J6vl86JgJ
jmOCUG+3DzZMCcVXxVshNKfg7gUnNHS9LGoOneprYV7zs+tU8+m2jN0sRd07
6rl1p9OUQervvHG0s53uN6Iy/3/SX1rl2GkOm/T3Beq7g6LjA/S8PENOO0T6
2eL4Im993pKLf9VrMM/Le/bamtevXkvgnVP6ddVt6oTNeUrr1zuveaDu36Ku
A2cgEhERERERERG9ey4+yRV3RfpjacGOuLfbHfELr8jeCavkw9U22L5/kOyP
nqozQN/5C3SvhpzDvHD6bjMM3emGB5PCcXKmv+6Z8DpqFFUWF/dMTWzAk5rY
eEToOlVVy6oeVz0iTBVNen+VDyc/zouy6xPONrA5MkrSnZ2rM665yzKgc1xd
3Tf43oFALPF4tYxX5ZkTJ0XqnsPqONlHdNUZmjq+Ote9jKP0eeOsOsCyXkm9
nkZfR+BQ4d/PI3vRmi9dsMWW+FE6a00Y3AEfdL4mQ7Olwr2P7JF7xTzpblwj
3aztsG7kVCmwKF52rEqaiXYzJl7c7tnheLMvZefj5WJa3A61Wh8QY+gJ+XqQ
PX64OUe+Gb7iacb7YbKMt9ZzMt6FX8VJ3ScZb5czu2Rosox3aeJ7pK6h7cIg
nffevuGGrz+rg9sfdsNDjxsy88SmpzP7ZrReIDXr/zazTz1untmHe7/N7FO9
I1JWi5EOd5dKbQs7OM+fLDP3zpU0I5L6eJiWTdM13lE1Y2T+2K9k18k2mDMh
qz5vlqWhOu9V95LKnA2ef35PmvPSg8dMONUgAOcvuKNmxQCkLlMSlzo/EsuH
rZGveKzUGLhYgi1skH3DCPlgznypUslWr2dOpnh9TZZPnqHXeX2GHXKPmyxp
vOfJ9AQbdCyYtH/RzvYIqJkgKbo/kl/uvXp/afWZUvuYc92Kt3zQf1so3LbV
wP0elli5qBN6jV0qd4us0vfD6rRjpUK1BTLQ0g4X7KfodZqvp/naHr4Wox8f
lLjPgVMxep0/d7FF/y+/kOqJr3dKGQfdl1tdB7Xm8Gwt9PVRub3Ke9V1O/oa
6vmJiIiIiIiIiOjvSd4nQdUB5q4bpushs2/OibWdWmN21Az5LGqmuIe1RIO8
faTAdzE6D9zsPFua570s9+t0xFrrTHBxK4c0E7wxc6MNUv3gig4xYci5z1P/
pl79Bl/9BvxR4yD9G/DsmUN0ve6eliaUTojUue7rrAdW3reMN90IG5xpMEDn
rks9W8F+30iZvnipnn+XueIZufh9KXT70gvl9rfQ13/HuaSZaDcaeGBc1WD0
rNgEcQ+a4dKhYJzI5YV1973QO/E92ljNBd8udsLEgX74sVABxC0/KZfm2iJP
is+l5KDpcvqYDSY+6dUQmaxXQ4fuYdj6pFeDynJVT4CK34UiQ0IUOq/xQ+2R
brDe7I3xV7Iga+w2nXl+nXGsnCn5he7tXGnEQrHKelsmdHfFmJPV9Mw+tWbz
zD7znD7VT0D1Ci4T4Klfi5rTp16jpXUtxBzvisW7fpGEFAnStrsNYlIOklUp
xsiRw62wfHeM9Dq4XUrFdMNPLnVhvylxLccjEesa/qf9MUo/uf+vtA3DvYDa
yJZ4/1/M2Qale82VK/lnSd7ZLXWeHHhyqaTr6QBXhwtic6gUBuz2gm3hlvqa
9xoWhhqZ3PU6J1UKxb3vm+l1durthLr5l4tDbIK0jrHB4kODZW3WpP7SG2pd
kjNpymBu80DkWuKt+zmoPtXPZtHmdaoceGCOYHgXD8dZYytkyVYGnpOSct0t
WxbLJmsb7E28zlttV8qJoQ64dO+CBBct/Yd1quuZ/Nqqx9W1Vfuo/W9c64oR
487rNWdsmjRvsfbSWTqjTn1tjajro2qSVX2vum7q+51ne48QEREREREREdH/
lzypY1SztFTdo6rTu9/SW9dD1iv9UH4c6oA5UTN0xvtr+lbwNg6UmbUnSNHr
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
v3TG+2uTaN23YVygP9YXCtb9HDL8clWft5DTaPly80zJ1NQWixLmydACOXDh
pk/i2nzQdXpSner/63OmzrWudJDOwM8nruFx+8xQ10qtberRYTKp7Cg9I290
9YGyYukM/Rkxrv5S90tR3wWo9y7Gcpm+Z151W70X6ji7Qu2wqsoX+vh+aVvh
dOJ1VueNS7zm8ydN0O8dmjqhcjz0OgPjkvoev+0/o4iIiIiIiIiI3ndHn/Rk
UL+XV3WJqoZQ/Y4+Hkm1her39UPbRuiaQ/W7+0PHTLoWUf0+fckr1osq5npO
cyZs4Riu5zSVWtRTz2Kzbh2BoqU8UDyjC3pO8MeC+tXQ+lR2qPlW+zdO13lv
fpeWKJFmuEz+bpGU/9kBOX2yYl3BBlg0IBxrPIKwZH7407Ux4/1rb6pXg8p1
K97yQbusobru+mxBS0TubaPngo1Kv0w+XG2DPoFjJHfJWbrPwK+LJkjDW7E6
y90xfYaY+sdL4wH2Ol+9/eV6qZ2sn7OvRTddK36iQW2MvG+Ed4l6OFT3I1hk
ddQ5ZMses2Vlzb++5i967Z1uj5dJYXP1bLj10Qfl7KTimPdBIJrtMSL33p66
b+3/63OqrrN6f1Vtrbr+8xLfd5XBqvclb+VhYhE18k8z3sxOSyXvk4x3RrL8
9nVuB3o6IMeyNbLkziGx29EdkSka6j9DzlyLxMG4/1/GOytv0p9j6juFwPVJ
/UC+84z4XU1y8seT7/+2/xwmIiIiIiIiIvondg03wcMxGFtPGdFovxHpUuRD
M7fvpH36Nphyc4X4jNwqsXPb4JjFHdmytQJSnwlCTLw/st8J0b8ff93rSd4X
QvVcnbXOF+dWOuObMl5YUS4dGlVOkHXXbJBi8ygJ/mimrrcsN+kXmXW7nK7D
PPm9HyatCNH1mep4zHj/2uvKeM09Yw/PDIF9dARGLnfApSzWSFjUCZU+XSpL
6yyWtZ1bYfOxwfLJpHl6ftmUm7/I0VbZkO68Cwb61NK9PlRv4UVW7rpXw8DO
4UhVzQcmF1+s2R2ha8LVdwGf7IjExQ09MSxxvY2HRcC2nBuarDMg05EuWDZ5
hu5l8bntX1/zey+o4y2YrI538ZM6XlVDm+pv1vGq65OncLTuK6K+K1EZeKPG
Afo7lMHHfbBrta/+bkXlkKoXivrOReWQ6rOgvgdZ+6SO98IzdbzW6UdJpyzT
JdcoW2RYsk/W9i0Ir31GrBnaRfdYUL0o8j7JOdV98rq3VX3+X/VYfp2el+We
NjniesGuWHaoJ+J7bZLYtvsl3502v6tJVo8vfPJ4XdeuCLrkhLLtQpj3EhER
EREREdG/WrEX9Pnc03y0dHCNEWMRW/x4c458PSwTWt7ywry8rvh2rT8+KmnS
mZWajfW616WOqXr/DineExtr+OKGSwBytSuEex1OiOUhW/xaeIIE3pj73Iz3
3v8541V9Cb7fG4ZAv0idT6bZXxvlq3bR9aiqh8DL1JSaj/VvzXhf1DN275N7
aVx6W+ybOVvOzM+IeQ89IXWc4NnBE173kuaXqV4famacygZVD5Dn9RY258lq
xlyashG674eaPXfpTnvd5zldwxmSYmyrv7zmcS/ox6tmitmMmiunC9rq99Hc
j3fRk368s4uZXjjv71nq+txfEKJzXfVdScB0a4z9xQLqO5SPXVbIw4db9Xcr
O2vuEY/GhfR3Lo6FjOi4KxiXNkShRuJrVT1PRrgEYVGqklA9rgdZ2mFMwij5
dfsMvU7rYXPl5MFMSD3BGxNN7jhyLxDRNV9tne+KV81yJzyeJtMCl8iNbna6
J/PYSqOlfquWePAgUkaOGCF7d7f43ePLkuW95uOrfshv+3UTEREREREREb0q
lXGVeVJ7qfokzMntABe3crov7mzjXHFaNFO2nGuFhmVGy6AqCXIwe0fsG1oc
HmVtkbtuGE41CNDzs5bOjdY50j/Ne1V2p46jsr5zWyNhX8AbVrH2OGHhisu7
fpZ6CUulYpgNDqQaI9PyzpdH5RwwsUBm+G2tj2/9wlHEKgiL5/82d+xiRJSe
7aWy3/LBHWDp76Yz4YhMi6VC4nHCCo7SGayaAVeiUBqdzfYaFoYWxQLx3d4w
3cvir9as9rmQI1zXl85OCMPxbAbdW7iUpQNK3ByvZ8m9TG/Yp8f7l2a8UREm
9I4Iwueevsi30BetH2TF/hvr5VQXW8QtGiWpM8S8lr4HqteH2r/0op64fc0b
n1oFYsaaorjd8op8/qWdnt837uI46bfj5a55q9RReLQoRM99O1imDeqtLAfV
H7j5xhiJ3TRT3yeB6SdIt0trZVNEV11vPLifG36+E4HS68P+sm+JuX+F+k7E
Kps/bKu66e9KWgelw8yvE2RdFVs8ajJaf9Z8/ezhsOmcNLhdHitGBOFE4aSa
eZV7q962jqeCEDsgHAVz1NUzDT/82QGZ+k8Vn/LTxGJjK0xuMV5S2K6VC85d
0T60uu55omqDDd3CdD3wy9zPz34e/27t8cue601kuc/LddVzpz55rofNNt1f
YmhoWwQw4yUiIiIiIiKifzlzBqV+D57+uj+crNxhvdkbCz7Pgqyx22TGcDsU
HTRcvho3SaKG2SAy/RwpOOaaVB3vhMJNqyNfaFLe69HaiOBdQfo4avbZ0rOR
OudRx382+1XZkbk3r8qv1P4qKz67NVIfJy63O2wW+2PctGqY+jArbPfbo98P
U8S0bJqUvtgKqX+KkU6Nt8udC04Y8pUBtv099e/EVdaafOaaqgWd5WyClVUQ
Ist469/aq0x4f871+nfuF/w/k4XXpkjmtLYIv7hABjhlweJlXphy1AkZ3Hz0
Madli9TXR72WeLekNQ/Z8NuaPygeie7LPGB1uRu6f+mFdVfTY9jCNfqYK+2H
yrQfP5cFce9/xqtqwv+q1nT9NRt8M3O2jLuXEXeze+FYPyecyu+DgLjfX2d1
b5jvE/PsNlXXrbJKNbttWv0wjL7siLjKtRBzvCtahiyRilcWytExrdB9UC/5
0PC5HJzUEoHOI6XS1Vjp694e6ycXQ5n7reGTEIEcu3pi26XIp/e/ulfVdwFX
E3yxIayN/i4grfU5cQxcKW1ibDBtwnDZknKm3PvIHvfbnZGgoqWxKzIAVbq4
of+hANxKvA6qr7W6N5Lf2+q7j8XzwvQ+6jNypE9LBCc+V31X4vf9HCk5baa0
Tjx+p4lTpeLJr+R6FScE7qqFWgfdsCpLpK5tVtfE3MNEffdxxRSFEDdvdHxs
j9MJrtg77qw8PJSgP5tYNEjuZJ6mM8zUj5fLd0NyYOBuL5yv2A3Lqnjpe7X0
k3ppdQ8n/17G/DlV11/d2zuaRuo5hmGXvfFrLlfkSB2AegdLYNO3j6SmZxuc
tl0hviW2y6GDbVBo22HpdK4oDg71w6nNRozs0hP5Y57fyyJ5rpu8Z8KbyHLN
9bp5E4/5S7LcOHmuy14NRERERERERPS+OPZk/lr4sjCde0yJc8aaJnWgclT7
NGulSniiSrYIqT9YNj3Je+dEzZB2Zdbq+t6iJzOin3VJpJngjZkbbVBzf2v0
HhaGsgGeureqmnlknn+0qFG4fvxGAw8c2xiIWYn7W6816HpddRzrU9elzDl7
VCwZI7WXzpLGXVsh1H6SzCq4Ti7mbIP1v2bRa9swJRTDpxn1mp/X//PYkzrb
bJ8FYc/PYToTPhiSHZn8WqNC4vH3R08V97CWuDpxkGSsFytH19pjxLjzMrV/
KZ332hVuiVQ/uOrXUjOTu17zznOhT9esc7ZRmfBtvptS4UsHfH99oVS4slBK
z2uFjP0+lRa5Rv0n6nhVDqlqTf2sg/FgUjhOuNTFdO/cONW/NZbtjpGRq6a9
9HVW94b5Plls5Y4vejjjpksAOoRWx6PInCh3qyNytEqQOilWSy0LO6ztNUrO
ZJ0jFavbYFNgf33NZ5ZsqeeRnTg+V1TvBTWnzHdQXd2TQV2rKc6/zeZT3wWo
zFNlqkXHB+By2zDcC6iN7JtzQt1vpXvNlcv5Z0mTxPtQzYmzj02Qkvc7wLl1
Zlha18JMuwB45emh743k9/akSqGw3t9C79O5txMW7/pFP1flxtk3jJA1WeeL
jaUDNtS6JGfSlMG85oGwXOKt5xs+SPPH+/nP1mm1vjaa57LE5nJtUGnEQt3r
2LdpUt/j5onbKpc29z3eMMwVg570Pd6ReA8vftL3WH02zZ9Tdf3VvX1ru43O
h++PyYjVq2/LiaEOsOkwVaLHfCmbrW1wyGKaNGqwSVS/ZZX9fjTRAcW3heta
X5Uhq8/dy9ToWsStl3nL9srM4DbMcomIiIiIiIiIXhNVf6jy0uVxEQiuHYxb
WcIxL42NzlS/TtkNd/dcko6Nt8uvAfY4cCpGpuadLx0DbVHrgy/k53zzJWce
OxxMfDxm5CLJ97UdjlyLkej+8TqTNM8/Mj9+Myb+6f7VBy6WPp2TjjOj9QKd
MUZZz5O5HbdLmVsd0alBVr0GtzMB+GScJ3omru3gsd/qJ1/0msw1kOq35CoT
rv+TA4pX98anLbNibdftsvigPSb7TJXKhabJ2EqtMHR0Ut3mLwVt4TJ/smRx
WqrXPKRDjLg3WSY+cfb4ccUsGdRxhThkaY1xEzfI8rN7ZPlNRzhMLoVifqVw
4V5HbB8xTlr2mP2f6Mdrvs6q5tZ8nQtXdcX9lt6YMyErtjh8Iz8OdUBUzRhp
N3+aziGPlh/xh+tcL8EOKavFiGxcJtd+sUOptDNlaeFVMjzx9da8O1PqPloh
RabY496SxTJ+301Zs6kLeo3IjWtffogr33VHpsv7dcaerpUNem8cJrlGxeha
4h2LfxREltE1xndNfrjg/se5geb1q/tK9SE5f8EdNSsGIHWZkrjU+ZH+fmHa
zlj51GqJRHxtg3RTx8rZwMVS28IOuwvP0Pezuk/U+tX29Rl2uGg/Re+j9k+b
uL96rsp1y2xcKy3uPZI12d3058vW1Qs1vvutnvl5vYifXefBuUHYHu6lPxc7
o2qg5t6cOHaiI3qNXSoj0y+TTomfzU8Dx0iukrP05+veognS8Fas7Fxlp/sM
mz+bas35qiR9NtWav3OOl4GJ12112rFyqOts3fv6dp+5T3PdwuOSPo/9t4Wi
kYMXbs8OxtWc0Rhy3AduTV5v71xmuUREREREREREf4/59+Yq71W5k6qVVb/1
HpbSqHsjPL4YiOFFbHUtq8ohc/pkhVW1W+KxuYPO02r3XSVjJtljUcI8mfFk
rr3KCc3b6vFaT/ZR+6v5XEXdO+rjqJ7Axxd5wyHQVveOOBgXrvtIqDWo3+yb
c90X5WDPUjWQyWuVVR+GqbV8dN5rf8Ub/jtK6/petYbAO6fk9pfrf7d+87Z6
XO3TyPWyfBufU/e1OGtshVvW3fBV51CsX+UCp/KNkDqwO04V3ypdzuyS8Jqt
9W/bB17ZJ3Mfdsa2RhUQ26gTfqoZiXUWobpvsHmdavvyhih8liNA7+PbygO1
LzzQz1XHuZg+QR9T9RGNc8yNkw8aJ+VaHwTj2zuvnvGq+XRqDSO/CECVqcF6
bd0np0L/DUm/x6+WeZv0utZa9y9NuTs/cuc36jxtXmQwbob++e/xzddZ5Wyq
t4A57627JgDVi9SGum42Vp1079lnr7P5PjHfGx0eL3p6b/wckglL15bT1zz3
NluUP+Kp+9OOvuyFTPbesLgUiI8LlYF/Ows4jWmD2LXL5cGTWWa7nswya5hs
ltnu4X++fnVf5S0cjd39knLUzmOCUHe3j64b/6p4K4TmFF3fru4Bdc+3hINe
v7rn/2z9ah/1eg8cz4KwxOdenx2g6+TVMVWuq75PUedSNbrmPhUvw9zDwdzL
osX9nijcyQ+FsobDkNMOcc6CiwPc9HUzfzbVesyfzeSfx+RrVq9F9dkw3+eq
96/6PMacbY7YHXa6VjliiROupXUDLCJQq1ln7PmsC7NcIiIiIiIiIqJ/gbjn
9NEN7R2FNR5BsErw17Or7pj80NDSF2IRgVTVfPTv7lWtad4nvRrUtnrcvI/a
/56XP07eidDHUTPgzH19VU3jsYOvln39FXPeq3I8Vd+rzlWjQ4ju56DWsGq/
H0wuv1+/eVs9rvaJcvfXc6bUc1UGfqJpUtbUa3fU0wxZ5VGtLYxwtU6aUeXa
xKhzcpXFRV6PgPOYpDVcTvh9D2GV9Y3oadL7qJ6oM+L99XPVcZac8dHHVBnX
3XZB+lzqvC9Tz/y89zR5ntnimblau5/M1Qr4k7lax15irtazOaTqM6COo/rN
qpliz15n831ivje2DvJ5em/sz/jHe0Ndq+vfmN7Y+pVnv+9Q97x6f9U9oO75
YZYRT+/nP1u/2ke9XvV+qef+3e8pXnadyftFqz7D6rqZP5tqPea1Jf88Jl/z
3FZe2N7CCN+eEbha2gmHA5zRISYM/Yd3wK3lnTB8Xk+4n/1KBm3/hlkuERER
ERERERER0VvyMv1yWZdLRERERERERERE9HYxyyUiIiIiIiIiIiJ6972JLPd5
ua5F3HqZu2yvxAQzyyUiIiIiIiIiIiL6u5LnqHVduyLokhPKtgt5bVnu82p0
kexczHKJiIiIiIiIiIiIXuxlanRVbe28ZXtlZnCb15blskaXiIiIiIiIiIiI
6OWxdy4RERERERERERHRu49ZLhEREREREREREdG/y5vuncs5aERERERERERE
RET/3Nvqncs5aEREREREREREREQvj/0WiIiIiIiIiIiIiP5d2G+BiIiIiIiI
iIiI6N3HfgtERERERERERERE7z72WyAiIiIiIiIiIiL6d3ld/RaY5RIRERER
ERERERG9OW+63wJ75xIRERERERERERG9Xv/PGl32ziUiIiIiIqL31ZrQqKca
5vZ4yvEbt6caGQKfyrfa9NTbXjsREf07sEaXiIiIiIiI6M0ZONnrKffwQWKW
LSrvUz9csYDZnhQeTzHvJSKi52GNLhEREREREdH/R/I63t1LWz/VsFZlMWty
aqfB7HKbx2LGvJeIiFijS0RERERERPTuYN5LRETP8zJZLmt0iYiIiIiI6F03
NSYadU+bcCujCanGh8O5fDBWlTJi62lP/f/qn9Xj6t+r/dT+b3vNfxfzXiIi
el39FlijS0RERERERO+KxkWi4GsVgvC6ftjr0RppH5ZG8WaXxH/NLIke96P8
eiMfcvQyIGByewxv1BU7C7jg51XuqLbSB9YTgv61+S/zXiKi99ub7rfAGl0i
IiIiIiJ6V5jreG9mNCHl+HCEtTVi5oXuaNW3LfatsEbZzg/kZkIfSX8+SvZ9
HyqW6wPF5ce+kjNyrwxZkBepi9eH4/32+u/Lbg1dcLezOxrm9sBsgz/2Tw/R
GWpMhAnxjd/dv98y7yUiej/8P2eisUaXiIiIiIiI/oln+yuoelpVV6vqa/s+
cEPNYm6wGO76t8QfckFMBhesSeeM/ZW6YM7udmg40wZ3L7SC24HmuD6/ERwH
A6njyiBXyCPJOXGS7L5XXCa4Z5VvovNI9dtF5ETL6tKj6I9is7Q4Mk10wN7o
zmjxs9u/ou6XeS8R0buPM9GIiIiIiIjo3+7Z/gpOOUsgS4ujErltoIwfFSZb
c3aRRwOav3Z3FjSVhyvrS8yZ2pKzqZXMmn7CsLGxi2H13cF1Dm+sVqdhtuZ1
8j9wrXN735d1As7PM7QrV0DCO7hI5uWfyo+u34pap1qvWrdav3odb/tavgjz
XiKid8f/s0aX/RaIiIiIiIjoTXu2v0K5N1jHOztZHa/7gea4kayON3eyOt7x
7lllf3QeqfGkjtf5T+p41TrVem++w3W8z/OqeW/Vbx6I2S9jHGHWyBD4FLNf
IqIXe16uyxpdIiIiIiIiot882/ch/E/68d56Tj/ewS/oxzvnX9SP91U9L+9t
3a6OmKV0yvJUsEfOp364YgEz1voSESV5Xb0XWKNLRERERERE/0XP9n1I97A0
ije7JP5rZkn0uB/l3o18yNHLgIDJ7TG8UVfsLOCi64VV3fC/uS73dUme96ps
22xgefun2NuBiOiP3kTvBdboEhERERER0X/Rs30fepQPxqpSRmw97an/X/3z
fz3H/TvYy5eI6I/edO8F1ugSERERERER0ZvAvJeI/mvYe4GIiIiIiIjorz3b
R9f6mblrRUu6P+2NO9vgD/8mIfBbH4mmdyJx1T8cGauF6scPOfrg/GNvnP08
aVbbs/Pa1D+rf6eOqfZrfNJPn0s9/8LECL0G1WuX9b0vh3kvEb2v2HuBiIiI
iIiI6NX8sikSsWl7wtjCF9+ksMGQBXkRvi5e+oVXlTn98snhRkXkcIoS0qtD
bZk09qqsdy2DFKbWWLzOAeu218LVLWVwsMkJmTRnmtRaN1GGdksrw6deNSiP
Bux6Sv2z+ncTvs6p97va9ahM+Dgjhn5UFpYtGiHmqDPqbfJFsxUhOm9mP4eX
x7yXiP6NXleNLnsvEBERERER0X9dP/dIXL4YBOf23jg4oRmWNcqMMx+NkOK7
Yw0//OBiOFvLaFjRpogh4Hw5w6xC02Vr9llS4qcl4mIaIlOdM8rX/bPJgjEp
pFf77wwzT39n+OngHsOaxnsM8V47DdPXbjE8XPmV4chPMQaHGsMMJb/xMwzd
kspQ9nIqw5RMdQxzU040DLA5Z2hQv7CY9s+WDn6ZdN7b4mc3PYft/MQIXdv7
tq/RvwnzXiJ6l72JGl32XiAiIiIiIqL/ur/KeD0GHa1zN7B37buBKerUG1TG
MDpfsMHnwmHD2by55OepkyW94xFJda8YNkwCKlk1QO6VTmgc2wPD9jjpbeMi
R/3vdroWQ5rCHyDnxEnyOOVDg8/QJYYDC+/U+fWHVnVOdv/Y4LRnmcHrfDZd
3xt3zBoTS3XX/RxWzQxlzvs3Me8lonfBm56Pxt4LRERERERE9F/3VxmvadSu
Ooc3Lq/do2pJg9XyhQafxxmlRrtvJfW9Ypj8Uzt809wZZ3f7o7Z1xNO6W9Vj
QZpF623Vc0H9O7XPzhg3pAhph12uxZC1/jeyvthDw/ApAw3V+lY0LIuDwS7L
ON3Poe3mnyVmQSXdv7fhgMTn+YW99ev0b8e8l4jeNM5HIyIiIiIiIno7/irj
PXyjmuFC5jYGh65zDC17D5Weu1Pret2rXVzxw4+BL91PQe3jezEEzVcadX3v
cP+SqDV/q6h+Dv4XBhvCZJyhVd3PDHcWbDcUvva15NxTBk1ie6BfCz9kaBfK
3ryvEfNeInpdOB+NiIiIiIiI6O37q4w3wDfUYPMkey3yJHtVvRj6/o3s1bQi
FFXW+MFiuCtWfWuNFPe+lccDdhluNPjcULFyH0Op016GcrOXGHbUHCeONtkw
LLwFcm73Ro+WwXo23Nu+Vu8j5r1E9KredO8F1ugSERERERERvZq/ynjdPKJ1
BquyWJXJqmxWZbRV1/jpzPZVzvWijNc98TzqfOq86vxqHWo9al1qfWqdb/ta
ve+Y9xLR8/yTXJe9F4iIiIiIiIjeLGa89GeY9xL9N72JnrrsvUBERERERET0
ZjHjpb/CvJfo/fame+qyRpeIiIiIiIjozWLGS6+CeS/R+4E9dYnov2DL1Wjk
n2hCoYNR6N8uGi3CA9DV3hsr7E0IqOqJyFKeqFfVhFIdPd7o9rm9HrAe6wkP
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
T26L0tVN+urH8f3IfgEAAADkOAvjo+/muvnmjtc8E0I0on+IDr7WT+tWqatd
GjbXy88tkUs/95JJA0pZct0CO0+ZnI46qVdiHinW2V+e3NFM3b+pprMfaqP1
Px2lrbYFWfZ+WxWM1lYnzZa71H93r81gm/c2vPyNyerwI0XVanF02F2Z8T0g
1wUAIGcj+wUAAACQE1lz3bw2uW6pGJPu2lZHr//VTHdfrSYlvJ8WI8ud6VXW
tGZPXpk8oJRWf7OYHAvdIEb2u3J2dX39s4E69tav/WX3aJVL4/WhW19zbYdo
S66b0u+dUt7b4cAAsfrS78xdP3/kq1aZsdMbujlIx70crAf9I3VdzDZZ6blX
yl8m1wUAIKcj+wUAAADgaGz7da09DMa+ruudfV3bXHfTlektjVzX6GR4yPUR
meX7oVTb0F69A1pqs/NDtcWtX+u8NUyP1DLfzXUf5DXZ5r11LvW560KbyWL1
1ON51SqjOhxsM9gT5sF64dGhum7/GJ13c5EsCl0tF716kOsCAJBLkf0CAAAA
sDef77ndmVBmVKQu+WSsLv1+uE6Ibq+vOXfQl5rG3+1hODaxhOnGbydNxtza
s4hlX9c21zVurnVaH2HJdY2s2Oh5yMjXmdl5b1o7Gch1AQCALbJfAAAAANnB
6GRouG6C1p0XpolH/PSnNs/qvCeKav0e6+S3kuX0uF+sqU/zb01/jiymI5JG
m6YWryo/la2vfx0sqk9vbaf7avmpc4+BKnt89PTMUF3Y2EeHJPjpPJcwzTPz
weaf+4Tp5CRfLfimv/onjVHXW6/N6HnQO/2979/T35uevNc2gz1VxUs/m/CM
blwRrv+6fEj8vvxc6gzuoNPyL5U/R7wofV9sqfuaLpbzO6fKscIttcWpzXKt
yFJ5tVIrjYkbrHEdO+vSCV76c9cojX/BVwstHaGtm5i15oARGlXTn5mZmZmZ
mTmXzq8UMOsf5X113lVfbTwnSqP/6K0Hx3pqrSvj9duXW+mTX7TRzkOCtVOB
J2XGa57JMt6UZrJfAAAA5Ca2/QNGTjim7Xht+mGgjpsaoP9+MVwnLB+h1V1D
tPPOSEteGDXbrC8uzB07l8ae7cgB43Rn3Fj9oqK3TpjeWA/ENNdHni0lm8fV
lPV5H9Zvt3zw1JCIFaYF5wpphaSTT/VvvskUf72Yznxjmil/cG25sLi0Lvl4
u+n/PnCT333L6I2pX6R7vtH5EX1rSnlxnTdOjnRvoC+ucNZdfXvqercIXVlg
jP58PirZ+0hN3nvo9zxqdSJ28F1eHwzT4oOe1VXXR2rsw0ny0Q+fynLX5tpx
lodO6FVOXN6dItteGaSrbv5LTAt6JZsrjRuiG1oXloeX9BGPvYH6xfa28s05
b3n7w2DdV7CLvHnJl5mZmZmZmZk5xdk2m7XNbFOT8aY1+93Qd7Q27/6yvOo5
X2zz3uz++ygAAABwP3/XP1DPrYO+eqiDlm2/XMb8+YJcedNF11/qJVMS8mqX
Hf213SMjdE6JUD0WG5Xtrz8rdKgyQUvvH6NRwyN0+tEeuqBEVa17qqEW/uUJ
OVjDS7ZNeMSSux6yyWCzYr55J+OtdyfjnX4n492QQsZrK6W8t5HHCKlXwEt8
+nrJUbehYh78qAz6rbKEH7sp5587KOVnHZKbbbpq/AftZeKhSfJwpQBd1fw3
kxyokK7PWczMzMzMzMzM9jC/Y5Mtt2li1loDRmhkTf9s//soAAAAcC9rrmv0
wXbaGanzPgzQU3FDdf4XQ/T7ikW0y0Pvy8Hlj1j6B5KeLyGftCip26p+Zeqx
9JTEzuxj6QootWS0Bj+ROzJeY4/3/AWztioYrXnnjtcvmoRbuhGObfTTdr+N
0F/6/Lc/Ic4l6+Zf7nQ1FLjT1VD3TldDqztdDWuWp7xnbfuzhysPRmqZ0iO0
4hcjtPZBb/2jcyvNu6m1dircQZ1/ryP1Pm0tkbGR0mv1LtMatwOm1r9dl++/
XCPn3l0nB1wH6OH4ZvLVQz1le1iQNv+jvRQ49qysuPX56Jtbn4+W3Pp8xMzM
zMzMzMycnjk1fbxpnW2/ju3X/9Bmj/eiTVdwdv99FAAAADB6GIxehfjI2/u6
Rg9D2SF+llx3/7UhOu3FIjrL90OZ+H55neq321Tz9SumIc8XtvQP5O32h2nI
6056c+oXuTbjdWTd77lpYv15wxM2vXOF6o7WA4kvyJ4bc5L9rGKRrQH63fJz
pri95cTNpaO+8dsBU6sD+SXinRiZeLa+7KviJg1ezaO15v0gjQv/nzg19dU/
B/bUTrV76cDfo7R1WT+N/clPjR2Y2nd69piZmZmZmZmZU5qNPt5Ld/p4m8yJ
0pg/eusP6ezjTSnLtb3pZnvrzTbX9aCPFwAAANnE2NFd2+H23qlxI6xo07F6
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
VHxe76YfnTgrD73+qNYK7a5hL12R8+Vi5MnjkZKwu6+2W9pdr/zqrjemdhEr
28frDEqSPzZMksKnJ8jVi+W1VIxJQ17vp8PqhVv2eY3+huz+d3Uv8l4AAAAA
AADg7+XEjDcrs9wH6aaz5rrG7u64KaP0UNHwZF274RULaI2HfjWFDHxJTi94
0dK123FgS91ScZI0PDpdqhZprb3++lyeaT5Ruvrvl6W/Pqvukz31q/WuGl/E
Wz8qOFz3ug1JlvHaPm77/Gqdzsjoj5ZJ9GuHZWPNYP38pL8a/8zuf4f3Q94L
AAAAAAAA/FdOyXjT052bUX0LqXmdqelk+DF+ntSqGiE1JzXUXZsnSanPZsun
E7roG3M3y5rnd0hktS76280h2vFKW/3Jt5r+UdRs2b8d5xls+fdjWLvfO1nG
a/u47fPHtxqliSN6a8Hrte4+buzzZve/z9RKTd576Pc8anUidvBd7U2hd5H9
AgAAAAAAwFE5WsabGd256e1bSI20dDLY5rp51myW5esSJT68j6rPUC0z+xkd
YRqjy5zN+pl7pF59Y4zl6xs9ukafrjXLNfxdxmth+/xbc4cqEzTIJeJ/Hnc0
KeW95wr4i5XnxeF3PRaRT63Y9QUAAAAAAICjsteM1977FlLjQTsZ4m4ukkWh
q+WiVw89YR6sFx4dquv23851zQ3NOsN8n7toqcx4czrbvLfdIyPuOhHU6y66
HQAAAAAAAJAT7Bo1TueUCLXsl/7SuIlOScirHctXUecGteScX4i4vldRz/m3
FuPxLjv6W3Iy4/nHYzM+43WUvoXUSE8nw9qYbfKu515xvtxHQzYH6biXg/Wg
f2Tqfm8y3vuiyxcAAAAAAAA5zdoO0Ro126wXvjbr3iURWt01xJL3Xhnkp21G
+WuTs2GWXNd4vPPOSEs2Zjx/xsL77JL+A0ftW0iNjOpkCDvzjNbpG5G63V1b
ZLypRt4LAAAAAAAA3F9O6FtIjWzpZEjBsY1+OjnJV598zFejdkyTuf8eJztK
DxHbx7P7z4U9Iu8FAAAAAAAAbstJfQv383e5rtHJcCWuino/kQWdDCnIO3e8
1p0Xpk0/DNTEEb31mdLVtXjX78X28ez+M2LvyHsBAAAAAACQkRbGR2urk2b9
s6hZ880dr8PrhevGmsH6+Ul/yz+N/208bvz/xvOM52fF68rJfQv/JD1duxnW
yfAPf17+uPXnoUOVCRrkEqHjW41K9nh2/5l2JOS9AAAAAAAASC/bnM7Yyyxw
vZZW63RGRn+0TKJfOyx/XSyvpWJMGvJ6P53Zfqjuquht+Xl9Y1/TdV5YuvPf
3NK3kBpp6dqtezRailebKV2TOmdKJwOyHnkvAAAAAAAAHoTt/qXx8/bjPIN1
6a/PqvtkT/1qvavWGZQkf2yYJIVOT5CvfhwrZTaHivfhyVI6KlFeXOGsD1Vr
o4Ov9bPkir7tvC231Iwbagmm0ZYba0ZeFR9pttxes/6euaVvITUetGu3cbeJ
MsftVWnj3i1TOhmQvch7AQAAAAAAcrZ7+xVc7/SgJrt7NdPngazd763xRbz1
o4LDda/bEH1rd19tt7S7XvnVXX33ddEL77TXwdNVH1pTW8tG3JDScfNl99Vq
Ms+vhHwdXU6aXaoiR7o1k2FVD0v396tpsbhemhg9SOev89W/+oWoy8ix+uL1
8frYwH7aKnyA/nUtWLt9OlmODZgtvQp5644th0znfigt7Q8O07em7jKVe7VI
ivOSzt664vv6UnK+hzQsNVqP5WulNyLa6qkLoZroPlwjI310nkuY5X0NSfCz
u9nY1y10Z1/XeHxYaVddeLOVZXdXXStI4Nczku3uZmUnA+wHeS8AAAAAAEDO
c2+/gvXuVdSOaTL33+Pk89JD5MbULhnu8oqn5fqHbST+56ek9NMusmzJEdOW
Dt6mTVemt/x2S9OW7Zy6tKyQ5NPy0leLW4acftsUG1pB1vYbJC9/FCVFO38l
U5yuSVCLhjrR30uv/zJSnnSdJZuX+eqPl6pL9a3dZfLLNXX+Y++bel6oKXMj
K+v0FotNITUfS3HutLyylm35vunG/rqytLyLHm38mFz5cZR4dnTRhCauMnnG
OLueF+6qo/MWD5WhkXPF2N0tetZJe+9y1cmdCuqS4RdM5X+YKQsDZopr66my
6ceW5Log7wUAAAAAAMgh7u1XqJuJe7wJNnu8fvu66MU7e7y9JtfW9y/9Je5t
XpPXJlaSMx0jTHNnv2JqtcNZro780DQw6H1pHOGiHyXW1RnVn9A3D/fTWf8a
LMW/nSqLtgfq8Ul15DmXXrLTd7xOvuGkxV+pre+9HqADzU56okpdffFCiJY7
8pjGn2ihcS5hOtC3hsY1Mzn83OrJEP1+TjWt+UFLrVh8uJrfe0T7B7TQ/zw2
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
6A==
        "], {{0, 316}, {467, 0}}, {0., 1.},
        ColorFunction->RGBColor],
       BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> False],
       Selectable->False],
      DefaultBaseStyle->"ImageGraphics",
      ImageSize->{295., Automatic},
      ImageSizeRaw->{467, 316},
      PlotRange->{{0, 467}, {0, 316}}], " ", "with", " ", "derivatives", " ", 
     "known"}], ",", " ", 
    RowBox[{
    "2", " ", "iterations", " ", "are", " ", "needed", " ", "to", " ", "find",
      " ", "the", " ", 
     RowBox[{"intersection", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1:eJzs3XVgVNfWBfDgFJfg7hKkSPHZC5ciMRyCxm2ixCdQ3ArFpUghOAQIBIJD
cS1FWqBGcXcr+nJOmDSlhQKFB6Xrj9/3LsPNvWfu3MlH1+zZu0gPo51zcgsL
C/+08f/HrntQPT+/7iH2qdUfnLp7VqnsmSJ+s04yC4uD8dS2hUVvEBERERER
ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
ERERERERERERve+WXoyEwT0SsSUi8TBVJEptCMH3s4LQbGc4jhf0xX0PX6zd
E4YU1bzQ0NIbsAhDniOeuLvOCy7nQxO31eNqH5OTN8acDNM/m+XzAAT3idDH
TDEpHIfyJ5zrclykPu+7fu7/FceWReIH30gM3RgJR8dwbE8fiqumCBxIH4DC
cb5wtgrD9sEJr2/S11Rtq8dbWxjxg3sY7rULQGhsCIaZItF6l0kf810/NyIi
IiIiIiIiov8Sc9a3bF4kpmcJ13ld2mLhsFzqiW6FXXGgqj/8d9eCk0tZGC26
w27zeanrfk3qZOiAxXHzpXa/1TJush1a7YuSKMtYcTlpm7itHlf73P1qg7hv
6QD7+J89FJQVDnudMdirFgpH2+FIigCcWuOGBh/5oPoP4VgRE4bd/U06e1Rr
e9fX50Njfq3Vde5VOxDFtofCYp4tBj0RZDzljJNBGVC42m0Ju2uP9k8W69c3
6WuK+7aoky5G+gXukTUft0OaZHlwqmYzxPQJg5tDIM5L2Dt/jkRERERERERE
RP8Fz2Z9tzKFYkEqa6xtUgf7k3fHxlqXZV7HHdJkoB0qHJsuO04slAvlbdG+
4HSplTxWRp60xbQuUZKnSqxcO52QAc5MkvGaBizXj6t9cn2yRO9fPv44W7Yu
0cdRx1wcFSu9YI+SjdbL1KaPZfwZZ7Te0hwZHJxhGxmGbS1CmPe+QapeOplD
KDZuC9e5uvPn9XC3fHcsvLRe6u1cLz3P2+C7a5/L5vGTpeSlVmhYeoxUm71I
8g63RUS6mfo1HTvZDl3nrZCe3fdLWKPO8JthhYVpO+CjYuF4sDAIR6tGvPPn
SURERERERERE9CFT/RByFYzU381XudytNi66hvOb5N1xdOE6qbtzvXTsbIOH
XkOl1rLZ0rSRHVI8WSEVutyVNBec0D64Om7vsMbRTf5YXNgVt3t7YHGjUOR+
+l1+5/MJ2+bH1T41D7TGgo/8de1uf6sS2J22GwKWnJF2pddJLQtbOLT/QqKK
zRC3OFtc+mKlVCj6SMadcUa/Va1g6+yh63tVjbHqHcF+Dq/vUEwo+l8JwHDL
MBTNWx/hfSzREva4W2WSrKk7XUrNb4VzW0bJlQErZUqmrqhRuygqnGuOgNTB
2LDaSb+mYhGGIT/Fv85NjPr+afGgF8JvhMFxbCRyx99XV+L4+hARERERERER
Eb0tquftwfyRqN4hCAXDjLC47I/NuUrhwZxb8pufHb4aOlZylpgtPc7boFXQ
Upn2KDNqxnlgzBUHbHFwxepM4ajTPQQ7myb00RX3hEwv5i9yV/Pjap9l58Lx
IFUkSm8IQeDuAByOCUW+Eo5w+rkFJvRw1nnv4Cpx0ibKGkfLjZS7BReItaU9
7u29LMvWldX9HD5PbtQ9gdX6WdP76lQ2fnF//PVPHqCz950Pa6FJtozI/Y0t
SvlMkKu350rG1Da6Xtc1ezp8d9wDG1c7oYTRF7OLmpjfEhERERERERERvQcu
hkVg2sIIzPrYFyG7O6BBGVcc+vWCZAuPlYxdbVApZqIUcokWB0N71EpVAN/m
tcHAzqFwzNML1+zCcezQP8/4VE6oei+ovPfhR364Zhmi63s33MyE75/YwT/t
RJn1OErnvZ9uipJ67tfE0tcFh0u30bPeto+NQMuUf+wHcPnpMUf2MumaUjU7
bOZyX11rqmaHLT375maEmXtczM5t0sdRfQ/8N3jr46tzJa1xbZmkxlXVTl9O
kpG+aM3D24Zh0kBvhHxuhG9MOEJ3B6Nv6gh0m2zS28UOB+i8fUkZbz3Pzjzz
Lun8u82BPhj71e+Pq9fxUXEnbF7QDbblfLG/bwEYD52VOutt0HPiFzLRaqac
PWaNiU+my2+D0yIihTuGju+Er2r1RKceIS89Z808O8/wNNs3z+zb0uXNzexT
94B5Zp+6huaZff/03ny2N7WqdVevb4Srr55D97nl72t+dp3q+lRY7o0Td8P0
3Loh1kEw1TTpeXaq/vzooTf32YQ6jnq+6pjq+OozF3Uudd7KT3z1Gszz8p69
tub1q+ey+oCPfl7qHlOf+6jnq14vda+q68CaeSIiIiIiIiKi94/qlRrSJwIF
B/ugbI12evZZn9bHpa1psZytYoNiPSdI/9WLdMZruSp/YsYbsMwf1+3C32hO
JUl6w36U1h1D89eHh1d3nCq2TVp22S2VfmqN5k3XSVOXHySyT0/ctmuMbaeM
2Jg2Ar4PQ/9wLJVdX9kYgc+z+SG6USd4t3JD7YsPZdDV/RJaszUup42Trmd3
y/DgtohxyIkTDxvjmHsYZn8UiO/vhr7SutX+Z68n5LrqOLY7e8DNers+flj8
uc7YrNTnnfeoM7Y3qqDX82vNcKy3CNbrfJk1D9zYBr3yfS1rZh2UElHdEdih
Bup91AnWR42Y4lcFDp0tYVO4E05kXa3n2Zln3qn5aN4xdig+ZJasGvOr9HNt
r2feHbi5QQpNtYP9tplyeE+MznXPbhklFb6aKDdrtkSPwb2l9rBRkq9YS1Rp
+ZmcXz9V1/SqvDf66xipF2eL2B5Ln3sNY9xCdS6q8urg4CA9s6/WI0+Ms2yb
OLOvZ9nSb2xmXw5fF1QvVBsfT7KHwSMEI6Yb9XlfNbc39y1RPZ8PHzPBYWwA
6u3xwsapwfi6WCsEZxfcu9gNDZ2viJpDp/pamNf87DrVfLqt47ZIEdeOem7d
mVSlkfIHTxztbKv7jajM/5/0l1Y5dqrvTfrzAvXZQZEJfnpeniG7LcJ9bPDT
Yk993hJLftNrMM/Le/bamtevnov/3VP6edVt2g1bcpXSz3d+c3/dv0VdB85A
JCIiIiIiIiJ6/1x6mivuDvfFsvwdcX+PK5Yvuir7Jq6W8mussePAYDkQOU1n
gN4LFupeDdmHe+DMvWYYtssFDyeH4sQsX90z4U3UKKosLuaZmli/pzWxyxGm
61RVLat6XPWIMFU06f1VPpz0OC/Kro87WsP6yGhJc26ezrjmxaZD55i6um/w
/YP+WOr2ahmvyjMnTQ7XPYfVcbKO7KozNHV8da776Ufr88YU7gDLeiX0ehp9
E4bDBf84j+xFa7580QZbl4/WWWvckA74qPN1GZYlBe5/bIecK+dLD+Na6W5l
i/Wjpkm+xctl5+qEmWi3opaLy31b/NTsK9n1ZIWYlrRDrdYHxRh8XL4ZbIef
b82Vb0esTMx4yyfJeGs9J+Nd9HWM1H2a8XY5u1uGJcl4l8W/Ruoa2iwK0Hnv
nZsu+ObzOrhTvjseud2UWcc3J87sm9l6odSs//vMPvW4eWYf7v8+s0/1jkhe
LUo63FsmtS1s4bhgiszaN09SjUzo42GKna5rvCNqRsmCcV/L7hNtMHdiZn3e
TMuCdd6r7iWVORvc//qeNOelh46ZcKqBHy5cdEXNin5IWboELnd+LJaPWiNP
sWipMWiJBFpYI+vGkfLR3AVSpZKNXs/cDMv1NVkxZaZe542Ztsg5foqk8pwv
M+Ks0TF/wv5FOtvBr2acJOvxWE7ff/X+0uo9pfYx57oVb3thwPZguGyvgQc9
LbFqcSf0HrdM7hVare+HNanHSYVqC2WQpS0u2k3V6zRfT/O1/f56lH58cPw+
B09F6XWe7GKDAV99KdXjn+/U0va6L7e6DmrNoVla6OujcnuV96rrdvQN1PMT
EREREREREdHrSdonQdUB5qwboushs27JjnWdWmNOxEz5PGKWuIa0RIPcfSXf
D1E6D9ziOEea574iD+p0xDqrDHByKYtUEz0xa5M1UvzsjA5RIci+311/p159
B199B/xx4wD9HfCsGYN0ve7eliaUigvXue6brAdWPrSMN81Ia5xtMFDnrsvc
W8Fu/yiZsWSZnn+XseJZufRjSXT/ygNlD7TQ13/n+YSZaDcbuGF81UD0qtgE
MQ+b4fLhQBzP4YH1DzzQJ/412lTNCd8t6YZJg3zwS4F8iFlxQi7Ps0GuZF9I
icEz5Mwxa0x62qshPEmvhg49QrDtaa8GleWqngAVfwhGurgIdF7rg9qjXGC1
xRMTrmZC5ujtOvP8Jv04OVviS93budLIRVI48x2Z2MMZY09U0zP71JrNM/vM
c/pUPwHVK7i0n7t+LmpOn3qOlla1EPVTVyzZfVriksVJ2x7WiEo+WFYnGytH
vm+FFXuipPehHVIyqjt+daoLu83xa/kpHNHOoX/ZH6PU0/v/atsQ3PerjSzx
9/+l7G1Qqvc8uZp3tuSe01Lnyf4nlkmaXvZwtr8o1odLYuAeD9gUbKmvee/h
IaiRwVWvc3KlYNz/sZleZ6c+3VA37wqxj46T1lHWWHJ4iKzLnNBfemOty3I2
VWnMa+6PHEs9dT8H1af62SzavE6VAw/KFgjPYqE4Z2yFTFlKw31yQq67desS
2WxljX3x13mbzSo5Pswel+9flMAipf60TnU9k15b9bi6tmoftf/N610xcvwF
veb0TRPmLdZeNltn1CmvrxV1fVRNsqrvVddNfb7zbO8RIiIiIiIiIiL6/5Kn
dYxqlpaqe1R1eg9aeup6yHqlHskvw+wxN2Kmznh/S9sKnsZBMqv2RClyoyV2
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
pTPe35pE6r4N4/19saFAoO7nkO70NX3eAt3GyFdbZkmGpjZYHDdfhuXLhou3
vOLX5oWuMxLqVP9f7zN1rvWlAnQGfiF+DU/aZ4S6Vmpt044Ol8llRusZeWOq
D5KVy2bq94hxzVe6X4r6LEC9dlGWsfqeedVt9Vqo4+wOtsXqKl/q4/ukboUz
8ddZnTcm/povmDxRv3Zo2g2Vl0Ov0z8moe/xu/4dRURERERERET0oTv6tCeD
+r68qktUNYTqe/TLkVBbqL5fP6xtmK45VN+7P3zMpGsR1ffTl75ivahiruc0
Z8IWDqF6TlPJxb30LDar1mEoUtINxdI7oddEXyysXw2tT2WFmm91YNMMnffm
dWqJ4qlGyJQfFku5k/bI7pUZ6/M3wOKBoVjrFoClC0IT18aM9++9rV4NKtet
eNsL7TIH67rrc/ktEb6vjZ4LNjptrJRfY42+/mMlZ4nZus/Ab4snSsPb0TrL
3TljppgGLJfGA+10vnrnqw1SO0k/Z2+L7rpW/HiD2hj1wAjP4vVwuO7HsMjs
oHPIlj3nyKqaf3/NX/TcO92ZIJND5unZcBsiD8m5ycUw/yN/NNtrRM59vXTf
2v/X+1RdZ/X6qtpadf3nx7/uKoNVr0vuysPFImLUX2a8Gbstk9xPM96ZSfLb
N7nt726PbLFrZendw2K7swfCkzXUv0POXg/HoZh3k/HOzp3wO019vuC/IaE3
yA/uYX/YTrrPu/49TERERERERET0T+weYYKbQyC2nTKi0QEj0iTLg2YuP0j7
tG0w9dZK8Rq1TaLntcExi7uydVsFpDwbgKjlvsh6N0h/f/xNrydpXwjVc3X2
em+cX+WIb0t7YGXZNGhUOU7WX7dGsi2jJfDjWbresuzk0zL7Tlldh3niRx9M
Xhmk6zPV8Zjx/r03lfGae8Z+PysIdpFhGLXCHpczWSFucSdU+myZLKuzRNZ1
boUtx4bIp5Pn6/llU2+dlqOtsiDNBScM8qqle32o3sKLC7vqXg2DOociRTUv
mJy8sXZPmK4JV58FfLozHJc29sLw+PU2Hh4Gm7IuaLLegAxHuiB2ykzdy+IL
m7+/5vdfUMebP0kd75KndbyqhjbFa9bxquuTq2Ck7iuiPitRGXijxn76M5Qh
P3lh9xpv/dmKyiFVLxT1mYvKIdV7QX0Osu5pHe/FZ+p4rdKOlk6ZZkiO0TZI
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
3TB9HDUDztzXV9U0Hjv0atnX3zHnvSrHU/W96lw1OgTpfg5qDasP+MDk9Mf1
m7fV42qfCFdfPWdK/azKwI83Tciaeu+JSMyQVR6lsi9nq4QZVc5NjDonV1lc
+I0wXfeo1nAl7o89hFXWN7KXSe+jeqLOXO6rf1YdZ+nZhDxNZVz32gXoc6nz
vkw98/Ne06R5Zotn5mrteTpXy+8v5mo9+3385x0/aQ6p+gyo46h+s2qm2LPX
2XyfmO+NbYO9Eu+NA+n/fG+oa3XjW9NbW7/y7Ocd6p5Xr6+6B9Q9P9wyLPF+
/qv1q33U81Wvl/rZ1/2c4mXXmbRftOozrK6b+b2p1mNeW9L3Y9I1q+ei+iqr
a16sjxE/ZvdHurgIZN/vrvtax8Zfz42VHXD8cBdmuURERERERERERETvgZfp
l8ssl4iIiIiIiIiIiOjdYpZLRERERERERERE9P57U1nuw4fhMmrkSNm3p8Uf
HreI2SDzYvdJVCCzXCIiIiIiIiIiIqI3IWmmWte5KwIud0OZdkH/KMt9Xo0u
khyfWS4RERERERERERHRy3uZGl1VZzs/dp/MCmzzj7Jc1ugSERERERERERER
vR72ziUiIiIiIiIiIiJ6/zHLJSIiIiIiIiIiIvp3eRu9czkHjYiIiIiIiIiI
iOjN+n/2zuUcNCIiIiIiIiIiIqLXw34LRERERERERERERP8u7LdARERERERE
RERE9P5jvwUiIiIiIiIiIiKi9x/7LRARERERERERERH9u/yTfgvMcomIiIiI
iIiIiIj+P95GvwX2ziUiIiIiIiIiIiJ6e952jS575xIREREREdF/wdrgiERf
tXdP1MjgnyjPGlOid71eIiL692GNLhEREREREdHbM2iKRyK3HVPErGhQCpjt
TeaWiHkvERG9DNboEhEREREREf1/JK3jLXOnTaIb9fuJWe3KyWHGvJeIiJJi
jS4RERERERHR+4N5LxERPc/LZLms0SUiIiIiIqL30bSoSNQ9Y8Lt9CakmBAK
x3KBWF3SiG1n3PX/qj+rx9Xfq/3U/u96zW8C814iIvon/RZYo0tERERERETv
i8aFIuBdOAihdX2wz601Uj8qhWLNLovv2tkSOf4X+e1mHmTrbYDflPYY0agr
duVzwsnVrqi2ygtWEwM+iPyXeS8R0YftbfRbYI0uERERERERvS/Mdby30puQ
fEIoQtoaMetiD7Tq1xb7V1qhTOeHciuur6S9ECH7fwwWyw3+4vRLP8kevk+G
LsyNlMXqw+FBe/3fyC4NnXCvsysa5nTDHIMvDswI0rlpVJgJyxv/O/77lnkv
EdGH4W3PRGONLhEREREREf0Tz/ZXUPW0qq5W1df2e+iCmkVdYDHC+bUsP+yE
qHROWJvGEQcqdcHcPe3QcJY17l1sBZeDzXFjQSM4DAFSxpRGjqDHkn3SZNlz
v5hMdM0s30bmkup3CsnxltWlZ5FfxHpZMWSYZI99kZ3R4qTLv67ul3kvEdH7
jzPRiIiIiIiI6N/o2f4K3bIXR6YWRyV8+yCZMDpEtmXvIo8HNn/j7i5sKo9W
1Zeos7Ule9PCMnvGccOmxk6GNfeG1Pl+U7U6DbM0r5P3oXOdO/u/quN3Yb6h
Xdl8EtrBSTKu+Ex+cf5O1DrVetW61frV83jX1/JlMe8lInp/vO0aXfZbICIi
IiIiorft2f4KZd9iHe+cJHW8rgeb42aSOt6cSep4J7hmlgORuaTG0zpex7+o
41XrVOu99S+p432el8l7f75qAbPTYx0SNTL4J2L2S0T08p6X67JGl4iIiIiI
iP7rnu37EPoX/XhvP6cf75AX9OOd+y/tx/uqnpf3XkvtLmZtbzomKhqUAmas
9SUi+rN/0nuBNbpERERERET0X/Rs34c0j0qhWLPL4rt2tkSO/0Xu38yDbL0N
8JvSHiMadcWufE66XljVDX8odblvStK8V+XcZqe97ROxtwMR0Z+9qd4LrNEl
IiIiIiKi/6Jn+z70LBeI1SWN2HbGXf+v+jNz3H+GvXyJiP7sbfReYI0uERER
EREREb1tzHuJ6L+GvReIiIiIiIiI/tqzfXStnpm7VqSEa2Jv3DkGX/g2CYLP
hnA0vRuOa76hSF8tWD9+2MELF5544twXCbPanp3Xpv6s/k4dU+3X+ISPPpf6
+YuTwvQaVK9d1ve+Oua9RPShYu8FIiIiIiIior93enM4olP3grGFN75NZo2h
C3MjdP1y6R9aVeb2zyPfNyok3ycrLr071JbJ467JBufSSGZqjSXr7bF+Ry1c
21oah5ocl8lzp0ut9ZNkWPfUMmLaNYPyeODuROrP6u8mfpNd73et61GZ+El6
DPu4DCxbNELUUUfU2+yNZiuDdN7Mfg6vh3kvEf0b/ZMaXfZeICIiIiIiov+6
/q7huHIpAI7tPXFoYjPENsqIsx+PlGJ7og0//+xkOFfLaFjZppDB70JZw+wC
M2Rb1tlS/Nel4mQaKtMc08s3A7LIwrHJpHf7Hwyzzvxg+PXQXsPaxnsNyz12
GWas22p4tOprw5Ffowz2NYYbSnzrYxi2NYWhzJUUhqkZ6hjmJZ9kGGh93tCg
fkExHZgjHXwy6Ly3xUkXPYftwqQwXdv7rq/RvxXzXiJ6n72pGl32XiAiIiIi
IqL/ur/LeN0GH61zz79P7Xv+yerUG1zaMCZPoMHr4veGc7lzyMlpUyStwxFJ
cb8oNk4GKhVugJyruqFxdE8M39tNbxsXO+i/2+VcFKkKfoTskybLk+SPDF7D
lhoOLrpb57efW9U50eMTQ7e9sQaPC1l0fW/MMStMKtlD93NYPSuYOe8bwLyX
iN4Hb2M+GnsvEBERERER0X/d32W8ptG763y/aUXtnlVLGAqvWGTwepJearT7
TlLeL4opv7bDt80dcW6PL2pbhSXW3aoeC9IsUm+rngvq79Q+u6JckCyoHXY7
F0Xm+t/KhqKPDCOmDjJU61fREBsDg22m8bqfQ9stJyVqYSXdv7fhwPif8wl5
59fpQ8K8l4jeNs5HIyIiIiIiIvr/+buM9/ub1QwXM7Yx2Heda2jZZ5j02pNS
1+te6+KMn3/xf+l+Cmof70tBaL7KqOt7R/iWQK0F20T1c/C9OMQQIuMNrep+
bri7cIeh4PVvJPve0mgS3RP9W/ggXbtg9uZ9S5j3EtGbwvloRERERERERO/G
32W8ft7BBuun2Wuhp9mr6sXQ7zWyV9PKYFRZ6wOLEc5Y/Z0Vkt3/Tp4M3G24
2eALQ8XKfQ0lz3gYys5ZathZc7w4WGfB8NAWyL7DEz1bBurZcO/6Wn3omPcS
0at6G70XWKNLRERERERE9Gr+LuN1cYvUGazKYlUmq7JZldFWXeujM9tXOdeL
Ml7X+POo86nzqvOrdaj1qHWp9al1vutr9V/CvJeInudVc132XiAiIiIiIiJ6
u5jx0t9h3kv03/Smeuqy9wIRERERERHR28WMl14F816iD9vb6KnLGl0iIiIi
IiKit4sZL70u5r1EHwb21CWiD9XWa5HIO8mEAociMKBdJFqE+qGrnSdW2png
V9Ud4SXdUa+qCSU7ur3V7fP73GA1zh1uYsK3v3rh4RFvjI4y4esJfmjXqBei
u0ei1YkwlEseqde8bB5/XxIRERHRq2HGS28C816ifxfmukT0X/AgMBITWvvr
XPeTj0JxPiAVxradLMv3+uDba24y846LzF9lxME0zd/qtvW6DuKStpcMSO+D
QiOipeaqDVKtgT8Wjbkv12PzIU2TEJjWN0MJC0fc6G6Cx4RA7Pg4DEN+jYST
fSTqLOTvUiIiIiJ6MWa89Ka9TN7781ULmJ0e65CokcE/EbNfojeLs9KI6L9m
k3MkYq746nraNd1C4PXzVZ27ehY2YptVTkk2I6dMzeeNNNctxafcp/JgqBG1
fBrJgPZOsnCVEYfSNJcZ8fu/7vaYOc6SKcaIgNKfSuZVHeR0DyPau4j43Gwo
5b/zRs1V+WREi4bSbLox/t+6XvLD5Ph/g2cLxJ5b5WCXpRlS1TTBfUIggqaH
YelF1vcSERER0fMx46W36Xl577XU7mLW9qZjoqJBKWDGWl+i18NZaURECV6U
8U5YUEnafN5E57pFpv4kMXNL4pNx4dgY3RnNaziiflUTSj/tt/C626X6uuDn
OxEYeaEncl5phu0lw1CtuxWO5LsvJXv4Y9DPAXLA0VFMd71RNPKJoYFlOWni
l5D3ehbeKRUXBOn63p513DG+QkI/h5D2/H1LRERERH/GjJf+X5LmvQ1zuiU6
7W2fiL0diF4PZ6UREf3ZizLeLZafyJZpLWXBKqN+fH7mT3Q2q/Zv5h7yRs6v
eiz0uBcJZ/tIXLIIR7ZpkahuE4x0jb1gsTgC333dDhUqlkemOQGIWOQmNx52
EKu53vixTV4pH9tFlpl8ED3mvlTPVAPIktC/97M1IfqY7/raEhEREdH75czm
cESn7gVjC298m8waQxbmRtj65TIgtKrM7Z9Hvm9USHJXKCXX3OtJjOmWnKtS
VedyI+v6YZfPq/37V+0/Iv7n1M+r46jjqeOq4x+JP486nzqvOr9ah1qPWpda
n1rnu75W9Hawly/R62FPXSKiF3vXGe/zqFrcQV9G4jNTAG4cdIV1tjBMG5cB
oZ4xUqWtEQMKV5TqG60lvZdR9++9GpwHkbvC9Ly2Ro8D0W3Zy/1eVr0dVM6s
5rh9XT9c58xqvpv7jED0eOin5741qu+NrGHeeh6ceTbcX82PM8+MU7PqzDPj
nhR79Zlx6rmrPsP7NkQgYHgw1v5oQvtJHjgy3wNRLU04M8Ydkx97YN8yE271
TehLHPRjJD6/b/pHfYlfdF41g2/dZXfdt1k9rnJ4NafP3A/5Xd/HRERERC9j
WlQk6p6J/zdUehOSTwhF2YkBqLbKCydXu6LfQxcUKeGKe51ddS471+CLAzOC
dBYXFWbC8sav9m8etb/6OfXz6jjqeOq46vjqPOp86rzq/Godaj1qXWp9ap3v
+lrR28e8l+jFmOsSEb289zXjVTYviMS+9oH4Mq838g4Pw+he2TF4zTLxdjKi
WNbicvGjhjK7ohG7/Fzly5+Sod8PIVjUwB0xWfz1LLnnHVdlkvWiTDoXVbPb
ihp8kLKmCSV2tEDt9Z/iVr0QZNiRA6dqJoOa++Y9Y7kc2bdKz4NTs+Fc0/b6
y/lx5plxUQOdE2fGXa158w8z487b/z4z7nkZadtVoaj8wISoAE/8sqMe6ln1
QtHMX0q9nSNlW5QPQi8ESX3LMZLtlD/SbcyLspmt4dbLhJX3AvF9l/DXqmFW
axjvEKLz201lnVHzcDUs+iQQKe4Mk/QxI/QMvo98+spWv7lSN349P24D+hb1
0ut0HRn6zu9jIiIiIqJ/M+a9RAk4K42I6PW8jxmvqnFV9a5ZOkYi0zpvrBjf
A673g1Gj/1nJmdVP1mQ34txvRcU/up6u4y08IlquBeeBaVcYDrygjtdcp6pq
UPdN9ELt9RHI07w8ug9OBov1/nBc5yPXL/SSeUONGHiluvwS1UP69jHCaXIL
ibINlAnLjZjfp7l0iXX708w4tzZNE2fG/bi0YuLMuPJn8vxhZpz3zHFSPVeg
Pu+qLt1xs7sJ1eLXozJnVd9rXqd+Xfb64s5iJ6yOf13a77os50dGyuiyRuT6
pYT0flRfDqps+fYymZItD+IWhCFkiAdGXw9Ei+hXmz2nztu3bAiu1fDD8h3x
/6asVxmG4nekVgkfpM1XRT4pbitzKhpR63BPUY+r9fywxVHvr9bpzDpeIiIi
IqI3hnkv/df8k1yXs9KIiBK8y4z3eX0Sfgj0g3zuju97RWBPoXr4+nBORBfy
x9I5dvIkfT2ZHuSNdIdyi/FOZ1n+tB9vtaf9eDf/RT9eta36GBR9FIx200w4
tbQHDhoro3+6QAzYGSKFHd1kVWojMgZmkirbOsulLD4oU3aNbIo/74rvgmF/
ryFSl+6BkFUR6DzD+YUz48oUCsOWTmUReeOuDMjhj0JX7aXBkHqSM9AbY+zv
Gu7friadZxmRe0C41PwpBb7dFIIbn7iipI0/zvr8ns2qa/JZkty1bL3KqPM0
dz3Xr5L0iGogae97o8OOTyUm6wbxXBIEu3nNMfsTTxStlHA9X6Zvg8qTNz7N
k+8udtL3gDlPVjXSOzNUlZGLbPR51eNt51XFsvj1qP0nOIQk5tJERERERPTm
Me+lD0nSrNX/aQb7g3sYziTJZl8112WNLhFRghdlvBMWVJI2nzeR+0ONKDL1
J4mZWxJVx4VjfXRntKjh+Jc9aV9lu+MMZ52RBq2KwOdVmyPXlWbYUz0E3bZk
hcH4mywq5A/rfV2kR8NOsvKIN4pEPjEcz1dLsmwwYnmTYAlo/I20iw3CHstP
UXKkOyZUSOh5q3LLpM/xy68jUXJLEMp18kXVz8JRpEYZWPa7JAXH+iLt4jDJ
X2aohK73Qae4IfL9gGRwSRmCW7s7I/kJd927YFv47310Y56pj312ZpzKqL92
MWJOlZ467226IhM65Fop69obUdupoNy5WVXcb3jD+I3I6u83yreXgzAlzgYb
L3hjQ41InL3++3wNdUyVo/bZa9J1sypfrTI8QNfTrrey1seZd7+4bO7rIguy
+SPjjhy4Y9cSeXuY4Dbj7/s2mPszPHv82vHHH7HIRt8DH+WrovNe9biq71V1
xWp/lT8/e52JiIiIiOjtYd5L/0bPq9Fd3nuzRLc9IHnuttE9FqY/7bHAXJeI
6PW8KOPdbpVTks/IKVPyeSPtdUvxLfepzntr+TSSge2d/rIn7atsT41uJmPn
OIvPfCMunDZI1lUddC+C812qyKwWjSXfE28sOVxK+hgcZEpVH3Rs/ZnOdVct
CsKRqg3w2dHuOD7EhBo2wdjTwISYi3/OYBVzHa/a58KYSD2nbP93RrTtaMLZ
Me6wdvZAnJ0JHSZ5IOi4Hwa0S5g7lrR/gjnLVXW2xWPDdS+IiZPDscElBMW6
RqLaoWDsnxKIk1tNmNveA8XK9EA613AEbiiCz+VXcegX/7wql5brOUXaXvZG
rV4G8diyWk5uCcK3Fq3QfIg3FlSJxKTJf5yhbO7bYFHcD79mdMYJ9xBcq3lT
vovpL8ZwI1rUKCVWgQ3lweZX69vA/gxERERERP9ezHvpfcZZaURE/38vyni3
WeWUZDNyytR83khz3VJ8yn0qD55mvAPaOyX2pJ0Rv/+z2yq/VftUm2zExfs1
9M+6jvNG+N7U+pilH3nhtwGnDNbW2fR2k4BUMt6yqlTOasRP9WfJRre1UnRh
AORgLkxaUwm53MJQKW1PXa9b9boJKdKGvTDXfRkqs1W1rKpGt0RUJO5vCUa7
Rr1Q8LAJ+Sd74+GR+PXGn+P8Pjd8d8MFP92J0LXH2SdbI2JXmM5mKz+oijbF
QuAwuCKaGnOi8vAAFPO9JGuSrZMtqX3w2Y4m0nBIPZ2Tj4+4bOjWrcQrZbyK
ymNVffKpPoFYUdyE+dOawurzHMic3h+j8jSXKjtsJH3bhL7BL9O3gf0ZiIiI
iIg+HMx76X3AXJeI6N16mV4ND5L0avhkXDg2RndG8xqOiT1pk/anNW+rvrUH
fnHEYonQ/WxDt5dH9M0ALM6+VjIc/Ewy9jSi/I855WDykpLnM2+kuFJS9k+e
Jl+18Uetn/Pi+4vV0XF0OCwzOmPcEF9M6R2J/LcjEJsy8oX9B/6OyifzTjKh
wKEIFM0bidh0Xrhg74iy3mH45VxF3IjNh/G7AnCr1mqpuWqDBFT1gfW6DtJx
VYBkjEnIrq8P7ixVgoxw/qWuXD/bRTL0M+JgSRvpvbW7ZIzfnrq3lbRp4ySf
NTPC70k5qXCuilhYvn7Gq6gcW/VeKFIpEqFDPHRPBo8lQTh0e5n0ru8m6doa
cafSJ3r7RX0b2J+BiIiIiOjDxbyX/p+Y6xIRvT/e1sw1lUmqPHDIr5G6n22h
C4FIVdME+5BuOFCnIVYPC0LjvpvEPaavNPVLmHfWwLKcmO566zlllr8Nkq3R
/ghclQMFajRC7fURcLD0wY6Pw/QxnV6hV0DSXg2F80bCT9yRrU0XOKcMwbdb
f5P+J8bKUAcfrE7ZUmptaaR7RMybXFoq77CRsWWNyOVYR1Z/3El85ydkvO1X
Bcig9D6IGugsR/atkk/z+ut611M1k0HV0N4rXg5LpxrQN0UoDtcriENWv8q4
VkY0HldGvp6A18p4FVWL2zI6Eh4zAjHnE0/dkyHDjhxQtbuqV4PKeK8NsHtu
34as0xJ6SrA/AxERERHRh495L70Nr5rrJt1WfXenPe27G9t7syxqe0By32Wu
S0T0JrytjPdZKp9UfRVGxf+8Oe+dE9gZU8dX0PW9Y5b2koOOjjJiujfG2N81
TKuUTxqc80bhq/Yyx2KEnEseiNuTy+F2uu642d2EajbBf+iX+6Lzqlx05b1A
hFXxQuqNYSjWMQ+mZPpGhjj4YPHBemLbs7xcHeqNlMeqyNiaPjIghz+KeV+T
qDOW2Fs9BOfKNkWTky0QsipC1yervg3uYoJfVXdkCfNG72km3ceg50M/9CsT
iZ/T+sH+thfKzorAtAoVMc3quu453LBPBendrt5rZ7yKyqtV7wWV2ebrYdI9
Gb7MlgcLs/nDcXILnfE+27chlX1zHKjugf2jEnoFu0T10M9rXYHLsry6SfdA
Zn8GIiIiIqIPF/Ne+if+Sa6btEb3tMkBN/J3RezhXvDb4I2Qz4045h7GXJeI
6A34f2W8SZnre6vbBGPfRC+UcIhAn9rl0KfHE9k50gd9djSRyOAqug/wNetb
ht7x22rW2/ImwaL2sbodjDpzu+qf7d8uoffC83oIqPlon1SLRKP63ticzgYd
jwbBOGO53PvRVdLe98aasOJS+MtP5fFZI9I4nxbL0LKIzhKBDEed0Cv+sUXd
E3rhql4HKudU9clJe9smZc6TC7QIxNrvPfDFV2GolyU7bEutkrsuRjSpUVhK
+FX5Rxmv8qp9G2b3zIav7zXAotQRGBjRED4F82FibX9kuNNeuu1rpGun2Z+B
iIiIiOi/gXkvvYw3leuyRpeI6P/jXWS8Zuq7/6oWd0C7SKxI54XKK7tB5bd2
Nnfl0arBug+wmvX2xYk8emZZ2vjtQ46OsmOkD2zj9+lxsQKKO0Tonrr+w4P/
sofDN1lD8c2vJixq4A77trVw8eNA7PJzleMGG5212owoKrnLt5eZLf1wyTML
3Fp/igIDTOh4LwBTMv593mqmznvJIhz3S0Yi+oArtjl8ipFdglCz2TLJncFZ
Zh33xsUsKeXzn4v944xXMefJcfcCcWuoJ3YvCcORyNxo1meLnL9khNXQalLi
uL0cin/tdkTOEtxOh3bGEGSamBd7xv8oE+cbsczqY7HYba3reNmfgYiIiIjo
v4d5LyXFXJeI6N/rXWa8ZuY5aAHDg3UfBlWjq/Lbr+8F6Npd1cPBZZw3rlrf
Mqi8V21/tqOJzoE3xe/Tu3Y5VFrZ7S97OKg63gkVInHgVy9kn2yN25ODUHhE
tFTd3VHcb3jj/G9FpedPTXUd79WSZ6Tn/rL4NHcELGq6Ic1NP2SbltDLV9Wy
mme9qXzVvOag6WE6o1Y588zajsiwLxzZfMoi8sZdmdbeB+Ue1xK/MpXFOo03
7g04ZbDsXlgqnvRGqgJ1ZPCaZZLGPwipmzXHl3m9dZ+HFo1ePlc29xku9igY
BUaaMPFedyyeVgnj+gfgfENHKR/bRfcWvjoqlwTPHis/LffFjiPD5eYog+QK
9EZA/VLsz0BERERERBrz3v8m5rpERB+G9yHjNXudHg5FxxkxYGeIpExlgTRN
QnBqaQ8UNfjoHgsq/wyOP+Y5n0hkueqHvmnc8O2mEBRLboFbO4eKwywjUD6v
+C7LL8vDvRE0vo5szR0mF+z8McozO1b6l8e2kmFoUbA7DvziiB/vRKBkRzeU
6uuCoFURiLLsAuOpxrh2OhhHat6Thu13yrVJPmi/p7McD+0mHje8YedmJYcL
GsSqgzfGR1w2DE6TS9zGeSPkWEXpsCpAiqwIQKrRlXWP37EHTJhfNeS5vSBe
dN3067jXV/dYULW4KrM9OKe3rtGdl9VSTp8oIjvhjSPNHxt+HpFDWn/hjXP9
KrE/AxERERER/Qnz3g8bc10iog/P+5Txmr1KD4cQL2/MzlVETi3xkbMV/FEu
3BKjlzfBjxYmlN7jp+tse/0Yib0Nfq8T/r51NzjcrIgauQIxbeUgcY/pK82n
G5H6xzzSwLKcVPjOGwd6F5cKF5vLqR5GZLjRWAa2d5KMMUb8cqyF2Dm76muy
LEsHiZ3srh/fXLitHBgbJpea+mD2qVVinHJVBnbvhSUF8mGGd1r82tQPVo9r
SdXHBqm32hv+XxXTtcReO/zwXf2cusa4w1gTZi8N1LXHr3rNVM2tymZVj4Xl
OyJQtl5l1Cl+R9fo/ri0ovQ89rHYpPHGzysuGHzLVJamfkYceWCUs+4P5ET8
a2ldwgnLhrE/AxERERER/dHL5L0/X7WA2emxDokaGfwTMft9t5jrEhF92B4G
RmJCa390tfPEJx+F4kJAKoxpO1li9/rgrGc/qRw6Qla189WPV/usjs5I1f77
s4a+9bU928NBZbNFmnwM/5KB8Og7VMJ8h8kU8cGBG9ZyyjVCfkrliyMxX8q6
XdelbMMQdLzYFlejfdG0cySqNo1IrBPetyEChS4EJh5zt2tTpG0SgoHz7kmo
cZdUb+CPqIHO4py2lwxK74NDaZrLjDsusnCVEa3WddCP96rqo2e37S+9VSbs
CsCXt3LjoLEycrmFoUFXZ0Tdc8ONMibEZHCFx7L4//+YJhi29XZIPcsxMn2S
DwqWDpVVRUbK2Hm++MKUFkNLAHk9TcgQ64/RTq93bXfPNuFosmCkX2zCvdAu
WBJbBtPG++PJjEayaW0zuXXQGz7rC0muDM6SKb0/ovNmw1aHT7GiuAlzygfq
fsLsz0BERERE9N+x7ZtILG8cifBRJnh8FoH01YJR3MoPH+/phQtPPLF/qBvO
tglAzaIu6DLHFW0m+mJtGkdcm+iMLC0+RdZBBuSzbIgl1RtJ+pHlpUvDFpLy
UUex6GovX5brIecap8CmfClQNCgFa33fAea6RET/HeYctcChCF032zLUD13s
PBFnZ8L6TB44Mt9DZ6HqcZW12hxI2P//+V3+pNmsWsPaH03oMClhbRENTCjd
0Q1W49wR1dKEDA09sP87o+7BmyJtGPbE/33MxUjEzPvjepP21A2eHqZ7O6jn
mKGvEWOiTPCr6q6P6S4Jx1d1zqqG+cK+hHOp8zau741mFY0odNikZ5+pvrgl
oxJ6RKxIGQnLU5EYFf8zOz4O0+uJa2LE5Mceep3V5rm/0WurnkvfJHW8qveC
4Wkdr+rJ0COqgaS57432Oz6VmKwbxGNJEOzmNcecTzxRtFIkvq4f/so9IoiI
iIiI6N9lWfx/F9kaI3E7vQlyJxQz1gejxUkXFCncFePndUO9tqVhanJDal8t
g/+xd99xVdfv/8dduQcJ7nBvrTTJyfu6kNwDceJGkyUiCIIoy52mlkblwL1S
08xdtlw5PmpkmpZWao5y5EJTU7Kf75P4PfqLQmX7+ON+6+W74+GcA95unCcX
z6vhFzFiH+Uiq4oU1clzLxs/bagtl7zt9M64PYaNTWMZ+Kat3hp/05hyarkM
f8ZWh05aLtMaFdWI4g76xyfFNct7jhowYoDk7ucta6NHyKT5WfXIoax0O6Qw
cl0AADIWc+ea571ei7Ilh2up3n56K1sf7Xh0qJYP/E12REVJtNnHO7OqdOzd
QeY4DNIrf34h8yo9p3GfhOvcBn7q1nSItl35/2fgAAAAADKPiXOH66Lwv3Pd
rxuEarmovnq8u7OWiWqmzf98T779YaA0bF5M39u02XBe/qw0XFZIT1T6zLid
u4I0/s5Wvdx2G8t61bJkvDdW7DJGfFfLcr3YHyuMJr9WkQZ3b3/E5nVjVmw1
ub7JTod4FZby4R9Ji+Dn9EhJWz3p3EDLDvSUi6eD5Lz3SNnxTVa6fJMRuS4A
AOlXQn7bbv/fe+hCjwdpXN8o/fyCr8677qs/XY/Uyef66aGX3PXD7WHqcrua
7u4WL64ug3Rl7daybmZzebdrgJ456SZVn98mw+eE6pz9TfVALW91uBKlOyLC
tWa24ZasOK2fKwAAAIDkN3fRcL0SF6XT/wzXiz39dWe1V/Uz305a+K1j0mbI
QPHeWkQnxY83ntl11rA5YaN9Y7PIXJs18ttb9XS3V3mte+wV7XVqoBbd2Eej
L3lqTNlgbb6yn35fsJ/l+uaZqiMrVFXz9rYxM6WQZwspdPd+JvctYnxh2EiF
RrZ6tpm95BlxQU73qa7h37ysI/o31SYRQyWo0Chxmzqa3W2PiVwXAICM4bmG
YfpawWAt5RelzxYy9Fqu/Gr29wZsGyXzBo+Wlz8L0P6dW4hHMw/Z1ytAV9ap
LVvOtRC3ggH6zWlnefal1+TCx4PVL+iWxIbW0WI2UTpqa4ClU+Kf+isAAAAA
ZB5m1+5rz0To/JUhWq5YiM6Oaq5bQ4voCw2raqtLvxkvZM8vE4oX0tj1U4x5
9s2lyXgH3eNVXou7ddfsfwTqmb2BWmRQuOZo+Hdnb8L7BzM37uAy3HK9UY1w
/SsiyHL7rKFulrzXvJ9N5f80Ns4pYrn//cNHGC9/7yQVT1bS4c422nJUay0d
3UYbRbfWDyd1eGB3G3nvvyPXBQAg44mZGaF7Fw/R2LVRmr2xq0acL6urzw/W
Aa+NkxoLxt/fB5ewA855ZZBlZ1zFwiG6fUURyy45xy8idbD4aulzITrkx9Tv
UgYAAACQNmqGR2nB7UN0nN0gLdW0v/ZbXlr/lIPysnMZrTT8Ofnt3KtyJaqU
bhkrMuD8ddnwThft7tTPsnOtZ60IS66blI9j5r2/fh2urTcGWOZ7s/TqoA2X
75CKl1+QigNtdL/NHOOwQzFZXaSo5lr9k7zboI4ujA3UiXP91fH7IVrteuf7
yHv/f+S6AACkDrNLwdwHZ+6tM7sUusYMUPcOfg+crW+T1Ps1f05udimY2ay5
P27pwRBL3mvulZvQacD9fXAJO+B+fcfXsjPO3El3bXSIZZecuavO3AHHPjUA
AADg6WLO8Tr9EqXHq0Rp6baRWn1GsM772l/9S4fomHhvfe8ZX3W4GKxNiva3
5LqtdoXrZ0MjNSI6SifNTdr7h4QuiAqzwzX6ez8t80IfXb/NVYde2y7zRz1v
yXhD7OYbhd4sLrdXFtMuX56Uvlde1uXj737ccYG6d/0wy8dMQN77N3JdAABS
h3VmO/VKhJ4I7qbz93XX3NUD9VDs6/L1namS6+754N1z7N3zqW0RusrBTb9Y
1PWJs18AAAAASWfmkGuXDbfsHRv3zN3vy4+EW/pps38TrN99G6i/zxyiQ+b6
6b6J/fXXzsHaoLy39l7iozPKBmuWyV6Wc8J18zbm7Q/2GmjJRc37cawRbslF
zfs3P1ZaP9+UZObG5nyvmesOGBWpxbcG66RP/dRhqr/6OjdS73dsdElgFY17
7hdj8ex8sr1FIZ176nMj+1E3sTtQV9ccqaGbOnpomOdQ/WTxUMsMsPX9P815
L7kuAACpb9HkKJ1wZKA6R/mrZ0yQbimxUtpk+0RcWvprfGA2WXapnMwu5a9+
J+KM0k4l5NbEAC2Yy1mKN3cn+wUAAABSmJlDmrmr5hpuySG7Dg7QbXGD9YOW
LbRmmRb6frZOOsMjv/763W/i7VtVz7//jthHuciqIkV18tzLxk8basslbzu9
M26P5Zxw3byNefuZS+dJVPM4Me+nSZ7GWq6su269e/+BHweqXA+zfFxzhnZt
BtyBYT7m9gHD9fd8UZbnMuSVMK27caDmWuirlRoM1nZt+lrmdevl76Prvyxv
yXV31aimrvltJOcfL8uazwtp/M73DN+CTlLrtZIatX+JfN7YVt0WvqptTnrr
HocQrbU+8j+7IJ6GvJdcFwCAtOX60BzvyeBuOm9fd+0aP0gHu4yV3EuiZc69
jNfeqYRcuDBQfz5+3IieYkP2CwAAAKSAhN4AM18tsTVYT6/urycrB+j0yxV1
VcVrcqZFDX2pW2FZFtZYThwvrB+/ttQoudle3l1eWF/zPGj4rq0o/3O008+a
fWUs61XLkvHeWLHLqHz5BZmc305nhS8zPp1TRLZUflYXHulmTDyVRZauKqw+
/8smYdcGyIrwGnrDLr8e7+6sNTcPUqdt/paMNPu9nWVp/fok1WtTI3T88r9z
3V8vt9OqE1tprrkrpNSGMbIotJS+ej2XvLhNxPcrW+1U/w3DIzC3vFCsgJ4v
0NlY+30BCQwrrdkmn5YeOe3U8ZCbti7WRZ/9xkPXtxqm08dF6InTkUnugkiQ
mfJecl0AANKnxPLePFaZ7e17WW7R5u5kvwAAAEAyMzsEXnsmQuevDNGpoSG6
smULdehZVCsMq6Ht89uI/+6qsv5YAT01qpAx5LOSUu1YUbWNmSnH4s9K5U3t
dfNM1Y0Nm2tc0UBttrKfRl/y1Jiywdr87tncI1YmOsBymxNRVfVZ16Y6ZvMs
mZWlg4w8aKtfvN/RcOi3yzB7CdqevWC0HTJQ4nvW10m1qunOaq/qcZtQzVd3
qCV/Nh9nWr9W/+X5Z8PUrs4wjVjWX3vdEh1X1UlHjPKSbNM+k2ujqmjpaZHi
4j1HXPwr6EsHzxmHfnC05L0r8r5jVM9XQELfKKQvxm+yzPH+/l4V7WR3VD50
KKz7D/fRclF9Ld0OLXeFW+aEH+c1yYh5L7kuAAAZi+tD+9e6xQzQ3h389Jdt
EbrawU0/X9SV7BcAAABIRma3QOS5SEu/7va8A/St8f0sPQx5xr4vL2Sx07ku
wcbIPPllnKeNbir/pzGw0SlLrps11E2d53nqgi+GaqMa4Zae3kn3OnXX3OtY
MM9mZ6zZXWDeZmOvEL29LkSzn+6pHzRysuS9FQ5NlWJuDSXUtpC2sXcxXsie
X4bNKKJDc8XI1tAi2uXTflq7jK8lfzYfZ3rv7DWfb46Gwy0Zao/JQzXbnqGW
vPd/0/z10wFDNK72AB15w08PRQVbeht+X9JHxzbuo7u9ymtcHRsNv15Vy7yR
TX7xqCqXChXUSfHjjdV56sgJ15La7M/3pNcvhbWLVW/Di0nobUhMes57HzXX
jY+PkOgpUyR2bxuN+WuezBu8Wq72ba+no3pp3HPuuv7gEHJdAADSGNkvAAAA
kDIcWkRqq8bh+knlAPV7vbM2KdBO+0Vtld2Vxkp095LqsbC07Jg3QA58XFrP
v3hKfu/6kmZtGqRLjUC98cfQR+oNWHOvq3bZkVBt6XX3+/GdAdruREX1Wnpc
so0tos/eeNPoNjq/HG5bSD/94pAhR9fIJ64tdUeBturt6K8zV4Xp6bvfo6f1
a5YcrPev+Y2K1DN7A3V6j/5a72M/zXGrvP7v83MS36+4nmq3xljcKN74n28B
reT9iZEtifvXHlV6y3sHb/LXYW8G6BHfcF0/Ypus7LJfStxIPNe1vr7u7u0/
uHv74ndvH2R1P2n9OQcAAP+M7BcAAAB4Mgm567WHdoTlXOirtz4P1nKVfPS9
5r661CXEkuuOKTJU476J0kXhUY+dK364Ilw/WR6sPWJDNOjDV9TdtYDuuFxO
h15YanzwRjH53tNGK+xdaZy1fU8KN2+m385oqW6BA7WKa5iO9ckcGe/DzLx3
9ZFwzXpymF7u7WXpvij+nbO2HTlJ5pYrJ9nWFtTfLo8xCr1ZXG6vLKZdvjwp
fa+8rMvHB2uTcYG6d/2wZHssaZX3Ws/ZWs/fzrCay00s16WTAQCAzIfsFwAA
AEifJs4drt1aDVW70oHq1CZQN3tV1SydfxbH9UV055E3jNey5pM59oW0xpLV
xqXdK+SXPc31jbA2evWHgdp3RJjle/q0fg4pxbPjcL39bbge/DFAd9TrpxfG
dlDHM7tkcI4X5Zyjjcr3M40uO4tY9tllvXVIfuxaS2eUDVaHzwZp6RzJl/Fa
S+m8l65dAADwqMh+AQAAgLRh9uiavQTT/wzXhQsH6luF+2qvrzrqV1/sl59b
trL0/dYd86KxssYtY8ZXNprnWg4puO2i+Ni56QurPbTN1UB93zMi1fp4zSza
nFXOuzJSW+0K1yVGoHb6w1frXPx7trnpb/3Vv3SIZebZ7MW1bxv52HvQErw2
NUJtW4fpEQc/LVWprVYs3UxPX31DfrepKK5nCmqLCyONIw7FZHWRoppr9U/y
boM6+mvnYN1XOVCHu6dMxmstufJe6wz2bJm++mVkH/1kRYhmvXFUfL7aIdV6
NdPxzyyW3/tPFLeJjnqg7ny5smucnMzjqA3PbpLbeRfLO/ZOOiKml8Y0b6WL
I/vqr20idNHr3pp7cX9t7BCllbv314jKvpw5c+bMmTPnp+j8Vs4ovVbCW2fc
8tY6d7+vGn6tkx4Z2kWr3AzT79500gZ7nLVV7wBtmbOBTJrW5YGMN7Ez2S8A
AADw9063hJ1rf0UEaViBIF06x0mrtX5WNx6uonHP/WIcKJVXhn+TTy8Xb2Tc
8nxJ7EeW1H7ljkng+Vo66VTgY3X/Pqlu1yN0br7BuuOnARq3r6eOXpRFfdq8
JXMLPad1K5WVsXV7y5DY5/TOM++L31VbnXLg8fegJeTJ9TaFau/bwVrh1+7q
YV9Zb/rU0dURp4wiMwtL0Y8L6jyXYKOabx1553RlzXu2kF6e09ayx221U4gl
H07Nz2tS8t6jl7JogtPv9rqv74Z+WrDnq7rqTz99t0C8fPbDZllWo742n+Kq
kR2LSdkPxsq2t3rqqr+yijGr4wNn+2G99ePGeaTAgs7iun+g7tn+inx72VPe
3xigB3K1loXXvTlz5syZM2fOnB84W2ez1pltUjLeR81+P3YL1Prt3pR3uswU
67w3rb8nBwAAAB5VQq5rzrUGyVC9vS5E283ppaNvOGnvsU11zOZZsi6ymTTY
YqMH9+YxbC7eMd5eYas7T5WQ8qcuy4pxHfRkuZ46J9rPMkP7JN2/j8vMk81d
Zt99G6gd1gVadpyd+e43aRlfXCt6f3J/D9rpdmsMadJRihWoq9lvldc3Puqu
2f8ItOxQsxsUfj/vNV8Tc77XnENOeH3Ox4RbbvN1g1CtvcRDLxbuoX9eb6/L
i/8oFXf2FvM1+WBrY+PthqeMcddtdO3p7HI51wb5eltzbXC2uY7fMkC/HBqm
rz0TYelVTqvPd2J5by3X/lIzZ1/xcusrJ2q7S1Sv56Tnb6Ul5ORfcmXkESkx
5aj85dxGF21oKqOOjpYC9gN0Vf3fDDlU8onec3HmzJkzZ86cOafVeblVtuzs
EKVVuvfX8Mq+af79OQAAAJAU/5TrrvqjlzZd2VgHXWiqPksXysjRvWTkQVv9
4v2OhkO/XcaOFoV0XLuzRti1AbK1Zn2NeaOili3rrgUmhej+BaEaER2VqrO7
D0vYg2buoTNndLP+0EK/adFMz9i/Jx7RnWV098Kaa003485vvxhbV9joq7FZ
ZK7NGileoK7u8Sqv9Y69oiMX99WiG/to9CVP3T4zSJut7Gc5l44O0NplX7Hc
pvWIplrf7ZDMuft3O3cvooOeW2A8s+ussf5YAd0x/FvjR193WVm8ho5el0+P
HWmqlwYGaeDHgVpkULjlNU+t/orEWP8e4sq7r5edbX8ttae/Vj3iqddaOWm2
TxtryzzNtPilalJzc2MJfzdcOq7ebaypfcho/NufcvirNXL5g/VyqEZ3Pbao
nuzL0UG2B/tr/WtNJefJV2XF3fdK3959r7Tg7nslzpw5c+bMmTPnRz0npY/3
Uc/W92N9/xut5nivWnUFp/X36gAAAEBiHifXDf+wgLbJ9o0x6u71Pier6/Qu
+TQ6h7M+v3mQOm3zV7kepjkaDn+kroOUtObec7x29zlu7BWiDXIFW57jxLDq
WnB7fUveu3mYmwydUUTf27TZKNDBRrIMK6QnKn1m3MpdQfw6FFZvt93G0l61
ZF09O72xYpeRvelL8mZ+O40essrIcqqObKn8rPZzWGw02lhGlq0qrCeb5ZT3
egXImRZ/57rm63OicoDO2DjA8jo75RquTr9EpfrsbruH9psk/O7haasOutzV
A/VQ7Ovy9Z2pD/zeYt6tA/T7ZZeNmP3FpHbZ5jrnt0OG06FnJHT5CBl18Xk5
UKa2vPBOFq0y4wepk+cnsanrrb/36KAtq3bUHpcitHERH333Zx8152Gq3uvc
48yZM2fOnDlztj6bfbzX7/XxOkyN0BHXOukPT9jHm1iWa73TzXrXm3Wu60of
LwAAANIpszMhe8O/c13rzPNUh8Za/uP/y3Wb5rbTnGu6WXLd7S0K6fh2Zx/I
dc0cOD3klo/63M38OSHv/dkm9P58b8vgPtq4S1X99bvfxPFSNW34RYyUjnKx
7EebMveycXRDbbnkbad3xu0xCts0tlyf1DenLKy9XHx8q+pl98OyNbSIvp+t
k65/o4nurPaqbo0bbJnXNXPv9JDrTr0SoSeCu+n8fd0TzXKtu+maOPhpz96n
DJeGxcS/dW+96pRFRsa1kTOTe2nTT11li/0bsnVQB82yWdVuZ+NH3t2W1l8P
AAAgbTzJz50T6+MlywUAAEBmZvYAJOS62aeHaZbIIA3tFqS9bnfV6mWqa+sX
6+uNkQvk+q8dLd0FZq6bc9dZw+aEjfaNzSL5W/lKg5311OXbCg/M62aUXDcx
a+7165rzxquOhKvfqEjNW3eoHvo2UGvtHaLn/vLTfRP765nOwdqgvLf2XuKj
MWWDNctkL3Uo9/f1M29561tbB+r1mUO02YlBumBliE7/M1zPxYTrlbi/eypS
q4chKe+V3OIHaZDLWMmzJDrR90fWue60V131ow4FpUfnkeLw3Wax7TtGWtm/
qOu3nxA//90y62gz/f7KQH1tmp9WbRCa6O428l4AAJ5OZLkAAADAk0nIdbNZ
5bqFRxi6e1s1/fOPerr3VgUp5NlCzCx3ct8ixpqvs8mY7oW14sL8cnLwx2Jm
vyujK+rsL3vo0Lt/19xBZt3DkBFz3cwgud4rJTaje3Gpi4Y8ayMN3h8jP/f7
XIKcxsrGnbW0Y6Vt0urQV/Lyno6qXu4afKGPVnML1feKR2nUi1E6KWp4orvb
kpr3fuwepXlXRqrm+vvnEXscQtQ3foie/MRHS3n5avOrwZbzvK/9LR3L5m2O
V4lKF53GAAA8zchyAQAAgORj3a+b0MNgzuvWuDeva53rfnpzgqOZ65qdDDlq
FJUp3hulwsdN1XOAo9a74q4N7/7d4luDLRlaeurXfRqlRN+CdZY7PPfnUmjz
CDk08wV1iJ4vnVpOkh0vS5Jy3cQec1Ly3vKh2dV0sGx2fXdFkI7w8dcmn3ha
dtLlqOCsZWbbasCzNfWHYi9Iq9MD5OiSUjo2zEGWBu+SWdnb6DdZ2+mQlgF6
6HiY5T1kWn+eAADI7MhyAQAAgJRjdg6YnQl2g8J1wRdDdfFhD40c3lSnFW+m
b9RddL+H4eSoQsad334xzHPjLnkt87rWua65c63lR6HMRqaRR+1b0FIDLXvQ
vllSXLL+4Kn7bsYaq7/MJ7/UGaC7Kp0wsi4o+kDfgnWWO3zbbHFdOl46rDP0
tc1jpV6Ht+XAwtaaZc0mWbY+VhaFdH7kXDcxieW917xny5l3ZsrbS9+RV4r1
09OHXPSLiBf1wOmmWjJkjuXnEVW62ejCI4cdPyxz2PC4UFAr7F1pnLV9Two3
b6bfzmipboEDtYprmI71IeMFACC5kOUCAAAAqcvsZHhxfaRWnxGsscd99Gfn
V3XGy/n0+fbr5bdni+kpn3eNzvW/M373y6/94wONcQXLyc9Fntc/juTTFlub
6IEqPlq8fQ+Vr7303OTBOreOl6V7dsa97tnHOf/aOVjHxHtrroW+lt+1r3H3
sZk9D3qvv3dtGvc8mNm1+TjMeWfz9/09aoboJ5UDdMcvvpb/mn82r5v/37xd
cmfdT/K+yaWlv1YOvWN47CkjWVp76aBCReSZSypVS1fSS+NqGB7up4wRS7vo
lWMV5XfXCEvfgiweLUuklu6/MlLqrJ4s7uVba522o2Rq7XfE2aVtiuS6iTFz
3h72kfrBgAi9Wqa//tG5l86a3V47lu+t1zrk1lMTP5Sqx4re/7o9VymPTq9v
22jozVij6MdkvAAApJQn+b0hslwAAADg8ZnZo1/3YborZqjuKeWpkRPq6KER
9bXoq4Vl07DK8lG2Avrdlg2NeoeuMGZdzq0l439p1K3+p8aiP/Pr5DnjjWcC
qkrcfFtd8Pl246cNteWSt53eGbfnic93WhXVpWNLSI0Zw+R4uxd04oriutut
g35UO1RX5hyiv15J2zyuWZlI9S8bqmFOgzS2fyfN+WcVrdDyggR+9p4Mn3ZM
/rhawtJdHDS7q05u6q677762Zg9s3Y0DLXn14+S/T/K+yfq9Utf4QXp9+EDZ
GDdeXiwcqMc6P6Ptuz2nM3OU1gsjrxvjc7lJYHlX/TF3Fv2mYw2N/m6uHB+1
XOKKtdH6uyOkyJ235Oe4Nhrz1zyZN3i1XO3bXk9H9dK459x1/cEhKZLrJkjo
EmlUI1z/igjSdUaQNsnTWP/68lmds6OaVh6fQ3KF3P26CS+oAS4ljKPP/GLM
vPt1e3PwyEZ5nztExgsAQDJL7PuTpOxpJcsFAAAAkoeZVdoeHKIRHqE64UR7
nVWonFY/+6LmOfOyHKnUV7ZFFrXkrketMtjUOP91L+OteS/jnXAv4/04nWS8
CXO81/JFWXbSDesSoIvPv6ouY7rovo9qaLWe8XLt49GS+1yk7PtxqNhtGiye
x8aIbUSsmHm12RVr9hybuah3E0+92dNHmxTtr0uMQC0XcvdzUT9ct7SL0PeW
Rv5n30JS3jeZue7gu7fPfff25vuvAn3aq9fAzno2brBWr1JBP8rXSL9zsNGu
144YoSW8Jdtnn8mh7zdKgzcNvZR1oAyoeF4cKjbXNs3flmyvfyqlJrvqNz9u
l9U3DsqkoV00aJO/DnszQI/4hqfI6/1wl0iTKA99rmJTSyfDubB58sIvLuIc
a6dze+40vqj9gnz9QU11n7FAbu/7UMyfR3zUuYzR9GAuIeMFACB5LZocpROO
DFTnKH/1jAnSLSVWSptsn1h+byg+MJssu1SOLBcAAABIYWZWeSUuSp1yDbdk
lXscQizdCObMaZPf+uuZzv/XnxBTNvXOZ+51NeS819VQ/V5Xg9O9roY1j9HV
8HC/gjlPa87Vms/V/FgNyntbPv7jWHfQUxfl9dTPcnno/tq9deleN22yuJ3e
PO+i3gdaa9zyptprgmqONVW1SOgdsY2ZKeb+uhk+heSb4cWk3vUycrxtPelX
7pjEOZfXqcGN1eZOK+27vLuG7Z0pxSasFeftfvr6mKZy4LKndMztqTu3HDUu
/2ArTY/006XjdhvF3sn7wHlBK09dcfh5eXamq2Ve92R2J70T+ool1307Vy/t
OL+vNg7or0437DTHqJr6xbd2evZiYVnd3lfWh+XWXONraJhtYx17KZ/4Huwi
xqoRsiWosI6t+oouO3f3+b3qpS/nGqhRvwxLsdndhK/PAaMiNfDjQLXL4qXT
lvXR+kfyart+G2TrimJqf/Sckeu5ZnLt45K6quw+WdujlE7Z/6rW+7Co9th3
2DJnHnh+glHIO98DGW+NbE31QqcWOqimn66yG6QFnw/S178M0RKfRt2X1v8+
AQBI71wfmuM9GdxN5+3rrtb5LVkuAAAAgOTycL9CH9uKWrDNYYnYOV6mvz1M
dtj2ljvjWie7GytayJ8bnWXRr43EtkVZeW/BcWNLM0/j05sTHL/bUtexiU1r
x5LxXo7X9813DDr3vnHgsxJy2a2jZCsQLB36fyVe1Q/KnBft9dBtN81apaGU
GBwmjfLZ61cf5TIW7TxivN7WXhsNfNs4nq2UTA8vrRMazjeCKpeXlstKaxHH
tcadg9VlcYmyeqJOebn54yDp0rys6p0qoj6hcqG2vQZVyi67SrtL3alxsnxz
I2PdUJVjlX8w9v1vqVHh2XVi/djMLPrYvSzaevY4uT9X/9XJ4L0ul3SOayQ/
lC+qh2LKyNffXZEV4zpo38OddJVDbz15JuDu+8Xq+nvjM5b58KuvvPX/Zbxu
Yxpo8e8cddbKPrqlWmEt7WynMYeL6VdZ+99H3gsAQNK5PrQvICG/JcsFAAAA
kFwe7leonoJzvEus5nh9DrTWq/fmeDuOqaprr/8hLs7TZNooe7nQPNSYHv2W
4bSzuNzy22j08F8rdULL6mex1XVSxZd1dWR3nfv5eMkatVgqlg7QMo459PKf
pXTa+dK6ziur5AvpKs5Ws7jmLHQP70oaU8944OzUIEgPT62glTc4aoHjr+q3
v9tpyIL6GhvdXlevy6fDxtTXxi3my4WLb8s7k6rrhE+3Gb+9+a7huf/2A1n0
V/dmj/cPLyZm18TV59zVp4lnsu2WS2onQ7WqWeTFsZ6ypWZ9vVO+om76srcW
mBSirt0H6ZsOg7TS5sH6yaEa2n7x2UQz3rVza2lIXB29+T83nXIyXEaXHyVh
7V+XRi9l0wTkvQAAAAAAABlHwtygmVWZnQBDXgmz5H/Dxg3QtyeGaOSy/lqx
RpC22hWunw2N1IjoKJ04N/l3SiFjeLj3IeyhPt5dWeKlYmCURDUMkVkeQTK0
anlplruRHMu+S0K3HpOtO0uqR6VWGvysjTQs9Ip0atJVO2y7bOyd9bIc2euj
LpvHSNHrb0vpvYP00uJR8uuv78ikUUG6Luuz+sfr1TRhFld8QmVG2WD9srm7
1v2qn+WxVT8fqjtnhVn6E5aWHKIdS4Wpk5e7zv2+q16+GqjrRmyTbM9vleNv
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
gprvXldD3XtdDd/e62r4yqqrYakRqGOKDNU4q66GR32+5L0AAAAAAACPzsxh
aq2PtPyOv5nPVJ3kp0GnO+iFXweo/4cherGnv+W636jI+7mNmTv9254mMt7/
9nC/QvUUnONt3bOLxg43tKGvoRMbOOmqsLZi/05LuW5bRXcuPyjzI31k2ih7
udA81Jge/ZbhtLO43PLbaPTwXyunFpXViwWf1wDXelrwYg+dmPsDiRq5Sw62
DlDXiJx6oFppnXa+tK7zyir5QrqKs9XcbIxVT0JKn50aBOnhqRW08gZHLXD8
Vf32dzsNWVBfzd7dS3/mVa/e9dW13fty8eLbcsLeUXdvGi2Fv4yWzZGt/79O
hmFvBugR3/BH/7ymQMabGpJ751pyIe8FAAAAAABIOjOzTdi1VTM8yjJj+vD1
h5Hxph8P9z6EPdTH6734tvQeFCJxE/yk6kI/kUprjenZzhlRS3dKEecf5NjM
4lqkYyttULiEbP+itaxe101H3nCSHQvD5Yyvr86a+IF0b/+p3PaMUJnXUVvO
cLP0LVSvUkE/ytdIE+ZmxSdUrHsSzMdm9uLunBWW4ufBm/x10TBvnZ9riPZv
t1Nyxm6XTkXaW/apVT29QPaMa6O/lnpNvOpNlUXNnrCTIRHW+XzCPPZO297y
QG6fDr5eHpZeM15r5L0AAAAAAADJj4w3dbWz2kcW1zdKu8YMUPcOftrYIUr9
hnnpuWZ99dNgf722zdDRFQrr0tVnZeTPQTLk1Fo5+lFR3brOTms519YWs101
pkBtWT+9m8jJ3topm5cceGGSrOwXoB+XmiT758b86060P94P0ZODhj6wyyyh
J2H0pGFi3Yub0q+JdR5r3bEww6p7IT4+QqKnTJHYvW2Sr5MhEdbz2Nb9G9bX
0/rr6J9khIzXGnkvAAAAAABA8iDjTXnWue7UKxF6Iribzt/XXXNXD9RDsa/L
13emyvsbA9Q1pqUsnNxP5m4fqEe9X5ZaSx3F43hvPdT0gjHxrYpS8BcP/enu
9SGV+0gLm0FqV/x1ib37d/8ty034uA8/JnNudsessDTLeK3zWCer+VtzLvf9
9bGyOKTzAzvUrM/J1smQCOv+Deu+Zevraf019U92DxqmUwsNtnTqnqnjoGOX
ZFNzh1rxF6pIsGs/sb9VQl8LcxBz19us7G30m6ztLDvgDh0PU/NrKC0fO3kv
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
/gUYJY8W
        "], {{0, 316}, {467, 0}}, {0., 1.},
        ColorFunction->RGBColor],
       BoxForm`ImageTag[
       "Real32", ColorSpace -> "RGB", Interleaving -> False, Magnification -> 
        Automatic],
       Selectable->False],
      DefaultBaseStyle->"ImageGraphics",
      ImageSize->{295., Automatic},
      ImageSizeRaw->{467, 316},
      PlotRange->{{0, 467}, {0, 316}}], "without", " ", "knowing", " ", "the",
      " ", "derivatives"}], ",", " ", 
    RowBox[{
    "4", " ", "or", " ", "more", " ", "are", " ", "iterations", " ", "needed",
      " ", "to", " ", "find", " ", "the", " ", 
     RowBox[{"intersection", "."}]}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SurfaceIntersection", "[", 
     RowBox[{"prevRayCoordinate_List", ",", "Z_List", ",", "rayTilt_List"}], 
     "]"}], "[", 
    RowBox[{"surface_", ",", "DxSurface_", ",", "DySurface_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"sc", "=", 
        RowBox[{"Transpose", "@", "prevRayCoordinate"}]}], ",", 
       RowBox[{"ta", "=", 
        RowBox[{"Transpose", "@", "rayTilt"}]}], ",", "S", ",", "k", ",", 
       "rx", ",", "ry", ",", "rz", ",", "tx", ",", "ty", ",", "tz"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rx", "=", 
       RowBox[{"sc", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"prevRayCoordinate", " ", "\[Rule]", " ", 
         RowBox[{
         "input", " ", "coordinates", " ", "of", " ", "the", " ", "rays", " ",
           "or", " ", "the", " ", "coordinates", " ", "resulted", " ", "from",
           " ", "the", " ", "previous", " ", "iteration"}]}], ","}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"ry", "=", 
       RowBox[{"sc", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"Z", " ", "\[Rule]", " ", 
        RowBox[{
        "a", " ", "list", " ", "with", " ", "z", " ", "coordinates", " ", 
         "of", " ", "the", " ", 
         RowBox[{"rays", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "sc", "]"}], "\[GreaterEqual]", " ", "3"}], 
        ",", 
        RowBox[{"rz", "=", 
         RowBox[{"sc", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ",", 
        RowBox[{"rz", "=", "Z"}]}], "]"}], ";", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"z", " ", "coordinate", " ", "is", " ", "needed"}], ",", " ", 
        RowBox[{
        "prevRayCoordinate", " ", "should", " ", "contain", " ", "the", " ", 
         "z", " ", "coordinate"}], ",", " ", 
        RowBox[{
        "in", " ", "this", " ", "case", " ", "the", " ", "variable", " ", "Z",
          " ", "is", " ", 
         RowBox[{"ignored", ".", " ", "Otherwise"}], " ", "a", " ", "list", 
         " ", "Z", " ", "is", " ", 
         RowBox[{"expected", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"tx", "=", 
       RowBox[{"ta", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"rayTilt", "            ", "\[Rule]", " ", 
        RowBox[{
        "input", " ", "direction", " ", "vectors", " ", "of", " ", "the", " ", 
         RowBox[{"rays", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"ty", "=", 
       RowBox[{"ta", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "ta", "]"}], "\[GreaterEqual]", " ", "3"}], 
        ",", 
        RowBox[{"tz", "=", 
         RowBox[{"ta", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ",", 
        RowBox[{"tz", "=", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"1", "-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"tx", "^", "2"}], "+", 
             RowBox[{"ty", "^", "2"}]}], ")"}]}], "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"ParallelMap", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"S", "=", 
            RowBox[{
             RowBox[{"surface", "[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "-", 
             RowBox[{"#", "[", 
              RowBox[{"[", "3", "]"}], "]"}]}]}], ";", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"surface", " ", "\[Rule]", " ", 
              RowBox[{"the", " ", "surface", " ", "function", " ", 
               RowBox[{"(", 
                RowBox[{
                "must", " ", "be", " ", "a", " ", "function", " ", "of", " ", 
                 "two", " ", "variables"}], ")"}]}]}], ","}], "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"k", "=", 
            RowBox[{
             RowBox[{
              RowBox[{"DxSurface", "[", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "*", 
              RowBox[{"#", "[", 
               RowBox[{"[", "4", "]"}], "]"}]}], "+", 
             RowBox[{
              RowBox[{"DySurface", "[", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "*", 
              RowBox[{"#", "[", 
               RowBox[{"[", "5", "]"}], "]"}]}]}]}], ";", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"DxSurface", " ", "DySurface"}], " ", "\[Rule]", " ", 
             RowBox[{
             "derivatives", " ", "of", " ", "the", " ", "surface", " ", 
              "with", " ", "respect", " ", "to", " ", "x", " ", "and", " ", 
              RowBox[{"y", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", "3", "]"}], "]"}]}], "}"}], "+", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "4", "]"}], "]"}], ",", 
               RowBox[{"#", "[", 
                RowBox[{"[", "5", "]"}], "]"}], ",", 
               RowBox[{"#", "[", 
                RowBox[{"[", "6", "]"}], "]"}]}], "}"}], "*", 
             RowBox[{"S", "/", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "6", "]"}], "]"}], "-", "k"}], ")"}]}]}]}]}], 
          ")"}], "&"}], ",", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{
          "rx", ",", "ry", ",", "rz", ",", "tx", ",", "ty", ",", "tz"}], 
          "}"}], "]"}], "\[IndentingNewLine]", ",", 
        RowBox[{"Method", "\[Rule]", " ", "\"\<CoarsestGrained\>\""}]}], 
       "]"}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "This", " ", "function", " ", "return", " ", "the", " ", "coordinates", 
     " ", "x"}], ",", " ", "y", ",", " ", 
    RowBox[{
    "z", " ", "of", " ", "the", " ", "intersection", " ", "between", " ", 
     "the", " ", "ray", " ", "bundle", " ", "and", " ", "the", " ", "surface",
      " ", 
     RowBox[{"\"\<surface\>\"", ".", " ", "When"}], " ", "the", " ", 
     "derivatives", " ", "\"\<DxSurface\>\""}], ",", " ", 
    RowBox[{"\"\<DySurface\>\"", "are", " ", "given"}], ",", " ", 
    RowBox[{
     RowBox[{
     "the", " ", "method", " ", "used", " ", "is", " ", "similar", " ", "to", 
      " ", "Newton"}], "-", 
     RowBox[{
      RowBox[{"Raphson", ".", "\[IndentingNewLine]", "If"}], " ", "the", " ", 
      "derivatives", " ", "are", " ", "not", " ", "known", " ", 
      "analythical"}]}], ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"write", " ", "0"}], "&"}], " ", 
     RowBox[{"instead", ".", " ", "This"}], " ", "function", " ", "should", 
     " ", "be", " ", "used", " ", "in", " ", "a", " ", "Do", " ", "loop"}], 
    ",", " ", 
    RowBox[{
     RowBox[{"each", " ", "iteration", " ", "increases", " ", "the", " ", 
      RowBox[{"accuracy", ".", "\[IndentingNewLine]", "This"}], " ", "method",
       " ", "is", " ", "exact", " ", "in", " ", "1", " ", "iteration", " ", 
      "the", " ", "for", " ", "intersection", " ", "between", " ", "tilted", 
      " ", "rays", " ", "and", " ", "a", " ", "plane", " ", "surface", " ", 
      "or", " ", "the", " ", "intersection", " ", "between", " ", "rays", " ",
       "parallel", " ", "to", " ", "the", " ", "optical", " ", "axis", " ", 
      "and", " ", "a", " ", "non"}], "-", 
     RowBox[{"planar", " ", 
      RowBox[{"surface", "."}]}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "\"\<refractiveIndexMedium\>\"", " ", "refers", " ", "to", " ", "the", 
     " ", "medium", " ", "in", " ", "which", " ", "the", " ", "material", " ",
      "is", " ", "immersed"}], ",", " ", 
    RowBox[{"for", " ", "example"}], ",", " ", 
    RowBox[{
     RowBox[{"the", " ", "option", " ", "\"\<refractiveIndexMedium\>\""}], 
     "\[Rule]", " ", 
     RowBox[{
     "1.5", " ", "is", " ", "a", " ", "good", " ", "way", " ", "to", " ", 
      "model", " ", "an", " ", "optical", " ", "component", " ", "in", " ", 
      RowBox[{"water", "."}]}]}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "DirectionIn", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"\"\<refractiveIndexMedium\>\"", "\[Rule]", " ", "refIndexAir"}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DirectionIn", "[", 
     RowBox[{"prevRayCoordinate_List", ",", "rayTilt_List", ",", 
      RowBox[{"refractiveIndex_", "?", "NumericQ"}], ",", 
      RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], "[", 
    RowBox[{"DxSurface_", ",", "DySurface_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"refractiveIndexMedium", ",", 
       RowBox[{"sc", "=", 
        RowBox[{"Transpose", "@", "prevRayCoordinate"}]}], ",", 
       RowBox[{"ta", "=", 
        RowBox[{"Transpose", "@", "rayTilt"}]}], ",", "nD", ",", "tr", ",", 
       "tDot", ",", "Dx", ",", "Dy", ",", "rx", ",", "ry", ",", "rz", ",", 
       "tx", ",", "ty", ",", "tz"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"refractiveIndexMedium", "=", 
       RowBox[{"OptionValue", "[", "\"\<refractiveIndexMedium\>\"", "]"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"rx", "=", 
       RowBox[{"sc", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"prevRayCoordinate", " ", "\[Rule]", " ", 
         RowBox[{
         "input", " ", "coordinates", " ", "of", " ", "the", " ", "rays"}]}], 
        ","}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"ry", "=", 
       RowBox[{"sc", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"tx", "=", 
       RowBox[{"ta", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"rayTilt", "            ", "\[Rule]", " ", 
        RowBox[{
        "input", " ", "direction", " ", "vectors", " ", "of", " ", "the", " ", 
         RowBox[{"rays", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"ty", "=", 
       RowBox[{"ta", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "ta", "]"}], "\[GreaterEqual]", " ", "3"}], 
        ",", 
        RowBox[{"tz", "=", 
         RowBox[{"ta", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ",", 
        RowBox[{"tz", "=", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"1", "-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"tx", "^", "2"}], "+", 
             RowBox[{"ty", "^", "2"}]}], ")"}]}], "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"ParallelMap", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Dx", "=", 
            RowBox[{"DxSurface", "[", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"DxSurface", " ", "DySurface"}], " ", "\[Rule]", " ", 
             RowBox[{
             "derivatives", " ", "of", " ", "the", " ", "surface", " ", 
              "with", " ", "respect", " ", "to", " ", "x", " ", "and", " ", 
              RowBox[{"y", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{"Dy", "=", 
            RowBox[{"DySurface", "[", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"nD", "=", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "Dx"}], ",", 
               RowBox[{"-", "Dy"}], ",", "1"}], "}"}], "/", 
             RowBox[{"Sqrt", "[", 
              RowBox[{"1", "+", 
               RowBox[{"Dx", "^", "2"}], "+", 
               RowBox[{"Dy", "^", "2"}]}], "]"}]}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"tr", "=", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "3", "]"}], "]"}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", "4", "]"}], "]"}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", "5", "]"}], "]"}]}], "}"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"tDot", "=", 
            RowBox[{"Dot", "[", 
             RowBox[{"nD", ",", "tr"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"tr", "=", 
            RowBox[{
             RowBox[{"nD", "*", 
              RowBox[{"Sqrt", "[", 
               RowBox[{"1", "-", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"refractiveIndexMedium", "/", "refractiveIndex"}], 
                   ")"}], "^", "2"}], "*", 
                 RowBox[{"(", 
                  RowBox[{"1", "-", 
                   RowBox[{"tDot", "^", "2"}]}], ")"}]}]}], "]"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"tr", "-", 
                RowBox[{"nD", "*", "tDot"}]}], ")"}], "*", 
              RowBox[{"(", 
               RowBox[{"refractiveIndexMedium", "/", "refractiveIndex"}], 
               ")"}]}]}]}], ";", 
           RowBox[{"(*", 
            RowBox[{"refractiveIndex", " ", "\[Rule]", " ", 
             RowBox[{
             "refractive", " ", "index", " ", "of", " ", "the", " ", 
              "optical", " ", 
              RowBox[{"component", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{"tr", "=", 
            RowBox[{"tr", "/", 
             RowBox[{"Norm", "[", "tr", "]"}]}]}]}], ")"}], "&"}], ",", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{"rx", ",", "ry", ",", "tx", ",", "ty", ",", "tz"}], "}"}], 
         "]"}], "\[IndentingNewLine]", ",", 
        RowBox[{"Method", "\[Rule]", " ", "\"\<CoarsestGrained\>\""}]}], 
       "]"}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "This", " ", "function", " ", "return", " ", "the", " ", "direction", " ",
      "vector", " ", 
     RowBox[{"{", 
      RowBox[{"tx", ",", " ", "ty", ",", " ", "tz"}], "}"}], " ", "of", " ", 
     "the", " ", "rays", " ", "refracted", " ", "from", " ", "the", " ", 
     "surface"}], ",", " ", 
    RowBox[{
     RowBox[{
     "assuming", " ", "that", " ", "light", " ", "enter", " ", "in", " ", 
      "the", " ", 
      RowBox[{"component", ".", " ", "\[IndentingNewLine]", "This"}], " ", 
      "function", " ", "uses", " ", "the", " ", "vectorial", " ", "form", " ",
       "of", " ", "Snell", " ", "law", " ", "of", " ", 
      RowBox[{"refraction", ".", " ", "For"}], " ", "reflection", " ", "use", 
      " ", "the", " ", "value"}], " ", "-", 
     RowBox[{"refractiveIndexMedium", " ", "as", " ", 
      RowBox[{"refractiveIndex", "."}]}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "DirectionOut", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"\"\<refractiveIndexMedium\>\"", "\[Rule]", " ", "refIndexAir"}],
      "}"}]}], ";", 
   RowBox[{"(*", 
    RowBox[{"\"\<refractiveIndexMedium\>\"", " ", "\[Rule]", " ", 
     RowBox[{
     "refractive", " ", "index", " ", "of", " ", "the", " ", "medium", " ", 
      "in", " ", "which", " ", "the", " ", "material", " ", "is", " ", 
      RowBox[{"immersed", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"DirectionOut", "[", 
      RowBox[{"prevRayCoordinate_List", ",", "rayTilt_List", ",", 
       RowBox[{"refractiveIndex_", "?", "NumericQ"}], ",", 
       RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], "[", 
     RowBox[{"DxSurface_", ",", "DySurface_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"refractiveIndexMedium", ",", 
        RowBox[{"sc", "=", 
         RowBox[{"Transpose", "@", "prevRayCoordinate"}]}], ",", 
        RowBox[{"ta", "=", 
         RowBox[{"Transpose", "@", "rayTilt"}]}], ",", "nD", ",", "tr", ",", 
        "tDot", ",", "Dx", ",", "Dy", ",", "rx", ",", "ry", ",", "rz", ",", 
        "tx", ",", "ty", ",", "tz"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"refractiveIndexMedium", "=", 
        RowBox[{"OptionValue", "[", "\"\<refractiveIndexMedium\>\"", "]"}]}], 
       ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"rx", "=", 
        RowBox[{"sc", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"prevRayCoordinate", " ", "\[Rule]", " ", 
          RowBox[{
          "input", " ", "coordinates", " ", "of", " ", "the", " ", "rays"}]}],
          ","}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"ry", "=", 
        RowBox[{"sc", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"tx", "=", 
        RowBox[{"ta", "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], ";", 
       RowBox[{"(*", 
        RowBox[{"rayTilt", "            ", "\[Rule]", " ", 
         RowBox[{
         "input", " ", "direction", " ", "vectors", " ", "of", " ", "the", 
          " ", 
          RowBox[{"rays", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"ty", "=", 
        RowBox[{"ta", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "ta", "]"}], "\[GreaterEqual]", " ", "3"}], 
         ",", 
         RowBox[{"tz", "=", 
          RowBox[{"ta", "[", 
           RowBox[{"[", "3", "]"}], "]"}]}], ",", 
         RowBox[{"tz", "=", 
          RowBox[{"Sqrt", "[", 
           RowBox[{"1", "-", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"tx", "^", "2"}], "+", 
              RowBox[{"ty", "^", "2"}]}], ")"}]}], "]"}]}]}], "]"}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"ParallelMap", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Dx", "=", 
             RowBox[{"DxSurface", "[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"DxSurface", " ", "DySurface"}], " ", "\[Rule]", " ", 
              RowBox[{
              "derivatives", " ", "of", " ", "the", " ", "surface", " ", 
               "with", " ", "respect", " ", "to", " ", "x", " ", "and", " ", 
               RowBox[{"y", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{"Dy", "=", 
             RowBox[{"DySurface", "[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"nD", "=", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", "Dx"}], ",", 
                RowBox[{"-", "Dy"}], ",", "1"}], "}"}], "/", 
              RowBox[{"Sqrt", "[", 
               RowBox[{"1", "+", 
                RowBox[{"Dx", "^", "2"}], "+", 
                RowBox[{"Dy", "^", "2"}]}], "]"}]}]}], ";", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"tr", "=", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "3", "]"}], "]"}], ",", 
               RowBox[{"#", "[", 
                RowBox[{"[", "4", "]"}], "]"}], ",", 
               RowBox[{"#", "[", 
                RowBox[{"[", "5", "]"}], "]"}]}], "}"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"tDot", "=", 
             RowBox[{"Dot", "[", 
              RowBox[{"nD", ",", "tr"}], "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"tr", "=", 
             RowBox[{
              RowBox[{"nD", "*", 
               RowBox[{"Sqrt", "[", 
                RowBox[{"1", "-", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"refractiveIndex", "/", "refractiveIndexMedium"}],
                     ")"}], "^", "2"}], "*", 
                  RowBox[{"(", 
                   RowBox[{"1", "-", 
                    RowBox[{"tDot", "^", "2"}]}], ")"}]}]}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"tr", "-", 
                 RowBox[{"nD", "*", "tDot"}]}], ")"}], "*", 
               RowBox[{"(", 
                RowBox[{"refractiveIndex", "/", "refractiveIndexMedium"}], 
                ")"}]}]}]}], ";", 
            RowBox[{"(*", 
             RowBox[{"refractiveIndex", " ", "\[Rule]", " ", 
              RowBox[{
              "refractive", " ", "index", " ", "of", " ", "the", " ", 
               "optical", " ", 
               RowBox[{"component", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{"tr", "=", 
             RowBox[{"tr", "/", 
              RowBox[{"Norm", "[", "tr", "]"}]}]}]}], ")"}], "&"}], ",", 
         RowBox[{"Transpose", "[", 
          RowBox[{"{", 
           RowBox[{"rx", ",", "ry", ",", "tx", ",", "ty", ",", "tz"}], "}"}], 
          "]"}], "\[IndentingNewLine]", ",", 
         RowBox[{"Method", "\[Rule]", " ", "\"\<CoarsestGrained\>\""}]}], 
        "]"}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}]}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "This", " ", "function", " ", "return", " ", "the", " ", "direction", " ",
      "vector", " ", 
     RowBox[{"{", 
      RowBox[{"tx", ",", " ", "ty", ",", " ", "tz"}], "}"}], " ", "of", " ", 
     "the", " ", "rays", " ", "refracted", " ", "from", " ", "the", " ", 
     "surface"}], ",", " ", 
    RowBox[{
     RowBox[{
     "assuming", " ", "that", " ", "light", " ", "exits", " ", "the", " ", 
      RowBox[{"component", ".", " ", "\[IndentingNewLine]", "This"}], " ", 
      "function", " ", "uses", " ", "the", " ", "vectorial", " ", "form", " ",
       "of", " ", "Snell", " ", "law", " ", "of", " ", 
      RowBox[{"refraction", ".", " ", "For"}], " ", "reflection", " ", "use", 
      " ", "the", " ", "value"}], " ", "-", 
     RowBox[{"refractiveIndex", " ", "as", " ", 
      RowBox[{"refractiveIndex", "."}]}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DirectionIn", "[", 
     RowBox[{
     "prevRayCoordinate_List", ",", "rayTilt_List", ",", 
      "refractiveIndex_List", ",", 
      RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], "[", 
    RowBox[{"DxSurface_", ",", "DySurface_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"refractiveIndexMedium", ",", 
       RowBox[{"sc", "=", 
        RowBox[{"Transpose", "@", "prevRayCoordinate"}]}], ",", 
       RowBox[{"ta", "=", 
        RowBox[{"Transpose", "@", "rayTilt"}]}], ",", "nD", ",", "tr", ",", 
       "tDot", ",", "Dx", ",", "Dy", ",", "rx", ",", "ry", ",", "rz", ",", 
       "tx", ",", "ty", ",", "tz"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"refractiveIndexMedium", "=", 
       RowBox[{"OptionValue", "[", "\"\<refractiveIndexMedium\>\"", "]"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"rx", "=", 
       RowBox[{"sc", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"prevRayCoordinate", " ", "\[Rule]", " ", 
         RowBox[{
         "input", " ", "coordinates", " ", "of", " ", "the", " ", "rays"}]}], 
        ","}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"ry", "=", 
       RowBox[{"sc", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"tx", "=", 
       RowBox[{"ta", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"rayTilt", "            ", "\[Rule]", " ", 
        RowBox[{
        "input", " ", "direction", " ", "vectors", " ", "of", " ", "the", " ", 
         RowBox[{"rays", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"ty", "=", 
       RowBox[{"ta", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "ta", "]"}], "\[GreaterEqual]", " ", "3"}], 
        ",", 
        RowBox[{"tz", "=", 
         RowBox[{"ta", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ",", 
        RowBox[{"tz", "=", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"1", "-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"tx", "^", "2"}], "+", 
             RowBox[{"ty", "^", "2"}]}], ")"}]}], "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"ParallelMap", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Dx", "=", 
            RowBox[{"DxSurface", "[", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"DxSurface", " ", "DySurface"}], " ", "\[Rule]", " ", 
             RowBox[{
             "derivatives", " ", "of", " ", "the", " ", "surface", " ", 
              "with", " ", "respect", " ", "to", " ", "x", " ", "and", " ", 
              RowBox[{"y", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{"Dy", "=", 
            RowBox[{"DySurface", "[", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"nD", "=", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "Dx"}], ",", 
               RowBox[{"-", "Dy"}], ",", "1"}], "}"}], "/", 
             RowBox[{"Sqrt", "[", 
              RowBox[{"1", "+", 
               RowBox[{"Dx", "^", "2"}], "+", 
               RowBox[{"Dy", "^", "2"}]}], "]"}]}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"tr", "=", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "3", "]"}], "]"}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", "4", "]"}], "]"}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", "5", "]"}], "]"}]}], "}"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"tDot", "=", 
            RowBox[{"Dot", "[", 
             RowBox[{"nD", ",", "tr"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"tr", "=", 
            RowBox[{
             RowBox[{"nD", "*", 
              RowBox[{"Sqrt", "[", 
               RowBox[{"1", "-", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"refractiveIndexMedium", "/", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "6", "]"}], "]"}]}], ")"}], "^", "2"}], "*", 
                 RowBox[{"(", 
                  RowBox[{"1", "-", 
                   RowBox[{"tDot", "^", "2"}]}], ")"}]}]}], "]"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"tr", "-", 
                RowBox[{"nD", "*", "tDot"}]}], ")"}], "*", 
              RowBox[{"(", 
               RowBox[{"refractiveIndexMedium", "/", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "6", "]"}], "]"}]}], ")"}]}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"tr", "=", 
            RowBox[{"tr", "/", 
             RowBox[{"Norm", "[", "tr", "]"}]}]}]}], ")"}], "&"}], ",", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{
          "rx", ",", "ry", ",", "tx", ",", "ty", ",", "tz", ",", 
           "refractiveIndex"}], "}"}], "]"}], 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"refractiveIndex", " ", "\[Rule]", " ", 
           RowBox[{
           "refractive", " ", "index", " ", "of", " ", "the", " ", "optical", 
            " ", "component"}]}], ",", " ", 
          RowBox[{
          "here", " ", "refractiveIndex", " ", "is", " ", "a", " ", "table", 
           " ", "equal", " ", "in", " ", "length", " ", "with", " ", 
           "prevRayCoordinate", " ", "and", " ", 
           RowBox[{"rayTilt", "."}]}]}], "*)"}], "\[IndentingNewLine]", ",", 
        RowBox[{"Method", "\[Rule]", " ", "\"\<CoarsestGrained\>\""}]}], 
       "]"}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "This", " ", "function", " ", "return", " ", "the", " ", "direction", " ",
      "vector", " ", 
     RowBox[{"{", 
      RowBox[{"tx", ",", " ", "ty", ",", " ", "tz"}], "}"}], " ", "of", " ", 
     "the", " ", "rays", " ", "refracted", " ", "from", " ", "the", " ", 
     "surface"}], ",", " ", 
    RowBox[{
    "assuming", " ", "that", " ", "light", " ", "enter", " ", "in", " ", 
     "the", " ", 
     RowBox[{"component", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "This", " ", "works", " ", "with", " ", "a", " ", "different", " ", 
    "refractive", " ", "index", " ", "for", " ", "each", " ", 
    RowBox[{"ray", ".", " ", "Good"}], " ", "for", " ", "modeling", " ", "of",
     " ", "anisotropic", " ", 
    RowBox[{"media", "."}]}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DirectionOut", "[", 
     RowBox[{
     "prevRayCoordinate_List", ",", "rayTilt_List", ",", 
      "refractiveIndex_List", ",", 
      RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], "[", 
    RowBox[{"DxSurface_", ",", "DySurface_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"refractiveIndexMedium", ",", 
       RowBox[{"sc", "=", 
        RowBox[{"Transpose", "@", "prevRayCoordinate"}]}], ",", 
       RowBox[{"ta", "=", 
        RowBox[{"Transpose", "@", "rayTilt"}]}], ",", "nD", ",", "tr", ",", 
       "tDot", ",", "Dx", ",", "Dy", ",", "rx", ",", "ry", ",", "rz", ",", 
       "tx", ",", "ty", ",", "tz"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"refractiveIndexMedium", "=", 
       RowBox[{"OptionValue", "[", "\"\<refractiveIndexMedium\>\"", "]"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"rx", "=", 
       RowBox[{"sc", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"prevRayCoordinate", " ", "\[Rule]", " ", 
         RowBox[{
         "input", " ", "coordinates", " ", "of", " ", "the", " ", "rays"}]}], 
        ","}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"ry", "=", 
       RowBox[{"sc", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"tx", "=", 
       RowBox[{"ta", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"rayTilt", "            ", "\[Rule]", " ", 
        RowBox[{
        "input", " ", "direction", " ", "vectors", " ", "of", " ", "the", " ", 
         RowBox[{"rays", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"ty", "=", 
       RowBox[{"ta", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "ta", "]"}], "\[GreaterEqual]", " ", "3"}], 
        ",", 
        RowBox[{"tz", "=", 
         RowBox[{"ta", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ",", 
        RowBox[{"tz", "=", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"1", "-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"tx", "^", "2"}], "+", 
             RowBox[{"ty", "^", "2"}]}], ")"}]}], "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"ParallelMap", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Dx", "=", 
            RowBox[{"DxSurface", "[", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"DxSurface", " ", "DySurface"}], " ", "\[Rule]", " ", 
             RowBox[{
             "derivatives", " ", "of", " ", "the", " ", "surface", " ", 
              "with", " ", "respect", " ", "to", " ", "x", " ", "and", " ", 
              RowBox[{"y", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{"Dy", "=", 
            RowBox[{"DySurface", "[", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"nD", "=", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "Dx"}], ",", 
               RowBox[{"-", "Dy"}], ",", "1"}], "}"}], "/", 
             RowBox[{"Sqrt", "[", 
              RowBox[{"1", "+", 
               RowBox[{"Dx", "^", "2"}], "+", 
               RowBox[{"Dy", "^", "2"}]}], "]"}]}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"tr", "=", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "3", "]"}], "]"}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", "4", "]"}], "]"}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", "5", "]"}], "]"}]}], "}"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"tDot", "=", 
            RowBox[{"Dot", "[", 
             RowBox[{"nD", ",", "tr"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"tr", "=", 
            RowBox[{
             RowBox[{"nD", "*", 
              RowBox[{"Sqrt", "[", 
               RowBox[{"1", "-", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "6", "]"}], "]"}], "/", 
                    "refractiveIndexMedium"}], ")"}], "^", "2"}], "*", 
                 RowBox[{"(", 
                  RowBox[{"1", "-", 
                   RowBox[{"tDot", "^", "2"}]}], ")"}]}]}], "]"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"tr", "-", 
                RowBox[{"nD", "*", "tDot"}]}], ")"}], "*", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "6", "]"}], "]"}], "/", 
                "refractiveIndexMedium"}], ")"}]}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"tr", "=", 
            RowBox[{"tr", "/", 
             RowBox[{"Norm", "[", "tr", "]"}]}]}]}], ")"}], "&"}], ",", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{
          "rx", ",", "ry", ",", "tx", ",", "ty", ",", "tz", ",", 
           "refractiveIndex"}], "}"}], "]"}], 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"refractiveIndex", " ", "\[Rule]", " ", 
           RowBox[{
           "refractive", " ", "index", " ", "of", " ", "the", " ", "optical", 
            " ", "component"}]}], ",", " ", 
          RowBox[{
          "here", " ", "refractiveIndex", " ", "is", " ", "a", " ", "table", 
           " ", "equal", " ", "in", " ", "length", " ", "with", " ", 
           "prevRayCoordinate", " ", "and", " ", 
           RowBox[{"rayTilt", "."}]}]}], "*)"}], "\[IndentingNewLine]", ",", 
        RowBox[{"Method", "\[Rule]", " ", "\"\<CoarsestGrained\>\""}]}], 
       "]"}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "This", " ", "function", " ", "return", " ", "the", " ", "direction", " ",
      "vector", " ", 
     RowBox[{"{", 
      RowBox[{"tx", ",", " ", "ty", ",", " ", "tz"}], "}"}], " ", "of", " ", 
     "the", " ", "rays", " ", "refracted", " ", "from", " ", "the", " ", 
     "surface"}], ",", " ", 
    RowBox[{
    "assuming", " ", "that", " ", "light", " ", "exits", " ", "the", " ", 
     RowBox[{"component", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "This", " ", "works", " ", "with", " ", "a", " ", "different", " ", 
    "refractive", " ", "index", " ", "for", " ", "each", " ", 
    RowBox[{"ray", ".", " ", "Good"}], " ", "for", " ", "modeling", " ", "of",
     " ", "anisotropic", " ", 
    RowBox[{"media", "."}]}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "FindOpticalPathLength", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<waveLength\>\"", "\[Rule]", " ", "waveLength"}], ",", 
      RowBox[{"\"\<returnHistogram\>\"", "\[Rule]", " ", "False"}]}], "}"}]}],
    ";", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"\"\<waveLength\>\"", " ", "\[Rule]", " ", 
      RowBox[{
      "wavelenght", " ", "of", " ", "the", " ", "radiation", " ", "used"}]}], 
     ",", " ", 
     RowBox[{"\"\<returnHistogram\>\"", " ", "\[Rule]", " ", 
      RowBox[{
      "returns", " ", "a", " ", "histogram", " ", "of", " ", "the", " ", 
       "list", " ", "carring", " ", "the", " ", "values", " ", "of", " ", 
       "optical", " ", "length", " ", "for", " ", "each", " ", 
       RowBox[{"ray", "."}]}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"FindOpticalPathLength", "[", 
     RowBox[{"intersection_List", ",", "refractiveIndexs_", ",", 
      RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"lambda", ",", "k0", ",", "opticalLength"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"lambda", "=", 
        RowBox[{"OptionValue", "[", "\"\<waveLength\>\"", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"k0", "=", 
        RowBox[{"2", " ", 
         RowBox[{"Pi", "/", "lambda"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"opticalLength", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"intersection", "[", 
              RowBox[{"[", 
               RowBox[{"i", "+", "1"}], "]"}], "]"}], "-", 
             RowBox[{"intersection", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "*", 
           RowBox[{"refractiveIndexs", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{
             RowBox[{"Length", "[", "intersection", "]"}], "-", "1"}]}], 
           "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"intersection", " ", "\[Rule]", " ", 
          RowBox[{
          "a", " ", "list", " ", "of", " ", "lists", " ", "with", " ", "the", 
           " ", "coordinates", " ", "of", " ", "the", " ", "intersection", 
           " ", "with", " ", "each", " ", "surface"}]}], ",", " ", 
         RowBox[{"Ex", ".", " ", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"coords", ".", " ", "intersection"}], " ", "surface1"}],
              "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"coords", ".", " ", "intersection"}], " ", "surface1"}],
              "}"}], ",", " ", "..."}], " ", "}"}]}]}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"opticalLength", "=", 
        RowBox[{"Total", "[", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"\[Sqrt]", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "^", "2"}], "+", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "^", "2"}], "+", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], "^", "2"}]}], ")"}]}], "&"}],
            ",", "opticalLength", ",", 
           RowBox[{"{", "2", "}"}]}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{"refractiveIndexs", " ", "\[Rule]", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
           "a", " ", "list", " ", "of", " ", "refractive", " ", "indexes", 
            " ", "of", " ", "each", " ", 
            RowBox[{"medium", ".", " ", 
             RowBox[{"Length", "[", "refractiveIndexs", "]"}]}]}], "+", "1"}],
           " ", "\[Equal]", " ", 
          RowBox[{"Length", "[", "intersection", "]"}]}]}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"OptionValue", "[", "\"\<returnHistogram\>\"", "]"}], 
          "\[Equal]", " ", "True"}], ",", 
         RowBox[{"Print", "[", 
          RowBox[{"Histogram", "[", 
           RowBox[{"k0", " ", 
            RowBox[{"(", 
             RowBox[{"opticalLength", "-", 
              RowBox[{"Min", "[", "opticalLength", "]"}]}], ")"}], "mm"}], 
           "]"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
       "opticalLength"}]}], "\[IndentingNewLine]", "]"}]}]}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "This", " ", "function", " ", "gives", " ", "the", " ", "optical", " ", 
    "path", " ", "length", " ", "along", " ", "a", " ", 
    RowBox[{"ray", "."}]}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "FindOpticalPathLengthU", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<waveLength\>\"", "\[Rule]", " ", "waveLength"}], ",", 
     RowBox[{"\"\<returnHistogram\>\"", "\[Rule]", " ", "False"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FindOpticalPathLengthU", "[", 
    RowBox[{"intersection_List", ",", "refractiveIndexs_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"lambda", ",", "k0", ",", "opticalLength"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"lambda", "=", 
       RowBox[{"OptionValue", "[", "\"\<waveLength\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"k0", "=", 
       RowBox[{"2", " ", 
        RowBox[{"Pi", "/", "lambda"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"opticalLength", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "*", 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "&"}], ",", 
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"intersection", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "-", 
                RowBox[{"intersection", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], ")"}], ",", 
              RowBox[{"refractiveIndexs", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], "}"}], "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{
            RowBox[{"Length", "[", "intersection", "]"}], "-", "1"}]}], 
          "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"intersection", " ", "\[Rule]", " ", 
         RowBox[{
         "a", " ", "list", " ", "of", " ", "lists", " ", "with", " ", "the", 
          " ", "coordinates", " ", "of", " ", "the", " ", "intersection", " ",
           "with", " ", "each", " ", "surface"}]}], ",", " ", 
        RowBox[{"Ex", ".", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"coords", ".", " ", "intersection"}], " ", "surface1"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"coords", ".", " ", "intersection"}], " ", "surface1"}], 
            "}"}], ",", " ", "..."}], " ", "}"}]}]}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"opticalLength", "=", 
       RowBox[{"Total", "[", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Sqrt]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "^", "2"}], "+", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "^", "2"}], "+", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "^", "2"}]}], ")"}]}], "&"}], 
          ",", "opticalLength", ",", 
          RowBox[{"{", "2", "}"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"refractiveIndexs", " ", "\[Rule]", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
           "a", " ", "list", " ", "of", " ", "lists", " ", "with", " ", "the",
             " ", "refractive", " ", "index", " ", "for", " ", "each", " ", 
            RowBox[{"ray", ".", " ", 
             RowBox[{"Length", "[", "refractiveIndexs", "]"}]}]}], "+", "1"}],
           " ", "\[Equal]", " ", 
          RowBox[{
           RowBox[{"Length", "[", "intersection", "]"}], " ", "and", " ", 
           RowBox[{"Length", "[", 
            RowBox[{"refractiveIndexs", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}]}], " ", "\[Equal]", " ", 
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"intersection", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "]"}], " ", "for", " ", "all", 
           " ", "i"}]}]}], ",", " ", "j"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"OptionValue", "[", "\"\<returnHistogram\>\"", "]"}], 
         "\[Equal]", " ", "True"}], ",", 
        RowBox[{"Print", "[", 
         RowBox[{"Histogram", "[", 
          RowBox[{"k0", " ", 
           RowBox[{"(", 
            RowBox[{"opticalLength", "-", 
             RowBox[{"Min", "[", "opticalLength", "]"}]}], ")"}], "mm"}], 
          "]"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      "opticalLength"}]}], "\[IndentingNewLine]", "]"}]}], 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "This", " ", "function", " ", "gives", " ", "the", " ", "optical", " ", 
     "path", " ", "length", " ", "along", " ", "a", " ", "ray"}], ",", " ", 
    RowBox[{
    "considering", " ", "a", " ", "different", " ", "refractive", " ", 
     "index", " ", "for", " ", "each", " ", 
     RowBox[{"ray", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", "Rotations", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "RotationX", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"\"\<units\>\"", "\[Rule]", " ", "\"\<grad\>\""}], "}"}]}], ";", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"\"\<units\>\"", " ", "\[Rule]", " ", 
      RowBox[{"units", " ", "for", " ", "angles"}]}], ",", " ", 
     RowBox[{
      RowBox[{"could", " ", "be", " ", "\"\<grad\>\"", " ", "or", " ", 
       RowBox[{"\"\<rad\>\"", ".", " ", "Is"}], " ", "expected", " ", "that", 
       " ", "for", " ", "\"\<units\>\""}], " ", "\[Rule]", " ", 
      RowBox[{"\"\<rad\>\"", " ", "to", " ", "use", " ", 
       RowBox[{"integer", "/", "half"}], " ", 
       RowBox[{"integer", "/", " ", "so"}], " ", "on", " ", "multiple", " ", 
       "of", " ", "\[Pi]"}]}], ",", " ", 
     RowBox[{
      RowBox[{
      "in", " ", "this", " ", "way", " ", "exact", " ", "results", " ", "and",
        " ", "simplifications", " ", "are", " ", 
       RowBox[{"perimtted", ".", " ", "\[IndentingNewLine]", "For"}], " ", 
       "\"\<units\>\""}], " ", "\[Rule]", " ", "\"\<grad\>\""}], ",", " ", 
     RowBox[{"angle", " ", "is", " ", 
      RowBox[{"numericized", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"RotationX", "[", 
     RowBox[{"angle_", ",", "list_", ",", 
      RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"matrix", ",", "a"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"a", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"OptionValue", "[", "\"\<units\>\"", "]"}], "\[Equal]", 
           "\"\<grad\>\""}], ",", 
          RowBox[{
           RowBox[{"Pi", "/", "180."}], " ", "*", "angle"}], ",", "angle"}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"matrix", "=", 
        RowBox[{"(", GridBox[{
           {"1", "0", "0"},
           {"0", 
            RowBox[{"Cos", "[", "a", "]"}], 
            RowBox[{"-", 
             RowBox[{"Sin", "[", "a", "]"}]}]},
           {"0", 
            RowBox[{"Sin", "[", "a", "]"}], 
            RowBox[{"Cos", "[", "a", "]"}]}
          }], ")"}]}], ";", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"angle", " ", "\[Rule]", " ", 
          RowBox[{"the", " ", "angle", " ", "of", " ", "rotation"}]}], ","}], 
        " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#", ".", "matrix"}], "&"}], ",", "list"}], "]"}]}]}], 
     RowBox[{"(*", "          ", 
      RowBox[{"list", " ", "\[Rule]", " ", 
       RowBox[{
       "the", " ", "list", " ", "of", " ", "3", "D", " ", "coordinates", " ", 
        "on", " ", "which", " ", "rotation", " ", "is", " ", 
        RowBox[{"applied", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "]"}]}]}], 
  RowBox[{"(*", 
   RowBox[{
   "This", " ", "function", " ", "roatates", " ", "a", " ", "list", " ", "of",
     " ", "coordinates", " ", "around", " ", "axis", " ", 
    RowBox[{"X", "."}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "InverseRotationX", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"\"\<units\>\"", "\[Rule]", " ", "\"\<grad\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"InverseRotationX", "[", 
    RowBox[{"angle_", ",", "list_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"matrix", ",", "a"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"OptionValue", "[", "\"\<units\>\"", "]"}], "\[Equal]", 
          "\"\<grad\>\""}], ",", 
         RowBox[{
          RowBox[{"Pi", "/", "180."}], " ", "*", "angle"}], ",", "angle"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"matrix", "=", 
       RowBox[{"(", GridBox[{
          {"1", "0", "0"},
          {"0", 
           RowBox[{"Cos", "[", "a", "]"}], 
           RowBox[{"Sin", "[", "a", "]"}]},
          {"0", 
           RowBox[{"-", 
            RowBox[{"Sin", "[", "a", "]"}]}], 
           RowBox[{"Cos", "[", "a", "]"}]}
         }], ")"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", ".", "matrix"}], "&"}], ",", "list"}], "]"}]}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  RowBox[{"(*", 
   RowBox[{
   "This", " ", "function", " ", "roatates", " ", "a", " ", "list", " ", "of",
     " ", "coordinates", " ", "around", " ", "axis", " ", "X", " ", "in", " ",
     "the", " ", "opposite", " ", "sense", " ", "compared", " ", "with", " ", 
    RowBox[{"RotationX", "."}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "RotationY", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"\"\<units\>\"", "\[Rule]", " ", "\"\<grad\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RotationY", "[", 
    RowBox[{"angle_", ",", "list_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"matrix", ",", "a"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"OptionValue", "[", "\"\<units\>\"", "]"}], "\[Equal]", 
          "\"\<grad\>\""}], ",", 
         RowBox[{
          RowBox[{"Pi", "/", "180."}], " ", "*", "angle"}], ",", "angle"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"matrix", "=", 
       RowBox[{"(", GridBox[{
          {
           RowBox[{"Cos", "[", "a", "]"}], "0", 
           RowBox[{"-", 
            RowBox[{"Sin", "[", "a", "]"}]}]},
          {"0", "1", "0"},
          {
           RowBox[{"Sin", "[", "a", "]"}], "0", 
           RowBox[{"Cos", "[", "a", "]"}]}
         }], ")"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", ".", "matrix"}], "&"}], ",", "list"}], "]"}]}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  RowBox[{"(*", 
   RowBox[{
   "This", " ", "function", " ", "roatates", " ", "a", " ", "list", " ", "of",
     " ", "coordinates", " ", "around", " ", "axis", " ", 
    RowBox[{"Y", "."}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "InverseRotationY", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"\"\<units\>\"", "\[Rule]", " ", "\"\<grad\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"InverseRotationY", "[", 
    RowBox[{"angle_", ",", "list_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"matrix", ",", "a"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"OptionValue", "[", "\"\<units\>\"", "]"}], "\[Equal]", 
          "\"\<grad\>\""}], ",", 
         RowBox[{
          RowBox[{"Pi", "/", "180."}], " ", "*", "angle"}], ",", "angle"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"matrix", "=", 
       RowBox[{"(", GridBox[{
          {
           RowBox[{"Cos", "[", "a", "]"}], "0", 
           RowBox[{"Sin", "[", "a", "]"}]},
          {"0", "1", "0"},
          {
           RowBox[{"-", 
            RowBox[{"Sin", "[", "a", "]"}]}], "0", 
           RowBox[{"Cos", "[", "a", "]"}]}
         }], ")"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", ".", "matrix"}], "&"}], ",", "list"}], "]"}]}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  RowBox[{"(*", 
   RowBox[{
   "This", " ", "function", " ", "roatates", " ", "a", " ", "list", " ", "of",
     " ", "coordinates", " ", "around", " ", "axis", " ", "Y", " ", "in", " ",
     "the", " ", "opposite", " ", "sense", " ", "compared", " ", "with", " ", 
    RowBox[{"RotationY", "."}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "RotationZ", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"\"\<units\>\"", "\[Rule]", " ", "\"\<grad\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RotationZ", "[", 
    RowBox[{"angle_", ",", "list_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"matrix", ",", "a"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"OptionValue", "[", "\"\<units\>\"", "]"}], "\[Equal]", 
          "\"\<grad\>\""}], ",", 
         RowBox[{
          RowBox[{"Pi", "/", "180."}], " ", "*", "angle"}], ",", "angle"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"matrix", "=", 
       RowBox[{"(", GridBox[{
          {
           RowBox[{"Cos", "[", "a", "]"}], 
           RowBox[{"-", 
            RowBox[{"Sin", "[", "a", "]"}]}], "0"},
          {
           RowBox[{"Sin", "[", "a", "]"}], 
           RowBox[{"Cos", "[", "a", "]"}], "0"},
          {"0", "0", "1"}
         }], ")"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", ".", "matrix"}], "&"}], ",", "list"}], "]"}]}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  RowBox[{"(*", 
   RowBox[{
   "This", " ", "function", " ", "roatates", " ", "a", " ", "list", " ", "of",
     " ", "coordinates", " ", "around", " ", "axis", " ", 
    RowBox[{"Z", "."}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "InverseRotationZ", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"\"\<units\>\"", "\[Rule]", " ", "\"\<grad\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"InverseRotationZ", "[", 
    RowBox[{"angle_", ",", "list_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"matrix", ",", "a"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"OptionValue", "[", "\"\<units\>\"", "]"}], "\[Equal]", 
          "\"\<grad\>\""}], ",", 
         RowBox[{
          RowBox[{"Pi", "/", "180."}], " ", "*", "angle"}], ",", "angle"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"matrix", "=", 
       RowBox[{"(", GridBox[{
          {
           RowBox[{"Cos", "[", "a", "]"}], 
           RowBox[{"Sin", "[", "a", "]"}], "0"},
          {
           RowBox[{"-", 
            RowBox[{"Sin", "[", "a", "]"}]}], 
           RowBox[{"Cos", "[", "a", "]"}], "0"},
          {"0", "0", "1"}
         }], ")"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", ".", "matrix"}], "&"}], ",", "list"}], "]"}]}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  RowBox[{"(*", 
   RowBox[{
   "This", " ", "function", " ", "roatates", " ", "a", " ", "list", " ", "of",
     " ", "coordinates", " ", "around", " ", "axis", " ", "Z", " ", "in", " ",
     "the", " ", "opposite", " ", "sense", " ", "compared", " ", "with", " ", 
    RowBox[{"RotationZ", "."}]}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "RotationAxis", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"\"\<units\>\"", "\[Rule]", " ", "\"\<grad\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RotationAxis", "[", 
    RowBox[{"angle_", ",", "direction_", ",", "list_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"matrix", ",", "a", ",", "ux", ",", "uy", ",", "uz"}], "}"}], 
     ",", 
     RowBox[{"(*", 
      RowBox[{"direction", " ", "\[Rule]", " ", 
       RowBox[{
       "direction", " ", "vector", " ", "around", " ", "which", " ", 
        "rotation", " ", "is", " ", 
        RowBox[{"performed", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"OptionValue", "[", "\"\<units\>\"", "]"}], "\[Equal]", 
          "\"\<grad\>\""}], ",", 
         RowBox[{
          RowBox[{"Pi", "/", "180."}], " ", "*", "angle"}], ",", "angle"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"ux", ",", "uy", ",", "uz"}], "}"}], "=", 
       RowBox[{"direction", "/", 
        RowBox[{"Norm", "[", "direction", "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"matrix", "=", 
       RowBox[{"(", GridBox[{
          {
           RowBox[{
            RowBox[{"Cos", "[", "a", "]"}], "+", 
            RowBox[{
             RowBox[{"ux", "^", "2"}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"Cos", "[", "a", "]"}]}], ")"}]}]}], 
           RowBox[{
            RowBox[{"ux", " ", "uy", " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"Cos", "[", "a", "]"}]}], ")"}]}], "-", 
            RowBox[{"uz", " ", 
             RowBox[{"Sin", "[", "a", "]"}]}]}], 
           RowBox[{
            RowBox[{"ux", " ", "uz", " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"Cos", "[", "a", "]"}]}], ")"}]}], "+", 
            RowBox[{"uy", " ", 
             RowBox[{"Sin", "[", "a", "]"}]}]}]},
          {
           RowBox[{
            RowBox[{"uy", " ", "ux", " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"Cos", "[", "a", "]"}]}], ")"}]}], "+", 
            RowBox[{"uz", " ", 
             RowBox[{"Sin", "[", "a", "]"}]}]}], 
           RowBox[{
            RowBox[{"Cos", "[", "a", "]"}], "+", 
            RowBox[{
             RowBox[{"uy", "^", "2"}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"Cos", "[", "a", "]"}]}], ")"}]}]}], 
           RowBox[{
            RowBox[{"uy", " ", "uz", " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"Cos", "[", "a", "]"}]}], ")"}]}], "-", 
            RowBox[{"ux", " ", 
             RowBox[{"Sin", "[", "a", "]"}]}]}]},
          {
           RowBox[{
            RowBox[{"uz", " ", "ux", " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"Cos", "[", "a", "]"}]}], ")"}]}], "-", 
            RowBox[{"uy", " ", 
             RowBox[{"Sin", "[", "a", "]"}]}]}], 
           RowBox[{
            RowBox[{"uz", " ", "uy", " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"Cos", "[", "a", "]"}]}], ")"}]}], "+", 
            RowBox[{"ux", " ", 
             RowBox[{"Sin", "[", "a", "]"}]}]}], 
           RowBox[{
            RowBox[{"Cos", "[", "a", "]"}], "+", 
            RowBox[{
             RowBox[{"uz", "^", "2"}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"Cos", "[", "a", "]"}]}], ")"}]}]}]}
         }], ")"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", ".", "matrix"}], "&"}], ",", "list"}], "]"}]}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
     "This", " ", "function", " ", "rotates", " ", "a", " ", "list", " ", 
      "of", " ", "coordinates", " ", "around", " ", "an", " ", "arbitrary", 
      " ", "axis", " ", "defned", " ", "by", " ", "the", " ", "direction", 
      " ", "vector", " ", "direction"}], " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"ux", ",", " ", "uy", ",", " ", "uz"}], "}"}]}], ",", " ", 
    RowBox[{
    "in", " ", "the", " ", "opposite", " ", "sense", " ", "compared", " ", 
     "with", " ", 
     RowBox[{"RotationAxis", "."}]}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "InverseRotationAxis", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"\"\<units\>\"", "\[Rule]", " ", "\"\<grad\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"InverseRotationAxis", "[", 
    RowBox[{"angle_", ",", "direction_", ",", "list_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"matrix", ",", "a", ",", "ux", ",", "uy", ",", "uz"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"OptionValue", "[", "\"\<units\>\"", "]"}], "\[Equal]", 
          "\"\<grad\>\""}], ",", 
         RowBox[{
          RowBox[{"Pi", "/", "180."}], " ", "*", "angle"}], ",", "angle"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"matrix", "=", 
       RowBox[{"(", GridBox[{
          {
           RowBox[{
            RowBox[{"Cos", "[", "a", "]"}], "+", 
            RowBox[{
             RowBox[{"ux", "^", "2"}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"Cos", "[", "a", "]"}]}], ")"}]}]}], 
           RowBox[{
            RowBox[{"ux", " ", "uy", " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"Cos", "[", "a", "]"}]}], ")"}]}], "+", 
            RowBox[{"uz", " ", 
             RowBox[{"Sin", "[", "a", "]"}]}]}], 
           RowBox[{
            RowBox[{"ux", " ", "uz", " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"Cos", "[", "a", "]"}]}], ")"}]}], "-", 
            RowBox[{"uy", " ", 
             RowBox[{"Sin", "[", "a", "]"}]}]}]},
          {
           RowBox[{
            RowBox[{"uy", " ", "ux", " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"Cos", "[", "a", "]"}]}], ")"}]}], "-", 
            RowBox[{"uz", " ", 
             RowBox[{"Sin", "[", "a", "]"}]}]}], 
           RowBox[{
            RowBox[{"Cos", "[", "a", "]"}], "+", 
            RowBox[{
             RowBox[{"uy", "^", "2"}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"Cos", "[", "a", "]"}]}], ")"}]}]}], 
           RowBox[{
            RowBox[{"uy", " ", "uz", " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"Cos", "[", "a", "]"}]}], ")"}]}], "+", 
            RowBox[{"ux", " ", 
             RowBox[{"Sin", "[", "a", "]"}]}]}]},
          {
           RowBox[{
            RowBox[{"uz", " ", "ux", " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"Cos", "[", "a", "]"}]}], ")"}]}], "+", 
            RowBox[{"uy", " ", 
             RowBox[{"Sin", "[", "a", "]"}]}]}], 
           RowBox[{
            RowBox[{"uz", " ", "uy", " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"Cos", "[", "a", "]"}]}], ")"}]}], "-", 
            RowBox[{"ux", " ", 
             RowBox[{"Sin", "[", "a", "]"}]}]}], 
           RowBox[{
            RowBox[{"Cos", "[", "a", "]"}], "+", 
            RowBox[{
             RowBox[{"uz", "^", "2"}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"Cos", "[", "a", "]"}]}], ")"}]}]}]}
         }], ")"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", ".", "matrix"}], "&"}], ",", "list"}], "]"}]}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "This", " ", "function", " ", "rotates", " ", "a", " ", "list", " ", "of",
      " ", "coordinates", " ", "around", " ", "an", " ", "arbitrary", " ", 
     "axis", " ", "defned", " ", "by", " ", "the", " ", "direction", " ", 
     "vector", " ", "direction"}], " ", "=", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ux", ",", " ", "uy", ",", " ", "uz"}], "}"}], "."}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Improper", " ", "Rotations"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "ReflectionX", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"\"\<units\>\"", "\[Rule]", " ", "\"\<grad\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ReflectionX", "[", 
   RowBox[{"angle_", ",", "list_", ",", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"matrix", ",", "a"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"a", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"OptionValue", "[", "\"\<units\>\"", "]"}], "\[Equal]", 
         "\"\<grad\>\""}], ",", 
        RowBox[{
         RowBox[{"Pi", "/", "180."}], " ", "*", "angle"}], ",", "angle"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"matrix", "=", 
      RowBox[{"(", GridBox[{
         {"1", "0", "0"},
         {"0", 
          RowBox[{"Cos", "[", "a", "]"}], 
          RowBox[{"Sin", "[", "a", "]"}]},
         {"0", 
          RowBox[{"Sin", "[", "a", "]"}], 
          RowBox[{"-", 
           RowBox[{"Cos", "[", "a", "]"}]}]}
        }], ")"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"#", ".", "matrix"}], "&"}], ",", "list"}], "]"}]}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "ReflectionY", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"\"\<units\>\"", "\[Rule]", " ", "\"\<grad\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ReflectionY", "[", 
   RowBox[{"angle_", ",", "list_", ",", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"matrix", ",", "a"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"a", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"OptionValue", "[", "\"\<units\>\"", "]"}], "\[Equal]", 
         "\"\<grad\>\""}], ",", 
        RowBox[{
         RowBox[{"Pi", "/", "180."}], " ", "*", "angle"}], ",", "angle"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"matrix", "=", 
      RowBox[{"(", GridBox[{
         {
          RowBox[{"Cos", "[", "a", "]"}], "0", 
          RowBox[{"Sin", "[", "a", "]"}]},
         {"0", "1", "0"},
         {
          RowBox[{"Sin", "[", "a", "]"}], "0", 
          RowBox[{"-", 
           RowBox[{"Cos", "[", "a", "]"}]}]}
        }], ")"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"#", ".", "matrix"}], "&"}], ",", "list"}], "]"}]}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "ReflectionZ", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"\"\<units\>\"", "\[Rule]", " ", "\"\<grad\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ReflectionZ", "[", 
    RowBox[{"angle_", ",", "list_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"matrix", ",", "a"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"OptionValue", "[", "\"\<units\>\"", "]"}], "\[Equal]", 
          "\"\<grad\>\""}], ",", 
         RowBox[{
          RowBox[{"Pi", "/", "180."}], " ", "*", "angle"}], ",", "angle"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"matrix", "=", 
       RowBox[{"(", GridBox[{
          {
           RowBox[{"Cos", "[", "a", "]"}], 
           RowBox[{"Sin", "[", "a", "]"}], "0"},
          {
           RowBox[{"Sin", "[", "a", "]"}], 
           RowBox[{"-", 
            RowBox[{"Cos", "[", "a", "]"}]}], "0"},
          {"0", "0", "1"}
         }], ")"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", ".", "matrix"}], "&"}], ",", "list"}], "]"}]}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"ReflexionAxis", "..."}], "will", " ", "be", " ", "finished", 
      " ", "in", " ", "the", " ", "next", " ", 
      RowBox[{"versions", "."}]}], "*)"}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{"Geometric", " ", "Propagation", " ", "Operators"}], " ", "*)"}],
   FontSize->18], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"If", " ", "4", "th", " ", "param", " ", "is", " ", "present"}], 
    ",", " ", 
    RowBox[{"represent", " ", "wavelength", " ", "in", " ", "\[Mu]m"}], ",", 
    " ", 
    RowBox[{
    "in", " ", "not", " ", "present", " ", "the", " ", "wavelength", " ", 
     "is", " ", "that", " ", "defined", " ", "at", " ", "the", " ", 
     RowBox[{"beginning", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "The", " ", "interpolation", " ", "order", " ", "is", " ", "restricted", 
     " ", "to", " ", "1", " ", "for", " ", "hexagonal", " ", "or", " ", 
     "other", " ", "non"}], "-", 
    RowBox[{"uniform", " ", 
     RowBox[{"grids", "."}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "GeometricOperator", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<InterpolationOrder\>\"", "\[Rule]", " ", "6"}], ",", 
      RowBox[{"\"\<uniformGrid\>\"", "\[Rule]", " ", "False"}], ",", 
      RowBox[{"\"\<curvatureRadius\>\"", "\[Rule]", "0"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"\"\<InterpolationOrder\>\"", " ", "\[Rule]", " ", 
    RowBox[{
    "the", " ", "interpolation", " ", "order", " ", "of", " ", "the", " ", 
     "interpolation", " ", "functions", " ", "for", " ", "optical", " ", 
     "path", " ", "length", " ", "and"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GeometricOperator", "[", 
     RowBox[{"rayCS_List", ",", "rayCE_List", ",", "rayOL_List", ",", 
      RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], "[", "f_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "interpolationOrder", ",", "rayCoordinateStart", ",", 
       "rayCoordinateEnd", ",", "opticalLength", ",", "opticalLengthMean", 
       ",", "mesh", ",", "meshE", ",", "area", ",", "areaE", ",", "index", 
       ",", "indexE", ",", "sqRD", ",", "sqRDEnd", ",", "X", ",", "Y", ",", 
       "S", ",", "x", ",", "y", ",", "cR", ",", "return"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"interpolationOrder", "=", 
       RowBox[{"OptionValue", "[", "\"\<InterpolationOrder\>\"", "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"OptionValue", "[", "\"\<uniformGrid\>\"", "]"}], "\[Equal]",
          "False"}], ",", 
        RowBox[{"interpolationOrder", "=", "1"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"cR", "=", 
       RowBox[{"OptionValue", "[", "\"\<curvatureRadius\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"rayCoordinateStart", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", 
            RowBox[{"{", 
             RowBox[{"1", ",", "2"}], "}"}], "]"}], "]"}], "&"}], ",", 
         "rayCS"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"rayCoordinateEnd", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", 
            RowBox[{"{", 
             RowBox[{"1", ",", "2"}], "}"}], "]"}], "]"}], "&"}], ",", 
         "rayCE"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"opticalLengthMean", "=", 
       RowBox[{"Mean", "[", "opticalLength", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"mesh", "=", 
       RowBox[{"VoronoiMesh", "[", "rayCoordinateStart", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"area", "=", 
       RowBox[{"PropertyValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"mesh", ",", "2"}], "}"}], ",", "MeshCellMeasure"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"index", "=", 
       RowBox[{"Flatten", "@", 
        RowBox[{
         RowBox[{"Nearest", "[", 
          RowBox[{"rayCoordinateStart", "\[Rule]", "Automatic"}], "]"}], "@", 
         RowBox[{"PropertyValue", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"mesh", ",", "2"}], "}"}], ",", "MeshCellCentroid"}], 
          "]"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"rayCoordinateStart", "=", 
       RowBox[{"rayCoordinateStart", "[", 
        RowBox[{"[", "index", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"sqRD", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
             RowBox[{"Sqrt", "[", 
              RowBox[{"1", "/", 
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "}"}], "&"}], "/@", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{"rayCoordinateStart", ",", "area"}], "}"}], "]"}]}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "1"}], ",", 
         RowBox[{"\"\<ExtrapolationHandler\>\"", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "&"}], ",", 
            RowBox[{"\"\<WarningMessage\>\"", "\[Rule]", "False"}]}], 
           "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"meshE", "=", 
       RowBox[{"VoronoiMesh", "[", "rayCoordinateEnd", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"areaE", "=", 
       RowBox[{"PropertyValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"meshE", ",", "2"}], "}"}], ",", "MeshCellMeasure"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"indexE", "=", 
       RowBox[{"Flatten", "@", 
        RowBox[{
         RowBox[{"Nearest", "[", 
          RowBox[{"rayCoordinateEnd", "\[Rule]", "Automatic"}], "]"}], "@", 
         RowBox[{"PropertyValue", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"meshE", ",", "2"}], "}"}], ",", "MeshCellCentroid"}], 
          "]"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"sqRDEnd", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
             RowBox[{"Sqrt", "[", 
              RowBox[{"1", "/", 
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "}"}], "&"}], "/@", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"rayCoordinateEnd", "[", 
              RowBox[{"[", "indexE", "]"}], "]"}], ",", "areaE"}], "}"}], 
           "]"}]}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "1"}], ",", 
         RowBox[{"\"\<ExtrapolationHandler\>\"", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"0", "&"}], ",", 
            RowBox[{"\"\<WarningMessage\>\"", "\[Rule]", "False"}]}], 
           "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"rayCoordinateEnd", "=", 
       RowBox[{"rayCoordinateEnd", "[", 
        RowBox[{"[", "index", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"opticalLength", "=", 
       RowBox[{"rayOL", "[", 
        RowBox[{"[", "index", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"X", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "2"}], "]"}], "]"}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "}"}], "&"}], ",", 
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{"rayCoordinateStart", ",", "rayCoordinateEnd"}], "}"}], 
            "]"}]}], "]"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "1"}], ",", 
         RowBox[{"\"\<ExtrapolationHandler\>\"", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"#1", "&"}], ",", 
            RowBox[{"\"\<WarningMessage\>\"", "\[Rule]", "False"}]}], 
           "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Y", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "2"}], "]"}], "]"}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "}"}], "&"}], ",", 
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{"rayCoordinateStart", ",", "rayCoordinateEnd"}], "}"}], 
            "]"}]}], "]"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "1"}], ",", 
         RowBox[{"\"\<ExtrapolationHandler\>\"", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"#2", "&"}], ",", 
            RowBox[{"\"\<WarningMessage\>\"", "\[Rule]", "False"}]}], 
           "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"cR", "\[Equal]", "0"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"S", ":=", 
          RowBox[{"Interpolation", "[", 
           RowBox[{
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "2"}], "]"}], "]"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "&"}], ",", 
              RowBox[{"Transpose", "[", 
               RowBox[{"{", 
                RowBox[{"opticalLength", ",", "rayCoordinateStart"}], "}"}], 
               "]"}]}], "]"}], ",", 
            RowBox[{"InterpolationOrder", "\[Rule]", "interpolationOrder"}], 
            ",", 
            RowBox[{"\"\<ExtrapolationHandler\>\"", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"opticalLengthMean", "&"}], ",", 
               RowBox[{"\"\<WarningMessage\>\"", "\[Rule]", "True"}]}], 
              "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"return", "[", 
           RowBox[{"x_", ",", "y_"}], "]"}], "=", 
          RowBox[{
           RowBox[{"f", "[", 
            RowBox[{
             RowBox[{"X", "[", 
              RowBox[{"x", ",", "y"}], "]"}], ",", 
             RowBox[{"Y", "[", 
              RowBox[{"x", ",", "y"}], "]"}]}], "]"}], "*", 
           RowBox[{"Exp", "[", 
            RowBox[{"\[ImaginaryI]", " ", "k0", " ", 
             RowBox[{"(", " ", 
              RowBox[{"S", "[", 
               RowBox[{
                RowBox[{"X", "[", 
                 RowBox[{"x", ",", "y"}], "]"}], ",", 
                RowBox[{"Y", "[", 
                 RowBox[{"x", ",", "y"}], "]"}]}], "]"}], " ", ")"}]}], "]"}],
            "*", 
           RowBox[{
            RowBox[{"sqRDEnd", "[", 
             RowBox[{"x", ",", "y"}], "]"}], "/", 
            RowBox[{"sqRD", "[", 
             RowBox[{
              RowBox[{"X", "[", 
               RowBox[{"x", ",", "y"}], "]"}], ",", 
              RowBox[{"Y", "[", 
               RowBox[{"x", ",", "y"}], "]"}]}], "]"}]}]}]}], ";"}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"S", ":=", 
          RowBox[{"Interpolation", "[", 
           RowBox[{
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "2"}], "]"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "+", 
                  SqrtBox[
                   RowBox[{
                    RowBox[{"cR", "^", "2"}], "+", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}], "^", "2"}], "+", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "2"}], "]"}], "]"}], "^", "2"}]}], 
                    ")"}]}]]}]}], "}"}], "&"}], ",", 
              RowBox[{"Transpose", "[", 
               RowBox[{"{", 
                RowBox[{"opticalLength", ",", "rayCoordinateStart"}], "}"}], 
               "]"}]}], "]"}], ",", 
            RowBox[{"InterpolationOrder", "\[Rule]", "interpolationOrder"}], 
            ",", 
            RowBox[{"\"\<ExtrapolationHandler\>\"", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"opticalLengthMean", "&"}], ",", 
               RowBox[{"\"\<WarningMessage\>\"", "\[Rule]", "True"}]}], 
              "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"return", "[", 
           RowBox[{"x_", ",", "y_"}], "]"}], "=", 
          RowBox[{
           RowBox[{"f", "[", 
            RowBox[{
             RowBox[{"X", "[", 
              RowBox[{"x", ",", "y"}], "]"}], ",", 
             RowBox[{"Y", "[", 
              RowBox[{"x", ",", "y"}], "]"}]}], "]"}], "*", 
           RowBox[{"Exp", "[", 
            RowBox[{"\[ImaginaryI]", " ", "k0", 
             RowBox[{"(", " ", 
              RowBox[{
               RowBox[{"S", "[", 
                RowBox[{
                 RowBox[{"X", "[", 
                  RowBox[{"x", ",", "y"}], "]"}], ",", 
                 RowBox[{"Y", "[", 
                  RowBox[{"x", ",", "y"}], "]"}]}], "]"}], "-", 
               SqrtBox[
                RowBox[{
                 RowBox[{"cR", "^", "2"}], "+", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"X", "[", 
                    RowBox[{"x", ",", "y"}], "]"}], "^", "2"}], "+", 
                   RowBox[{
                    RowBox[{"Y", "[", 
                    RowBox[{"x", ",", "y"}], "]"}], "^", "2"}]}], ")"}]}]]}], 
              ")"}]}], "]"}], "*", 
           RowBox[{
            RowBox[{"sqRDEnd", "[", 
             RowBox[{"x", ",", "y"}], "]"}], "/", 
            RowBox[{"sqRD", "[", 
             RowBox[{
              RowBox[{"X", "[", 
               RowBox[{"x", ",", "y"}], "]"}], ",", 
              RowBox[{"Y", "[", 
               RowBox[{"x", ",", "y"}], "]"}]}], "]"}]}]}]}], ";"}]}], " ", 
       "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", "return"}]}],
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GeometricOperator", "[", 
     RowBox[{
     "rayCS_List", ",", "rayCE_List", ",", "rayOL_List", ",", "waveLength_", 
      ",", 
      RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], "[", "f_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "interpolationOrder", ",", "rayCoordinateStart", ",", 
       "rayCoordinateEnd", ",", "opticalLength", ",", "opticalLengthMean", 
       ",", "mesh", ",", "meshE", ",", "area", ",", "areaE", ",", "index", 
       ",", "indexE", ",", "sqRD", ",", "sqRDEnd", ",", "X", ",", "Y", ",", 
       "S", ",", "x", ",", "y", ",", "cR", ",", "return", ",", "k0Local"}], 
      "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"interpolationOrder", "=", 
       RowBox[{"OptionValue", "[", "\"\<InterpolationOrder\>\"", "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"OptionValue", "[", "\"\<uniformGrid\>\"", "]"}], "\[Equal]",
          "False"}], ",", 
        RowBox[{"interpolationOrder", "=", "1"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"cR", "=", 
       RowBox[{"OptionValue", "[", "\"\<curvatureRadius\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"rayCoordinateStart", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", 
            RowBox[{"{", 
             RowBox[{"1", ",", "2"}], "}"}], "]"}], "]"}], "&"}], ",", 
         "rayCS"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"rayCoordinateEnd", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", 
            RowBox[{"{", 
             RowBox[{"1", ",", "2"}], "}"}], "]"}], "]"}], "&"}], ",", 
         "rayCE"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"opticalLengthMean", "=", 
       RowBox[{"Mean", "[", "opticalLength", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"mesh", "=", 
       RowBox[{"VoronoiMesh", "[", "rayCoordinateStart", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"area", "=", 
       RowBox[{"PropertyValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"mesh", ",", "2"}], "}"}], ",", "MeshCellMeasure"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"index", "=", 
       RowBox[{"Flatten", "@", 
        RowBox[{
         RowBox[{"Nearest", "[", 
          RowBox[{"rayCoordinateStart", "\[Rule]", "Automatic"}], "]"}], "@", 
         RowBox[{"PropertyValue", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"mesh", ",", "2"}], "}"}], ",", "MeshCellCentroid"}], 
          "]"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"k0Local", "=", 
       RowBox[{"2", " ", 
        RowBox[{"\[Pi]", "/", "waveLength"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"rayCoordinateStart", "=", 
       RowBox[{"rayCoordinateStart", "[", 
        RowBox[{"[", "index", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"sqRD", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
             RowBox[{"Sqrt", "[", 
              RowBox[{"1", "/", 
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "}"}], "&"}], "/@", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{"rayCoordinateStart", ",", "area"}], "}"}], "]"}]}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "1"}], ",", 
         RowBox[{"\"\<ExtrapolationHandler\>\"", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "&"}], ",", 
            RowBox[{"\"\<WarningMessage\>\"", "\[Rule]", "False"}]}], 
           "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"meshE", "=", 
       RowBox[{"VoronoiMesh", "[", "rayCoordinateEnd", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"areaE", "=", 
       RowBox[{"PropertyValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"meshE", ",", "2"}], "}"}], ",", "MeshCellMeasure"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"indexE", "=", 
       RowBox[{"Flatten", "@", 
        RowBox[{
         RowBox[{"Nearest", "[", 
          RowBox[{"rayCoordinateEnd", "\[Rule]", "Automatic"}], "]"}], "@", 
         RowBox[{"PropertyValue", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"meshE", ",", "2"}], "}"}], ",", "MeshCellCentroid"}], 
          "]"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"sqRDEnd", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
             RowBox[{"Sqrt", "[", 
              RowBox[{"1", "/", 
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "}"}], "&"}], "/@", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"rayCoordinateEnd", "[", 
              RowBox[{"[", "indexE", "]"}], "]"}], ",", "areaE"}], "}"}], 
           "]"}]}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "1"}], ",", 
         RowBox[{"\"\<ExtrapolationHandler\>\"", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"0", "&"}], ",", 
            RowBox[{"\"\<WarningMessage\>\"", "\[Rule]", "False"}]}], 
           "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"rayCoordinateEnd", "=", 
       RowBox[{"rayCoordinateEnd", "[", 
        RowBox[{"[", "index", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"opticalLength", "=", 
       RowBox[{"rayOL", "[", 
        RowBox[{"[", "index", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"X", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "2"}], "]"}], "]"}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "}"}], "&"}], ",", 
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{"rayCoordinateStart", ",", "rayCoordinateEnd"}], "}"}], 
            "]"}]}], "]"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "1"}], ",", 
         RowBox[{"\"\<ExtrapolationHandler\>\"", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"#1", "&"}], ",", 
            RowBox[{"\"\<WarningMessage\>\"", "\[Rule]", "False"}]}], 
           "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Y", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "2"}], "]"}], "]"}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "}"}], "&"}], ",", 
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{"rayCoordinateStart", ",", "rayCoordinateEnd"}], "}"}], 
            "]"}]}], "]"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "1"}], ",", 
         RowBox[{"\"\<ExtrapolationHandler\>\"", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"#2", "&"}], ",", 
            RowBox[{"\"\<WarningMessage\>\"", "\[Rule]", "False"}]}], 
           "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"cR", "\[Equal]", "0"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"S", ":=", 
          RowBox[{"Interpolation", "[", 
           RowBox[{
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "2"}], "]"}], "]"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "&"}], ",", 
              RowBox[{"Transpose", "[", 
               RowBox[{"{", 
                RowBox[{"opticalLength", ",", "rayCoordinateStart"}], "}"}], 
               "]"}]}], "]"}], ",", 
            RowBox[{"InterpolationOrder", "\[Rule]", "interpolationOrder"}], 
            ",", 
            RowBox[{"\"\<ExtrapolationHandler\>\"", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"opticalLengthMean", "&"}], ",", 
               RowBox[{"\"\<WarningMessage\>\"", "\[Rule]", "True"}]}], 
              "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"return", "[", 
           RowBox[{"x_", ",", "y_"}], "]"}], "=", 
          RowBox[{
           RowBox[{"f", "[", 
            RowBox[{
             RowBox[{"X", "[", 
              RowBox[{"x", ",", "y"}], "]"}], ",", 
             RowBox[{"Y", "[", 
              RowBox[{"x", ",", "y"}], "]"}]}], "]"}], "*", 
           RowBox[{"Exp", "[", 
            RowBox[{"\[ImaginaryI]", " ", "k0Local", 
             RowBox[{"(", " ", 
              RowBox[{"S", "[", 
               RowBox[{
                RowBox[{"X", "[", 
                 RowBox[{"x", ",", "y"}], "]"}], ",", 
                RowBox[{"Y", "[", 
                 RowBox[{"x", ",", "y"}], "]"}]}], "]"}], " ", ")"}]}], "]"}],
            "*", 
           RowBox[{
            RowBox[{"sqRDEnd", "[", 
             RowBox[{"x", ",", "y"}], "]"}], "/", 
            RowBox[{"sqRD", "[", 
             RowBox[{
              RowBox[{"X", "[", 
               RowBox[{"x", ",", "y"}], "]"}], ",", 
              RowBox[{"Y", "[", 
               RowBox[{"x", ",", "y"}], "]"}]}], "]"}]}]}]}], ";"}], ",", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
           RowBox[{"REPAIRED", " ", "!!"}], "!!"}], "!!"}], "*)"}], 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"S", ":=", 
          RowBox[{"Interpolation", "[", 
           RowBox[{
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "2"}], "]"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "+", 
                  SqrtBox[
                   RowBox[{
                    RowBox[{"cR", "^", "2"}], "+", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}], "^", "2"}], "+", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "2"}], "]"}], "]"}], "^", "2"}]}], 
                    ")"}]}]]}]}], "}"}], "&"}], ",", 
              RowBox[{"Transpose", "[", 
               RowBox[{"{", 
                RowBox[{"opticalLength", ",", "rayCoordinateStart"}], "}"}], 
               "]"}]}], "]"}], ",", 
            RowBox[{"InterpolationOrder", "\[Rule]", "interpolationOrder"}], 
            ",", 
            RowBox[{"\"\<ExtrapolationHandler\>\"", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"opticalLengthMean", "&"}], ",", 
               RowBox[{"\"\<WarningMessage\>\"", "\[Rule]", "True"}]}], 
              "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"return", "[", 
           RowBox[{"x_", ",", "y_"}], "]"}], "=", 
          RowBox[{
           RowBox[{"f", "[", 
            RowBox[{
             RowBox[{"X", "[", 
              RowBox[{"x", ",", "y"}], "]"}], ",", 
             RowBox[{"Y", "[", 
              RowBox[{"x", ",", "y"}], "]"}]}], "]"}], "*", 
           RowBox[{"Exp", "[", 
            RowBox[{"\[ImaginaryI]", " ", "k0Local", 
             RowBox[{"(", " ", 
              RowBox[{
               RowBox[{"S", "[", 
                RowBox[{
                 RowBox[{"X", "[", 
                  RowBox[{"x", ",", "y"}], "]"}], ",", 
                 RowBox[{"Y", "[", 
                  RowBox[{"x", ",", "y"}], "]"}]}], "]"}], "-", 
               SqrtBox[
                RowBox[{
                 RowBox[{"cR", "^", "2"}], "+", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"X", "[", 
                    RowBox[{"x", ",", "y"}], "]"}], "^", "2"}], "+", 
                   RowBox[{
                    RowBox[{"Y", "[", 
                    RowBox[{"x", ",", "y"}], "]"}], "^", "2"}]}], ")"}]}]]}], 
              ")"}]}], "]"}], "*", 
           RowBox[{
            RowBox[{"sqRDEnd", "[", 
             RowBox[{"x", ",", "y"}], "]"}], "/", 
            RowBox[{"sqRD", "[", 
             RowBox[{
              RowBox[{"X", "[", 
               RowBox[{"x", ",", "y"}], "]"}], ",", 
              RowBox[{"Y", "[", 
               RowBox[{"x", ",", "y"}], "]"}]}], "]"}]}]}]}], ";"}]}], " ", 
       "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", "return"}]}],
     "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "This", " ", "propagation", " ", "operator", " ", "does", " ", "not", " ", 
    "carry", " ", "the", " ", "phase", " ", "difference", " ", 
    RowBox[{"accumumlated", ".", " ", "It"}], " ", "is", " ", "useful", " ", 
    "for", " ", "propagation", " ", "to", " ", "the", " ", "focal", " ", 
    "plane", " ", "together", " ", "with", " ", 
    RowBox[{"scalarRSFOperator", "."}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "AmplitudeGeometricOperator", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<InterpolationOrder\>\"", "\[Rule]", " ", "6"}], ",", 
     RowBox[{"\"\<uniformGrid\>\"", "\[Rule]", " ", "False"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"AmplitudeGeometricOperator", "[", 
     RowBox[{"rayCS_List", ",", "rayCE_List", ",", 
      RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], "[", "f_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "interpolationOrder", ",", "rayCoordinateStart", ",", 
       "rayCoordinateEnd", ",", "mesh", ",", "meshE", ",", "area", ",", 
       "areaE", ",", "index", ",", "indexE", ",", "sqRD", ",", "sqRDEnd", ",",
        "X", ",", "Y", ",", "S", ",", "x", ",", "y", ",", "return"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"interpolationOrder", "=", 
       RowBox[{"OptionValue", "[", "\"\<InterpolationOrder\>\"", "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"OptionValue", "[", "\"\<uniformGrid\>\"", "]"}], "\[Equal]",
          "False"}], ",", 
        RowBox[{"interpolationOrder", "=", "1"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"rayCoordinateStart", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", 
            RowBox[{"{", 
             RowBox[{"1", ",", "2"}], "}"}], "]"}], "]"}], "&"}], ",", 
         "rayCS"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"rayCoordinateEnd", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", 
            RowBox[{"{", 
             RowBox[{"1", ",", "2"}], "}"}], "]"}], "]"}], "&"}], ",", 
         "rayCE"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"mesh", "=", 
       RowBox[{"VoronoiMesh", "[", "rayCoordinateStart", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"area", "=", 
       RowBox[{"PropertyValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"mesh", ",", "2"}], "}"}], ",", "MeshCellMeasure"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"index", "=", 
       RowBox[{"Flatten", "@", 
        RowBox[{
         RowBox[{"Nearest", "[", 
          RowBox[{"rayCoordinateStart", "\[Rule]", "Automatic"}], "]"}], "@", 
         RowBox[{"PropertyValue", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"mesh", ",", "2"}], "}"}], ",", "MeshCellCentroid"}], 
          "]"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"rayCoordinateStart", "=", 
       RowBox[{"rayCoordinateStart", "[", 
        RowBox[{"[", "index", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"sqRD", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
             RowBox[{"Sqrt", "[", 
              RowBox[{"1", "/", 
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "}"}], "&"}], "/@", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{"rayCoordinateStart", ",", "area"}], "}"}], "]"}]}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "1"}], ",", 
         RowBox[{"\"\<ExtrapolationHandler\>\"", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "&"}], ",", 
            RowBox[{"\"\<WarningMessage\>\"", "\[Rule]", "False"}]}], 
           "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"meshE", "=", 
       RowBox[{"VoronoiMesh", "[", "rayCoordinateEnd", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"areaE", "=", 
       RowBox[{"PropertyValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"meshE", ",", "2"}], "}"}], ",", "MeshCellMeasure"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"indexE", "=", 
       RowBox[{"Flatten", "@", 
        RowBox[{
         RowBox[{"Nearest", "[", 
          RowBox[{"rayCoordinateEnd", "\[Rule]", "Automatic"}], "]"}], "@", 
         RowBox[{"PropertyValue", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"meshE", ",", "2"}], "}"}], ",", "MeshCellCentroid"}], 
          "]"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"sqRDEnd", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
             RowBox[{"Sqrt", "[", 
              RowBox[{"1", "/", 
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "}"}], "&"}], "/@", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"rayCoordinateEnd", "[", 
              RowBox[{"[", "indexE", "]"}], "]"}], ",", "areaE"}], "}"}], 
           "]"}]}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "1"}], ",", 
         RowBox[{"\"\<ExtrapolationHandler\>\"", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"0", "&"}], ",", 
            RowBox[{"\"\<WarningMessage\>\"", "\[Rule]", "False"}]}], 
           "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"rayCoordinateEnd", "=", 
       RowBox[{"rayCoordinateEnd", "[", 
        RowBox[{"[", "index", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"X", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "2"}], "]"}], "]"}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "}"}], "&"}], ",", 
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{"rayCoordinateStart", ",", "rayCoordinateEnd"}], "}"}], 
            "]"}]}], "]"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "1"}], ",", 
         RowBox[{"\"\<ExtrapolationHandler\>\"", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"#1", "&"}], ",", 
            RowBox[{"\"\<WarningMessage\>\"", "\[Rule]", "False"}]}], 
           "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Y", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "2"}], "]"}], "]"}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "}"}], "&"}], ",", 
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{"rayCoordinateStart", ",", "rayCoordinateEnd"}], "}"}], 
            "]"}]}], "]"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "1"}], ",", 
         RowBox[{"\"\<ExtrapolationHandler\>\"", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"#2", "&"}], ",", 
            RowBox[{"\"\<WarningMessage\>\"", "\[Rule]", "False"}]}], 
           "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"return", "[", 
        RowBox[{"x_", ",", "y_"}], "]"}], "=", 
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{
          RowBox[{"X", "[", 
           RowBox[{"x", ",", "y"}], "]"}], ",", 
          RowBox[{"Y", "[", 
           RowBox[{"x", ",", "y"}], "]"}]}], "]"}], "*", 
        RowBox[{
         RowBox[{"sqRDEnd", "[", 
          RowBox[{"x", ",", "y"}], "]"}], "/", 
         RowBox[{"sqRD", "[", 
          RowBox[{
           RowBox[{"X", "[", 
            RowBox[{"x", ",", "y"}], "]"}], ",", 
           RowBox[{"Y", "[", 
            RowBox[{"x", ",", "y"}], "]"}]}], "]"}]}]}]}], ";", 
      "\[IndentingNewLine]", "return"}]}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Physical", " ", "Optics"}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "FresnelOperator", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<waveLength\>\"", "\[Rule]", " ", "waveLength"}], ",", 
     RowBox[{"\"\<padLevel\>\"", "\[Rule]", " ", "1"}], ",", 
     RowBox[{"\"\<refractiveIndexMedium\>\"", "\[Rule]", " ", "refIndexAir"}],
      ",", 
     RowBox[{"\"\<InterpolationOrder\>\"", "\[Rule]", " ", "3"}], ",", 
     RowBox[{"\"\<returnSamplingTest\>\"", "\[Rule]", " ", "False"}]}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FresnelOperator", "[", 
     RowBox[{"wFP_", ",", "nFP_", ",", "distP_", ",", 
      RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], "[", "f_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "lambda", ",", "padLevel", ",", "k0", ",", "interpolationOrder", ",", 
       "nFPpad", ",", "dkx", ",", "FP", ",", "f0T", ",", "fzT", ",", "x0", 
       ",", "y0", ",", "return"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"lambda", "=", 
       RowBox[{"OptionValue", "[", "\"\<waveLength\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"padLevel", "=", 
       RowBox[{"OptionValue", "[", "\"\<padLevel\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"k0", "=", 
       RowBox[{"2", " ", 
        RowBox[{"Pi", "/", "lambda"}], "*", 
        RowBox[{
        "OptionValue", "[", "\"\<refractiveIndexMedium\>\"", "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"interpolationOrder", "=", 
       RowBox[{"OptionValue", "[", "\"\<InterpolationOrder\>\"", "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"nFPpad", "=", 
       RowBox[{"nFP", "*", "padLevel"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"dkx", "=", 
       RowBox[{"Pi", "/", 
        RowBox[{"(", 
         RowBox[{"wFP", "*", "padLevel"}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"FP", "[", 
        RowBox[{"x0_", ",", "y0_"}], "]"}], "=", 
       RowBox[{"Exp", "[", 
        RowBox[{"\[ImaginaryI]", " ", "k0", "*", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"x0", "^", "2"}], "+", 
            RowBox[{"y0", "^", "2"}]}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{"2", " ", "distP"}], ")"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"OptionValue", "[", "\"\<returnSamplingTest\>\"", "]"}], 
         "\[Equal]", " ", "True"}], ",", 
        RowBox[{"Return", "[", 
         RowBox[{
          RowBox[{"ListLinePlot", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"N", "@", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Re", "[", "#", "]"}], "/", 
                  RowBox[{"Abs", "[", "#", "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"Im", "[", "#", "]"}], "/", 
                  RowBox[{"Abs", "[", "#", "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"Abs", "[", "#", "]"}], "/", 
                  RowBox[{"Max", "[", 
                   RowBox[{"Abs", "[", "#", "]"}], "]"}]}]}], "}"}]}], "&"}], 
             "@", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"f", "[", 
                 RowBox[{"x0", ",", "um"}], "]"}], "*", 
                RowBox[{"FP", "[", 
                 RowBox[{"x0", ",", "0"}], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"x0", ",", 
                 RowBox[{
                  RowBox[{"-", "wFP"}], "+", 
                  RowBox[{"2", " ", 
                   RowBox[{"wFP", "/", "nFP"}]}]}], ",", "wFP", ",", 
                 RowBox[{"2", " ", 
                  RowBox[{"wFP", "/", "nFP"}]}]}], "}"}]}], "]"}]}], ",", 
            RowBox[{"FrameLabel", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"\"\<\>\"", ",", "\"\<\>\""}], "}"}]}], ",", 
            RowBox[{"PlotMarkers", "\[Rule]", "\"\<\[Square]\>\""}], ",", 
            RowBox[{"ImageSize", "\[Rule]", " ", "6000"}], ",", 
            RowBox[{"AspectRatio", "\[Rule]", " ", 
             RowBox[{"1", "/", "20"}]}]}], "]"}], ",", "Module"}], "]"}]}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", "\n", 
      "\[IndentingNewLine]", 
      RowBox[{"f0T", ":=", 
       RowBox[{"RotateLeft", "[", 
        RowBox[{
         RowBox[{"ArrayPad", "[", 
          RowBox[{
           RowBox[{"N", "@", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"f", "[", 
                RowBox[{"x0", ",", "y0"}], "]"}], "*", 
               RowBox[{"FP", "[", 
                RowBox[{"x0", ",", "y0"}], "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"x0", ",", 
                RowBox[{
                 RowBox[{"-", "wFP"}], "+", 
                 RowBox[{"2", " ", 
                  RowBox[{"wFP", "/", "nFP"}]}]}], ",", "wFP", ",", 
                RowBox[{"2", " ", 
                 RowBox[{"wFP", "/", "nFP"}]}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"y0", ",", 
                RowBox[{
                 RowBox[{"-", "wFP"}], "+", 
                 RowBox[{"2", " ", 
                  RowBox[{"wFP", "/", "nFP"}]}]}], ",", "wFP", ",", 
                RowBox[{"2", " ", 
                 RowBox[{"wFP", "/", "nFP"}]}]}], "}"}]}], "]"}]}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"nFPpad", "-", "nFP"}], ")"}], "/", "2"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"nFPpad", "/", "2"}], "-", "1"}], ",", 
           RowBox[{
            RowBox[{"nFPpad", "/", "2"}], "-", "1"}]}], "}"}]}], "]"}]}], ";",
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"fzT", ":=", 
       RowBox[{
        RowBox[{"RotateRight", "[", 
         RowBox[{
          RowBox[{"Fourier", "[", "f0T", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"nFPpad", "/", "2"}], "-", "1"}], ",", 
            RowBox[{
             RowBox[{"nFPpad", "/", "2"}], "-", "1"}]}], "}"}]}], "]"}], "*", 
        "4", " ", "padLevel", " ", 
        RowBox[{
         RowBox[{"wFP", "^", "2"}], "/", 
         RowBox[{"(", 
          RowBox[{"lambda", " ", "distP", " ", "nFP"}], ")"}]}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"return", "[", 
        RowBox[{"x0_", ",", "y0_"}], "]"}], "=", 
       RowBox[{
        RowBox[{"-", " ", "\[ImaginaryI]"}], " ", 
        RowBox[{"Exp", "[", 
         RowBox[{"\[ImaginaryI]", " ", "k0", " ", "distP"}], "]"}], "*", 
        RowBox[{
         RowBox[{"ListInterpolation", "[", 
          RowBox[{
           RowBox[{"ArrayPad", "[", 
            RowBox[{"fzT", ",", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{"nFPpad", "-", "nFP"}], ")"}]}], "/", "2"}]}], "]"}], 
           ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "dkx"}], "*", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"nFP", "/", "2"}], "-", "1"}], ")"}]}], ",", 
                RowBox[{"dkx", "*", 
                 RowBox[{"nFP", "/", "2"}]}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "dkx"}], "*", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"nFP", "/", "2"}], "-", "1"}], ")"}]}], ",", 
                RowBox[{"dkx", "*", 
                 RowBox[{"nFP", "/", "2"}]}]}], "}"}]}], "}"}], "*", 
            RowBox[{"distP", "/", "k0"}]}], ",", 
           RowBox[{"InterpolationOrder", "\[Rule]", "interpolationOrder"}], 
           ",", 
           RowBox[{"\"\<ExtrapolationHandler\>\"", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"0", "&"}], ",", 
              RowBox[{"\"\<WarningMessage\>\"", "\[Rule]", "False"}]}], 
             "}"}]}]}], "]"}], "[", 
         RowBox[{
          RowBox[{"-", "x0"}], ",", 
          RowBox[{"-", "y0"}]}], "]"}], "*", 
        RowBox[{"FP", "[", 
         RowBox[{"x0", ",", "y0"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      "return"}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"This", " ", "is", " ", "experimental"}], " ", "-", " ", 
     RowBox[{"if", " ", "nrSteps"}]}], " ", "\[NotEqual]", " ", 
    RowBox[{"1", " ", "the", " ", "function", " ", "will", " ", "save", " ", 
     RowBox[{"Abs", "@", "data"}], " ", "for", " ", "Z", " ", "and", " ", 
     RowBox[{"X", "."}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "SPWOperator", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<waveLength\>\"", "\[Rule]", " ", "waveLength"}], ",", 
     RowBox[{"\"\<padLevel\>\"", "\[Rule]", " ", "1"}], ",", 
     RowBox[{"\"\<refractiveIndexMedium\>\"", "\[Rule]", " ", "refIndexAir"}],
      ",", 
     RowBox[{"\"\<InterpolationOrder\>\"", "\[Rule]", " ", "3"}], ",", 
     RowBox[{"\"\<nrSteps\>\"", "\[Rule]", " ", "1"}], ",", 
     RowBox[{"\"\<specklePattern\>\"", "\[Rule]", " ", "0"}], ",", 
     RowBox[{"\"\<returnSamplingTest\>\"", "\[Rule]", " ", "False"}], ",", 
     " ", 
     RowBox[{"\"\<tableForm\>\"", "\[Rule]", " ", "False"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SPWOperator", "[", 
     RowBox[{"wASP_", ",", "nASP_", ",", "distP_", ",", 
      RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], "[", "f_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "lambda", ",", "padLevel", ",", "k0", ",", "interpolationOrder", ",", 
       "ASP", ",", "nASPpad", ",", "FTf", ",", "IFT", ",", "kx", ",", "ky", 
       ",", "dkx", ",", "x0", ",", "y0", ",", "nZ", ",", "ASPtable", ",", 
       "ftable", ",", "FTfu", ",", "IFTu", ",", "XZprop", ",", "transmF", ",",
        "i"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"lambda", "=", 
       RowBox[{"OptionValue", "[", "\"\<waveLength\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"padLevel", "=", 
       RowBox[{"OptionValue", "[", "\"\<padLevel\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"k0", "=", 
       RowBox[{"2", " ", 
        RowBox[{"Pi", "/", "lambda"}], "*", 
        RowBox[{
        "OptionValue", "[", "\"\<refractiveIndexMedium\>\"", "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"interpolationOrder", "=", 
       RowBox[{"OptionValue", "[", "\"\<InterpolationOrder\>\"", "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"nZ", "=", 
       RowBox[{"OptionValue", "[", "\"\<nrSteps\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"transmF", "=", 
       RowBox[{"OptionValue", "[", "\"\<InterpolationOrder\>\"", "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ASP", "[", 
        RowBox[{"kx_", ",", "ky_"}], "]"}], "=", 
       RowBox[{"Exp", "[", 
        RowBox[{"\[ImaginaryI]", " ", "distP", " ", 
         RowBox[{"Sqrt", "[", 
          RowBox[{
           RowBox[{"k0", "^", "2"}], "-", 
           RowBox[{"kx", "^", "2"}], "-", 
           RowBox[{"ky", "^", "2"}]}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"nASPpad", "=", 
       RowBox[{"nASP", "*", "padLevel"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"dkx", "=", 
       RowBox[{"Pi", "/", 
        RowBox[{"(", 
         RowBox[{"wASP", "*", "padLevel"}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ASPtable", "=", 
       RowBox[{"N", "@", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"ASP", "[", 
           RowBox[{"kx", ",", "ky"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"kx", ",", 
            RowBox[{
             RowBox[{"-", "dkx"}], "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"nASPpad", "/", "2"}], "-", "1"}], ")"}]}], ",", 
            RowBox[{"dkx", "*", 
             RowBox[{"nASPpad", "/", "2"}]}], ",", "dkx"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"ky", ",", 
            RowBox[{
             RowBox[{"-", "dkx"}], "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"nASPpad", "/", "2"}], "-", "1"}], ")"}]}], ",", 
            RowBox[{"dkx", "*", 
             RowBox[{"nASPpad", "/", "2"}]}], ",", "dkx"}], "}"}]}], 
         "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ftable", "=", 
       RowBox[{"N", "@", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"f", "[", 
           RowBox[{"x0", ",", "y0"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"x0", ",", 
            RowBox[{
             RowBox[{"-", "wASP"}], "+", 
             RowBox[{"2", 
              RowBox[{"wASP", "/", "nASP"}]}]}], ",", "wASP", ",", 
            RowBox[{"2", 
             RowBox[{"wASP", "/", "nASP"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"y0", ",", 
            RowBox[{
             RowBox[{"-", "wASP"}], "+", 
             RowBox[{"2", 
              RowBox[{"wASP", "/", "nASP"}]}]}], ",", "wASP", ",", 
            RowBox[{"2", 
             RowBox[{"wASP", "/", "nASP"}]}]}], "}"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"OptionValue", "[", "\"\<specklePattern\>\"", "]"}], 
         "\[NotEqual]", " ", "0"}], ",", 
        RowBox[{"ftable", "=", 
         RowBox[{"ftable", "*", 
          RowBox[{"Normal", "@", 
           RowBox[{"SparseArray", "[", 
            RowBox[{
             RowBox[{"Map", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"#", "\[Rule]", " ", 
                 RowBox[{"RandomComplex", "[", "]"}]}], "&"}], ",", 
               RowBox[{"Transpose", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"RandomSample", "[", 
                   RowBox[{
                    RowBox[{"Range", "[", "nASP", "]"}], ",", 
                    RowBox[{
                    "OptionValue", "[", "\"\<specklePattern\>\"", "]"}]}], 
                   "]"}], ",", 
                  RowBox[{"RandomSample", "[", 
                   RowBox[{
                    RowBox[{"Range", "[", "nASP", "]"}], ",", 
                    RowBox[{
                    "OptionValue", "[", "\"\<specklePattern\>\"", "]"}]}], 
                   "]"}]}], "}"}], "]"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"nASP", ",", "nASP"}], "}"}], ",", "1"}], "]"}]}]}]}]}],
        "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"OptionValue", "[", "\"\<returnSamplingTest\>\"", "]"}], 
         "\[Equal]", " ", "True"}], ",", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"ListLinePlot", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"N", "@", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Re", "[", "#", "]"}], "/", 
                  RowBox[{"Abs", "[", "#", "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"Im", "[", "#", "]"}], "/", 
                  RowBox[{"Abs", "[", "#", "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"Abs", "[", "#", "]"}], "/", 
                  RowBox[{"Max", "[", 
                   RowBox[{"Abs", "[", "#", "]"}], "]"}]}]}], "}"}]}], "&"}], 
             "@", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"f", "[", 
                RowBox[{"x0", ",", "um"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"x0", ",", 
                 RowBox[{
                  RowBox[{"-", "wASP"}], "+", 
                  RowBox[{"2", " ", 
                   RowBox[{"wASP", "/", "nASP"}]}]}], ",", "wASP", ",", 
                 RowBox[{"2", " ", 
                  RowBox[{"wASP", "/", "nASP"}]}]}], "}"}]}], "]"}]}], ",", 
            RowBox[{"FrameLabel", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"\"\<\>\"", ",", "\"\<\>\""}], "}"}]}], ",", 
            RowBox[{"PlotMarkers", "\[Rule]", "\"\<\[Square]\>\""}], ",", 
            RowBox[{"ImageSize", "\[Rule]", " ", "8000"}], ",", 
            RowBox[{"AspectRatio", "\[Rule]", " ", 
             RowBox[{"1", "/", "20"}]}]}], "]"}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Return", "[", 
          RowBox[{"ftable", ",", "Module"}], "]"}]}]}], "\[IndentingNewLine]",
        "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"FTf", "=", 
       RowBox[{"RotateRight", "[", 
        RowBox[{
         RowBox[{"Fourier", "[", 
          RowBox[{"RotateLeft", "[", 
           RowBox[{
            RowBox[{"ArrayPad", "[", 
             RowBox[{"ftable", ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"nASPpad", "-", "nASP"}], ")"}], "/", "2"}]}], "]"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"nASPpad", "/", "2"}], "-", "1"}], ",", 
              RowBox[{
               RowBox[{"nASPpad", "/", "2"}], "-", "1"}]}], "}"}]}], "]"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"nASPpad", "/", "2"}], "-", "1"}], ",", 
           RowBox[{
            RowBox[{"nASPpad", "/", "2"}], "-", "1"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"OptionValue", "[", "\"\<returnSamplingTest\>\"", "]"}], 
         "\[Equal]", " ", "\"\<Fourier\>\""}], ",", "\[IndentingNewLine]", 
        RowBox[{"Return", "[", 
         RowBox[{
          RowBox[{"ListLinePlot", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"N", "@", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Re", "[", "#", "]"}], "/", 
                  RowBox[{"Abs", "[", "#", "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"Im", "[", "#", "]"}], "/", 
                  RowBox[{"Abs", "[", "#", "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"Abs", "[", "#", "]"}], "/", 
                  RowBox[{"Max", "[", 
                   RowBox[{"Abs", "[", "#", "]"}], "]"}]}]}], "}"}]}], "&"}], 
             "@", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"ASP", "[", 
                  RowBox[{"kx", ",", "0"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"kx", ",", 
                   RowBox[{
                    RowBox[{"-", "dkx"}], "*", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"nASPpad", "/", "2"}], "-", "1"}], ")"}]}], ",", 
                   RowBox[{"dkx", "*", 
                    RowBox[{"nASPpad", "/", "2"}]}], ",", "dkx"}], "}"}]}], 
                "]"}], "*", 
               RowBox[{"FTf", "[", 
                RowBox[{"[", 
                 RowBox[{"nASPpad", "/", "2"}], "]"}], "]"}]}], ")"}]}], ",", 
            RowBox[{"FrameLabel", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"\"\<\>\"", ",", "\"\<\>\""}], "}"}]}], ",", 
            RowBox[{"PlotMarkers", "\[Rule]", "\"\<\[Square]\>\""}], ",", 
            RowBox[{"ImageSize", "\[Rule]", " ", "8000"}], ",", 
            RowBox[{"AspectRatio", "\[Rule]", " ", 
             RowBox[{"1", "/", "20"}]}]}], "]"}], ",", "Module"}], "]"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"IFT", ":=", 
       RowBox[{"RotateRight", "[", 
        RowBox[{
         RowBox[{"InverseFourier", "[", 
          RowBox[{"RotateLeft", "[", 
           RowBox[{
            RowBox[{"FTf", "*", "ASPtable"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"nASPpad", "/", "2"}], "-", "1"}], ",", 
              RowBox[{
               RowBox[{"nASPpad", "/", "2"}], "-", "1"}]}], "}"}]}], "]"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"nASPpad", "/", "2"}], "-", "1"}], ",", 
           RowBox[{
            RowBox[{"nASPpad", "/", "2"}], "-", "1"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"nZ", "\[NotEqual]", " ", "1"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"IFTu", "=", "IFT"}], ";", "\[IndentingNewLine]", 
         RowBox[{"XZprop", "=", 
          RowBox[{"{", 
           RowBox[{"IFTu", "[", 
            RowBox[{"[", 
             RowBox[{"nASPpad", "/", "2"}], "]"}], "]"}], "}"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Do", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"FTfu", "=", 
             RowBox[{"RotateRight", "[", 
              RowBox[{
               RowBox[{"Fourier", "[", 
                RowBox[{"RotateLeft", "[", 
                 RowBox[{"IFTu", ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"nASPpad", "/", "2"}], "-", "1"}], ",", 
                    RowBox[{
                    RowBox[{"nASPpad", "/", "2"}], "-", "1"}]}], "}"}]}], 
                 "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"nASPpad", "/", "2"}], "-", "1"}], ",", 
                 RowBox[{
                  RowBox[{"nASPpad", "/", "2"}], "-", "1"}]}], "}"}]}], 
              "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"IFTu", "=", 
             RowBox[{"RotateRight", "[", 
              RowBox[{
               RowBox[{"InverseFourier", "[", 
                RowBox[{"RotateLeft", "[", 
                 RowBox[{
                  RowBox[{"FTfu", "*", "ASPtable"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"nASPpad", "/", "2"}], "-", "1"}], ",", 
                    RowBox[{
                    RowBox[{"nASPpad", "/", "2"}], "-", "1"}]}], "}"}]}], 
                 "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"nASPpad", "/", "2"}], "-", "1"}], ",", 
                 RowBox[{
                  RowBox[{"nASPpad", "/", "2"}], "-", "1"}]}], "}"}]}], 
              "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"XZprop", "=", 
             RowBox[{"Join", "[", 
              RowBox[{"XZprop", ",", 
               RowBox[{"{", 
                RowBox[{"IFTu", "[", 
                 RowBox[{"[", 
                  RowBox[{"nASPpad", "/", "2"}], "]"}], "]"}], "}"}]}], 
              "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
           ",", 
           RowBox[{"nZ", "-", "1"}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Return", "[", 
          RowBox[{
           RowBox[{"ListInterpolation", "[", 
            RowBox[{
             RowBox[{"Abs", "[", "XZprop", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"nZ", "-", "1"}], ")"}], "*", "distP"}]}], "}"}], 
               ",", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "wASP"}], "+", 
                   RowBox[{"2", 
                    RowBox[{"wASP", "/", "nASPpad"}]}]}], ",", "wASP"}], 
                 "}"}], "*", "padLevel"}]}], "}"}], ",", 
             RowBox[{"InterpolationOrder", "\[Rule]", "interpolationOrder"}], 
             ",", 
             RowBox[{"\"\<ExtrapolationHandler\>\"", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"0", "&"}], ",", 
                RowBox[{"\"\<WarningMessage\>\"", "\[Rule]", "False"}]}], 
               "}"}]}]}], "]"}], ",", "Module"}], "]"}]}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{"IFT", ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "wASP"}], "+", 
              RowBox[{"2", 
               RowBox[{"wASP", "/", "nASPpad"}]}]}], ",", "wASP"}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "wASP"}], "+", 
              RowBox[{"2", 
               RowBox[{"wASP", "/", "nASPpad"}]}]}], ",", "wASP"}], "}"}]}], 
          "}"}], "*", "padLevel"}], ",", 
        RowBox[{"InterpolationOrder", "\[Rule]", "interpolationOrder"}], ",", 
        RowBox[{"\"\<ExtrapolationHandler\>\"", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0", "&"}], ",", 
           RowBox[{"\"\<WarningMessage\>\"", "\[Rule]", "False"}]}], 
          "}"}]}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "SASPWOperator", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<waveLength\>\"", "\[Rule]", " ", "waveLength"}], ",", 
     RowBox[{"\"\<padLevel\>\"", "\[Rule]", " ", "1"}], ",", 
     RowBox[{"\"\<paraxialF\>\"", "\[Rule]", " ", "False"}], ",", 
     RowBox[{"\"\<refractiveIndexMedium\>\"", "\[Rule]", " ", "refIndexAir"}],
      ",", 
     RowBox[{"\"\<InterpolationOrder\>\"", "\[Rule]", " ", "10"}], ",", 
     RowBox[{"\"\<returnSamplingTest\>\"", "\[Rule]", " ", "False"}]}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SASPWOperator", "[", 
     RowBox[{"wASP_", ",", "nASP_", ",", "distP_", ",", 
      RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], "[", "f_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "lambda", ",", "padLevel", ",", "k0", ",", "paraxialF", ",", 
       "interpolationOrder", ",", "ASP", ",", "FP", ",", "paraxialASP", ",", 
       "FTf", ",", "FTfLens", ",", "IFT", ",", "nASPpad", ",", "z", ",", "kx",
        ",", "ky", ",", "dkx", ",", "x0", ",", "y0"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"lambda", "=", 
       RowBox[{"OptionValue", "[", "\"\<waveLength\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"padLevel", "=", 
       RowBox[{"OptionValue", "[", "\"\<padLevel\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"k0", "=", 
       RowBox[{"2", " ", 
        RowBox[{"Pi", "/", "lambda"}], "*", 
        RowBox[{
        "OptionValue", "[", "\"\<refractiveIndexMedium\>\"", "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"paraxialF", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"NumberQ", "[", 
          RowBox[{"OptionValue", "[", "\"\<paraxialF\>\"", "]"}], "]"}], ",", 
         RowBox[{"OptionValue", "[", "\"\<paraxialF\>\"", "]"}], ",", 
         "distP"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"interpolationOrder", "=", 
       RowBox[{"OptionValue", "[", "\"\<InterpolationOrder\>\"", "]"}]}], ";",
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"FP", "[", 
        RowBox[{"x0_", ",", "y0_"}], "]"}], "=", 
       RowBox[{"Exp", "[", 
        RowBox[{"\[ImaginaryI]", " ", "k0", "*", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"x0", "^", "2"}], "+", 
            RowBox[{"y0", "^", "2"}]}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{"2", " ", "paraxialF"}], ")"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ASP", "[", 
        RowBox[{"kx_", ",", "ky_"}], "]"}], "=", 
       RowBox[{"Exp", "[", 
        RowBox[{"\[ImaginaryI]", " ", "distP", " ", 
         RowBox[{"Sqrt", "[", 
          RowBox[{
           RowBox[{"k0", "^", "2"}], "-", 
           RowBox[{"kx", "^", "2"}], "-", 
           RowBox[{"ky", "^", "2"}]}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"paraxialASP", "[", 
        RowBox[{"kx_", ",", "ky_"}], "]"}], "=", 
       RowBox[{"Exp", "[", 
        RowBox[{"\[ImaginaryI]", " ", "paraxialF", "*", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"kx", "^", "2"}], "+", 
            RowBox[{"ky", "^", "2"}]}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{"2", " ", "k0"}], ")"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"nASPpad", "=", 
       RowBox[{"nASP", "*", "padLevel"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"dkx", "=", 
       RowBox[{"Pi", "/", 
        RowBox[{"(", "wASP", ")"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"OptionValue", "[", "\"\<returnSamplingTest\>\"", "]"}], 
         "\[Equal]", " ", "True"}], ",", 
        RowBox[{"Return", "[", 
         RowBox[{"ListLinePlot", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"N", "@", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"Re", "[", "#", "]"}], "/", 
                 RowBox[{"Abs", "[", "#", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"Im", "[", "#", "]"}], "/", 
                 RowBox[{"Abs", "[", "#", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"Abs", "[", "#", "]"}], "/", 
                 RowBox[{"Max", "[", 
                  RowBox[{"Abs", "[", "#", "]"}], "]"}]}]}], "}"}]}], "&"}], 
            "@", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"f", "[", 
                RowBox[{"x0", ",", "um"}], "]"}], "*", 
               RowBox[{"FP", "[", 
                RowBox[{"x0", ",", "0"}], "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"x0", ",", 
                RowBox[{
                 RowBox[{"-", "wASP"}], "+", 
                 RowBox[{"2", " ", 
                  RowBox[{"wASP", "/", "nASP"}]}]}], ",", "wASP", ",", 
                RowBox[{"2", " ", 
                 RowBox[{"wASP", "/", "nASP"}]}]}], "}"}]}], "]"}]}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\"\<\>\"", ",", "\"\<\>\""}], "}"}]}], ",", 
           RowBox[{"PlotMarkers", "\[Rule]", "\"\<\[Square]\>\""}], ",", 
           RowBox[{"ImageSize", "\[Rule]", " ", "8000"}], ",", 
           RowBox[{"AspectRatio", "\[Rule]", " ", 
            RowBox[{"1", "/", "20"}]}]}], "]"}], "]"}], ",", "Module"}], 
       "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"FTf", ":=", 
       RowBox[{"RotateRight", "[", 
        RowBox[{
         RowBox[{"Fourier", "[", 
          RowBox[{"RotateLeft", "[", 
           RowBox[{
            RowBox[{"N", "@", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"f", "[", 
                 RowBox[{"x0", ",", "y0"}], "]"}], "*", 
                RowBox[{"FP", "[", 
                 RowBox[{"x0", ",", "y0"}], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"x0", ",", 
                 RowBox[{
                  RowBox[{"-", "wASP"}], "+", 
                  RowBox[{"2", 
                   RowBox[{"wASP", "/", "nASP"}]}]}], ",", "wASP", ",", 
                 RowBox[{"2", 
                  RowBox[{"wASP", "/", "nASP"}]}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"y0", ",", 
                 RowBox[{
                  RowBox[{"-", "wASP"}], "+", 
                  RowBox[{"2", 
                   RowBox[{"wASP", "/", "nASP"}]}]}], ",", "wASP", ",", 
                 RowBox[{"2", 
                  RowBox[{"wASP", "/", "nASP"}]}]}], "}"}]}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"nASP", "/", "2"}], "-", "1"}], ",", 
              RowBox[{
               RowBox[{"nASP", "/", "2"}], "-", "1"}]}], "}"}]}], "]"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"nASP", "/", "2"}], "-", "1"}], ",", 
           RowBox[{
            RowBox[{"nASP", "/", "2"}], "-", "1"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"FTfLens", ":=", " ", 
       RowBox[{"ArrayPad", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"RotateRight", "[", 
           RowBox[{
            RowBox[{"Fourier", "[", 
             RowBox[{"RotateLeft", "[", 
              RowBox[{
               RowBox[{"FTf", "*", 
                RowBox[{"N", "@", 
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"paraxialASP", "[", 
                    RowBox[{"kx", ",", "ky"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"kx", ",", 
                    RowBox[{
                    RowBox[{"-", "dkx"}], "*", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"nASP", "/", "2"}], "-", "1"}], ")"}]}], ",", 
                    RowBox[{"dkx", "*", 
                    RowBox[{"nASP", "/", "2"}]}], ",", "dkx"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"ky", ",", 
                    RowBox[{
                    RowBox[{"-", "dkx"}], "*", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"nASP", "/", "2"}], "-", "1"}], ")"}]}], ",", 
                    RowBox[{"dkx", "*", 
                    RowBox[{"nASP", "/", "2"}]}], ",", "dkx"}], "}"}]}], 
                  "]"}]}]}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"nASP", "/", "2"}], "-", "1"}], ",", 
                 RowBox[{
                  RowBox[{"nASP", "/", "2"}], "-", "1"}]}], "}"}]}], "]"}], 
             "]"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"nASP", "/", "2"}], "-", "1"}], ",", 
              RowBox[{
               RowBox[{"nASP", "/", "2"}], "-", "1"}]}], "}"}]}], "]"}], "*", 
          "4", "  ", 
          RowBox[{
           RowBox[{"wASP", "^", "2"}], "/", 
           RowBox[{"(", 
            RowBox[{
            "\[ImaginaryI]", " ", "lambda", " ", "paraxialF", " ", "nASP"}], 
            ")"}]}]}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"nASPpad", "-", "nASP"}], ")"}], "/", "2"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"dkx", "=", 
       RowBox[{"Pi", "/", 
        RowBox[{"(", 
         RowBox[{"wASP", "*", "padLevel"}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"OptionValue", "[", "\"\<returnSamplingTest\>\"", "]"}], 
         "\[Equal]", " ", "\"\<Fourier\>\""}], ",", "\[IndentingNewLine]", 
        RowBox[{"Return", "[", 
         RowBox[{
          RowBox[{"ListLinePlot", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"N", "@", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Re", "[", "#", "]"}], "/", 
                  RowBox[{"Abs", "[", "#", "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"Im", "[", "#", "]"}], "/", 
                  RowBox[{"Abs", "[", "#", "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"Abs", "[", "#", "]"}], "/", 
                  RowBox[{"Max", "[", 
                   RowBox[{"Abs", "[", "#", "]"}], "]"}]}]}], "}"}]}], "&"}], 
             "@", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"ASP", "[", 
                   RowBox[{"kx", ",", "0"}], "]"}], "*", 
                  RowBox[{"paraxialASP", "[", 
                   RowBox[{"kx", ",", "0"}], "]"}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"kx", ",", 
                   RowBox[{
                    RowBox[{"-", "dkx"}], "*", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"nASPpad", "/", "2"}], "-", "1"}], ")"}]}], ",", 
                   RowBox[{"dkx", "*", 
                    RowBox[{"nASPpad", "/", "2"}]}], ",", "dkx"}], "}"}]}], 
                "]"}], "*", 
               RowBox[{"FTfLens", "[", 
                RowBox[{"[", 
                 RowBox[{"nASPpad", "/", "2"}], "]"}], "]"}]}], ")"}]}], ",", 
            RowBox[{"FrameLabel", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"\"\<\>\"", ",", "\"\<\>\""}], "}"}]}], ",", 
            RowBox[{"PlotMarkers", "\[Rule]", "\"\<\[Square]\>\""}], ",", 
            RowBox[{"ImageSize", "\[Rule]", " ", "8000"}], ",", 
            RowBox[{"AspectRatio", "\[Rule]", " ", 
             RowBox[{"1", "/", "20"}]}]}], "]"}], ",", "Module"}], "]"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"IFT", ":=", 
       RowBox[{"RotateRight", "[", 
        RowBox[{
         RowBox[{"InverseFourier", "[", 
          RowBox[{"RotateLeft", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"ArrayPad", "[", 
              RowBox[{"FTfLens", ",", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{"nASPpad", "-", "nASP"}], ")"}]}], "/", "2"}]}], 
              "]"}], "*", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"ASP", "[", 
                 RowBox[{"kx", ",", "ky"}], "]"}], "*", 
                RowBox[{"paraxialASP", "[", 
                 RowBox[{"kx", ",", "ky"}], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"kx", ",", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "wASP"}], "+", 
                    RowBox[{"2", 
                    RowBox[{"wASP", "/", "nASP"}]}]}], ")"}], "*", 
                  RowBox[{"k0", "/", "paraxialF"}]}], ",", 
                 RowBox[{"wASP", "*", 
                  RowBox[{"k0", "/", "paraxialF"}]}], ",", 
                 RowBox[{"2", 
                  RowBox[{"wASP", "/", "nASP"}], "*", 
                  RowBox[{"k0", "/", "paraxialF"}]}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"ky", ",", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "wASP"}], "+", 
                    RowBox[{"2", 
                    RowBox[{"wASP", "/", "nASP"}]}]}], ")"}], "*", 
                  RowBox[{"k0", "/", "paraxialF"}]}], ",", 
                 RowBox[{"wASP", "*", 
                  RowBox[{"k0", "/", "paraxialF"}]}], ",", 
                 RowBox[{"2", 
                  RowBox[{"wASP", "/", "nASP"}], "*", 
                  RowBox[{"k0", "/", "paraxialF"}]}]}], "}"}]}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"nASP", "/", "2"}], "-", "1"}], ",", 
              RowBox[{
               RowBox[{"nASP", "/", "2"}], "-", "1"}]}], "}"}]}], "]"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"nASP", "/", "2"}], "-", "1"}], ",", 
           RowBox[{
            RowBox[{"nASP", "/", "2"}], "-", "1"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"dkx", "=", 
       RowBox[{"Pi", "/", 
        RowBox[{"(", "wASP", ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{"IFT", ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "dkx"}], "*", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"nASP", "/", "2"}], "-", "1"}], ")"}]}], ",", 
             RowBox[{"dkx", "*", 
              RowBox[{"nASP", "/", "2"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "dkx"}], "*", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"nASP", "/", "2"}], "-", "1"}], ")"}]}], ",", 
             RowBox[{"dkx", "*", 
              RowBox[{"nASP", "/", "2"}]}]}], "}"}]}], "}"}], "*", 
         RowBox[{"(", 
          RowBox[{"paraxialF", "/", "k0"}], ")"}]}], ",", 
        RowBox[{"InterpolationOrder", "\[Rule]", "interpolationOrder"}], ",", 
        RowBox[{"\"\<ExtrapolationHandler\>\"", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0", "&"}], ",", 
           RowBox[{"\"\<WarningMessage\>\"", "\[Rule]", "False"}]}], 
          "}"}]}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "SAFarFieldOperator", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<waveLength\>\"", "\[Rule]", " ", "waveLength"}], ",", 
     RowBox[{"\"\<padLevel\>\"", "\[Rule]", " ", "1"}], ",", 
     RowBox[{"\"\<paraxialF\>\"", "\[Rule]", " ", "False"}], ",", 
     RowBox[{"\"\<refractiveIndexMedium\>\"", "\[Rule]", " ", "refIndexAir"}],
      ",", 
     RowBox[{"\"\<InterpolationOrder\>\"", "\[Rule]", " ", "3"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SAFarFieldOperator", "[", 
     RowBox[{"wASP_", ",", "nASP_", ",", "distP_", ",", 
      RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], "[", "f_", "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "lambda", ",", "padLevel", ",", "k0", ",", "interpolationOrder", ",", 
       "ASP", ",", "FP", ",", "paraxialASP", ",", "FTf", ",", "FTfFF", ",", 
       "IFT", ",", "nASPpad", ",", "z", ",", "kx", ",", "ky", ",", "dkx", ",",
        "x0", ",", "y0", ",", "return"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"lambda", "=", 
       RowBox[{"OptionValue", "[", "\"\<waveLength\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"padLevel", "=", 
       RowBox[{"OptionValue", "[", "\"\<padLevel\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"k0", "=", 
       RowBox[{"2", " ", 
        RowBox[{"Pi", "/", "lambda"}], "*", 
        RowBox[{
        "OptionValue", "[", "\"\<refractiveIndexMedium\>\"", "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"interpolationOrder", "=", 
       RowBox[{"OptionValue", "[", "\"\<InterpolationOrder\>\"", "]"}]}], ";",
       "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ASP", "[", 
        RowBox[{"kx_", ",", "ky_"}], "]"}], "=", 
       RowBox[{"Exp", "[", 
        RowBox[{"\[ImaginaryI]", " ", "distP", " ", 
         RowBox[{"Sqrt", "[", 
          RowBox[{
           RowBox[{"k0", "^", "2"}], "-", 
           RowBox[{"kx", "^", "2"}], "-", 
           RowBox[{"ky", "^", "2"}]}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"FP", "[", 
        RowBox[{"x0_", ",", "y0_"}], "]"}], "=", 
       RowBox[{"Exp", "[", 
        RowBox[{"\[ImaginaryI]", " ", "k0", "*", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"x0", "^", "2"}], "+", 
            RowBox[{"y0", "^", "2"}]}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{"2", " ", "distP"}], ")"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"paraxialASP", "[", 
        RowBox[{"kx_", ",", "ky_"}], "]"}], "=", 
       RowBox[{"Exp", "[", 
        RowBox[{"\[ImaginaryI]", " ", "distP", "*", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"kx", "^", "2"}], "+", 
            RowBox[{"ky", "^", "2"}]}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{"2", " ", "k0"}], ")"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"nASPpad", "=", 
       RowBox[{"nASP", "*", "padLevel"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"dkx", "=", 
       RowBox[{"Pi", "/", 
        RowBox[{"(", "wASP", ")"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"FTf", ":=", 
       RowBox[{"RotateRight", "[", 
        RowBox[{
         RowBox[{"Fourier", "[", 
          RowBox[{"RotateLeft", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"N", "@", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"f", "[", 
                 RowBox[{"x0", ",", "y0"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"x0", ",", 
                  RowBox[{
                   RowBox[{"-", "wASP"}], "+", 
                   RowBox[{"2", 
                    RowBox[{"wASP", "/", "nASP"}]}]}], ",", "wASP", ",", 
                  RowBox[{"2", 
                   RowBox[{"wASP", "/", "nASP"}]}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"y0", ",", 
                  RowBox[{
                   RowBox[{"-", "wASP"}], "+", 
                   RowBox[{"2", 
                    RowBox[{"wASP", "/", "nASP"}]}]}], ",", "wASP", ",", 
                  RowBox[{"2", 
                   RowBox[{"wASP", "/", "nASP"}]}]}], "}"}]}], "]"}]}], "*", 
             "4", " ", 
             RowBox[{
              RowBox[{"wASP", "^", "2"}], "/", 
              RowBox[{"(", 
               RowBox[{
               "\[ImaginaryI]", " ", "lambda", " ", "distP", " ", "nASP"}], 
               ")"}]}]}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"nASP", "/", "2"}], "-", "1"}], ",", 
              RowBox[{
               RowBox[{"nASP", "/", "2"}], "-", "1"}]}], "}"}]}], "]"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"nASP", "/", "2"}], "-", "1"}], ",", 
           RowBox[{
            RowBox[{"nASP", "/", "2"}], "-", "1"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"FTfFF", ":=", 
       RowBox[{"RotateRight", "[", 
        RowBox[{
         RowBox[{"Fourier", "[", 
          RowBox[{"RotateLeft", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"ArrayPad", "[", 
              RowBox[{"FTf", ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"nASPpad", "-", "nASP"}], ")"}], "/", "2"}]}], "]"}],
              "*", 
             RowBox[{"N", "@", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"ASP", "[", 
                  RowBox[{"kx", ",", "ky"}], "]"}], "*", 
                 RowBox[{"paraxialASP", "[", 
                  RowBox[{"kx", ",", "ky"}], "]"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"kx", ",", 
                  RowBox[{
                   RowBox[{"-", "dkx"}], "*", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"nASPpad", "/", "2"}], "-", "1"}], ")"}]}], ",", 
                  RowBox[{"dkx", "*", 
                   RowBox[{"nASPpad", "/", "2"}]}], ",", "dkx"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"ky", ",", 
                  RowBox[{
                   RowBox[{"-", "dkx"}], "*", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"nASPpad", "/", "2"}], "-", "1"}], ")"}]}], ",", 
                  RowBox[{"dkx", "*", 
                   RowBox[{"nASPpad", "/", "2"}]}], ",", "dkx"}], "}"}]}], 
               "]"}]}]}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"nASPpad", "/", "2"}], "-", "1"}], ",", 
              RowBox[{
               RowBox[{"nASPpad", "/", "2"}], "-", "1"}]}], "}"}]}], "]"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"nASPpad", "/", "2"}], "-", "1"}], ",", 
           RowBox[{
            RowBox[{"nASPpad", "/", "2"}], "-", "1"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"IFT", ":=", 
       RowBox[{"RotateRight", "[", 
        RowBox[{
         RowBox[{"InverseFourier", "[", 
          RowBox[{"RotateLeft", "[", 
           RowBox[{
            RowBox[{"FTfFF", "*", 
             RowBox[{"N", "@", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"FP", "[", 
                 RowBox[{"x0", ",", "y0"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"x0", ",", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "wASP"}], "+", 
                    RowBox[{"2", 
                    RowBox[{"wASP", "/", "nASPpad"}]}]}], ")"}], ",", "wASP", 
                  ",", 
                  RowBox[{"2", 
                   RowBox[{"wASP", "/", "nASPpad"}]}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"y0", ",", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "wASP"}], "+", 
                    RowBox[{"2", 
                    RowBox[{"wASP", "/", "nASPpad"}]}]}], ")"}], ",", "wASP", 
                  ",", 
                  RowBox[{"2", 
                   RowBox[{"wASP", "/", "nASPpad"}]}]}], "}"}]}], "]"}]}]}], 
            ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"nASPpad", "/", "2"}], "-", "1"}], ",", 
              RowBox[{
               RowBox[{"nASPpad", "/", "2"}], "-", "1"}]}], "}"}]}], "]"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"nASPpad", "/", "2"}], "-", "1"}], ",", 
           RowBox[{
            RowBox[{"nASPpad", "/", "2"}], "-", "1"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"return", "[", 
        RowBox[{"x0_", ",", "y0_"}], "]"}], "=", 
       RowBox[{
        RowBox[{
         RowBox[{"ListInterpolation", "[", 
          RowBox[{"IFT", ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "dkx"}], "*", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"nASPpad", "/", "2"}], "-", "1"}], ")"}]}], ",", 
                RowBox[{"dkx", "*", 
                 RowBox[{"nASPpad", "/", "2"}]}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "dkx"}], "*", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"nASPpad", "/", "2"}], "-", "1"}], ")"}]}], ",", 
                RowBox[{"dkx", "*", 
                 RowBox[{"nASPpad", "/", "2"}]}]}], "}"}]}], "}"}], "*", 
            RowBox[{"(", 
             RowBox[{"distP", "/", "k0"}], ")"}]}], ",", 
           RowBox[{"InterpolationOrder", "\[Rule]", "interpolationOrder"}], 
           ",", 
           RowBox[{"\"\<ExtrapolationHandler\>\"", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"0", "&"}], ",", 
              RowBox[{"\"\<WarningMessage\>\"", "\[Rule]", "False"}]}], 
             "}"}]}]}], "]"}], "[", 
         RowBox[{"x0", ",", "y0"}], "]"}], "*", 
        RowBox[{"FP", "[", 
         RowBox[{"x0", ",", "y0"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "return"}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "scalarRSFOperator", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<waveLength\>\"", "\[Rule]", " ", "waveLength"}], ",", 
     RowBox[{"\"\<padLevel\>\"", "\[Rule]", " ", "1"}], ",", 
     RowBox[{"\"\<defocusZ\>\"", "\[Rule]", " ", "0"}], ",", 
     RowBox[{"\"\<refractiveIndexMedium\>\"", "\[Rule]", " ", "refIndexAir"}],
      ",", 
     RowBox[{"\"\<InterpolationOrder\>\"", "\[Rule]", " ", "10"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"scalarRSFOperator", "[", 
    RowBox[{
    "rayCoordinateFocus_List", ",", "rayTiltFocus_List", ",", 
     "opticalLengthFocus_List", ",", "clearApRad_", ",", "nWDP_", ",", 
     "focalDistance_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], "[", "f_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "interpolationOrder", ",", "padLevel", ",", "lambda", ",", "defocusZ", 
      ",", "FTf", ",", "nWDPpad", ",", "k0", ",", "dkx", ",", "wWDP", ",", 
      "S", ",", "sx", ",", "sy", ",", "EF"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"lambda", "=", 
      RowBox[{"OptionValue", "[", "\"\<waveLength\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"padLevel", "=", 
      RowBox[{"OptionValue", "[", "\"\<padLevel\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"k0", "=", 
      RowBox[{"2", " ", 
       RowBox[{"Pi", "/", "lambda"}], "*", 
       RowBox[{"OptionValue", "[", "\"\<refractiveIndexMedium\>\"", "]"}]}]}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"interpolationOrder", "=", 
      RowBox[{"OptionValue", "[", "\"\<InterpolationOrder\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"defocusZ", "=", 
      RowBox[{"OptionValue", "[", "\"\<defocusZ\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"wWDP", "=", 
      RowBox[{"clearApRad", "/", 
       RowBox[{"(", 
        RowBox[{"\[Sqrt]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"clearApRad", "^", "2"}], "+", 
           RowBox[{"focalDistance", "^", "2"}]}], ")"}]}], ")"}]}]}], ";", 
     " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"nWDPpad", "=", 
      RowBox[{"nWDP", "*", "padLevel"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"dkx", "=", 
      RowBox[{"Pi", "/", 
       RowBox[{"(", 
        RowBox[{"wWDP", "*", "k0"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"EF", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"UnsameQ", "[", 
          RowBox[{"rayCoordinateFocus", ",", 
           RowBox[{"{", "}"}]}], "]"}], "\[Equal]", "True"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"S", "=", 
          RowBox[{"Interpolation", "[", 
           RowBox[{
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "2"}], "]"}], "]"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "&"}], ",", 
              RowBox[{"Transpose", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"opticalLengthFocus", "-", 
                  RowBox[{"Map", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "*", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "2"}], "]"}], "]"}], "*", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "2"}], "]"}], "]"}]}]}], "&"}], ",", 
                    RowBox[{"Transpose", "@", 
                    RowBox[{"{", 
                    RowBox[{"rayCoordinateFocus", ",", "rayTiltFocus"}], 
                    "}"}]}]}], "]"}]}], ",", "rayTiltFocus"}], "}"}], "]"}]}],
              "]"}], ",", 
            RowBox[{"InterpolationOrder", "\[Rule]", "1"}], ",", 
            RowBox[{"\"\<ExtrapolationHandler\>\"", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"0", "&"}], ",", 
               RowBox[{"\"\<WarningMessage\>\"", "\[Rule]", "False"}]}], 
              "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"N", "@", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Exp", "[", 
              RowBox[{"\[ImaginaryI]", " ", "k0", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"S", "[", 
                  RowBox[{"sx", ",", "sy"}], "]"}], "+", 
                 RowBox[{
                  RowBox[{"\[Sqrt]", 
                   RowBox[{"(", 
                    RowBox[{"1", "-", 
                    SuperscriptBox["sx", "2"], "-", 
                    SuperscriptBox["sy", "2"]}], ")"}]}], " ", "defocusZ"}]}],
                 ")"}]}], "]"}], 
             RowBox[{
              RowBox[{"f", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "sx"}], " ", 
                 RowBox[{"focalDistance", "/", 
                  RowBox[{"\[Sqrt]", 
                   RowBox[{"(", 
                    RowBox[{"1", "-", 
                    SuperscriptBox["sx", "2"], "-", 
                    SuperscriptBox["sy", "2"]}], ")"}]}]}]}], ",", 
                RowBox[{
                 RowBox[{"-", "sy"}], " ", 
                 RowBox[{"focalDistance", "/", 
                  RowBox[{"\[Sqrt]", 
                   RowBox[{"(", 
                    RowBox[{"1", "-", 
                    SuperscriptBox["sx", "2"], "-", 
                    SuperscriptBox["sy", "2"]}], ")"}]}]}]}]}], "]"}], "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                SuperscriptBox["sx", "2"], "-", 
                SuperscriptBox["sy", "2"]}], ")"}]}], "*", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"\[ImaginaryI]", 
                RowBox[{
                 RowBox[{"\[Sqrt]", 
                  RowBox[{"(", 
                   RowBox[{"1", "-", 
                    SuperscriptBox["sx", "2"], "-", 
                    SuperscriptBox["sy", "2"]}], ")"}]}], "/", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"k0", "^", "2"}], " ", "focalDistance"}], 
                  ")"}]}]}]}], ")"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"sx", ",", 
              RowBox[{
               RowBox[{"-", "wWDP"}], "+", 
               RowBox[{"2", 
                RowBox[{"wWDP", "/", "nWDP"}]}]}], ",", "wWDP", ",", 
              RowBox[{"2", 
               RowBox[{"wWDP", "/", "nWDP"}]}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"sy", ",", 
              RowBox[{
               RowBox[{"-", "wWDP"}], "+", 
               RowBox[{"2", 
                RowBox[{"wWDP", "/", "nWDP"}]}]}], ",", "wWDP", ",", 
              RowBox[{"2", 
               RowBox[{"wWDP", "/", "nWDP"}]}]}], "}"}]}], "]"}]}]}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"N", "@", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{"\[ImaginaryI]", " ", "k0", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"focalDistance", " ", "/", 
                 RowBox[{"\[Sqrt]", 
                  RowBox[{"(", 
                   RowBox[{"1", "-", 
                    SuperscriptBox["sx", "2"], "-", 
                    SuperscriptBox["sy", "2"]}], ")"}]}]}], "+", 
                RowBox[{
                 RowBox[{"\[Sqrt]", 
                  RowBox[{"(", 
                   RowBox[{"1", "-", 
                    SuperscriptBox["sx", "2"], "-", 
                    SuperscriptBox["sy", "2"]}], ")"}]}], "defocusZ"}]}], 
               ")"}]}], "]"}], 
            RowBox[{
             RowBox[{"f", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "sx"}], " ", 
                RowBox[{"focalDistance", "/", 
                 RowBox[{"\[Sqrt]", 
                  RowBox[{"(", 
                   RowBox[{"1", "-", 
                    SuperscriptBox["sx", "2"], "-", 
                    SuperscriptBox["sy", "2"]}], ")"}]}]}]}], ",", 
               RowBox[{
                RowBox[{"-", "sy"}], " ", 
                RowBox[{"focalDistance", "/", 
                 RowBox[{"\[Sqrt]", 
                  RowBox[{"(", 
                   RowBox[{"1", "-", 
                    SuperscriptBox["sx", "2"], "-", 
                    SuperscriptBox["sy", "2"]}], ")"}]}]}]}]}], "]"}], "/", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               SuperscriptBox["sx", "2"], "-", 
               SuperscriptBox["sy", "2"]}], ")"}]}], "*", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"\[ImaginaryI]", 
               RowBox[{
                RowBox[{"\[Sqrt]", 
                 RowBox[{"(", 
                  RowBox[{"1", "-", 
                   SuperscriptBox["sx", "2"], "-", 
                   SuperscriptBox["sy", "2"]}], ")"}]}], "/", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"k0", "^", "2"}], " ", "focalDistance"}], 
                 ")"}]}]}]}], ")"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"sx", ",", 
             RowBox[{
              RowBox[{"-", "wWDP"}], "+", 
              RowBox[{"2", 
               RowBox[{"wWDP", "/", "nWDP"}]}]}], ",", "wWDP", ",", 
             RowBox[{"2", 
              RowBox[{"wWDP", "/", "nWDP"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"sy", ",", 
             RowBox[{
              RowBox[{"-", "wWDP"}], "+", 
              RowBox[{"2", 
               RowBox[{"wWDP", "/", "nWDP"}]}]}], ",", "wWDP", ",", 
             RowBox[{"2", 
              RowBox[{"wWDP", "/", "nWDP"}]}]}], "}"}]}], "]"}]}]}], 
       "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"FTf", "=", 
      RowBox[{"RotateRight", "[", 
       RowBox[{
        RowBox[{"Fourier", "[", 
         RowBox[{"RotateLeft", "[", 
          RowBox[{"EF", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"nWDP", "/", "2"}], "-", "1"}], ",", 
             RowBox[{
              RowBox[{"nWDP", "/", "2"}], "-", "1"}]}], "}"}]}], "]"}], "]"}],
         ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"nWDP", "/", "2"}], "-", "1"}], ",", 
          RowBox[{
           RowBox[{"nWDP", "/", "2"}], "-", "1"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"ListInterpolation", "[", 
      RowBox[{
       RowBox[{"ArrayPad", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "4"}], " ", "\[ImaginaryI]", " ", 
          RowBox[{"clearApRad", "^", "2"}], " ", 
          RowBox[{"FTf", "/", 
           RowBox[{"(", 
            RowBox[{"lambda", "*", "focalDistance", " ", "nWDP"}], ")"}]}]}], 
         ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"nWDPpad", "-", "nWDP"}], ")"}], "/", "2"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "dkx"}], "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"nWDPpad", "/", "2"}], "-", "1"}], ")"}]}], ",", 
           RowBox[{"dkx", "*", 
            RowBox[{"nWDPpad", "/", "2"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "dkx"}], "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"nWDPpad", "/", "2"}], "-", "1"}], ")"}]}], ",", 
           RowBox[{"dkx", "*", 
            RowBox[{"nWDPpad", "/", "2"}]}]}], "}"}]}], "}"}], ",", 
       RowBox[{"InterpolationOrder", "\[Rule]", "interpolationOrder"}], ",", 
       RowBox[{"\"\<ExtrapolationHandler\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"0", "&"}], ",", 
          RowBox[{"\"\<WarningMessage\>\"", "\[Rule]", "False"}]}], "}"}]}]}],
       "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.795434025628742*^9, 3.7954342476642303`*^9}, {
   3.795434335766943*^9, 3.7954343467950673`*^9}, {3.7954343776338887`*^9, 
   3.7954343781642876`*^9}, {3.7954344261830225`*^9, 3.795434431809081*^9}, {
   3.795434513792914*^9, 3.7954345143650465`*^9}, {3.795491410344294*^9, 
   3.7954914142489896`*^9}, {3.7954914722056065`*^9, 3.795491666181222*^9}, {
   3.795491697278947*^9, 3.7954917884601474`*^9}, {3.7954927922844667`*^9, 
   3.7954928883230214`*^9}, {3.795492925934392*^9, 3.79549301772351*^9}, {
   3.7954931100348587`*^9, 3.795493141955743*^9}, {3.7954931815363474`*^9, 
   3.7954932809861717`*^9}, {3.7954933808605146`*^9, 
   3.7954935052164354`*^9}, {3.795493757960436*^9, 3.7954937596038656`*^9}, {
   3.798372886104302*^9, 3.7983729072653823`*^9}, {3.79837295944781*^9, 
   3.7983729595229645`*^9}, {3.798972063338792*^9, 3.7989720647829*^9}, {
   3.799061918549651*^9, 3.799061980045792*^9}, {3.7992066608065033`*^9, 
   3.7992066620025926`*^9}, {3.7992067317495565`*^9, 
   3.7992067498759093`*^9}, {3.799206953153696*^9, 3.799206960320232*^9}, {
   3.799207006667285*^9, 3.7992073019364667`*^9}, {3.799379845849619*^9, 
   3.799379867711755*^9}, {3.799379923654953*^9, 3.799379928427164*^9}, {
   3.799380294733827*^9, 3.7993802972874813`*^9}, {3.799380341896629*^9, 
   3.799380391765856*^9}, {3.799380434006847*^9, 3.799380444473551*^9}, {
   3.799380476963021*^9, 3.7993804818551702`*^9}, {3.79942157278368*^9, 
   3.799421582844945*^9}, 3.799422229683601*^9, {3.799548779949857*^9, 
   3.7995488389649057`*^9}, {3.799635701588222*^9, 3.7996358116342163`*^9}, {
   3.7996358441053405`*^9, 3.7996358584366517`*^9}, {3.799635902961233*^9, 
   3.7996359313884687`*^9}, {3.79963604927814*^9, 3.799636070848772*^9}, {
   3.7996361324014425`*^9, 3.799636202309907*^9}, {3.7996362636972528`*^9, 
   3.799636300951717*^9}, {3.7996363580505657`*^9, 3.7996363593608665`*^9}, {
   3.799636498058113*^9, 3.7996365611685123`*^9}, {3.799636598691415*^9, 
   3.7996366989599533`*^9}, 3.7996367353231544`*^9, 3.7996380817640266`*^9, {
   3.7996382080036116`*^9, 3.7996382112433124`*^9}, {3.7996415004632244`*^9, 
   3.7996415130667295`*^9}, {3.799641584624935*^9, 3.7996415956349134`*^9}, {
   3.799641626966302*^9, 3.7996416564049606`*^9}, {3.7996418301135583`*^9, 
   3.799641833131483*^9}, {3.7996418658985043`*^9, 3.7996418984434614`*^9}, {
   3.7996419463589787`*^9, 3.799641986961201*^9}, {3.7996420204125333`*^9, 
   3.7996420370979505`*^9}, {3.7996430328389044`*^9, 
   3.7996430597722664`*^9}, {3.799643096066143*^9, 3.799643096306161*^9}, {
   3.799643152948516*^9, 3.799643233634816*^9}, {3.799643359292333*^9, 
   3.7996433775792704`*^9}, {3.799643511707223*^9, 3.799643514278174*^9}, {
   3.7996448000022964`*^9, 3.7996448138918*^9}, {3.7996448453849106`*^9, 
   3.7996449179579906`*^9}, {3.7996451571579866`*^9, 
   3.7996452709851117`*^9}, {3.7996453372008114`*^9, 3.7996453757176113`*^9}, 
   3.799647008931607*^9, {3.799652089981896*^9, 3.7996521126664076`*^9}, {
   3.7996523830957794`*^9, 3.799652383788843*^9}, {3.7996536660702305`*^9, 
   3.7996536949029255`*^9}, {3.799653825592306*^9, 3.799653846321335*^9}, {
   3.799655293882039*^9, 3.7996552986005116`*^9}, {3.7996554498173184`*^9, 
   3.7996554513847747`*^9}, {3.7997243191158223`*^9, 
   3.7997243210783105`*^9}, {3.7997342511286755`*^9, 
   3.7997342633306465`*^9}, {3.7997342972555313`*^9, 3.799734389715954*^9}, {
   3.799734426377736*^9, 3.799734457010686*^9}, {3.7997345070289946`*^9, 
   3.799734703582656*^9}, {3.7997360487946014`*^9, 3.7997360516531444`*^9}, {
   3.799737245648818*^9, 3.7997372564615655`*^9}, {3.7997372997292724`*^9, 
   3.7997374062998533`*^9}, 3.799737450203327*^9, {3.799737504793005*^9, 
   3.7997375481212006`*^9}, {3.799737588520817*^9, 3.7997375905413837`*^9}, {
   3.7997376226415467`*^9, 3.799737673262461*^9}, 3.7997378373436437`*^9, {
   3.800930448341399*^9, 3.8009304985752153`*^9}, {3.801550942905302*^9, 
   3.801551064531259*^9}, {3.801991269782916*^9, 3.8019913263361516`*^9}, {
   3.8019920476320543`*^9, 3.80199207115481*^9}, {3.8020154571265173`*^9, 
   3.802015457270529*^9}, {3.8020589102084837`*^9, 3.802059156943218*^9}, {
   3.802059277366059*^9, 3.8020592792361994`*^9}, {3.802059870482113*^9, 
   3.8020598986622467`*^9}, {3.8020604949335957`*^9, 
   3.8020604952987804`*^9}, {3.8020608495156393`*^9, 3.802060854653897*^9}, 
   3.802060892921856*^9, {3.8059457018123035`*^9, 3.805945723934465*^9}, {
   3.805945867856638*^9, 3.8059458762884026`*^9}, {3.8059693132811966`*^9, 
   3.8059693143205414`*^9}, {3.806892911336488*^9, 3.8068929146667323`*^9}, {
   3.807582623798978*^9, 3.807582625041419*^9}, {3.807582721569935*^9, 
   3.8075828105294914`*^9}, {3.807583943696825*^9, 3.8075839811448965`*^9}, {
   3.8075841616921515`*^9, 3.8075842228186827`*^9}, 3.8075852090986223`*^9, {
   3.808388076362875*^9, 3.8083880869726667`*^9}, {3.8083890220262623`*^9, 
   3.808389034638218*^9}, {3.8084511578834453`*^9, 3.8084512126165895`*^9}, {
   3.808451250130911*^9, 3.808451250295911*^9}, {3.8086382388839703`*^9, 
   3.8086382394520135`*^9}, {3.8086382816797185`*^9, 3.808638283982456*^9}, {
   3.808638327612678*^9, 3.808638357933177*^9}, {3.8086384369553165`*^9, 
   3.8086384370903273`*^9}, {3.8086386272043734`*^9, 
   3.8086386746875544`*^9}, {3.808639043759895*^9, 3.808639044073069*^9}, {
   3.808646756496051*^9, 3.808646787069584*^9}, {3.8086479621219273`*^9, 
   3.808647989214526*^9}, {3.80864807664946*^9, 3.8086481100454493`*^9}, {
   3.808648140189909*^9, 3.8086481413121285`*^9}, {3.8086482730525875`*^9, 
   3.8086483152504025`*^9}, {3.8086484215226555`*^9, 3.808648429032529*^9}, 
   3.80864848660819*^9, 3.8086494150980406`*^9, {3.8086495369470105`*^9, 
   3.8086495445935893`*^9}, {3.8086506782718363`*^9, 
   3.8086507110295157`*^9}, {3.809171206911594*^9, 3.8091712112195234`*^9}, 
   3.8091718608101597`*^9, {3.8092256168325877`*^9, 3.809225617193615*^9}, {
   3.8092256488494205`*^9, 3.8092256900098815`*^9}, {3.809225793210777*^9, 
   3.809225869950443*^9}, {3.809225911471445*^9, 3.809225956641259*^9}, {
   3.8092259935328503`*^9, 3.8092260237530375`*^9}, 3.809226071943329*^9, {
   3.8092261182138734`*^9, 3.8092262705718613`*^9}, {3.809226302943863*^9, 
   3.809226303866211*^9}, {3.809246218012558*^9, 3.8092462417668447`*^9}, {
   3.8108306643605356`*^9, 3.810830779182003*^9}, {3.8108310582750626`*^9, 
   3.8108310697758904`*^9}, {3.810831146027331*^9, 3.8108311563682327`*^9}, {
   3.810831238556469*^9, 3.8108312450619483`*^9}, {3.8108313268945947`*^9, 
   3.810831327253621*^9}, {3.810872616820505*^9, 3.8108726224304223`*^9}, {
   3.8108727407790585`*^9, 3.8108727430417924`*^9}, {3.810873008360443*^9, 
   3.8108730361793814`*^9}, {3.8111270344033933`*^9, 3.811127075502432*^9}, {
   3.8111287122518144`*^9, 3.811128713175845*^9}, {3.811129363855872*^9, 
   3.8111293661931753`*^9}, {3.8118325575076213`*^9, 
   3.8118326245094967`*^9}, {3.811832783853307*^9, 3.81183281641823*^9}, {
   3.811835888469705*^9, 3.811835913254854*^9}, {3.8118359542345085`*^9, 
   3.811835983679551*^9}, {3.812102593778205*^9, 3.812102598288087*^9}, {
   3.812529155159132*^9, 3.812529225651862*^9}, {3.8125292566968136`*^9, 
   3.8125293005795803`*^9}, {3.8125293322495127`*^9, 
   3.8125294041259537`*^9}, {3.8125294375770645`*^9, 3.812529438518114*^9}, 
   3.8125295329967756`*^9, 3.8125320345440435`*^9, {3.8125330470614576`*^9, 
   3.8125330501101236`*^9}, {3.81253309633967*^9, 3.812533223769719*^9}, {
   3.8125332606055613`*^9, 3.812533361677823*^9}, {3.8125334082877364`*^9, 
   3.812533411239947*^9}, 3.8125334522300196`*^9, {3.8125334971079426`*^9, 
   3.8125335082671733`*^9}, {3.812533573002586*^9, 3.8125335786666603`*^9}, {
   3.812533653528615*^9, 3.812533668021366*^9}, {3.8125337082036753`*^9, 
   3.812533745663035*^9}, {3.812533828240571*^9, 3.812533858910591*^9}, {
   3.8125339655835185`*^9, 3.812533970910347*^9}, {3.812534056452332*^9, 
   3.812534148038588*^9}, {3.812536790654726*^9, 3.812536791429*^9}, {
   3.81253682956681*^9, 3.8125369689954224`*^9}, {3.8125370586532965`*^9, 
   3.8125372397780027`*^9}, {3.8125385596505833`*^9, 3.812538676448841*^9}, 
   3.812538861116849*^9, {3.8125389033215933`*^9, 3.812539081648887*^9}, {
   3.812539444538463*^9, 3.8125394509039764`*^9}, {3.812539494462495*^9, 
   3.812539525325138*^9}, {3.8125396055728197`*^9, 3.8125396073724227`*^9}, {
   3.81253965629671*^9, 3.8125396748880744`*^9}, {3.812542267952508*^9, 
   3.812542277702776*^9}, {3.812542357299495*^9, 3.812542419927765*^9}, {
   3.812542452170416*^9, 3.8125424656452985`*^9}, {3.8125425116271605`*^9, 
   3.812542646252655*^9}, {3.812542697598118*^9, 3.812542729637248*^9}, {
   3.8125428290435963`*^9, 3.8125428657922716`*^9}, {3.8125429166774006`*^9, 
   3.812543040370758*^9}, {3.812543118932597*^9, 3.8125431849021015`*^9}, {
   3.8125432224493356`*^9, 3.812543246588835*^9}, {3.8125433090943813`*^9, 
   3.81254331307657*^9}, {3.812543512892166*^9, 3.8125435152242827`*^9}, {
   3.8125436030828767`*^9, 3.8125436411126423`*^9}, {3.8125440000431895`*^9, 
   3.81254403706137*^9}, {3.812544079268819*^9, 3.8125440852316756`*^9}, {
   3.812544168620633*^9, 3.812544175389021*^9}, {3.8125442397519765`*^9, 
   3.8125442447551203`*^9}, {3.8125443028435984`*^9, 3.812544360066058*^9}, {
   3.8125444134074025`*^9, 3.8125444560596223`*^9}, {3.812544549216535*^9, 
   3.8125445666617503`*^9}, {3.8125446293995285`*^9, 
   3.8125446593592825`*^9}, {3.812544876344892*^9, 3.8125449732909*^9}, 
   3.8125472487423935`*^9, {3.81254759740233*^9, 3.812547672317289*^9}, 
   3.81254999628323*^9, {3.8125539742099547`*^9, 3.812553986092012*^9}, 
   3.8125542195528135`*^9, {3.8125542754123697`*^9, 3.8125542828886127`*^9}, {
   3.8125543606375694`*^9, 3.812554379588892*^9}, {3.8125548674039593`*^9, 
   3.812554903921565*^9}, 3.8125550743376255`*^9, {3.8125557707201576`*^9, 
   3.8125558052052517`*^9}, {3.812556208004566*^9, 3.812556401511136*^9}, {
   3.8125568053192644`*^9, 3.812556806042549*^9}, {3.8125571202906723`*^9, 
   3.812557121930915*^9}, {3.812557154390768*^9, 3.812557156430358*^9}, {
   3.8125600295196605`*^9, 3.8125600357889447`*^9}, {3.8126234012908964`*^9, 
   3.812623403787242*^9}, {3.812623507834958*^9, 3.8126235127427607`*^9}, {
   3.8126235651918774`*^9, 3.8126235737885637`*^9}, {3.81263741416881*^9, 
   3.812637414227933*^9}, {3.8126375448450394`*^9, 3.812637563736486*^9}, {
   3.8126376143949175`*^9, 3.81263763479031*^9}, {3.812637677042389*^9, 
   3.8126376771523123`*^9}, {3.8126381297608023`*^9, 
   3.8126381362221394`*^9}, {3.812638184823267*^9, 3.8126381853607826`*^9}, {
   3.8126382364435573`*^9, 3.812638237928755*^9}, {3.812638302245673*^9, 
   3.8126383245418596`*^9}, {3.812638437116392*^9, 3.8126384683255544`*^9}, {
   3.812638515708419*^9, 3.812638573239299*^9}, {3.812638608916949*^9, 
   3.812638633958487*^9}, {3.812638695201889*^9, 3.812638791006526*^9}, 
   3.8126389026263046`*^9, {3.8126390566409426`*^9, 3.8126390764969325`*^9}, {
   3.812639722467697*^9, 3.8126397264826336`*^9}, {3.81263976244016*^9, 
   3.812639763315892*^9}, 3.812725363025738*^9, 3.812725402693081*^9, {
   3.8127772688633823`*^9, 3.81277727842935*^9}, {3.812812082281085*^9, 
   3.8128121112809052`*^9}, {3.812815307363823*^9, 3.8128153091787014`*^9}, {
   3.81281535000066*^9, 3.8128155778855495`*^9}, 3.8128156166394544`*^9, {
   3.8128173399927435`*^9, 3.812817340532322*^9}, {3.8128173924203234`*^9, 
   3.812817431634884*^9}, 3.812817577140004*^9, 3.8128176551112885`*^9, 
   3.8128199616731586`*^9, 3.812820090799766*^9, {3.812857059005416*^9, 
   3.812857064971696*^9}, {3.8129689496288843`*^9, 3.812968949840973*^9}, {
   3.8129694805265136`*^9, 3.8129694986424537`*^9}, {3.8129696706696835`*^9, 
   3.8129698445529547`*^9}, {3.8129698927192097`*^9, 
   3.8129699051865788`*^9}, {3.8130312656129613`*^9, 
   3.8130313180096693`*^9}, {3.8130313729983826`*^9, 
   3.8130313749198914`*^9}, {3.8130314269858055`*^9, 
   3.8130314632021427`*^9}, {3.813031533824063*^9, 3.8130315366850643`*^9}, {
   3.813031774534068*^9, 3.813031787602756*^9}, {3.8130326675590367`*^9, 
   3.8130327077203846`*^9}, {3.8130367296365976`*^9, 3.813036745755535*^9}, {
   3.813037056992572*^9, 3.8130370755295296`*^9}, {3.813037158689211*^9, 
   3.813037179328226*^9}, 3.8130373878999033`*^9, {3.8130374299361672`*^9, 
   3.813037455610856*^9}, 3.8130374920753465`*^9, {3.813037578968634*^9, 
   3.8130375906745176`*^9}, {3.813037724099369*^9, 3.8130377331763077`*^9}, {
   3.813038171838731*^9, 3.8130381722726*^9}, {3.8130408896929226`*^9, 
   3.8130408910189695`*^9}, 3.8130409782712493`*^9, {3.81304101464746*^9, 
   3.8130410616967793`*^9}, {3.8130411114150534`*^9, 
   3.8130411203774433`*^9}, {3.8130411594008937`*^9, 
   3.8130411916611986`*^9}, {3.8130412383493223`*^9, 3.813041256374399*^9}, {
   3.813041489728654*^9, 3.8130416143735895`*^9}, {3.8130416560326366`*^9, 
   3.813041685769533*^9}, {3.8130417292980757`*^9, 3.813041729976598*^9}, 
   3.8130417739643044`*^9, {3.8130418054757767`*^9, 3.8130418307551527`*^9}, {
   3.8130418745871463`*^9, 3.8130419029230986`*^9}, {3.813041934260615*^9, 
   3.8130420100168743`*^9}, {3.8130420499687457`*^9, 
   3.8130420554283934`*^9}, {3.81304238269481*^9, 3.8130425855462837`*^9}, {
   3.8130426516669693`*^9, 3.8130426640925913`*^9}, {3.8130428121245127`*^9, 
   3.8130428151849303`*^9}, {3.813043088734725*^9, 3.813043282147213*^9}, {
   3.813043351244296*^9, 3.813043556216648*^9}, {3.81304368282933*^9, 
   3.8130438166631927`*^9}, {3.813044039526078*^9, 3.813044046387246*^9}, {
   3.813044083166909*^9, 3.8130442305049076`*^9}, {3.8130583972824154`*^9, 
   3.8130585135605087`*^9}, {3.813063557877471*^9, 3.8130635807318764`*^9}, {
   3.813063637853836*^9, 3.813063716493099*^9}, {3.813063899759198*^9, 
   3.813063964878993*^9}, {3.8130641808014545`*^9, 3.813064184613282*^9}, {
   3.8130704408842745`*^9, 3.8130704657475243`*^9}, {3.8130705193849463`*^9, 
   3.8130705357729797`*^9}, {3.81307056634612*^9, 3.8130706125668745`*^9}, {
   3.813070893190463*^9, 3.813070919356167*^9}, {3.813071023648409*^9, 
   3.8130710246390734`*^9}, {3.8130881342701364`*^9, 
   3.8130881799554043`*^9}, {3.8130882668104124`*^9, 3.813088268122032*^9}, {
   3.813088452759021*^9, 3.8130886148781157`*^9}, {3.813130550857422*^9, 
   3.8131305618403854`*^9}, {3.8131307237271156`*^9, 3.813130885534235*^9}, {
   3.8131310416017084`*^9, 3.813131092082677*^9}, {3.813131139427269*^9, 
   3.813131194675815*^9}, 3.813131419328435*^9, {3.8131315866194935`*^9, 
   3.813131590182379*^9}, 3.813131701495509*^9, 3.8131319070177546`*^9, {
   3.8131321605007644`*^9, 3.813132182351931*^9}, {3.81313221359403*^9, 
   3.813132227343089*^9}, {3.8131336942983823`*^9, 3.813133713446228*^9}, {
   3.8131337470409503`*^9, 3.8131337518579736`*^9}, {3.8131337840684824`*^9, 
   3.81313382381702*^9}, {3.8131338637659426`*^9, 3.813133957068187*^9}, 
   3.813134811281822*^9, 3.8131348617866917`*^9, {3.813135150763693*^9, 
   3.8131351874713774`*^9}, {3.813135411545395*^9, 3.8131354279946833`*^9}, {
   3.813135706918933*^9, 3.8131357402318497`*^9}, {3.813135820269389*^9, 
   3.8131358472915993`*^9}, {3.8131359212448597`*^9, 3.813135924621379*^9}, {
   3.81313595736411*^9, 3.8131359648761883`*^9}, {3.8131360492329226`*^9, 
   3.8131360689247103`*^9}, {3.813136165904505*^9, 3.81313620772611*^9}, {
   3.8131502051446323`*^9, 3.813150209607569*^9}, {3.813155487782015*^9, 
   3.8131555164022713`*^9}, 3.8131556785516634`*^9, {3.8131557273794117`*^9, 
   3.813155805290055*^9}, {3.813156153394803*^9, 3.8131562057083497`*^9}, {
   3.813156250162635*^9, 3.813156252567073*^9}, {3.813156346722686*^9, 
   3.8131563766677856`*^9}, {3.8131564704304457`*^9, 
   3.8131566042775517`*^9}, {3.813156694135028*^9, 3.8131567210761003`*^9}, {
   3.8131567570528545`*^9, 3.813156793543642*^9}, {3.8131568415568104`*^9, 
   3.813156859517457*^9}, {3.813156906386957*^9, 3.813156906491952*^9}, {
   3.8131570455385547`*^9, 3.813157059276197*^9}, {3.813157091987323*^9, 
   3.8131572943061523`*^9}, 3.813157616429283*^9, {3.8131577150799904`*^9, 
   3.8131577212411776`*^9}, {3.8131577736336136`*^9, 3.813157799353365*^9}, {
   3.813157840677986*^9, 3.813157885316971*^9}, {3.8131579157412233`*^9, 
   3.8131579304770412`*^9}, {3.8131580101453123`*^9, 
   3.8131580345574737`*^9}, {3.813158096655555*^9, 3.8131581390376463`*^9}, {
   3.8131583215769544`*^9, 3.813158456453334*^9}, {3.8131586166619797`*^9, 
   3.8131587963858204`*^9}, {3.8131588299958735`*^9, 3.813158985432478*^9}, {
   3.8131592028500834`*^9, 3.8131593040837913`*^9}, 3.8131593419667635`*^9, {
   3.8131593745051656`*^9, 3.8131594087175727`*^9}, {3.813159463322958*^9, 
   3.8131595113404093`*^9}, {3.8131596130161943`*^9, 3.813159673688205*^9}, {
   3.813159707392394*^9, 3.813159713627451*^9}, 3.813159998862152*^9, {
   3.8131601559972878`*^9, 3.8131601867319183`*^9}, {3.813160219013827*^9, 
   3.813160320235606*^9}, {3.8131630872630725`*^9, 3.8131631658186665`*^9}, 
   3.813163248617896*^9, {3.8131632952990303`*^9, 3.813163299496812*^9}, {
   3.81321013860923*^9, 3.8132101421014414`*^9}, {3.813211020234423*^9, 
   3.8132110625909534`*^9}, {3.813212447172059*^9, 3.8132124797822046`*^9}, {
   3.813222795813166*^9, 3.813222856217043*^9}, {3.813228524405354*^9, 
   3.813228543595029*^9}, {3.813228657842312*^9, 3.813228699701003*^9}, {
   3.8132295976941843`*^9, 3.8132296050584345`*^9}, {3.8133769292461834`*^9, 
   3.8133769304944*^9}, 3.8134022011980047`*^9, {3.8134022441654587`*^9, 
   3.8134023977366257`*^9}, {3.813402430293248*^9, 3.8134026161647863`*^9}, {
   3.8134026661106367`*^9, 3.813402688900943*^9}, {3.8134027195254555`*^9, 
   3.813402931086492*^9}, {3.813403016665412*^9, 3.813403091679245*^9}, {
   3.8134031294116306`*^9, 3.8134031302841644`*^9}, {3.8134033742852583`*^9, 
   3.813403421252468*^9}, {3.8134034793346148`*^9, 3.813403696654086*^9}, {
   3.813403791449788*^9, 3.813403835785968*^9}, {3.813403901178776*^9, 
   3.813403969762951*^9}, {3.8134040384629407`*^9, 3.8134040421439843`*^9}, {
   3.813404090817814*^9, 3.8134040983279552`*^9}, {3.813404225288183*^9, 
   3.8134042289285855`*^9}, {3.8134044782544403`*^9, 3.813404491203104*^9}, {
   3.8134045923299775`*^9, 3.8134045989145737`*^9}, {3.813404647774459*^9, 
   3.8134046521655245`*^9}, {3.8134046831492324`*^9, 
   3.8134046930600243`*^9}, {3.813406168539953*^9, 3.8134061713236065`*^9}, {
   3.813406406545659*^9, 3.8134064349474835`*^9}, {3.8134064744981036`*^9, 
   3.8134064761482215`*^9}, {3.8134132025477467`*^9, 
   3.8134132446856813`*^9}, {3.8134132789916368`*^9, 3.81341328577538*^9}, {
   3.8134133227698154`*^9, 3.813413599680966*^9}, {3.8134136708372574`*^9, 
   3.813414035625087*^9}, 3.813414078363448*^9, {3.8134150798938456`*^9, 
   3.8134155384447985`*^9}, {3.8134156047315483`*^9, 3.8134159458279963`*^9}, 
   3.8134225906104727`*^9, {3.813471138578129*^9, 3.8134711904321256`*^9}, {
   3.813471221919299*^9, 3.8134713286918726`*^9}, {3.8134713593333225`*^9, 
   3.8134714803987255`*^9}, {3.8134715228898563`*^9, 
   3.8134716527010555`*^9}, {3.813471692151478*^9, 3.81347181929915*^9}, {
   3.8134718621608205`*^9, 3.8134718763743763`*^9}, {3.8134734928575153`*^9, 
   3.813473610996155*^9}, {3.813475278943569*^9, 3.813475413539812*^9}, {
   3.8134755231139317`*^9, 3.813475625538395*^9}, {3.81347567645512*^9, 
   3.813475683836157*^9}, {3.8134757559554863`*^9, 3.813475770005437*^9}, {
   3.813475884590865*^9, 3.813475898154845*^9}, {3.8134759299838266`*^9, 
   3.8134759647511826`*^9}, {3.813475995076616*^9, 3.8134760073422976`*^9}, {
   3.813476287382476*^9, 3.813476288096594*^9}, {3.8134763517500043`*^9, 
   3.8134763854064584`*^9}, {3.813476661360769*^9, 3.8134766746820908`*^9}, {
   3.813476794732875*^9, 3.8134767969831095`*^9}, {3.81347695997129*^9, 
   3.813476964114562*^9}, 3.8134774192797155`*^9, {3.8134775498473215`*^9, 
   3.8134775914472575`*^9}, {3.81347763482309*^9, 3.8134776546939945`*^9}, {
   3.8134777532417665`*^9, 3.8134779099127617`*^9}, {3.813477958823283*^9, 
   3.8134779929887557`*^9}, {3.813478069229291*^9, 3.813478236656146*^9}, {
   3.813478482007072*^9, 3.8134784821760845`*^9}, {3.8134786187472763`*^9, 
   3.8134786510519547`*^9}, 3.8134787724511533`*^9, {3.813478826023052*^9, 
   3.8134788538400216`*^9}, {3.8134822656654234`*^9, 
   3.8134822746038837`*^9}, {3.8134863826606894`*^9, 3.813486399039065*^9}, {
   3.813486886011898*^9, 3.813486888491133*^9}, 3.8135492351037583`*^9, {
   3.813555720393643*^9, 3.8135557206482143`*^9}, {3.8135681173833714`*^9, 
   3.8135681762111506`*^9}, {3.8135682068115644`*^9, 
   3.8135682363590965`*^9}, {3.8135683044504175`*^9, 3.813568390261017*^9}, {
   3.8135684892656183`*^9, 3.813568539556617*^9}, {3.813568597451456*^9, 
   3.8135686128792*^9}, {3.813568684355543*^9, 3.813568697429904*^9}, {
   3.813568740057308*^9, 3.813568751090584*^9}, {3.8135687916131873`*^9, 
   3.813568821756655*^9}, {3.813568867809167*^9, 3.8135688780494957`*^9}, {
   3.8135689544093723`*^9, 3.8135689556789103`*^9}, 3.8135690631913*^9, {
   3.813569118180578*^9, 3.8135691608202267`*^9}, 3.8135692173402815`*^9, {
   3.813569407723482*^9, 3.813569409530061*^9}, {3.8135696007140613`*^9, 
   3.813569635638771*^9}, {3.8135696728685513`*^9, 3.8135697032914543`*^9}, {
   3.8135697406678715`*^9, 3.813569761637687*^9}, {3.813569901580696*^9, 
   3.8135699324801064`*^9}, {3.8135699830299425`*^9, 3.813570282496718*^9}, {
   3.8135703188217373`*^9, 3.8135704531968184`*^9}, {3.813570526322084*^9, 
   3.8135706232333007`*^9}, {3.8135706648523903`*^9, 
   3.8135709990816383`*^9}, {3.8135710463653774`*^9, 3.813571098715231*^9}, {
   3.8135711601477823`*^9, 3.8135712590740256`*^9}, {3.8135713029113894`*^9, 
   3.8135713316626005`*^9}, {3.8135714306811543`*^9, 
   3.8135714757700996`*^9}, {3.8135718738293853`*^9, 
   3.8135719069632254`*^9}, {3.8135719600190983`*^9, 3.813571984950075*^9}, {
   3.8135720948872576`*^9, 3.813572105006055*^9}, {3.8135721560880103`*^9, 
   3.813572165441533*^9}, {3.8135722070407486`*^9, 3.813572259878564*^9}, {
   3.813572292891075*^9, 3.813572303991321*^9}, {3.813584781817226*^9, 
   3.8135847998125825`*^9}, {3.8135848485213223`*^9, 
   3.8135848665617695`*^9}, {3.813585684823095*^9, 3.8135856862851353`*^9}, {
   3.81374853470649*^9, 3.8137485516972904`*^9}, {3.813900683135374*^9, 
   3.8139006902478027`*^9}, {3.8139063450676537`*^9, 3.813906370276497*^9}, {
   3.813990620672624*^9, 3.8139906420076885`*^9}, 3.8139906726893644`*^9, {
   3.8139907240113573`*^9, 3.8139907846414456`*^9}, {3.8139911928136168`*^9, 
   3.8139912007056513`*^9}, {3.8139912413106384`*^9, 
   3.8139912526089597`*^9}, {3.8139913319543796`*^9, 
   3.8139913396805553`*^9}, {3.8139913860992117`*^9, 
   3.8139914269250045`*^9}, {3.8139920161777954`*^9, 3.813992097637776*^9}, 
   3.8139921553670483`*^9, {3.8139922479818153`*^9, 3.8139922624340525`*^9}, {
   3.8139946269028864`*^9, 3.8139946500488443`*^9}, {3.8139951152054243`*^9, 
   3.8139951174896564`*^9}, {3.813995311579878*^9, 3.8139953118541236`*^9}, {
   3.8140190008008156`*^9, 3.814019027611074*^9}, {3.814019061857725*^9, 
   3.814019064674618*^9}, {3.814026075463399*^9, 3.8140261380627737`*^9}, {
   3.8140262001085367`*^9, 3.8140262187350693`*^9}, {3.8140263056433506`*^9, 
   3.814026313751529*^9}, {3.8140269409811*^9, 3.814027025741394*^9}, 
   3.8140272108611364`*^9, {3.814027377435258*^9, 3.81402738020312*^9}, {
   3.814027432049161*^9, 3.814027432518957*^9}, 3.8140279169077024`*^9, {
   3.814027986486305*^9, 3.8140279879684167`*^9}, {3.81416599301001*^9, 
   3.8141660034624844`*^9}, {3.8141660417510767`*^9, 3.814166098268031*^9}, {
   3.814334812009592*^9, 3.814334820187106*^9}, {3.81433486158364*^9, 
   3.814334875255866*^9}, {3.8143349308369684`*^9, 3.81433493417773*^9}, {
   3.8143350482350826`*^9, 3.8143350739961734`*^9}, {3.8143354789390926`*^9, 
   3.814335507458448*^9}, {3.8143359323961053`*^9, 3.814336043683939*^9}, 
   3.814336882310274*^9, {3.8143369239960093`*^9, 3.8143369304850245`*^9}, {
   3.814337018592527*^9, 3.8143370217459917`*^9}, {3.8143370705883317`*^9, 
   3.8143370727575006`*^9}, {3.8143373701254325`*^9, 3.81433740972605*^9}, {
   3.814337760864001*^9, 3.8143378352083673`*^9}, {3.81433788594742*^9, 
   3.8143379202828627`*^9}, {3.814338032156517*^9, 3.814338048115646*^9}, {
   3.814338362408677*^9, 3.8143383788795977`*^9}, 3.814338435700997*^9, {
   3.814338470396975*^9, 3.8143384751854153`*^9}, {3.814688935502838*^9, 
   3.814688939354386*^9}, {3.8146898860725927`*^9, 3.814689897395653*^9}, {
   3.8146899274630194`*^9, 3.814689932812958*^9}, {3.814689989356784*^9, 
   3.814689994010878*^9}, {3.814690063514123*^9, 3.814690111449895*^9}, 
   3.8146902736228404`*^9, {3.814690682979352*^9, 3.8146906918765306`*^9}, {
   3.8146907683017597`*^9, 3.8146907981445017`*^9}, {3.8146914331622643`*^9, 
   3.8146914536331563`*^9}, 3.814691622413927*^9, {3.8146928043978624`*^9, 
   3.8146928609928246`*^9}, {3.8146930222573833`*^9, 
   3.8146930369272547`*^9}, {3.8146932521868916`*^9, 3.8146932769456015`*^9}},
 ExpressionUUID -> "1ab493f5-5a04-48d2-b2ba-dc06ff40bd9b"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Options", "[", "scalarRSFOperator", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<waveLength\>\"", "\[Rule]", " ", "waveLength"}], ",", 
       RowBox[{"\"\<padLevel\>\"", "\[Rule]", " ", "1"}], ",", 
       RowBox[{"\"\<defocusZ\>\"", "\[Rule]", " ", "0"}], ",", 
       RowBox[{
       "\"\<refractiveIndexMedium\>\"", "\[Rule]", " ", "refIndexAir"}], ",", 
       RowBox[{"\"\<InterpolationOrder\>\"", "\[Rule]", " ", "10"}]}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"scalarRSFOperator", "[", 
      RowBox[{
      "rayCoordinateFocus_List", ",", "rayTiltFocus_List", ",", 
       "opticalLengthFocus_List", ",", "clearApRad_", ",", "nWDP_", ",", 
       "focalDistance_", ",", 
       RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], "[", "f_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "interpolationOrder", ",", "padLevel", ",", "lambda", ",", "defocusZ", 
        ",", "FTf", ",", "nWDPpad", ",", "k0", ",", "dkx", ",", "wWDP", ",", 
        "S", ",", "sx", ",", "sy", ",", "sz", ",", "EF"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"lambda", "=", 
        RowBox[{"OptionValue", "[", "\"\<waveLength\>\"", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"padLevel", "=", 
        RowBox[{"OptionValue", "[", "\"\<padLevel\>\"", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"k0", "=", 
        RowBox[{"2", " ", 
         RowBox[{"Pi", "/", "lambda"}], "*", 
         RowBox[{
         "OptionValue", "[", "\"\<refractiveIndexMedium\>\"", "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"interpolationOrder", "=", 
        RowBox[{"OptionValue", "[", "\"\<InterpolationOrder\>\"", "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"defocusZ", "=", 
        RowBox[{"OptionValue", "[", "\"\<defocusZ\>\"", "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"wWDP", "=", 
        RowBox[{"clearApRad", "/", 
         RowBox[{"(", 
          RowBox[{"\[Sqrt]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"clearApRad", "^", "2"}], "+", 
             RowBox[{"focalDistance", "^", "2"}]}], ")"}]}], ")"}]}]}], ";", 
       " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"nWDPpad", "=", 
        RowBox[{"nWDP", "*", "padLevel"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"dkx", "=", 
        RowBox[{"Pi", "/", 
         RowBox[{"(", 
          RowBox[{"wWDP", "*", "k0"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"EF", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"UnsameQ", "[", 
            RowBox[{"rayCoordinateFocus", ",", 
             RowBox[{"{", "}"}]}], "]"}], "\[Equal]", "True"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"S", "=", 
            RowBox[{"Interpolation", "[", 
             RowBox[{
              RowBox[{"Map", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
                   RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "2"}], "]"}], "]"}], ",", 
                   RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "&"}], ",", 
                RowBox[{"Transpose", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"opticalLengthFocus", "-", 
                    RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "*", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "2"}], "]"}], "]"}], "*", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "2"}], "]"}], "]"}]}]}], "&"}], ",", 
                    RowBox[{"Transpose", "@", 
                    RowBox[{"{", 
                    RowBox[{"rayCoordinateFocus", ",", "rayTiltFocus"}], 
                    "}"}]}]}], "]"}]}], ",", "rayTiltFocus"}], "}"}], "]"}]}],
                "]"}], ",", 
              RowBox[{"InterpolationOrder", "\[Rule]", "1"}], ",", 
              RowBox[{"\"\<ExtrapolationHandler\>\"", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"0", "&"}], ",", 
                 RowBox[{"\"\<WarningMessage\>\"", "\[Rule]", "False"}]}], 
                "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"N", "@", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"sz", "=", 
                RowBox[{"\[Sqrt]", 
                 RowBox[{"(", 
                  RowBox[{"1", "-", 
                   SuperscriptBox["sx", "2"], "-", 
                   SuperscriptBox["sy", "2"]}], ")"}]}]}], ";", 
               RowBox[{
                RowBox[{"Exp", "[", 
                 RowBox[{"\[ImaginaryI]", " ", "k0", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"S", "[", 
                    RowBox[{"sx", ",", "sy"}], "]"}], "+", 
                    RowBox[{"sz", " ", "defocusZ"}]}], ")"}]}], "]"}], 
                RowBox[{
                 RowBox[{"f", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "sx"}], " ", 
                    RowBox[{"focalDistance", "/", "sz"}]}], ",", 
                   RowBox[{
                    RowBox[{"-", "sy"}], " ", 
                    RowBox[{"focalDistance", "/", "sz"}]}]}], "]"}], "/", 
                 RowBox[{"sz", "^", "2"}]}], "*", 
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"\[ImaginaryI]", " ", 
                   RowBox[{"sz", "/", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"k0", "^", "2"}], " ", "focalDistance"}], 
                    ")"}]}]}]}], ")"}]}]}], ",", 
              RowBox[{"{", 
               RowBox[{"sx", ",", 
                RowBox[{
                 RowBox[{"-", "wWDP"}], "+", 
                 RowBox[{"2", 
                  RowBox[{"wWDP", "/", "nWDP"}]}]}], ",", "wWDP", ",", 
                RowBox[{"2", 
                 RowBox[{"wWDP", "/", "nWDP"}]}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"sy", ",", 
                RowBox[{
                 RowBox[{"-", "wWDP"}], "+", 
                 RowBox[{"2", 
                  RowBox[{"wWDP", "/", "nWDP"}]}]}], ",", "wWDP", ",", 
                RowBox[{"2", 
                 RowBox[{"wWDP", "/", "nWDP"}]}]}], "}"}]}], "]"}]}]}], ",", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"N", "@", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"sz", "=", 
               RowBox[{"\[Sqrt]", 
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  SuperscriptBox["sx", "2"], "-", 
                  SuperscriptBox["sy", "2"]}], ")"}]}]}], ";", 
              RowBox[{
               RowBox[{"Exp", "[", 
                RowBox[{"\[ImaginaryI]", " ", "k0", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"focalDistance", " ", "/", "sz"}], "+", 
                   RowBox[{"sz", " ", "defocusZ"}]}], ")"}]}], "]"}], 
               RowBox[{
                RowBox[{"f", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "sx"}], " ", 
                   RowBox[{"focalDistance", "/", "sz"}]}], ",", 
                  RowBox[{
                   RowBox[{"-", "sy"}], " ", 
                   RowBox[{"focalDistance", "/", "sz"}]}]}], "]"}], "/", 
                RowBox[{"sz", "^", "2"}]}], "*", 
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 RowBox[{"\[ImaginaryI]", " ", 
                  RowBox[{"sz", "/", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"k0", "^", "2"}], " ", "focalDistance"}], 
                    ")"}]}]}]}], ")"}]}]}], ",", 
             RowBox[{"{", 
              RowBox[{"sx", ",", 
               RowBox[{
                RowBox[{"-", "wWDP"}], "+", 
                RowBox[{"2", 
                 RowBox[{"wWDP", "/", "nWDP"}]}]}], ",", "wWDP", ",", 
               RowBox[{"2", 
                RowBox[{"wWDP", "/", "nWDP"}]}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"sy", ",", 
               RowBox[{
                RowBox[{"-", "wWDP"}], "+", 
                RowBox[{"2", 
                 RowBox[{"wWDP", "/", "nWDP"}]}]}], ",", "wWDP", ",", 
               RowBox[{"2", 
                RowBox[{"wWDP", "/", "nWDP"}]}]}], "}"}]}], "]"}]}]}], 
         "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"FTf", "=", 
        RowBox[{"RotateRight", "[", 
         RowBox[{
          RowBox[{"Fourier", "[", 
           RowBox[{"RotateLeft", "[", 
            RowBox[{"EF", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"nWDP", "/", "2"}], "-", "1"}], ",", 
               RowBox[{
                RowBox[{"nWDP", "/", "2"}], "-", "1"}]}], "}"}]}], "]"}], 
           "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"nWDP", "/", "2"}], "-", "1"}], ",", 
            RowBox[{
             RowBox[{"nWDP", "/", "2"}], "-", "1"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{"ArrayPad", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "4"}], " ", "\[ImaginaryI]", " ", 
            RowBox[{"clearApRad", "^", "2"}], " ", 
            RowBox[{"FTf", "/", 
             RowBox[{"(", 
              RowBox[{"lambda", "*", "focalDistance", " ", "nWDP"}], 
              ")"}]}]}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"nWDPpad", "-", "nWDP"}], ")"}], "/", "2"}]}], "]"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "dkx"}], "*", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"nWDPpad", "/", "2"}], "-", "1"}], ")"}]}], ",", 
             RowBox[{"dkx", "*", 
              RowBox[{"nWDPpad", "/", "2"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "dkx"}], "*", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"nWDPpad", "/", "2"}], "-", "1"}], ")"}]}], ",", 
             RowBox[{"dkx", "*", 
              RowBox[{"nWDPpad", "/", "2"}]}]}], "}"}]}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "interpolationOrder"}], ",", 
         RowBox[{"\"\<ExtrapolationHandler\>\"", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"0", "&"}], ",", 
            RowBox[{"\"\<WarningMessage\>\"", "\[Rule]", "False"}]}], 
           "}"}]}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8136595785684924`*^9, 3.813659684260637*^9}}]
},
WindowSize->{1920, 997},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
AutoStyleOptions->{"CommentStyle"->{FontWeight -> Plain, FontColor -> RGBColor[
    Rational[2, 3], 0, 0], ShowAutoStyles -> False, ShowSyntaxStyles -> False,
   AutoNumberFormatting -> False, FontFamily -> "Consolas"}},
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb",
ExpressionUUID -> "260dac70-898e-4a21-889a-fd1bac2eb9a9"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 5909, 118, 525, "Input"],
Cell[6470, 140, 444, 9, 50, "Input"],
Cell[6917, 151, 295266, 4845, 569, "Input"],
Cell[302186, 4998, 52529, 943, 811, "Input"],
Cell[354718, 5943, 1222, 26, 88, "Input"],
Cell[355943, 5971, 889932, 22433, 18369, "Input"],
Cell[1245878, 28406, 12028, 293, 601, "Input"]
}
]
*)

