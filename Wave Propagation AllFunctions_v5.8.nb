(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    887815,      20551]
NotebookOptionsPosition[    887020,      20528]
NotebookOutlinePosition[    887646,      20547]
CellTagsIndexPosition[    887603,      20544]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Copyright", " ", 
     RowBox[{"(", "C", ")"}], " ", "2020", " ", "Craciun", " ", "Alexandru", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "This", " ", "package", 
     " ", "is", " ", 
     RowBox[{"free", ":", " ", 
      RowBox[{"you", " ", "can", " ", "redistribute", " ", "it", " ", 
       RowBox[{"and", "/", "or"}], " ", "modify", " ", "it", " ", "under", 
       " ", "the", "\n", " ", "terms", " ", "of", " ", "the", " ", "GNU", " ",
        "General", " ", "Public", " ", "License", " ", "as", " ", "published",
        " ", "by", " ", "the", " ", "Free", " ", "Software", "\n", " ", 
       "Foundation"}]}]}], ",", " ", 
    RowBox[{
    "either", " ", "version", " ", "3", " ", "of", " ", "the", " ", 
     "License"}], ",", " ", 
    RowBox[{"or", " ", 
     RowBox[{"(", 
      RowBox[{"at", " ", "your", " ", "option"}], ")"}], " ", "any", "\n", 
     " ", "later", " ", 
     RowBox[{"version", ".", " ", "This"}], " ", "program", " ", "is", " ", 
     "distributed", " ", "in", " ", "the", " ", "hope", " ", "that", " ", 
     "it", " ", "will", " ", "be", "\n", " ", "useful"}], ",", " ", 
    RowBox[{
     RowBox[{"but", " ", "WITHOUT", " ", "ANY", " ", "WARRANTY"}], ";", " ", 
     RowBox[{
     "without", " ", "even", " ", "the", " ", "implied", " ", "warranty", " ",
       "of", "\n", " ", "MERCHANTABILITY", " ", "or", " ", "FITNESS", " ", 
      "FOR", " ", "A", " ", "PARTICULAR", " ", 
      RowBox[{"PURPOSE", ".", " ", "See"}], " ", "the", " ", "GNU", " ", 
      "General", "\n", " ", "Public", " ", "License", " ", "for", " ", "more",
       " ", 
      RowBox[{"details", ".", " ", "You"}], " ", "should", " ", "have", " ", 
      "received", " ", "a", " ", "copy", " ", "of", " ", "the", "\n", " ", 
      "GNU", " ", "General", " ", "Public", " ", "License", " ", "along", " ",
       "with", " ", "this", " ", "program", "\[IndentingNewLine]", "if", " ", 
      "not"}]}], ",", " ", 
    RowBox[{
     RowBox[{"see", " ", "<", 
      RowBox[{"https", ":"}]}], "//", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"www", ".", "gnu", ".", "org"}], "/", "licenses"}], "/"}], 
      ">", 
      RowBox[{".", "\[IndentingNewLine]", "\n", " ", 
       RowBox[{"Author", ":", " ", 
        RowBox[{"CRACIUN", " ", "Alexandru"}]}]}]}]}], ",", " ", 
    RowBox[{"e", "-", 
     RowBox[{"mail", ":", 
      RowBox[{
       RowBox[{
        RowBox[{"alexandru", ".", 
         RowBox[{"craciun", "@", "inflpr"}], ".", "ro"}], 
        "\[IndentingNewLine]", "\n", " ", "Please", " ", "send", " ", "me", 
        " ", "an", " ", "e"}], "-", 
       RowBox[{
       "mail", " ", "if", " ", "you", " ", "have", " ", "found", " ", "a", 
        " ", "mistake", " ", "or", " ", "have", " ", 
        RowBox[{"questions", "."}]}]}]}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"This", " ", 
    RowBox[{"program", "/", "package"}], " ", "will", " ", "be", " ", 
    "periodically", " ", 
    RowBox[{"updated", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Project", " ", 
     RowBox[{"repository", ":", "\[IndentingNewLine]", "https", ":"}]}], "//", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"github", ".", "com"}], "/", "DeathMetal"}], "/", "Wave"}], 
     "-", "Propagation", "-", "Mathematica"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "This", " ", "code", " ", "is", " ", "compatible", " ", "with", " ", 
    "Mathematica", " ", "10", " ", "or", " ", "later", " ", 
    RowBox[{"versions", "."}]}], "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"Mathematica", " ", "is", " ", 
      RowBox[{"(", "C", ")"}], " ", "Copyright", " ", "1988"}], "-", 
     RowBox[{"2020", " ", "Wolfram", " ", "Research"}]}], ",", " ", 
    RowBox[{
     RowBox[{"Inc", ".", " ", "\[IndentingNewLine]", "Protected"}], " ", "by",
      " ", "copyright", " ", "law", " ", "and", " ", "international", " ", 
     RowBox[{"treaties", ".", " ", "\[IndentingNewLine]", "Unauthorized"}], 
     " ", "reproduction", " ", "or", " ", "distribution", " ", "subject", " ",
      "to", " ", "severe", " ", "civil", " ", "and", " ", "criminal", " ", 
     RowBox[{"penalties", ".", "\[IndentingNewLine]", "Mathematica"}], " ", 
     "is", " ", "a", " ", "registered", " ", "trademark", " ", "of", " ", 
     "Wolfram", " ", "Research"}], ",", " ", 
    RowBox[{"Inc", "."}]}], " ", "\[IndentingNewLine]", "*)"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.799734830103999*^9, 3.7997348595985923`*^9}, {
   3.799737011053923*^9, 3.7997370707973433`*^9}, 3.799737803326357*^9, {
   3.801554081386813*^9, 3.801554223167923*^9}, {3.8020605165090117`*^9, 
   3.8020606823614674`*^9}, {3.802060958410529*^9, 3.802060963158614*^9}, {
   3.806892928905779*^9, 3.8068929677006254`*^9}, {3.8075828490448112`*^9, 
   3.80758294253022*^9}, {3.807582976361475*^9, 3.8075830290288796`*^9}, {
   3.8075831624682417`*^9, 3.8075832198935575`*^9}, {3.8075832800500894`*^9, 
   3.807583313353713*^9}, {3.8076718102435102`*^9, 3.8076718709691024`*^9}, {
   3.8111303923176985`*^9, 3.8111304105253725`*^9}, {3.8125288940693684`*^9, 
   3.8125289261425247`*^9}, {3.8125289563715496`*^9, 3.81252896028636*^9}, {
   3.812544679538205*^9, 3.8125448115417614`*^9}, 3.813038186182825*^9, {
   3.813039419659491*^9, 3.8130394282581563`*^9}, {3.813158472403738*^9, 
   3.813158507206337*^9}, {3.813208686673805*^9, 3.8132087113063574`*^9}, 
   3.8135799135016284`*^9, 3.8135799746295176`*^9, {3.813580412303557*^9, 
   3.813580413072392*^9}, {3.813580651995528*^9, 3.8135807696558056`*^9}, {
   3.813580809054963*^9, 3.8135808213309927`*^9}},
 TextJustification->1.,
 ExpressionUUID -> "6b110523-436f-4a94-b8c4-f87f1cc5127c"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "These", " ", "are", " ", "the", " ", "custom", " ", "Color", " ", 
    "Functions", " ", "that", " ", "come", " ", "with", " ", "this", " ", 
    RowBox[{"program", "."}]}], " ", "*)"}]}]], "Input",
 CellChangeTimes->{{3.81340208767465*^9, 3.813402107768035*^9}, {
  3.81340217683115*^9, 3.8134021867490244`*^9}, {3.8135679580659475`*^9, 
  3.813567960065942*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsnQdcFMn6tY+uOefQbc4555yza1hzm3POWTHngDlnzDlnRUQRRQQUVIIg
IKAEFRQlz/m6axhExd39/vfu3fXePr/asert6p6e2emHqpnq8xYeOK7z0OQA
JqVRHzoPmNZ44sQBM37Loja6jp00YtjYIYNbj508ZNiQibUG/qIGPyYD5qv/
aXXq0qVLly5dunTp0qVLly5dunTp0qXrv1GpUuVOkSJnntxlJKmylK+aVKS2
VLKRVLGZVKud1Pg3qU03qUtPqVdfacAgaVB/rQzrKw3toz2O6i2NUqSxvaRx
PaWJXaXJXaSJv0lTO0tTO0kzf5VmtZVmt5LMWklzW0rzmkpzm0oLG0mL6kuL
60vL60hLa0jLa0jLakirKkkrKknm5aW1ZSTzktLaktL6ItKGItKmgtLmfHk3
yfLmvPm2SgW3S4W3ScW2SyV2SqV3SeX2SOV2S5UtpMr7pBr7pVoWUt39Ut2D
UqMDUtNDUvODUsujUpsjUodjUqfjUpeTWul+Qup5Sup7Uup/Whp4RhpyThp+
Vhp5Xhp9Thp7QZp0SZp+WZp5SZp5RTK7Js29Li26Li25Ji27Ia24Ia29Lq2/
JW20lDZbSTtuSbtuS3vvSBbW0sHb0uE70gkb6aStdO6edMFGunxfumorXX8g
Wd2XrO0kW3vpwUPJ/qH0yF5ysJMePZAcbbTicEdyuiM9uSU5q8VSenJNcrkq
PbsiPb0sPb0gPT8rPTsjuZ6U3E9IbscltyOSx1HJ85D04qDkYSF57pM890pe
uyTvnZL3NunlVslnk+S9SfJdL/maSz5rJb9V0qtVkv8yyW+ZFLBY8l8kvZkv
vZ4nBZpJgbOlNzOkoKlS4FQpZJIUPFF6O1YKGSsFj5HejpTeD9NK2CApVC39
pQ99pDC19JI+dpM+qKWrFN5Z+txB+qSW1lJEa+lzCymyuVaiG0pRDaXIelJ0
XSmqlhRbU4qpJkplKbqCFFdWilVLCSm2qGRQSyEpLr9ESaIsMW9e5sxFgPUb
/t3Xga6/TUhaaYDMSJ4bmfNDKopipVChPCqV0UrV0qhWEtVKoGZx1CmGeoXR
oDCa5tNKs7xomQutc6FddnTIjA4Z0TkdfkuDLinR9Rf0SAYFWukL9AP6AwOA
IaIMB0YAI4HRwBhgLDAOmAhMAiYDU4CpwHRgBjATMAPmiMd5wHxgIbAIWAws
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
RVoYf5UX4W7/lov0v1s6gnQE/RQIUuW+Z1nTfHmzFyrYe8cZgyn4eKU6CkLu
qjXLlynao5+Zb8y3e/na7mrWoHCW9GnTZ5fOCQRZr+2bOUPa/IVKVapSrVzJ
IlnSpmo4fntC/0/Wp5Q2BbNkzlakct8zT02/t0c+mdm0ipw7f9+xa0JCXafU
72sd+uUp3A8ta1w7b6ZMmarX6HDjyVtjcP2Ieg3HfVkvpOtH0hGkI+hnQVCS
uju7tjoG+jdeEbr+w9IRpCPop0bQmYHar1Lef9xR1z9UOoJ0BP3UCHp2bH69
2kND/rijrn+odATpCPqpEaTrZ9dXCNLNOnSzjv8usw5d/3yZEJTma8uyMt9a
lrURlmVtW+LXJC3L6nyxLBvwu5Zl4wtiktGyLLfJsiyTsCxLD7PUSViWmewQ
Ncuy5fGWZRmEZVnWJC3LtgjLsm1JWJY1+h3LssNJWJZN+hOWZVsSLMuu/mnL
siuwuaJZltkmaVl26P9uWeZhsizzmAHPyX+lZVmFJCzLPhktyyRhWZbLZFmW
8R9sWabrnyEkLWHcmiwXMuVD3qIoWgrly6NiaVQsgyqlUNVo3FoMtYuhXiE0
KISmsih50CInWudE2+z4NRM6ZEDntPgttWbc2iU5ugO9vjNuHfy1cesok3Hr
2O+MW6eZvFu/MW5d8JW/YvLlSLUUaVci4ypkXR1v3CqtQYF1KLIexTeirMm4
tdpW1PrGuHU32u9Fp33oaoEeB9BXGLcOEcato4Vx66SjmHFMGLeeNBm3njYZ
t55NZNx6EUeNxq1X441bb1zDzau4kci41cpk3GotjFttEhu3bhXGrRuEcau5
MG5dCadlmnGr00I8mf/FuNV52lfGrW4j4DoC7kPhNthk3KoI49ZuJuPWDvAx
Gre2gF8zYdza0GTcWgOB1YRxa0WElEdwWZNxayGEFhDGrXlNxq1ZTcatafAp
FT6lwGdoJQJfHFyjTH6tcYkqunGrriSVLl3eVKny5s1TQS5QRS5USy5WVy7b
RK7UWq7XXm7aVe7QQ+6myEo/ecgQedhArYwYIA/rJ4/oL4/sK4/pI49V5Am9
5Mnd5Sk95ald5Wld5Om/ybM7ymbt5Tnt5Llt5fmt5AWt5IXN5EXN5MWN5aWN
5WV15eV15ZW15BU1ZfNq8prK8trK8voK8rqy8vrS8roS8obi8sai8uZC8pZ8
+bbKhbbLRXbKxXfIpXbKpXbLZffKlfbIlXbLVS3kqvvlWhZy/QNyvYNyw8Ny
k0NysyNyy8Nyu+Pyr8fkX0/Iv52Su56Ue5yQlVNyr1Nyv9Py4LPy4HPysLPy
iPPy6Ivy2AvypEvylIvytMvy7Kvy7Cvy3GvyouvywuvysmvyihvyGkt53U15
3S15s6W81UredVvec0e2sNbK4bvyURv5lI180lY+d0++dF++aidffSBb3pet
7GRrO9n2ofzgkfzwkez4UHawkx89kB3vy4/vyk735CfW8uPbsrOl7HxTfnpT
drkqP7siP70sP70kPz8vPzsnu56W3U/Jbidlt2Oyx3H5xRH5xWHZa7/suV9+
sVf22iV775Ff7pB9tss+W2TvLbLvOtlvrfxqvRxgLvuby34r5ddL5YClsv8i
+c1C+fUCOXCu/GaOHDxLDpouB06Tg9UySX47SQ4ZLwePk9+OlN+PkN8Pl8OG
y6GDtfKhrxymFkX+qMgfumslvIv8uZP86VetRLSRP7eRI1vKkS3k6KZyVCOt
xNSXo+vJsbW1ElNdjqkqx1WS4yrKseVkQxnZUFI2FJPj1FJYZgGZ+WXKMnNJ
Gn8aNv67rwNdunTp0qVLly5dunTp0qVLly5dunTp0qVL13+z4uJoMGiuusbH
OONjLGONdQNjRIkjYxkXIx7VeozWRX00xNJgfIzWKnGiT2w0Y9XHWK0SE6NF
tOOpkagvm2LEphhTJTqK0WKTFowybVXjMYyK0Tap9ahorZtWidXixqDaM75D
rKiITfFBYz1O66/tqzbjxO5xYquoR4q6GokWJxNl0Lpp8VjRTTwad4w0Pq+x
Q8KmhKZB9DdoPdWg+j5pR6Zoau+TWjdEaY9x0YyLpCGScaKpvm1qJDZS26pG
YkUH9U0yiG6xYi+tGak1E3eIiYzvEGfaMca4S6T2/sWJvWIiGG2KaB1En+gI
EYkUm0RQjURFakUNRpki0aaI+pZHRX2JJw4m3jdSHFANRhqDEVokQmwyBiNE
0NhT2ySCavPzJ/oFMDDwjz+puv4bpdLkYyjfvWNgEAOC6BVAd186+tM2gJbB
vPKOZ8N5NJaHDLQgd5F7aNjJmB2M3MLPG/lxI9+vY6A5/ZbRcxndl9N1CZ8s
pMM8PjSjzWxazuK1mbw6nRen8dRkHp/Ag+O5Zxx3juGm0dw4iubDuWwIFw/m
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
y4O5PZnTkzl8md2fWQOZLYRZ3jHTR2b+xIwRzBDN9GRaMjWZhkxFptQeo1Pw
c3KG/8KwZHwPBoFvQB/wJegJuoOuoIswjn4IPgDvgtagFXj9O+/oI8I4eh+4
C9wKbgTXg6vBlcI7ejE4XxhHTwenCuPocSan1oHgAOHUqtKmq6BNB+Ea3Uxw
pqlATR3h0VoZLC8MWlXIFAULqDMmARmja3Qmkzvrv+garXtH/28rPn1FlEhr
EMFPkVoJi2BYNN9GMySWbw0MolYCaQgWj28YF8jY14wJYPQb7THSn58D+Fl9
fMWP/vzox4++DH3FMF+GveI7H77z1R6DXzLEh4EvGejNQC8GvGSAN1970c+T
vmrxou8LrfLSgy9f0NOdnh5acfOkuwc9POnmRXdPerzUKq4v6epFt5d87k1X
H7q+4jMfPlcnkb589orP/bTZpFp55k+XAFEPoPNrurzh00A6v6FLIJ8E0TmY
zkF0CebjED4JofNbPn7HJ+/p/I5O7/k4lE/C6PiBTqF8LCqOH+kUTodPWnH8
TMcIPvpMhwg6RtI+io/UEk2HGDrE8lEcHQy0J+0NfEStPKRBa9Jgx5iHjH7I
KHvG2DHajlEP+VktDxhhx8/3+UktDxiuFjt+vM8P9xn2gKG2Wnl/n+/Uco9v
1WLLEFsGq8WGQfcYqBZbvrHha7XcY8A9+t+lvw19behnw1d36HuXPmqxoZc1
ve7Q8w5f3KWHWqzprpY7dFPLbbre5nNrPlPLHT69rZUn1nxixcdWdLai0206
3qaDNR1u8ZEVH92mvSXtb/GhKPeteN+Stpa8J4rNLa3cvcm7lrxtyTuWtLpF
q5tauWVJy+u8eYPXr/PKNR46zGtJ3pilS5cuXbp06dKlS5cuXbp06dKlS5cu
Xbp06dL179Go5iPGthpt1nPOImXRMmWFubJmk7J5p7LHQjl0TDl+Sjl3Trl4
Ubl8Vbl8Q5RbykUr5dJt5cJd5cId5eJ95bKdcsVeueqkXHmiXHumXHNVbrgr
1z2UG17KTXfFSi3PFRsn5e5Dxc5acbihPD6vuJxUXA8obnsUz62K9wbFb5Xy
eokSPF8Jma2ETlHCxygRw3tFDewd26dPnNKfvQbEKkPilOGxyugoZVKEMi1c
mR3aa05In0XBfZa87rPSv9dab2XjS2Wbj7LdS9nnoxx6qZx8pVx6pdx4rdgE
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
R9AqFUH7viBonRFBV7DB8jsE3dUQZCEQdHxvPIKuCwTZqAjqLxDUHu5GBFWN
R9CHnAJBKb9HUPEPGoKqaghKriKomVvy1k/RyUlDUD8HDLHHWAcNQfONCHIz
ISjEhKCYLwiKS4yg53+EoN7ipqnG4norJwZCebU/8wJBySNSJP9oQpBf0ghK
oSLIGlluI9fdRAh6hGqPUNsJTQSCfnVGZxd0UxH0HIPdMNodEzwxPRGC1qgI
CsD2AOwLTApBYV8hKOQbBEULBAUlhaATiRC0woSgsQJBvU0I+lUgqKVpOKTy
p6EJQTVMCCprotD3CMphmrUledfYX4EgYTLf81wSvoVGeW3oCKRafvdPup3F
jqj4lTNP+y0ioYfblm8cewq32/DvOf3/GekI0hH0X4Mgw1ctLbXfnOf/n4eI
S5pIe3tqDtSDLeLTBn4KsHcwZvjy26vGF+sDn39BOoJ0BP0kCPLqVjvBiT7F
9PXxl/0ts2ZABfNVw+O3ZC7qEd//mdpbWbmnZ7mUxi1mJ+MTkb09NzZh0DL+
SiKz5tjn2YG+5pcmtsxl3Np4iDFDvcig0WZzEiflp+V13eD9f738dOkI0hH0
kyCos8jis/7Yw7fvng1ppNU3iCHJk6UNBS3Srrz8xN9ps1atvkbs4WvESK2R
20JeOXXW6FXY5Oge4+7l//TSWjXU+3hiv/g3xtQaaWv3feYbuLiFlsX9nhr2
XK5WplgldVpvjqibWs8/HRLg/dDG6sLlK6//J22s/xXpCNIR9BMgyEnDxaBT
CbiIzqa2u59Taz6btITOu3zjN1zrkwrILqr+ajxHr4PGeNSZnmrz+lcHDdAQ
9FVO+XdaStLiU+Jbbw5q0FNBZ6nl/tvixSQUcuqb74J67Xb7k5eeLqN0BOkI
+ucjyHtPZ/XqfpIoMq4EkEXLVfpybXMg02dT3G9zDbWnGO28Uiuj78bHwy8N
UpunIxIdIs5J+776eOKQ+v8PVTb48mt9Ot1XQ9DLpM4sQMPU1GtJpd7R9eek
I0hH0D8fQX6HFPVKt0kU6Z8HyD2d8QmdM4Wb4i7zCwHpRVVLTjrwavyW4FO9
1ebZr1JmuaiR/ucSR7SBU8mliXPXCzkuVuPttiX1jY/vHu1L7we/f/q6fk86
gnQE/fMRxEAtB3GT9aY1PJ+t1WaRmfZq1X1VMyB/Qkctr2HGbqL6RJtnnYtP
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
vKXFG1q0o3ZFi5eonaV2Rou2WjxB7agWD2vxoBYPUNuvxT1a3KXF7VrcocWt
WtxE7S8tbtDiOi2u1uJKasuoLdbiQi3O0+J8Lc6hNlOL07Q4VWuYojVO1uon
aY1abSK1OGrRWm2E0kK12iBq/tR8qflote+1Wk9qb6i91mpfUXOh5qTVitSe
abX21J5Qu6fV3tdq71C7qdVe12rttNprWu1Vrfbi+PHH+/W7tSjDDAvVVFNN
NdVUU0011VRTTTXVVFNNNdVUU0011VRTTbX/3h6uuGO/8aG4z/G5IDoKjs8E
pyfCyyeC6wPh9QPhzR3B87bw9pbgbSf4XBP8Lgv+l4SAi0LIWSGcNVsh+oQQ
fVyIPywkHBSSDu7XHxD0wgHj/kMoHEHhKArHUTiJgi0Kp1E4i8I5FC6gcBGF
yyhcReEaCjdRuIXCHRTuoXAfhYcoPEbhCQr2KDxFQUTBEQUnFJxRcEHBDYXX
KHig4InCWxTeo+CNgg8KOhT8UAhGIYgew1GIQCEShWgUYlCIRyGRmt4oGAyC
US9gErV4ARMEjBYwSsBIASMEDBMwWMBAAQME9BNQJ6CPgF4CvhPwrYBvBPQQ
8JWALwV0EfCFgKKAjgI+F/CpgPYCPhHwkYAPBLwv4F0Bbwl4Q0A7Aa8KeE3A
SwJeFPD8fjwn4FkBTwt4QsDjAh4T8JCABwQ8uA/3CSiwm3eMbttZulXsJl2n
m/SA7o0DCs/plryk++FBt4HdgAAUQlAIVcadoBcS2HATaZSsxQgYLmCIgEEC
+groLaCngO40GhcagYOAj+m1yy/8Gr3YMwKeEvAkvcaj+42HBcPBQ0nCofj9
RxKEo3HC8RjhZJRgGymcjhDOhgjngoULgcJFf+GyTrjqK9h5C9e9hJvvhFtv
hXvuwgMP4eEr4ZGr4PBCeOosPHcSRPaWc9jz/M7Kx+Lhlx9/p6r2bzQj4gBo
/xu0Gwr9foeBv8LwnvBHZ5jUGmY1hUX1YXkN2FAFtpaDfSXgcCGwzQmXs0iB
IfcoWs2ZQth8qBpwFEW66c3qBmccnJKNitQXRChO2R/lEb5HqI1QH6ERQnMK
feympIEMRRiFUtzRZISZCItQisReTWGQcj7IYYqEvIBwhUpI36dIJGcq4eqF
4IcQjBCGEGOEJCoYbzAosZGhVK3Zh4qkulBU0hMK9LlKgT62lGJhKsy8jsKa
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
krfJe923dWObo+wsHSbVyFQEqQjKDAhK6JvHQlW+37Ew07E9o5ubHWks+0eD
SqYWome23RdRfyk7FF64sn+NX/cxj6pmscqHbNnLySdL3kuFUtOWMqRCYzVn
P1C22XCh+cE45kKxzl+yF5ScLxfKXuZ8qTi0VG5sylPTJUSpgsbk/0Lw+t9r
KoJUBGUGBJmbVBCn1/Hk6joh56axzW33ZXH4cOaecC3WmE7d2ArgxxkWz3Zj
f79KGLrWq9Bg7cIB/OgtGCQVYn5OBzOoKU9VVqGt3A89IFWud5C6bPSwUEKe
VOB1t7RUC7EBEKh0vXKIzHEZ2+xzPCztlVVTEaQiKLMhSHIweio15RdKHlBz
z9D42Jjo2JjQKbXYZllT4v3GRgDfa82fHH1rIrB3IXuiVAcV1r9l3dvwsYLO
z5dL171G/XFSfZ6m1I3KC7CALf6cp0hu0kq2VGN3hb0rmQWzTpM5Rzw8XS/u
G0kuWJPotNdVTUWQiqBMhyAqZdhNqSk/LE3lL4AfApRz538PUHKo+bO993dj
lGGd4IM9Ab6JkPZdY8+Rf7KSfm2rkF5N+SipKHzzHZLrlQOg3MTHtDfpG4CR
Nw13F/as3/L7QrV+R3wKkIW+NAoyf0E1Ok5TS35kZCqCVARlMgTpncCsoPOf
NQD4DBXP5lYD+Hak+R63tcz7+dbipJCj0lc69ItXd9artgbTs5aSI7Me4y6w
f48pFZ2bAHRccKJ/o9/eol/9wt/sOrwWoBKtCaUKzlMeqD+CfdxUBKkIymwI
kmvKJ38XdG5MZbZ5O6XuMkaanXu4NzuYzctsjzinQuqCzn4n2Ulz6ce0Plkg
Z6M96f5Z56V1Aaw61gHI19u0s11u6af3Ig0Xsb5t/5JWOayUi0tfWWufpnsl
1SxMRZCKoEyGICro3OWw6ZuV9/Usl2FVh6ZELcY9XJVywCrf4zh8MLYgW2tZ
XM/vIjvYiQIYO9KJNvlyJT8le5nrJn7FX5L31Z9/1/TU7vQ7XflJN6W/Zfsr
HZcjvaUi0d2P+n7OuL5SUxGkIiizIciBze6uh8LN9gTvXKOtW6tO1Xq1h67a
E2GZuxHqcmZA70Y/VKpQtU6TZ7Hoe2Fuo7GWZcsSvYd3a3iMfr26uGpcw3r1
GjZsUK9OrSoVylVp3Pmp2Zc4+6e2rdF2gGgW3XNr+8QffuxyQydveQ5vWbPz
pM3U141o0PbEazPnTLUMTEWQiqBMgaDXuii54yf0YAg6HPg/nhiq/VOmIkhF
UCZA0Lsr5kstq8bz/5HJodo/YSqCVARlAgQhPr0+p0njqlVraGZsUb/k/VeZ
iiAVQZkCQar9Wy3aIyBYQtC7TxbrePSjpVhHMYj4J8Q61ihiHXv+drGOnRmI
dRROhSBrEuuwThHrsAaP/4FYR5Aq1qHaV2TR7v6SZNk9T7ezr+x3Prs29+7R
QZc3tTi5oMLBcdl3DoJtPWFbO9jdHA78DKcawpV68IAHsTq8qgzvy4BfUQjO
B+HZIMpKKugcn1LQOStCTkUjUfaFylGVdFkmsZ5SVr6VUla+J5Ur/pXEEuUK
qhOJQjPJEVpEeolrqIjqDqLQfqrmfBLhrAEukWTZHZIssyfJMleSLDMVdA6R
JctiFckyD5rYDwCvkP7gVsAlVFWUzc8uVAu1GhV8z51SyTiB5AJNkmXy9POk
6SdLlomkV0baiVmeQb7nUFqEGs7Q1BW6eMDAdzDJCxb4waZAOBQCFyPgtiJZ
5kuSZbEmybJgkizzJUx6KIWmZcmye2CQ+XOJhBNl/hxWyr1uJfisVuQTTfyZ
CDgWcDSVTP0dsB9gTxolg09rs7rTdUinrSrVnS5DIoqF6AbkSCl3n1ayzIsk
y1xJsO0pwCPiz03iz0WA0wDHAQ4B7CMXaAvxZyXAIoB5ALMAppN84q+MSIUL
f+l5oNqXMSNilKtf6DNf75tvXY653l/1+MJou52as8vK7x9vtbUfrGkLqxvA
6mqwrgJsKQNCCamm88284JAdXK2kN2AAzUmTcGuSUvU3g7LOVqTdmlcpLl+W
oFSdiss3INeoBUJb8ov6kF/EnKLhhKNJVNCZeUTLqJL6eqosv5NAdMwApw2S
cOs1KisvCyc6K6qJfkpB52iUhFuTIsHoD8Y3JId6kzwJ2QWaREXh25L/Uyal
krq5cGuimXBrEM1AkwdAYomSdOljgIf0+ETak9sRyr6E2h7Q5j3094EJgbA0
BLaGJgu3PooHtwTwTYBwEm7FWDBGKBTyI9VEGUEOkr9muAOG64pwqy3gERJu
3U2l4TcqtaZlpcRZRFOGnZHE1P6AvajWfUdizi9mhe6rkkhtaQJOwQ+ptpoL
t8bSPTBhWEaQqPDnGi3BzgKcAjgCsAdgG8BGgNXk/DDPZybAJFJtHQEwFKA/
QFuAqapw69drxljf8Ki3wUEv/L3ve70+6/5kl3h90ZNTf97e3fPauqbnltQ4
M6vGmUn8xTH81ZH8nWG8wyDeZQDv0b+md6+6wZ3rhLapFd2cj23Cxzfgk+rX
TKpTR1+njrFmPeQbI98U+RbIa5Bvh3wn5Lsi3xv5fsgPQH4Q8iOQH438GOQn
IT8V+RnIz0F+PvKLkV+B/Brk1yO/BfkdyO9Gfj/yB5E/gvwp5M8ifwH5K8hf
R/4W8veRf4y8A/JOyL9E3g15D+S9kPdFPgj5UOTDkY8x8nEGPiGRN8bwxjAe
fXl8y6MLj094vM7jWR738fgXj4t5nMbjHzz257EDj7/w+COPtXhjTd7A19Tz
tRP5WjF87Si+ZgTPh/B8QC3ety7/vhb/tibvyfPufA0Pvq4b39iDb/ma7+rJ
D3jPj/bmp/jyCwP49UH8vjDeNpK/Gs0/jONfxPOvE3jfJD40kY9N4hMTeEM8
jzE8RvEYziN7jf48+vH4nkdPHl/z6MrjCx6f82hPr/ouj7d5vMWjHY8XaQRn
eDzG41EeD9NodvO4ncctPK7ncR2PK3lcxuMCHufyOIvHKTxO5HECj2N4HMXj
EB4H0qD78NiDx648tudRw2MLHpvy2JhuQz0e6/L6OnxiLT6G5yN5PpTnA3le
x/PePP+O51/zvCvPizz/nOcdeP4Rz9/h+Zs8b8fzF3n+HM+f5vljPH+A5/fz
/G6e387zW3h+Q7VqSwsW3N+x45eeCKqppppqqqmmmmqqqaaaaqqppppqqqmm
mmqqqabav9ni9YZEvT4hUR+XmBgTnxgZHR8eGRsaHhsUFOkfFKnzj9T5Rvr6
Ruh8ov100YG62EBdfJAuKViXFKJLCtLpg3TGAJ1Rp9P76Yy+vgYde/Qz6Pww
uelQ508tEHUBqAuixvrB1AlFXQj1WSecWhi1COpHUieKGutHUyeGOnGoi6UW
o/TjqSWiLkHp6FGXRM2IOoNBemQNjTpjkg71OmSPCTqM02GsDqN1GKnDCB2G
6TBEh6E6DKDmr0NfqRnYo44NTmr65KZjLdFXl+gnPSawjk6XoPNhj/E6ue+f
qAtK0oUm6UL0unC9LlKvi9brogy6WKMuQa+LN+iSjFLTs5dmlF4XGuh16amf
RI31E6nF04uVX2+qFkNNHoSpRVKLojFFKJvh1ELNRhlMffYYqMMgs04Addjo
2f+fn9Kk/1qdwU+n95WGbqDGBpok3wkadwK1OOqzFkv9GOpEUyeKOpFmLczb
28/RMdjd/UvPA9W+lBmddKFP3gRef/b+8BXX1fsejl1wscOwQ9+32JCr7CKw
nkkhG1MpjmwpBZcdA7iaFexzgls2KSokmIJE4pRqzhlHBJmHBuWgkMUiVGW1
LJV1rq5ETTel0KCOCD0oNGggwjCluOoUCpZepJRVlZM19lNN1ZMIFxCuKnFB
TxFeUo6GHBcUiBCOEIuQqAd9BCU/uAM+pThjW4rqW0oJDL9SoB5PQYnW6YTF
JFFoUBRFQgVQXJBc0NmFwmKeUXDwE4qPeUL9Z5DVCUq+hBqvofk76OMD4wJh
QTBsD4djMXAtDh4ngZsefPQQwV5XEhjjAaMAwyg62p/igtwpLugZxXHfoVDu
SxTKdIKCggTKLJEjElfRIOZSUNB0JR1jBMUi9lFiEdvQ+BpT4dQaVDW1AgUF
FaOgoFyAWT78P5cc8iVHJwbRPfCmgs6uFBr9mOKCrgJcNgtK3KMUUV1NEdFz
qXbzWIBRAMMBBgP0BWhDJZ6/9ERQ7YuZk2/IU8/AO+J725uuW444zFxzdcCk
U8177qjYcE3+MkuBW0DVd9nbZ30W2J8fTn8Lt8vDs8rgXgG8S0NwQQjLLr0l
YwhEZtHRprdtVkxJGSuhJGtUUSo7y9hpSTHSnRC6IfSmTI2hCnkmUVnn2VTW
eRllim1C2GaKS0QpLvGCAa4ZpILy9xCeIDwnBJmiowOpoHOUXsoRSwyDJLmm
vBPgfZrShyirYS7VPO5N6Qq1KToxjwV85ADpGIoMNq8pL4cmOill5Z8SfJ5K
/QKOUO4F1H0Jrdyh1zsY7Q0z/GFNEOwPhfORcDMansbCqzjQxUF4HMTHQlK0
ZUFnU3S0o8RLwwMw3AWDHVVzPk9pJXI1Z4EguklJDVtKodFzKONtMpVyHkVx
0aYYxS5mleUbKWGKclKGnBdWFLCARVB0KgbH0KeOeUFnOTTRgaIyb1OC2CUq
K3+SohMFSs0wZYctUuKitRQaPRKgJ8C8nDm/9DxQ7YuZi1+Y49vABy+8Ltx7
ve/M86Vbb4yZd6770AMN2m2tUHt9kW9X58m7Oq/NugKwvSQcqQAXeLhfH8Sf
4M2P4FMbgitDWCmIKiSlqcZlld0hG0pTzY1QkFydb6igfHnCDvN26lAgdCOE
ZlRQvj1CF8rO6IcwgLIzhivZGVOpoPxcKii/jLIzNig5YvspR+w44w9K/Llq
hJsGiT8PyQUSKUfsDeWI6UwIMlBN+TDQ+1HylTPgIyrQfoICpFeQ9zCcZmlL
SlcoRykK2U05YoyvVoQgq1DFC3pnBR420gx0phwNR6lZPYNcjlDUESo6QT3G
n1fQ6w0M84KpPrAkALYFwdFQuBIJd6PAMRZex4FfrIQgqaa8CUHmOWKvCJbP
KUeMUegW4HVKKzlHZeVPUn7JASVHTAbROhrNEsD55BRNUcrKyzkaA81Y1JHi
wVsSjhpSYHhNwO/JQSpDziC7AfkpTYOTfCSDDSRYSZ83co6Yn5Kk4kY34Dl5
f/eIQtfIFzpHMdJHAQ6QOyTniK0FWEYfafOorDzzfwayPSVKfPo71vXYOID8
K469+8TzI9NUn48N97fYFxMRqkiLJUYEhaapNxgR8C4izWXjohOki8ekvnpi
mM68VE9SYkxUrP4TX+rXaS/9wxzfBT509r54333/Wcdl226OnX++x7CDDdtv
q1RnQ7HSa/LlX5Mvy/pCsOMbOFoJLtaCBw3AqTF4NgTfuhBSBcLKQHQRiMkD
cRzEWVknQlZ96uywfyZTPm2a6v8iU/7DNeUzypSnNNVlAZ+TKf+JaapfIlM+
4mOZ8ummqf5dmfK2I3MAQKXeJz7l5AO/lYCakyx2RT6QS+okbybcos1KCbT1
M+uW0FpeI6Ai25mln/muiEuMndD4J6lU81kf8yNxNQHKTqH6GkE3a+Y1SRx9
s+d26KeP8asyhiDxkxC0MwMEhSsIiv/CCFLFOlSxjjS2+ReAGlMsdsVfk6Fw
hfyX0BMDaKus7Kk0Zd0i01JdZAMVa31otufk0G8Acjo+2Mz2n7DUbywF0Hyv
VMfsO+lJ1Z56RhhCnZsXkDbu/N2j+3eYiiAVQZkCQYvbFpPRkSN3/sLlfjj+
1vyg/4j+30rHcjbecj1Z63lZ97pWkEN+SpHChenfrNcT2ZHbuQGatijTfYsk
TD+5YYmBk3qzU+SyzB3YWeUWpPrTUWekWoRjr8aZ9jRi2x1PUtUw2GYhUR9Z
AmCGCyYcla50P2UF9kxSuZ9449Mn5tdjKoJUBGUKBB2Y0r5Cxao/t2r3S40S
UhGfQ6ZvXHTVScy1c7eeDUpnZb2pN6Vvbi4sG9tK04kqYWTp0avvLw1r16zf
wo0dCGEvp8Tp66srNp5oiLleokpbR4ftANne07XSrylPhZuh3abkrWA2Gpj7
mvVesc4qb2nf/tUbJLxhNAPlkXhcw9ZjRQaYX6K/FYBNu/9ojv7LTUWQiqBM
gSAzi2YTv7dS0NluZkOAeqZjf7Gtwn1Nmwc7A/y81OLZz+cB1GH/dipfoHqF
or33uKLxHLug7KBkVFN+eV2pOo9cJ/r2iIJsg/68VDh+iSei/jjrjJIWWkHZ
acH1awHg6lvU6djWhJ1S+XOG+bWYiiAVQZkNQR5sMvc4loyg8dXo2+SqlUp9
U/KbUqXk6l+mwjtSKfjvRps/Odh2AEAN1jlJVb+olPxd1rlMRzOqKR91ZRw7
svSt1P9JOmc67Y5lMNI+w4Srg9m+koOPMShlhzxvEKV69ZYI2iJ9zVTrc4b5
tZiKIBVBmQxBcjXVo8nfzAwrz7byjhwxtGeXDq1bt2nV4pe+01Pm/twqAN+O
MH+2954OwN6RzEKv9R9Ba6t4yQs6QD+JdWW9iumWh/amkoXOiHGs0+dE8q/4
PwCMsPXa+HvPJevnFvr2R08vNu5KbP/879i/c8yf/6s1QPFxnzHMr8ZUBKkI
ypQIUmrKL/gZoNCIjM5dwRZQOfuY73mxqAZAWYuT/I6wC673k7o9rSBLvW3p
XmphTYBiPZ3PsJec462ys4UNlO0xuREvvYDhFQqPnDIKcv7E+o6TvgHIbRYg
9JD9ie8n3/uMYX41piJIRVAmQ5CB3WvoqtSU9zo2XFrhDNxlkLaMV7ctXXAs
ZabfnV6VHf3zvMj6sXHSD1TiTOY28RYXDJIqNY++L3V72bAF1QR5d1xUeEBw
SMqfvT4mOcan5XLTzq75pB35uu5j/VcL69Dh6nREKhINBdv7MlIGuNJiMYvr
ZwzyKzIVQSqCMhmCqKZ8p4MpActn5vwEZjZs7WOzk980K5JyaPNLvPZnIYAf
LK7nK+Gi22Hpy6U+2SGVbX+WpJz3ngrIw6iTOtNTh5SR9nTY9ErasF9Ex0sT
DPH1qTkpV+G+t/VC1dI1FUEqgjIZgmKlr25GXEm03KvX+fp5+/hEp/uMqECv
t+883rylrWBnr9SByl5uznJ0NCZF+PkFhISGBAcF+rx/4+ZhmQYS5+vhZ/nc
pPDXb1ICg8K9PXxCzVM2DMHePr6hYahaxqYiSEVQJkBQkNsfU5Y+9QlGfeCU
H6TfvNRFzb/GVASpCMoECEpwrJqSb2U9/5LnPzI5VPsnTEWQiqBMgCDJEnx9
3r33CjH+z+eEav+o/dcI+n+TKf/gX50p//8JQR/NlP//k6aq2v9/S9YLcjbp
Bd0cM+9896EHZb2goqVMekE7SsKRinCRhwf1QWwEbxqATx3SCyoNUYUhJlkv
yCoRsqSnF1QBoSrJlJn0gn6x1Avqb6YXNFbRC8qopny6ekGyWMdTBUHp6gUl
mPSCXEgvyM5ML2iGohfU6gN6QVbp6AVZSTPwRXJNeatnUhHVoiJUeiHpBWnc
UvSClprpBd0jvSD3T9ELSiXWcZ0QdI4QdJJqOh+wRNA6paa8uV7Q+I/pBf1E
aoo84A/p6QVllxTMZL2gGKsP6QWZi3V8VC9ozn+kF6Tav8ycfEPtPf1uiV6n
brzceuzJrLWXB04+0bL3rsqN1hYsu8w650KAhaTauiEb7C0ItqXhVkVwqAoe
lcDnOwguDGE5k1UT45VmppooV3DOhVAAoSjhSC7izDwiHqG+GYs6EIu6I/RV
QPQHwgQELZWVZ+7QQgLROiorz0C0i3yhowinDHDeAFcMkmrrHYVCLkpBZ126
qolvSIvwLuAFmsAbAedRCeS+VPO4LjkB+SzkAuMzVk18SR7Ac9INtCcBU3uw
doBCz6C8E9RjjpAH9HkPf3jDLH9YGwT7QuFsJNyIBvs4cIsH7zgIj4fYODPV
xCBSTZQLOruScKs9GO5L/DFcI6HHcwTOY6T4uN8MPqvI+VmiKLhOUcjDnLsh
gL+R89MNsINS2bkJkcdUTb68Uty5kCJTZqmaqKfbEGMmWeZtVlNe5s9N4s8F
qul8AuCwWUH59QArCD6zAWYQfCaSgmsv5hHlzv2l54FqX8qML3Shjz397Ry8
Dl15uWL3gz8XnGs/RKjadEP20ouoALiW2gxFO5p9ptlZwxMOXttINeXNtaMT
U0u2ZtSyEZQKko5rKVqjVaOy8oxIP9MCTXaNepNfNARhJC3NphKLFqXxiGTt
6PMo1ZS/hZIv5EAIcicvyJcWYhFGiEOITwRDJE1vD5rYt2glI2tHjwPsB9gc
sDpNwvRKqptrRweSB/BW8QAc068pn0WEEi5Q3R1+eQ+9vWBMACwMhi0RcDIG
rsZLNeVfJYJvIkQmQmICoLl2tE7RjnYmletHxEu2BLtIYokf0I6ermhHy3qt
v5HDI6+5WisLrlo0ykoE2m9IqTUf+TlWn6EdHUwI8iIEvSQAPwK4S/y5ROuv
k6QdvVvRjl5Bi69ZtPIapxSUZ/5Pb9KO1qra0V+xxSYYYhMTY2MTI2MSQsNj
A0JifAPCPb3DPN4GvXQLcnENeuEU5OwU6CIGv3QMeyWGu4sxHmLcGzHRXUzw
EPVuov6VqH8pGl44Gl84GRxFdHIyOjqh6IziSxRdUHSlxvqvUHyNogeK7ii+
oY4niu9QfIviexS9UfSi5oOiLz3qUPRH0Q/FQBQDUAxCMRjFUBRDUAyjFoFi
OD1GoRiJYjS1WBTjUEygx0Tq6FFMoke9QTToRWOiiPEixokYI2K0iBEiBosY
JKKfiD4ieon4VsTXIr4S0YWNRkRH0ejoiOILg+jEml5qLxJFx0RHMdFJjFda
nKNjjCjGio6xolOs6BIjusWJHnGiZ5z4Lk70TRR1iWJgkhicJIYniVF6McYg
xunFOKOYZBT1Rul1oUFEvdISREykxl5prPJiWYtSXnIktTARw0UMpQ4bRAi1
QBpNAHX8RdRRkwfnrQzxnYjvaaCsvRHRU0QPGrS7iG409JciutKjMzVRxBei
0Uk0iKKBPTqKSaLUEqjFS+MW40SR3YAoUYwWxUhq4aIYIYphohgqisGiGEKP
gaIYQM2PHnVPn76xs/Oxt//S80A11VRTTTXVVFNNNdVUU0011VRTTTXVVFNN
NdVU+zcbz2Pt2tiyBWpYa4eaTqjpgZr+qBmGmj9Qo0XNTNQsQM1y1KxDzVbU
7EbNftQcRs1R1Nii5ixqLqLmKmpuoOYmam6j5h5qHqHmGWpE1Dij5hVq3FHz
HjU+qPFDTRBqQlETjppo1MQbNYkGjSFRY4zXYIwGIzQYrEE/Dfpo0F2DLhp0
1OATDd7V4C0NXtXgeQ0e1+BhDQoa3KPBrRrcoME1rXBxK1ygwVkanKLB8Rr8
Q4NDNPibBntrsFsr7KTBjm2wfQds0xlb9kRNP9T8iprBqBlBQxyPmqmomYWa
OahZiJplqFmFmo2o2YKanajZh5pDNNbjNNYrqLmOmjuouY+aJ6h5jpoXNMS3
NEQdjY8NLpINDjV61KBRg3oNGjSYSI2NMkqD4RoM1WCIBoM06E/NV4PeGnxH
7Q01V7oBTtREDT7XoAPdjIfU7mnwtgZvatCO2hUNXqLbw9oZDZ7S4AkNHqVb
xdoBumF7NbiL2nZqWzT4lwY3UlvH7qIGV2pwhQaXUlukwfnU5lCbQW063WCt
BifQbR5DbbQGR2pwhAaHanAQtQF071nrR/8DPTXYg/0/aLAztQ4abKvBNhps
qcFWGvzlF6xaFQcN+tLzQLUvZh8KA8lK0TulKZLwJyq73IXKng6hassTlRwK
U513udrpXiV74gLF6sh13u0RnCl16x0lTQQjRFCd9wQEYxIYYsEYBhgA6AP4
mgqIyqHLtoBHKPxlE2UdzKUqxX9SpF1/CrNrR6G99Sio9zvAEhRUZ/PxABez
IealIO4yZsXtf6Zgyc4UJjmQ4pLGUIzkbCVTZBvCbhqlLcJlGuJjBEcEVyoi
7U9F7OMRDEYwGgCNgOwxCTCOIn/CKQVDJ43V8A4MHhQC7QIoSlVT0R7wIdWa
vqkUkb9AsYi2lItxhEIp91I44lYlInGNUsp5IUVEz6bQIHafJlK45WgK+h4K
OJjChPpSifnugJ0pOro9BUg3B/yZIhUbUJpGXQqTrqZUVi1Ht7YUBREVo8DF
fFTvOgeFL37Gzf5gU+1rtdTvBSuKGyxMYcw/INSjmu/tlFLvoyhiWSbPYiVK
8C8lXHkPwkElb+I8gh0m13l/TKlbLxUE+SIEIIQgRBogOkmqp66PpGnpB+it
BOSxqXibZuAZmnj7AbcBrqWZNk8JvxtNU8vEol+UwLuqlGBQhLKbspmH3Nmg
lL6Wn3LXSlGV6R+UlJFmSox2NyVAm5FnPMIUKistp4mwsW6lgR6kiEjGn0vE
n3sUDumE8IrGpyPERiHEGUHPyJNILRYwkiIPgxXWeisIcqPa8U5EoWeAT6jd
oxtwg0AkB0Wfp5txiuKiDxOLBCU1Y5tZgtgaJUFjERFpDqWeTFeSxcYDjiGK
j1TQJAdO9zOjUzcKZWxHdNIQoJoR6ZtQ3ef6FFAtxzdWo5tdEbCCGaZKUHRn
YapNn4c+E+QK9dYZRz8WKvRZb1qdd8jHT1Itk5jFeyEL8aeI4vnIDkEbyiQd
QEkT48w8nxXkEPyl+AT7EQ4oM/O84hzIdd4dqM77K8rb8jKljqKUtxWrh4Q4
MERRfiabmb6Ab2hCPiNX4Bo5AXI08G7AvygOWM5AmKZQaLAV9rOSpo2c78Qm
SW2aGHKygZTjZIXZbTBrDrTOq2StyWki1WiIcn17NspOCD3M+DNO4c8C4s8q
ishm/NmHcIwiss+Rl3eHhvicIrJf0/iYFxSKECM7Qknk/8guULSSiCrHP/uC
wQsMbylY240cIWei0FNqDxUK3SIQsTtxmW7GWfKIThCYZRDto3uzA3ALgWgj
pYmtNgPRPLphs4lFUyllTHaQxlDuqgzyQZQ+9isRvS/FVHdTwqplFrWm5Lnm
xKJGlNlRn9zP2pTfUV1xmSpSokdZuv2y11TULNcsF4VhZyEcmb/zPidN9eCg
LABQtdfxTzk50P78qoPmIop4cfmwbrMPWZ6VsGhUr8WHpSJjp5dMnrcllcJz
9OrRnScceGaxL8Z5QPc+JxxN5efDlkz8ddr2B+anXN8xtXOXbr169OjUoW2T
hvXnChZHVTNZagTlpmSuVAjqpiBoPCForrL4MiFoD2VsHaDJaUKQnC7xkJK2
RCV1VJ6iMoKiTQiKtkSQK61JTAg6SZNtT3oIYlNosDX2s052hFoqWU+yI1SC
PoklBGXBbDkzQFBjSlNrmx6CphKCFloiaL8lgu5SXpqjgiDv/wZBLoojJCdl
3FcQdDMDBB1Jg6AtGSNozicjqJ+CoG6WCNJYIuhHopCMoBqWCCpnhqBiZgjK
rSDI5j9HUPyDpRwUX3fa/1NOXtMAoMRg8z072kuSQzcNZrteb5GYtuQN67LT
IcefqS7SVHpGyQSzPS9WSVXBljlJ/bOzfs0q6xjlslDRb2kpAFt71M5PH+NX
ZSqCVARlDgRFBQYGR2Z8WB8eHhEdm3rvlOoA5QdSNyk0LEr612UpA0KrfQGm
c8RVUp1CB+q3Zb1Sc1JdxG5sRbZ7v1nh5rn1JGixzh2pgAdsPPewofREi2L0
nQoC9LL9+Li+elMRpCIoMyAorquNhVMx/Ey46djTvTNM+/PUmSo7OD3yQlpb
I+m9xktXarja9PTebLPQELnfDtIrZfh+O9vdcr1JLNafuT05R9mxnt7n+TOS
q5YqQX9jgaDODEG/Xv6syfh1moogFUGZAUGYEPLO451fImLMixNsuvc6pgjV
P9vGNnvMuiD13xxj/TJDTpieNaUOQEUJL/roEE/PZLnXlbUl9enkChyJUgUf
zUY3eat1ughClPykQrI3hcZrQ9jWLsuKGNIKrtgU8z1tswNka/3w4T37B44f
Hd3XbCqCVARlCgSZWQib7j2VmvLruuaGnD1Mx3ZLX/XUMG1ubw7Az0h9gRuj
2EnzpNpi+Hq19K3OLeWrIU0GCLIbV4wdkVGyTKoKVjbVCRLVilogaFhVCwds
ot2rzxnjV2QqglQEZTYEvQSpoHMygkZ8l3a9VdBU6GvBD2x9NCzNFYJySo7U
OdabXR3AeoDpQEYIQm9B4t5pqVsUIFevk6mOp0VQikW8+YFe1svPGeTXYyqC
VARlMgTpncCsoPPI7wGqTDY7bDD/6Woec0XKjE57jaWS79ORdSoBNN/iYdov
LcS+X5nun2W+T85ORxEd2Cnr01TwkL6OLp36e2yTxR6Rvis684Fv079iUxGk
IiizIciipvy+foUBcsRlcO7ODuzcymn3J9pNZgfGTZS+inYwq8nBlnG5Ggnp
Xur66FIA307vXx7Y+yWNdckOUHdzRi95ZAnpqyLfjA5/3aYiSEVQJkMQLcS6
HFa+jg69loWWOU279+zZtlUegJqjd5lO9Ts5UjpWtFLHjm2bt25/O4UCPvKz
oMzv5pfW0L6+o4f27dGlZdMmv3Qf8tL0y1vQfvkZFSacM50f5HC4d4d2fXt1
pSPW3ft2HzhjIx2JXzywZaOmLdp36pCfjk0/r0PV0jMVQSqCMhuCRAlBB1N+
lMfY2/3bfS/z4Zs2Ax3eWJx9b/+kgjmTvyTa/MRUIB4PSUs4GHPYYk21pHt1
y6+V8lw0u9pYKRyopO3blD1Ohyak/iKqbAeq3+zVLFvyjqZdpzxJXUFatRRT
EaQiKFMgKIUdj6UooHXq70v/FlMRpCIoEyDI81r2bPBd3QY9NA3IN+nzj0wO
1f4JUxGkIigTIAgTdi9pIq9r6vXaHPVPzAzV/iFTEaQiKDMgSLV/raVG0IfF
OswRtMISQfvTIMgk1vH0c8U6UiHoA2Id5ghqqyCotoKg4p+CoA+IdUxNT6xj
/z8m1nH/bxXr+A8Q1PWDCPqAWEe5j4l1qAhSTTGwfC9IpU7zIxSnIqc1ERoi
tEDoSGKJgxH+VCosz0dYStNyPVVY3kliifsQDtPkPINwEeE6zc/7JJn4nCQF
3RVJr0CapZEGiNErkmUhgP6k5OVOs/EpFRC9TIqBct30nSTItZzEAWeR/NYY
qlU8gCZMJ5KzkRUUq5OEVgl66+ci1TJrma85EPIRhb5FKEcUYkP8kRyhliTM
Jte3/w1hKBWUnoQwnYhrqiYtV3A9TMJsZ8x8PUbZF+TovSfEhjAXL61kWZRS
sjmQBiqrJr4hnUhX4s8LRTjRnvhzl/wfWbXsihl/mFd4lKh80Iw/W4nQafkj
6yjOMuPPeCoe+wdVXB1BwmUDSbWM8acPFX3uqfg/HYk/GkJ7C7Ma0Cb/RxYu
Y7yvQvApS8JlDD7f0u0vAlhQES7LSRKL2dIoBcmtaNEvPQ9U+2KW9u2Q3LIS
i9hcrULCgs3JS+ilKJmOo8lp0i6TVVs3EYv2Kb7QJaLQbUW1zEVRTdQpXpDk
KBhAnwDGGDCGEoK8FeHWxzT3ztJk20Mf8OtpRs1UyhUPognThT6hm5DY6Pf0
AVyMdEU/Licql7vPT2Wly9Aoa1JN6SYIrZSx/k6u3xgSqZ1JIJJFIneQL3QU
4Sw5QmyIT8jRc1WEaRlf4xCSZOFWPXlBCYAxJJwoe0G+ZsKtbsoSzBHQgZZg
DxXJxKuE4Yt0J04p2q0ydraTWOImBTtyQXlZvlWuKT+NvB1z2gwB/F3xc2SB
xK7KLWxDnGlmpuBal1a0NUkTl0GmsgKZUma6iAVJmTKn4tt85JZ/sKn2tVrq
94INQh7ygsoj1CBJ0xY0IfuQZ8Bm42TFC1qGsJoWJ1sV1UTBTDXxCsINUo2W
VVudFRfBm1Rbw0hemXkJCQZyFNhaLELRbn1PYsom1cSLNPcOkRf0F326L6IJ
NoW8oJH0Ed6TPrNb0PypS3OmLLGoIHlByTiyJubIazGGne/IC6pBa7EmNMp2
tOLsSYtOeazMC5qheEEriLI7CLFHaJTnSJv2riIc/ZIWmj4KXxmCDLJwtJ4e
k8gRiibtVtnj8weDNxjYcN8Sd2UFaScC0TNi8D3AO+QImetIn1EcocOKou1e
IpKs3foXoXot3adlihckE2mWot0qc+lP4tIo8oIGEZp+IxeItR7kBXVWvKBW
ZnqJjRUvqB7RiScvqAq1/2PvPMCiyLK3/yLmnCPmnHOOaJsVFbOYEdQx56xj
1rExZxEVRAQTBlSanLMKLSBIkJyVnDqcr+q2jTg6u7P/3f1cZ+p9zlPPrVtV
XYBVP8/tuvWe1iwFasEY1ZgxqjYbf1Vn/wiVGKP+CFMtf//WpyBBggQJEiRI
kCBBggQJEiRIkCBBggQJEiRI0H9QSqXyn+8kSNB/Tfz1J1yEf1fJZLJvXS9L
q3z58lWqVKleo1q9WjUb1KvVuH6dpvXqNGtQp3n9Oq0a1m7VuF7bJnU7aNXv
1qxBt+b1uzdr1KtVw75tGvdv1WhQG62h7ZqMaN9Uu6OWqJPW2M5a47to6fTQ
0umuNaOH1oxeWrN6a+n1bbq4X5Ol/bUMBjdePqThqqEN1o+ov1G77raRdXaN
qrVnbI1fx9U4PKHG4Yk1jkyudXxSHbFO3dM69U7qNDyto3VGR+uCTtOLOi0u
6LS5otPmqk77azqdjHW6muj0uKHTw1Snzx2dPhY6/e/oDL6rM9hSZ5iVzsiH
OiPv64y21hn3WGfiE51Jz3Qm2+hMfa4zXaIzw1ZntkRnnqPOAiedxc46C110
lrrpGLjrGHjqrPDWWe3FxeT1XlM2eOls9Ji61VN3i/u0re7Tt7tO3+Gmu9Nl
xl6XWXtcZu51nX3Aae5B5zmHnOcdcdY76qx3xHnBby7zTzguFDstPO20+KTT
otMOC884LL7guPSi/ZILDsuuSPSv2hlcs1tubGtoYmtwy3a5qe3y27YrzG1/
sbBdZW67xtJ27T3b9VZ2G+5LNj203/zAcct9p+0PnXZYu+x85Lz3sdOexy57
n7gdeOZ64Jn7ERvPwy88jtp6HXvpc0LiLZb4nrb1OWnnf9rB75x9wHkH/4tO
ry45vbns8vqac+B1pyATl6AbblJT1+A77qEWniHmXu8svUKtfELve4c98H13
3yf8kV/E04DIZ/7RL15FvQyIkryOtA2Mtg+KcQiKc5HGOgfHuwQnuocmeIYk
er1L9g1N9QtL8X2X8io85XVE6pv36W8j04KjM0KiPoVGZb3/kBkR/SkyJisq
Nis6PjsuPjc+MSchIT8pKTcpoTAxqSAj9UffCoJ+mP6QPmXKVK5UqXr16nXr
1WvUoKGWVuPmTZq01NJq00yrXXOt9s21OrbQ6tKySbdWjXu01erTrkWf9s37
t2s5sFOLwZ1bDe/SUrtr61HdWo3p3mZcj9YTerad1KutTu+2uv3azujfds6A
tvMGtp0/qPXiwW30h7VaPrz1ipEtV49ssX5U801jtLaNb7J9vNbeCU32T250
UKfx0SmNj09tdHxaE/FUrZO6jc/oNjur2+Kcbuvzuq0v6ba7rNvhsm4nY92u
xrrdr+v2NNHtfUO3303dAWa6g8x1h97RHW6hO9JSd6SVrshKd+wD3fEPdSc+
1tV5ojv1qe7UZ7rTbXRn2ejOsdWdJ9FdINFd5KC7xFF3mZPuMlfd5W66K911
V3norvXSXe85bb3n9M2eMzd7ztjiPmu7x+wdbrN2us/Z5Tpvt9vcPS7zfnWd
v99Vb7/rgsPOCw+7LDjisuio0+LjTouOOy0xcl5s5LD0pOOSM476Zx0Nztkv
O+9geMlh+WU7w8v2K4wly43tVl63W2Vi+8sNySpTyRozyerbkrXmknV3JOst
JBusJBvv2W6ystt8X7Llgf3W+w47HjrutnbYzcHH2uXXJ877H7vuf+p2+Jnr
4afux2w8jj93/+2l54kX3idtvU6+9D5j63vWzuecvd9FO/+LDn6XHAOuOry6
5hRg4vLaxDnwhuubm26BZq5B5u5v73hILTyDrTxD7nlxEfrIO5SjkLVf2FP/
8Kd+Ec8D3r/wj3z5KsL2dZQ9R6E3Mc6BH5ylMS5Bce5vYz2kcR5vE7xDEv3f
JfiGJgW8S3oVnvw6LDUoPCUoIlX6Pj0kMiMsKj0s8mN4dGbkh09RsZkxMdkx
cVmxsTlx8Vnxsfnx8QWpAoL+vvodeMqVq1C9WrV69eo21tJq3apV+/btu3Tt
2qN7j769e/Xr22tAv96D+vYe0q/3kL69h/fvpT2g76gBfUYP7jt+SL/xQ/tO
HNJ/8vB+U0YMmK7df8bIgbNGDZgjGjRv9MD5YwYvHDt48bjByyYONpg4eOWk
wasmD16tM3DdlEGbdAds1R24beaAXTP7753Vb/+cvof0+hzW6/3b/F4nF/U4
tajnucU9LyzpcUG/16Wlva8s62Osz0X/6/oDTfQH3tIfckt/mKn+CHP9keb6
ojv6Yyz0x93Vn2CpP+mevs5D/akP9XUf6c+01p/5WH/2E/25Nvp6NvoLXuov
stVfyoVEf5mdvqG9/gon/VXO+muc9de56W9w19/EhZf+Vm/97T76O331d/vp
7+Vj2X4/wwN+Bgd8DA/7rjjivfyoz4pjXr8c91553HOV2Gu1kdcqI681pz3W
nvFcc9Zz3Tn39efd15332HDZY/1lt41X3DYYu28ydt983XWTiduWW25bb7ls
MXXdZu681dxl+x2XHRZO2+867bznvOue8877zrsfOO956Lz3kfO+J06/PnXa
/8TlwFPngzYuB5+5HbFxP/bC7fhLj+MvPMW2HkYvvYxsvU/beZ2R+Jy38z3v
4HPB0e+ig/9lJ78rjgHGTq+MXQKuu76+6cLR5vUt98DbbkG3PQItPKUWHm/v
ekktvYM55jz0CX3oG/LI790T37An/u+e+oU/Dwh79ur9i9cRkjeRktdRDoGR
jm+iHYOinKQfXN/GuEpjPYJjPEPiPIPjfULjfEMSfN8lBoQlvQlPehWWHPg+
OSgiJeh9WnBkakhUWkhkelj0x/cfMiKiP0bEZEbHfvoQlxkbl83DJz47ISEz
IS4vPqEwPf1H3weCfphK86dsWc1KlarUqlWzYcOGzVq0aNeuXadOnXr06NG7
V+8B/foOHNB38MD+Qwf0Gz6w3/AB/UYO6isa3H/M4H5jhw2YNHzgxBEDdIYP
mjpy4LRRg2eKBs0ePWTumMF6Y4cuGDdk0fhhSyYMWzphmOHkYct1hq2aMmzN
1GFrpw3ZOG3olhmDt88YsmP24D1zBv06Z+BBvQFHFvY/urCfeGHf00t6n17a
54J+n0vLel806HtlWb9rhv1N+Bh0w3AIF6aGw80Mtc0MR90xHG1hOPau4XhL
w4lWhpOtDKc8MJxmbTjd2nDmY8PZTwxnPzWc99Rw/nPDhc8NF9saLpUYLrMz
XGZvuNzBcKWD4SpnwzUuhutcDDe4G27yMNzChbfhdh/Dnb6Gu/0M9wYY/upv
8Kv/8oP+Kw75Lz/ku/Ko3y/HfFYe9131m/fqEz6rTnitOem99pT3mlPe6856
rj/nte6814YLHhsvem646LnpiufGq+6br3psuu6xxcRj6w23LTfct5m6bzdz
3WbmtuOOy3YL1513XXdZOu+0dNl932XPA5fdD132PnLZxyU51i77n7kcsHE+
+NT1kI3L4eduh3n+eJx46X7C1vPES6+TEs9Ttt6n7HzO2nuftfO94OB30dH3
kpM/n+04+191enWdy3ZcX5m4vbnlGmjq/sbUg0t4pOaeQXe93lpyOY/3Wyuf
kAfeodZ8whNq7R/GwecZBx//9y9fhT9/HWH7JtIuMMpOBR8+7Yl2fhvjFhzr
9jbOMyTWKzTei4dPvF9ool8Yn/kEvk96zWc+ydLIVGlEWkhUamh0emhURviH
j5ExGVz+Exmb+SHu04f4rLi47PiErIT4nMTErMT4vIQ/i6CckAczu9YruVxP
efP2hIHnZpe+hhdsLKkXH1C3VH+tfgs9v3JTDF03vWHJ1t3PwllncuffDwZE
KSTov6vvIqjRP0TQiK8RNG44h6BBk0YMZAgaxCFolmgwQ9AQhqChi8YP/4wg
nWErdIat5hE0fO20oQxBQ3bMHLpjzu8RZMQhaGnvMyUIMux7xaDfteUlCBrK
IchMjSCLf4SgOaUR9MJwsYRHkEFpBLmoEeTBI2grhyCfrxC0399gPwcf/5WH
ApYf8lt5zG/VMV+GIJ81KgRx8OER5LPunOcGHkHeHII2XfTkKLTpqtcmFYJM
OAR5blMhyMxjh5nbdg5BFioEue1WIeiBy95/gKAXKgR58giSeJ7g4PMZQb5n
HbzP2flyyQ+PIGf/S06vOARdc3pl4vKGRxAHH9cgHkGebMzlGWTpzSEohEeQ
rwpBYTyCGHyeBYTblEKQfRA38vrgFBT9BUEhse5vOfjEer2L9+Lg8wVBKYER
yZ8RFMUhiINPaugHFYI4+KgQlMUhKCaBy39y4hO4FKgUgjL+6YWaab+bXaRN
thrftjC5ukZn+IITXly/z17exOzX+87e7vabx/OAGntN5cXqx+8996ibh7P5
+QXs2KbqUhmBKvrMP2F857aJ/rTuQzZcZf0p7Axz7FwcH1mZXzp32uy+/3/p
vhNUIgFBAoJ+BgRlMGhM+naD3/6hpQsLcplPmVkPWfMNd8B2qXpDiBG3qvuA
r/BzlS/bjIdJ3zlLWaDzwW8q9Aj6b0pAkICg/30EJVku5nni/Z1Nb46MAtqo
1zy43aaaqmpVvOLaq9xKdozkVjuc4Eto1OJa/U5/7zwfKwHdDrz/128jQf93
CQgSEPS/j6Any5px16cqoxFP/vx10MgTPJKizuvwK1Vq16rKenvvVx/EF9rY
p3a5TzTnIXaKh1Moz6Ij3y1tmlubfUb1Kp+rX4w/avufuMkE/SMJCBIQ9L+P
IKuFPHZUXxlLThiOHcZM7AfxpQMTr/I1vIYtXLFq+dJO1fjuIwH5bEc+7UHH
MStX6U8YWIPtr6KTIw+qy9+tK5jNENTawGDRpNEjunfrsf/R2//crSbo+xIQ
JCDofx9Br44M467Pp6Vqpm7gKzHzJQs/nBkPtCjpX8JTqCdrxpZc2OXKNdhv
7Pp5jwIeQS13vvneedLLcQnSr6H/zg0l6F+VgCABQf/7CCKf/dz1Ofzsl8fq
q1tx69e4RqSRCGhQ0v9yNjeGqsWaUdwhu7+TxeSygZzoe6dJ5TbUNbT7l+8i
Qf+GBAQJCPoJEEQ0pzp/iR61C1atjtMABpzhGuEnOATVyv68lxs/kupxkLUD
uOZSyXeqzTtt7sdtaqVrpFrN+OB8x1n1sQn8XTD7/r95Twn6lyQgSEDQT4Eg
KojuXan01YrW+1yInxfU96vehmPVqdIzbm3s9bDvftipBT1KH9RluTHrfsuv
jL72n7m1BP05CQgSEPRzIIgp2c/+zs0bZma2oVH5n7tyo+/dNL1tYX7rpqmn
d0SpfQsfX7gRmvsPPuvN/Ycmxteu2zkFlfTZWpk4vxMqJf5/lYAgAUE/EYIE
/fUkIEhAkIAgQT9QAoIEBAkIEvQDJSBIQJCAIEE/UKURpKmpWbFi5Zo1azZs
0KBp8+Zt27blENSdR1CvAX37DOzfd9CAfkP69x0+sO/wAX21B/YdNaj/aN6s
o/9EZtYxedigKSMHThs5eOaoQbNEQ+aMHjxvzND5Y4csHDds8fihSycMNZw8
dPnkoat0hnIUWjt1yIYvZh2Dds8euG/OgIPz+h9Z0O/Igr7ihX1OLel9eknv
80t7X9TvfdGgz+Vlfa8Z9rtu0N/EYKCJwZAbBkNMDYaZGYwwMxh5x0BkYTDm
rsE4S4MJlgaTrAx0HhhMfWSga20w47HB7Cd8zH1qoPfcYMFzg0W2BkskBsvs
DJbZGxjaG6xwMPjF2WC1i8FaF4P17gabPAy2cOFtsM3HYIevwS4/g728UwcX
hgf9VxzkzTpWqMw6jvn+ctx79W88glaf9Fp7kjfrWKsy6zjntf68x8YLHp/N
Oq5wCHLfdN1js4nHVhMeQVu/NuvYcdd1110OQc671GYdex6pKfTUef8z5wNP
XQ/auBx67soh6Ohzj99euv+mNus4Wdqsw54367hY2qzD+fX1PzbrsOTNOoI5
BD3y+casI4BD0PuXX5t1cCByfvvhe2YdCX7v/olZR4TKrCPm92YdCYlZCXF/
3qxD0F9S+EYaGhqVKlWqUasWByItLa1WrVu3a9u2c4f2XTp36Na5Y49OHXt3
6di7c8e+XTv079ZpYLeOg3t1HtGry/A+nUf26irq12VMv24T+nedNKC7zqDu
Uwf30B3SY8bQXrOG9ZwzrOd87Z4LRvZcMqqnvqjXstE9VozpsWp893Xju6+f
1G3z5K7bJnfZObXzXt1Oe6d3PDS9w9HZ7Y7Pbmc0p92pue1O6XU4M6/j+fmd
Lup1uqTX9bJeDy6M9XoZ6/W5rtfvpt6AW3qDTfWGmukNv62nfVtvlIXeaCu9
sVZ64+/pTbqvN+mB3pSHetMe601/rDfzmd5sG715z/XmvdCb/1Jv4Uu9JXZ6
+vZ6BvZ6y531VjrrrXbRW+2ut85db4OH3iYvvS3eetu58Jq/y3vhLu8Fuz0X
7vNa/KvHov2eiw+4Lz3oseSgm/4Rt2VH3fSPuhuccDU84Wogdltu5LLipMuK
Uy6/nHVdedZ51TnnXy46r7rksuay0+rLTmuNndcZO6697rj+pv26Ww4bTB02
mtltMLPfdMd+s4X9prv2Wyztt1rZb7Oy3/7Qfscju50PHXY9st/92HGPtdO+
x8y+7JnLwaduR2xcjz5z46H0wv3Ec4+THJRsPU9JvE7b+pyz8z4n8b1o73fJ
gXcQuuoYcM3J39jl1Q3n1zdcXpm6vTFzDbzt9ua2R5CFu9TKI9jK662Vd/BD
r9CHPiGPvN898Qm19nv31D/secD75/4Rtq/eSwIi7V5H2L2JcgyMdnrzwTUo
2pXLiKSxnsExnm/jvILjfUMSA94lcBnRq3eJr8OTXoelSMOTpREpb98z17Ko
tLDIjPDoj5EfMiJjPn34kBUTmxkbw7HoU1xMblxcQVraj74PBP0wfYug76qs
BsppokrZMlXKalQvr1G9nEat8hp1K2vWr1SmUdWyzaqVb1ajXMvqFdrUKt+u
TsXOdSt3rVepR4NKvRpW6duo8oAmVQdpVR3StKp2i6qjWlYd16rqhDZVJ7Wt
PK1dFd2OlWZ3qjS3W5UF3cov6V7OoFfZlf00V/XT2NAfWwdj22DsHop9w7Bv
BA4M1zisrXlMW/O4doXftCuf0K4s1q5mpF3zpHads9r1zmk3PK/d+IJ204va
LS5pt7qq3fa6dgcT7c6m2t1ua3cz1e5ppt3HQrufhfbAe9qD72sPe6A9/KH2
SGvt0dbaY59pT7DRnvxce6qt9lSJ9nQ77RmO2rOdtee6aM931V7krr3UbcRS
t5GGbiJD91HLXUevch2z2nn0Gpexa53Gr3cet8FxwmbHSVscJ251nLzDXmen
w+TdDlP22E3bazd1n93Ug/ZTDkp0D0mmHZNMP24347eXM07YzhTbzjZ6Mevk
yzlnn88+93zu+Rd6F2zmXbSZf9VmwTWbBcY2C6/bLL5ls8TUZqmZzbLbNgZm
LwzNn6+weLHyju3qu3brLCXr79ltsHLYfN9+yz3HrQ+cdzxy2snlTtZuex+7
7nvq9usTj0PP3A899Txm4338uddvL32MXviJbX2N7PxOSwLO2Pmfd3h1wf7N
RcfXl5wDrzoFXXd5a+IqNXUPNnMLue0RYu7+ztIz1MIrzMon/KHf+4e+kY/9
I574RT0LiLR5Ff3yTczL17H2gbEOQXGOQQkub+NdpYluwUmeISm+75K9Q1P9
w1ICwtNehWUEvk8PikyTRvD20WEfeNfW9x+yVd7RsXG5cQk5CfF5iYm5ifFF
ScmFgnHr31ibN2/euXPn8ePHxbxOnT59+ty5cxcvX7589eq169dv3Lhx8+ZN
UzMzc7Pb5rfN7twxtzA3v2tubml++57F7ft3bltZ3L5neefRXfMHVuYPLS0e
3btjbXXn8X3zJ/fuPrWyeHbfwuaexfMHls/vW0oeWkoeWdo9tLS3trR/ZOnw
2MLZ2sLliYXL47uuT+54PLPweGru+eyOj81tnxfm/jZm/i/MAl6avZGYBdqa
vbY1C3xpHiS5LZWYB0sspJK73PKt5G6IxDJYYhUiufdOcj9U8iBM8vCd5FG4
xPq95HGE5Am3DJc8iZA8fS95FimxiZY8j5S8iJa8jJHYfpC8jJXYxkjsYiX2
8RKHOIljvMQpUeKcIHHhlskSlySJa4rELVninirxTJF4pdh6pth5p9p5Jkm8
k+19k+19Uuz8Eh18kxz8kuwDkhz9kxwDkh1eJzi9SnR6k+j4OtE5MNGZXyY5
S+OdAhOcpAkuwQku0gTn4ATXt4muIXEuwfFuIfFu7+JdQxPcw2Ld38W5hcV5
vI/zCI9zj4jzZA0vrhEV6xmZ4B0Z7xUd7x2V6BOV4Pch3jc6yS8qMSAmwf9D
csCHpNexia9iUl7HJAfGJb2JTQ2MSZHGJwfFpUnjUoMTUqXxKcFxaW8T00IS
UkPj00OS0kMT08ISMt4lZ4Qnpb9P/BiRkvGea6d+ikj5GJXyMTI5MyotMzL1
U3RK1oe0zJi0zLjUT7GpWfHpWbFpmfEZ2QkZWUnpWYkfc5I+ZqdkZCdn5KZ8
ykn7mJeamZeSmZv6KTc9Kz8tKz89M+9jZkHGp4KPWfmZWfmfMgszswuysgoy
c4qycgpzsguzs4tzc4tycopzcmT5+UIJDUGCBAkSJEiQIEGCBAkSJEiQIEGC
BAkSJEjQf0/BLN7JKSyfwjMoLJ5CIygkiIK9KdiRgiUU9JiCrOn1Qwp4SH4P
yecheVmTxyPysCa3B+TygJzukf1dcrhDEi7MyMaUnt+iZ7foiYnC2oSsr9FD
Y7p3hSwvkcVFMr9IZufJ9ILS9Lz81kWlySXZ9UtFxlcLrl3Nu26cfeU6F5mX
TT5euvHxkmnaxVspF0xTzpumnDNPPHM34axVzOn70WceRJ15FH7aOuzss+Bz
L4LP2r455+B/wdnnoqvXJQ/3y94uVwIcr762uxZka/z22dWwJ8YRj4yjHlyL
uWuccOd60i2TDJMbGdduZl29lX3lVu6l2/kX7uaftSw6e6/4zCPZaWv5ycey
U88URi8VJyWKkw5ysYtc7Co3cpMbecmNfOVGfvITr+QnghRiqUL8ViF+pxCH
ycURxeKoInF0sTi+UJxQJE4qECfni1PzxBm54k9c5IgzM8VZWeLMT+LsDHFW
ijgnVZydJM5NEOfEi/OixblR4vwIcV64uCBcnP9OXBAsLnorLgwSF78Ry16J
5f5ima9Y4S1W+Ijl7mKlq1jhJiZHFnZishcrJGLlS7HSRix/yofCmsVDseK+
WGHFh8xCrDAXK8zEMi5uieUmYrmxWGYsLromLrzKR8EVce4lce5FcdYlcdZF
8acL4k/nxelnxennxClnxalnxEmnxEmnxfEnxbGnxDFG4oiT4kix+L1YHGYk
DjUSvzUSv2HhbyT2NRL7GIm9jMRuRmJXI7GzkdjeSGx3QvzyhNhGLH4mFluL
xY/E4gdi8T2x+O6JE+ZHj57fuPHRpUs/+j4Q9MN0kegC0dVCMk6mq1K69JLO
36SzB+nUCjKaQseH0eGutL817dairY1pQxNa3ZQMW9KSFrSgOc1pQroNaGot
mlCVRBVJu6xiKBQDoOgFZVco20PZCsrmUDQC1QHVAlUBaYIABfilki0LgRwg
A0gG4oEY4D3wDggCXgHegAfgAk1HVHqOGtaoa4mG5mhhgnaX0OUU+vyGoXsx
fgt0V2PuUujPwy/TsXkidolweBDEPXGxPW60wJ36sK4G27JwB/yAECAC+MCf
s0waKn9C9RzUy4NWMVrJ0FGOngr0V0BbjvFKTFNiphJ6SixT4hclNiqxS4n9
chyTQ6zAWSWuKXC7CHfz8SAPz3LxMgfO2fD6BP90BKYiOBlhcXgfjagIRIci
5jVivRHnhgRHJNoi4RlSHiD1LtLMkH4dGVfx8QKyTyHnN+QeRt5eFO6AbBPk
a6FcBYUhlAuhmAuaAaUOlBOhHAflSCiHgPpD0QfKblB2grwdFK2haApFQyhq
Q1kDsipQluf/3HIW3F9fxv7uBUAukA2kAalAIvuTRAHhQCjwBggAvAA3wBmw
B54Dj4H7wG3AFLgOXADOAL8BB4BdwBZgLbASWArMB2YC04AJgAgYDPQFugLt
gaZAI6AOUAOoyGaddeMuBUF/V5kQXScyy6U7iWT+lkydyNSSbp4l45101ZAu
zaHzE+nMKBIPpWND6NBQ2jeMdo2kbSNpszatH0qrBtHy3qTfnRZ2Ib3Oirnt
lTPaKae2Uk5srhyrJR/ZSDmirmJILepflXpXpu7lqZMmcWhqo8HdJbLmmgVN
ymU1qvipQbW0ejXj69aJrdkgunrD8Kpa7yo2lVZo9UaztZ9GW2+090QnN3R1
QM+XGPAEgx9A+y7GmGKiCaZdxpyTWHq0zMp9ZTdsq7B1Y6W9q6sc0a8mXljj
/Kzaxjq1b42tY6ld13pQvZe9Gjh1buzTUuuVVrOQOi3eV28ZVaVtQrmOKRpd
09E7EwOyMCwHo3IxLhdTCjG9CPMLsbQYK4uxphgbi7GzGHuLcbgY4mKcKcTF
IlwpwK18mOfhfjaeZMMmC3aZcPoE90/wTcerVEgTEZyAsBi8j0Lke0SFIjoQ
H/wQ44VYN8Q5IdYOCTZIfIykh0i1QJo50m7iozE+XUbmeWSeRC7HoiPI24/8
fSjYheLNkG2AYg2UHI6WQbkEyvmQz4FiOmTTUDwJxeNRNAYFIhQOR95g5PdD
fk/kdkd+F+R3QG5r5DVHXmPkNkBOXWTWRFYNfKqGlCpIrIS48ogqj0hNhGsg
VIP/P+A14MsoxJHbFXAAbAEb4BFwD7AAzBiILjMQiYGjwH5gL7Ad2ASsAVYA
+sBCYDagC0wExgDDGZH6A32AToxCY2vW/NH3gaAfJlOOP0SW+XQ/me69o7vu
dPcR3blCpgfo1joyWUrXZtJlHTo/nk6NoxPj6OgEOqhD+ybTnsm0YzxtHkvr
R9DqwbRiIBkMUOj3US7srZzXXTmri1K3o1ynvXJSK+XYFjSqCQ1vSIPrUf9a
1KeGsmdNZY8a8i61CzvWzWnfIKutVkbrZomtWsY3axur1S6ySaf3DTqH1O/+
tnaP1zV7+Vfv41u9v3eVQa6VhzlUEr2sOPZpxUkPK02zrDzrdrX5N6rpX6ix
+mStTUfr7Py13r6dDY5saXRyTZNzK5peW9zCdG4LC92WDye3ej66tf2wtm4D
2gd06xjYqXN4y65RTbvHNO6VVLdfWs1BH6sNz6osyqk4Pq+8Tn656fll5xVp
LiguY1ikuVqmsVGmsVWmsUtW5oAMR2QaYhnOyXC5CNeLcaMIFoW4V4AnuXiR
CwnLf9yy4JOJVx8RlI4QLgVKQkQ8omLwIQox4YgNRtxrxPshwRuJ7khwRrIE
KS+Q8hTp95FxDxkWyDRF1g1kX0P2BeSdQb4RCo6j8CgKD0K2B/IdUGwFrYNy
DZ8acSxSLIViIeTzUTwbshkonobCKSiagIIxKByJwmHIH4zCgSjsg/weKOiC
gg7Ib4u8VshujuymyGqCtEZIaYDEeoiphw+1EVkT4TURXA3SanhVGX6V4VMe
nhXhWg6OZSHRxLMysNbAAw1YauB2GdxgFDoHnASOA0cYiLikaCuwAVitwYNo
CbAAmMVAxOVFY4FRwAigH0uHdBo1+tH3wRelhfj7Rhf/2x+jWFXi5lhhQOZ3
doi7f++e8ZWrTi4l1RbJz+G+uYXFPStL89u3Lp07d9v69b/9Y/wEUiHIKp8e
pND9d2TpTpbWZHGVzA6S6Xoy0adrs+gKh6AJdHocicfTsQl0iEOQDu1lCNoy
ljaMoDVDeAQZDlAs66tc1Eep10M5u6tyeie5Tgfl5NbKcS1I1IRGNKIh9al/
bepbU9mzFkchedc6RR3r5nZokN2u6cc2zZNat0po1i6uafsorU7vG3YJrd/j
be2er2v1DuARNIBHUJVhDpVVCJr8sLIuhyBzhqCLNdecqr3pWN1dv9bft6vh
0a2NT63VOrey2bUlLc3mtbTQbfVIp/XzMa0dhrdzH9AhoHunoE5dwlt1i27a
PbZxr+S6/dM5BFUfkV15dE6lCfnlp+SXn55fbl5x2YWyMobFmqvlGptkZbbJ
yuySaR6QaXAIMpLhvByXi3FdhpsMQfcL8ZQbf+XCrgRBWXjNISgDoSkIS0Yk
Q1BMNGLeqxHkr0aQyxcEZTz4jKAsM4YgYx5B+WeRf5Ih6BgKD0HOIWgnQ9B6
KLnR2WrQcij0+QGaCkHymSjWReFUFE1EwVgUjmIIGoKiQSjqy2dEBV1RyCGo
HfJbI6c5cpohSwvpjZHSkCGoPj7U4RH0viZCqjMEVYE/h6AK8KoE1/JwLAe7
snimicccgsrAqgxua+ImhyANnNfAKQ0c18BRDezXwG4NbNPARg2sKfN5aLag
VC40jiFIm+VCdTkENW78o++DLxpbBlX1n//7nxP3xunuoxeLWnMMqpn99San
Y9NLv/3UfrUZ64785r2ocX+Hd+cEBAkIEhBUWtw4seV2t3++359TxCEtLtHL
L9WT8nw5B5fyww+qOtMjHCxcVQbXvHl+2y3fKxn7l5aAIAFBPwuC7u+fU5If
7Ln5mRKuh6dXwKSnT8583tB3yqdSh2yaXvtzf505b78aXQWtnKjehLpuH7me
8Kbfe0HbmTlJ31veovKkA6GS66wmIqo11cv6/Dk526Z2LNl54NIrv/uZPdZX
A6rnleoZyu/Y/Xu/XxK3of/JxD/zp/grSUCQgKCfAkHBV6Zyd+jaoxbenjZ7
l47RWfC5BI/73oGq21/vkMnjawb8sGeiqWrTtu5lgao3rN3eut1vz++irYZQ
Qjt2yOJTpndvG80eN/K8YwzX+9re9qX13UaA5ojt/t5e98yum9yxVh1gqYbf
koM3zQ/N5RpNt7NyYx/tOvYfvvq8pY808N5m7pfDROPw0j+28+pKHLG+mOjL
vLl9Gv7i8r1fMbUM0GTRXb5ZmBsf++EfWO//lSQgSEDQT4Egm7UcG/Ctu+Kr
o3xa8av759UHk7k11ac951oWyer9ch9yq1eT+KbnLj5veZT8zWcxTSyHdofC
f9dpvagcd8gldQnWURwstNZ+eyw3iNMcdK50z+8RFHeH+5xBV7+b6nyq+nUC
VmfR7e//iH8tCQgSEPRTIIjLN1SDIK0RC+84RpV0e+8bBFQpKVgYd7YXtw+f
7bze9u2oapkNv8+BJkC5OX90nt5AjV8cf9dpNY+DzqQv6zkJCeqvmJ8cX1K+
1Cmqan9VhkyFoC8Dsfjb3D5Dr6d878x8FtRoMcuCivMTuSzo7+FgIiBIQNDP
gSBeRQ5Xj/ZtyG71LgtUXd57uM+oVlL6K/xYBw4DfMt3I7eX0WOfcKm/o72d
7cuXz5/bqUj1qxZQYe4fnaMbh6DVzr/rvMM/whr97c6BJybw3+wsEb8KjkiM
cODOXVvbuPQOnhurc+mMrGS90IPbv/KsB987M/91dKe90u9t+itLQJCAoJ8H
QZ+VeZU7Gk/YqCzgADcQ0yrZtKA2UHYc3/rE/Vy4GPOdw58sq8Jtcv2DDx/C
bRvy+xdGbk/heod9u/O6Tlx/y5LVnkDFoRdL7xB7oi3QsXTPBEbQkO+cOY7r
b7Dib1fRXkCQgKCfAkEX9Fr10J1udv+Zl+OL6fyzq7oJrD/YaAy3svKyxM3N
du2Ialx7zbPP3xjNYmXo9Y9eefb4odHqBY36zIhVbfhozTBQfd/pm+bXj04b
Ofi3J18Kqv7Gfx4mHTh7x/S6sflDVedl7e8/xrq9qAG3Ye7lhzbmZ7vUYp/a
87Rqk/t9E6unjqv4cSFO3Hp619w8TsE2BJxXDdn2n7tpcfvGgqndhm+6xTaE
ga9of+//cBf/1BIQJCDop0BQ8NPNX75wadb3SUKhql9qNLbUNzFVDj4q/U1y
9KYZDUu2jV9j8WVLiOP0xiVbBtp/lSxFLxxaoWSb6qH8bb2aqDqJvqP3C9Vn
mLNj34qm9btPUmVBIY2++SZquWWc+pdx1G3wpf+cLftqSxlagZ+m+OTP3bh/
HQkIEhD0UyDoj+SzfwTQMO+f7yjof1QCggQE/dQIev5LW3zvYb2gn0UCggQE
/dQIst3FZUGNfz+PR9DPIwFBAoJ+agQJ+tlVgqD7yTyC7qoRZHqQbv1DBO35
LoL6KBf1LoUgZtbxXQT1+IygHB5BWhkcglpxCGob27S0WcefQtCFmqsZgnaq
ELSl8ck1WudW8AgyVSFo8mcEuX2NoJh/hiBm1vEdBKnNOm6qzTpUCJL8DkHp
CGVmHf8IQaXNOtQIyjQrZdbxNYJkf4CgL2Ydf4Cgwm8QlNeaN+tQISitBEH1
PiOIN+v4AwRJvkHQja8RdOQbBP3OrKMEQSOYWYeAoL+5bjEK3c2ne8lkFUoW
bmTxkMwv061f6eZaMl5MV6bTpUl0diydHE2/jaEj4+jARNozkXZNoG1jaJOI
1g2lXzj+9CP9foolvZTzeyjndFXO6KSc2l4+qY1yQnPl6Kak3ZCG1qOBHH9q
UK+qym7VlF2ryTrVKGxXK6dt3azWjTJaaiU2bx7fpFVM49YRDduH1+0QXKeL
tEa3V9V7+Ffp6VOlr1fF/i4VB9tV0H5ebvTjchPuV5hiUWGGWeW51ysvOV/t
F6MaG47U2r639p4ddQ9vqi9e1eiMYZMrC5vemt3sztTmDya2eDaqhd2Q1q79
2vp3aR/YvmNYs85RjbvENOieVKtPWrX+GVWGZlUYmV1+bJ7mpDzNafll5hRp
6BVjWRF+kWF9MbYUY0cxfi3GoWKcKMZZGe9XZlwMk0LcKYBVAR7n4nkObLPh
lAXXTHhnIiADgem8ZeK7JLyPQ+QH3i/oQzhi3iL2FeL8EO+FBDfEOyHJFsk2
SHmC9HtIt0KGOTJvIfM6sq4i+xzyTiNPjPyjKDiMwv2Q7YJ8OxSbQSqzoJVQ
GkC+GIr5kM9D8UzIdFE0BYWTUTSONy4rGIHCwcgbiML+KOyF/G7I74SCtjx/
8logWwvZjZHZCGkNkFwXCbV5s6DomoiohrBqeFsZQZURUAF+FeBdFh7l4VIG
DmVgq4Gnateyu8w+0QS4BJwFjJhr2SFgH7CTmSiuB1YBhsAiQA+YAUxl/BnN
+DOMuZbVAiY3bPij7wNBP0xXWdzMJ9NEuiUlEwcyuUPGRnRpE11cSGen0Clt
Eg+go73pQE/a24t29KbN/Wldf1rTj1b04v0SF3Wgea1pZgvS1VJMbaKc2Eg5
pp5Su7ZyaHX5gKrKvuUVPTSpC6g9qDWoCaghlA2gqM+7ihZVR05VZFVGesUy
CeXLxWpUikblcNQIRc0g1H2N+r5o6IXG7tByRUs7tLNBl0foYYV+tzHYBNpX
MfYcphzHvP1YsgMr12PdL9i+DL/q4chMjZOTNS+NLnt9SDnz/uUfdKtg066y
g1ZVr7rVA2rUCilX5z3qRqNhAhqnomUG2mehaw5652FAPobmY3QxxsswvRhz
5Vgih6Ecq+TYJMc2OfbKcUTOg+gMlw5xICrErQJY5uJRDm+caJsF+0y4ZcIn
AwFpCEr6xjXxDT74IsYTsa6Id0CsLRKf8JaJyVa8d2vaLaSrLBPPIesUso8h
79Bnv8TC7SjaDPkaKFZCbsCPvJR6UM6BcjrkU6CYAMVYyEZCPhzF3LBrIIr7
oKA7CjuhsC0/5ipshsJGyG+AgtooqIb8ysgrj+wyvGtrJnNtTWK2uVFAJDNu
DQECmXOuD+Cp9m61Y96tT0pZJnL5zxXgPLNMLHEq28acylTkWQzMYw6uk4Hx
bOQ1hGGnB9AZ6AA0Y0+lh5Ut+6PvA0E/RgoiYxWCCulWCt0MJmMHunaHLp+g
ixvonB6dHE9GA+lYLzrcmfZ2oO0daUsnWtedVnWn5V1pWWda0I7mtaAZjWlq
fZpUVzGulkJUXTGsqnJQRWUfTWUPKLtA0RHUCtQcpDaRVlSFshoUFaHURD7z
jv4EpAAJvHe0RiQ0w1A+GFUCUcUX1T1Ryx11XNDADk2fo/VDdLBEt9voa4xB
FzHiNCYehu4eLNgCg9VYZYhNC7F7Jg5NgXgsLgzB1T4w74YH7WDTDA514VFV
841m+RBUikLVD6iegtrpaJCJ5jlok4eORehZjL4yDJFjlBKTFNBVYK4CSxQw
UGC1ApsU2K3AQQWOKXBaibNyXFXglhx3C/GgAE/y+OGYAxuLeWfxxomBXBaU
gvB4REYjKop5Rwch1pelQC5IckTiS6Q+YfbRlvhohk83kXkFWReRfRq5Rjx/
ivajeC9k2/jMR74WihUgjj+LoJwL5UwoZ0A5GcoJUI4CDYdiMBT9oewLeU/I
O0PeHoo2vIl0cSMo6vHEl1WBrCJkGigGioA8tXd0BvvrJ6m9oyOYeXcgM271
U9tHuwAS4IXaPvqO2rX1AnCamSVyyc8eZtm6kVm2GjD+zGWZzxSW+XD8GQT0
ZvDpCLQCWgCq2THDNDV/9K0g6G+o/7138JRft/9pfPfA/9pP9E/P8+3P9ec/
WZAgQYIECRIkSJAgQYIECRIkSJAgQYIE/U0lfF8s6O8hlV1AbaAxm6TRHugJ
DGSTx6awSR0G7BnrDla09wR7CHuVTUizYoU1HdgTW1/2ADeIzScJB6I1EFcG
ceWQXB4pFZFeER+r8oU7c2sgvyaK60HWEPKGkDWFrDlkrSHrAEUnKLqwp8l9
Ie/PFylWDoViJBSjQWNBE0A6oKmgmaDZoLmghaDF/BNqWg5aCVrLTximTaAt
oB2gvaADoEOgI6ATLE6DzoEugK6yuA66CTJjcQd0D2TN4imL5yA7Fs4gN5AH
yBvkCwoAvQEFgUJYhIPegyJAkaBoUJQGRZejmPIUV5FiK1FcZUqqRsnVKakG
pdSk1FqUXo8y6tOnBvSxIWVq0aemlNmMcptTXgsqaEP5bamgHRW1J1knUnQm
eReSdSdZL5L1IVl/UgwixVBSDCfFSFKISDGeD7kOyaeRfDrJZ5F8Dsn1SLmA
lItJaUDKFaRcTso1pFxHyo2k4GIbKXaSYjfRfqKDREdYnGBxlug80SX1NLEb
bMrqbSILIkuih0TWRI+JnhLZEDkQORG5svAg8mURQBTEIoQomC3Did6zZQRR
JIsoog9EMURxRPFsmUCUyJZ/h3pZgr6v31maVGA4aspmbvRhs+gnsdkd+sA6
NuX1CJsEe4FNS7vLJqrZsWq/3oA/m0wSwmaVRLFJJvGsUnkykA58ZFNQ8lk1
8yLwU1PkrLi5TBPFFSGvCnkNyOpAWZ8VoW/OCtK3ZZOKOoO6gfrwldNpMGgY
aCRoHGgiaBLj0nQGpXmMS0sZl37h5w/zRNoG2gXaDfqVEekow5ER6BToPCPS
ZdAV0A3GInOQBcgS9AD0mLHoBeglyJ6xyBXkyUDkD3oFCgRJQW9BoaB3oLBS
RIpiRPoAigPFgxJAiaAkUDIoBZQKSgdlgD6CPoGyQTkalFuW8spSfgUqrEBF
lam4GhXVIFktktUnWQMqbkTyJiRvTvLWJG9L8o48oOQ9eUAp+6nppE2K0URj
iSaSchIpp5JSl5SzSDmPlPNJuZCUS3k0KVYSrSFaT7SFaCvRLiIOSgeIDhMd
ZzgyIjpDdIHoIoOSCcORuRpHD4ieED0nekkkIXJkIHJXs8if6DWLN0RSorcM
R6FE79hSBSUVkWLUOFJF0o++DwT9MKnIU4tlQS2AdiwLGgSIAB02qZ6Dz1pW
nJfLgo6xur1XWBbE8ceaFRl3ZrPX/FkiJOX4o8EXJY8uiw8VEF8BCRWQVBlp
VZFenS9inlMbefXZNN1GKNRCcUsUtUZRB8g6o7gbirksqA9k/aHgsqBhUGqz
LGgMaDzLgqaBZrAsiKPNApYF6YMM1VnQOtBGlgVtB+1hzDnAsqDjoN8Yds4w
7FxizOESIROWCN1i5LkLus/I84jB5xkjjy3IAeTI4OOh5g8Hn9dq/qhyIQ4+
YRoUrknvy1JEBYqsQFEVKboKfahCcdUoribF16SEOpRYh5LqU3J9SmlEaY0o
XYsymlFGc8psTlmtKLsN5bSh3PaU157yO1FBF8rvRoXdqbgPFfWlov4kG0jF
Q6h4BBVrU7GIisdR8UQqnkTyqXwWJJtFsrkk0yPFfFIsJrk+yZeTfAXJV5Gc
y4LW84mQcgspd7AsaB/Rr0SH1Njh4hRLhC4w5lxm81VvsHcHVYmQFUuEHrFE
6BmRLZE9g48TkRuRJ5E3kQ9LhF6rcyEpS4RC1PwJZ8sINX+ivkbQhz+DIA+z
G/YhgifHX1AqBNUHmgNtgS7szcFhbDq9Lnu1Zzmbb8/lP4fZPPyLwDXgNhuI
PQXsNfiBmE8ZvNJEYFkEl0VYBbyvgJjKiKmGhGpIqobkmkivjYy6yKqPPA4+
TVDQlH9loKglituhuAOKukLWA7LeKO4H+UDIBkMxAjQKyjFQjGejsMkgXTYK
mwPSY9nOEtAyNgrjEp7VDD5cbGWjsF2MPwfV/BF/zR8OPsZsIHaLZT63GX/u
adBDDbLWoCca9FSDT34kZciuDDmVIecy5F6GvMrwYzEu/3ldhgLLkFSDgjUp
tCyFalJ4eXpfniIqUWQliqpK0dXoQzWKqclHfB1KqEeJ9SipISU3pJQmlNqE
0ppROgeflvSxDR9ZbSi7PeV0pNyOlMeRpwsVdKfCnlTQm4r6UPEAKh5ERUNI
NpRk2iQTkWw0ycaTbBLJplAxx58ZJJ9N8nkkX0CyRTx/FMtIsZwUv5BiFSnW
kXwTKTd/5o9yNyn2sZyHG4gdJTpGJGZpj4o/l9ko7BrjjynLfO4w/jxgA7En
bCDG5T92DD7ORC4s+fFm+Y8f40+gOvl5q4ZPWKkRmQo+0Szi1CMyLmKJ/qCg
zhelcJcoRp36Vy/vgBubRWtufm+L/P45PdXF30BriNU7lf999sweFUsPCso0
Xpb1vYMF/Qf1DxA0/Q8QZPwPERReAREMQbHVkPhdBGl9QZCMQ1BHFHWD/HcI
0lYjaIIaQdP/GEFrGH82lULQ/lIIMvoaQdfUCDItjaAy9OhrBNlpkn0pBHlr
fkbQG80vCHpXlt5p8vx5X4EhqDJFVfsKQVzyk1CfEuszBDViCNL6PYKyVQjq
RLmdviCoSI0gPvlhCJKrEDS6FIKm8ghSlCBoIY8gZQmCVn1BEP0OQQdZCnSU
5T+lEXTlawTdKYWgx6UQZP81gnzUCHrDEPRWHe/+GEEf1OT58wgqag/UW2z9
r17epwZwyf3Kb7qzJ7HLvuagcTqTxjSojOZ6YtafqGKSwXL9WbqThg4cNO+X
G8Jjgf+2BAQJCPoZEET9gb57uRORvfWdm89f/m5reKCNsfEV07s+JeVyIr0k
9x9Yj6wGaPZ5bOd6z9T49PmLqm+9H62sx13ze+0KSw5XcyajLND5YMS/c0MJ
+lclIEhA0E+BoFFA2VZD2lVWj5Fa66q3ZM/rVXrwVEfCQLOyzTf28cAF5q7I
+8033fK9k2RUALof+/AfuK8E/WkJCBIQ9LMgiNOsswFc++N5fu12Ot//aFUL
rv2bjao+qSuPqOpfKqVemwAM2ff1J3lxu7TcE/i9k2TX5E/ScsnieeO0h3Tu
1Hnfg6Dv7SboPykBQQKCfgoEDeYu0xHH1GsvuLWtr/gWN0DD2Bslu707yNeL
LwHHmUFAh41ffVDGA26H3pfjv3eSnNqq74hqfv5SevJx+3/lZhL0f5GAIAFB
PwWCuMFWs+XPPq8U8RjZ+oZvctftsEuJX/bz3MRteqx+ev9rJ6DJsq8+KP0J
t0Ono981vOcHYp32BP9rt5Cgf08CggQE/RQI6grUW2D5eSX3LnfRbnnNN3sC
GkttS3ZLuTiA2+Sqrit2gLugGy//+pNSyvLfGH3Npc9K5Z+H/eL0L91Bgv5N
CQgSEPQzIKi4PVBtlunntUwz7qJdyarCnx7JNau++rzhY3t+ou3kksPu6Wly
Hb9La0ym8F/5zDvno+5Il8Z9Yo0krr/ivEf/15tJ0P9FAoIEBP0MCErnv6XR
PvN5LeoMt6ZjwY7Kciz/1VOvmnYfvxymeH2p9Larn7+EztNt+dUxjeYYsf5Q
fkV09T93ewn65xIQJCDoZ0AQXV2+9NQTdTpTHLxSR+95lOLzasFH07VLJ40f
v/D4yW8fqBfEuW5ZO3P0CO0Roye5l/rSKOLxuSWLJ44dM3bLroufPk8MKjy4
bp74qTAv6P+rBAQJCPopECToryoBQQKCBAQJ+oESECQgSECQoB8oAUECggQE
CfqB+h2COgN9GYLGqc06DBmCdjAEnfjGrMNOjaCAb806qn7HrCO3AfIFs47P
CGr9/8WsY+N/wazD8T9k1hErIEiQCkFVgXpAE1bjsitLhEYAE4HZjEKrgE2s
UPgR4Ayj0E1WT/MR8BJwAjyYd+sr5t0aCoQx18ToMrx9a4ImEsshtQLSKuNT
VeRUQ14t5NVBfl0UNkBRUxQ1R2EbFLdHcSeeRap0SDEAykG8axmfDo0EjVaD
SOWROOsb17JVDEQlrmU71a5lB5lT4jFmlngKdJY5JV5iZonX1a5lKu9WK+Za
9pC5lqm8W1V+iQ7MMtGduZb5qC0TVfatwSzelXZNLEMRZShSk6LKU3R5Zt9a
heKrUEJ1SqxOSbUouRal1KXUupTWgNIb85HZhDKbUlYLym5BOa0ptzXltaOC
Dsy4rDMVsYyosDcV92U4GkLFQ9WuZWOpaBzJGYtkusy1bDYp5pJiAclVrmXL
mGvZ6i/2rcqtpNjBbBL3lrJvPcoodJronNoskQPRdWaWqAKRJdF9tWvZE+aX
aKd2LVNRyIuByJ/oFaOQKoLVDq6hDEShDESlXROj1a5lf8qyTNBfVfhGFYE6
LCniBmWDmYk0lw4tYCDaDPyq9k7kciHzUsaJnqz47xsg+HvGrRmsZnMOc20t
Zn6tckDBQs5CqQFFWb7Gs6IK7+BK9aBsCIUWFC1YNei2zL61O6g3qB9okNq+
VWWoqBqmzWA50nzQIubdupJBaT1oM8uOdqoNpY8wIv3GiHSGGUqrRmc3WF50
W42jh8xK+pnaR9pJDSKOQn5qE2kpi1C1d+s/Nm4tcW1NK+XamgnKZZEPKgAV
gopAMpC8DMnKkqI8KaqQvBrJa5CyFinrk6IxKZqQogUp2pCiAyk6kqIrKXqS
oi8pBpJiMNFQUo4k5RhSTiDlRFJOIeUMZt8657OhIpcj0QqiX4jWMvvWzcy+
dbfaR1FFJDEj0nk1jkwYi26rkyJrtYn0CwYiZ7V3qw/LhV6pvVtLjFtDWDpU
4ib9O+PWWBaJ//xKFfQX1YgePUb16DFr5Eg9kWixSLRMJFotEm0WiXaKRPtF
ohMi0SmR6IpIdF0kMheJHohET0SilyKRvUjkKhL5iESvx4iko0Xvxooixogi
x4lixosSx4mSx4tSJ4gydEQZk0UfdURZU0S500W5M0R5M0WFM0WyOaLiuSLZ
fJFioUixWKTQF8kNRLRcpPxFpFwtUq4TKTeIFJtEtFVE20W0i8VeER0Q0WEW
R0X0m4iMWJwS0VkRnRfRFRbXRGQiopsiMhORuYjuishKRA9YWLN4KqLnIrJl
IRGRAwtnEbmNIU8uRpPXaPIeTX6jKWAsvRlL0rEUOJbejqWQsRQ2miK4GEuR
YylmDB+x4yhuLCWMp8QJlDyRkiZQig4lT6ZUHUqZSqnTKF2XMmbRpxn0cRZl
zqasOZQ5l7LnUe58yllAeQspdxHlLaH8RVSoTwVLqciQZMuomEtdVpKMG0mt
YbGW5BuIVM6r20i5nZS7SLmHlL+yOMjiCCmPk1LM4hSLs6S8QMpLpLjMRljX
1C7QKjvWEkfWByxU6Y0NC1WSoxptqfIcd5bneKnHXKoBl8qgNVg92opgWc3v
2BLPrOnj1R71XKqTwsZcKcyvPpUonTUyiD796PtAkCBBggQJEiRIkCBBggQJ
EiRIkCBBggQJEvRX1suXL93d3QOlgdIQqTRUyi/fS6URLKKl0lipNE4qTZRK
k6TSZKk0RSpNk0ozpNJPUmmWVJoplWZLg/JYFEgD86XSQqm0QBpULH1bLJVy
IZMGyaRv5VKpQvpWKQ0maQjXINYgaag6wkkaxpaqiPw6PpA0hqRRJI1VRxyL
eBYJ6khkkUTSZHWkkTSFpKmswUU6iwySfiTpJ5JmqhuqNhdZ6mU2SXNY5JZq
5JE0n0UBSQu/LIMKKZBrF/GNt8V8g4u3MtZmy+BieiunEBnfCFU1FHwjWEah
CgqR0zsl3wiTs5KjSgpTrZZ6hF3SKKkDGFVqmnEMa8eqp/mVPOZW1UqOVz+W
SmSRxB5IqZ5JpbBnUqnsmVQaeziVzh5OfWTxiShTHVlE2eqGqp1HlEOUy4Jr
57MoICpkjUJ1u0i9lLFlMZGcLblVBWuXLAX9TaVQKr6dF8SrDKvr3BzoDgxh
U6VnAUuA9epXNU6ziUF3gIeABHBXz00MAd4DMWxKkKqQcxabD1Sgmv0D0D8J
DUIlQjVCTUIDQmNCM0JrQhtCJ0I3Ql9CP8JgwnCCNmE0YSJhCmE6YTZhLmEB
YSnBgLCasJ6wmbCVsJ2wh7CfcJhwlCAmnCScIZwjXCYYE24SzAjmhLuEB4RH
hMeE54SXBHuCC8GN4EHwIfgRAlm8JYQSwgnvCRGED4QY9TKOEE9IIiQTUglp
hHTCR8InQjYhh5BHyCcUEGQEOUHBlkrWINag30cZogpE1YmqEdUhakikRdSM
qBVRG6LORN2JehL1JhpENIxoJNEoonFEk4imEU0nmk00l2gB0TIiA/XUIPb6
Bu0g2sMmKx5Wzws6yaZMl8wLMmNzFK3YHEVrdU1VibqgqkepdzRK6qhGqDlZ
gsRkxrqPjGMqfBWykDNACfqb6ivylGfzpBsBLdV1nVWvii0oNUP6OJshfYW9
pHEfsAEc2cTEADY3+h0QwWYlJjAEpbEpiZlALqNQIZuMqOQ5U4ZQkVCFUINQ
l9CI0ITQgtGmPaELoTuhD6E/YRBhKGEEo804wmTCVMI0wkzCHIIeYTFBn2BI
+IWwhmFnE8POLsJewgHCQYad39TYOUu4pCaPCeGWmjxWhPuMPxx8bAgvCHaM
P86MP+4Eb8JrwhsGHy5CCGFq/nARzfgTreZPCYJSSlEog5BJmlxkUflsqpBD
FfOpYgFVKaSqxVSjkGoUU00Z1ZFTPSU1UFAjoqZEzYlaMM60Z6jpwlDTh2gA
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
YHQv+1gFhxj5M3GK52IVr8QrXIlTuBGndCdB6V684sNE5acJSi+SVF4nKr9J
VPNIVvuYpOGZoumdrO2TrOOXOiAgZVBQyvCQNL3w1DHh6QZRaRNjMsxi083j
0y0TM6YnZ8xJzZqXkflLRuaSrOzluVkrc3Ns87M3FeduKc7ZWZazryJvX0Xu
oep8+9o8B0LemYaCc6T8y6TCa9SCG7SiW/TCe/RiV0bRY2bJS1bxK06pO7vk
Hbf0A6f8E6/Cm1vux6/051UFCSpD+dURwpq45trEppqklrrU5tqMVkJ2a11+
S32BqKFEVF8maqwQNVaKSFUiYrWIWCMiIyyqxUCElBEQEdpARGtEWUQlomWE
RZzfRhCHUFDU0JWLj0Rl2QXM/+oWqMzNp7e0lYk1pYUllTXVVVT8Ycn/L4kR
pAnafWFQXxjaV0a/b09D7V6mOopWOmpztDSWaGut0dbepN1/h/bAA5pDjmkN
PaWld0Fr5NU+Y25qjnfWMHzYZ9JjDdOn6uZPNSyeqFq5qM54oDLrnvL8W0q/
XFVccklh+Tn5VQ691p6QW2/fc+Nh2S12ctv2y+zYK7trp+yeHbL7tsnabZI9
uFHm8K9yR9fJHV0rd3y13MmVco7L5U4vlju7SO68jdzF+WhcmSt7bXZPp5k9
r1v3vGEtd8Oq123LXnemINHz3mT5+ybyD0zkXSbKP0TCUP6xQa8nYxWejJV/
rq/4Ql/h+SilVyOVXw9HQu3NkN5vB/d+N0TTY7D2+0E6HwYO+Kg78NOAQZ/7
D/PsN+KLzkivvvpfdUZ7a4/30Zrgq2nk18fIT8M4sLdpkLpZsNrUEFXLUBWr
MCXrcOWZEcpzwpUXRiovilJeEqm0MlrFNlrZNkp1Q4zK1hi1ndFqu2NV7WLU
D8WpHY3rfSxW3TFe42xc74sJfS7H97mRiITG3QTNB0maDxP7PE3Wepmk6Zai
/TZF631y30+pfb+kDPBOG+iXNjggdUhQ+vCQ9JFhaWMjMsZHpU+MyjSNzZgS
nzUtPss6KXN2Svb8tKxfMnIWZ+WsyMpenZtrm5+zPj9vU2HuzrL8XaX5+yvy
DlcVHK7KP15b6EgoPNtQcJFYdJlceJ1cfItWdJdeco9R7Mosfcoqec4uc0f4
wy334JR95FV4ciu9+FV+vMpAQXUQvyZMWB0pqI1uqktoJiQ31aW01Ge0IPxp
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
9QfZhKO8huNc4mlu40U+6SqffJ1Hvi2g3hNQXPi0Z020l0Kqu5D6vpn+sYnm
2cT42sTwaWL4N9GDWlhBLczQFmZYCzuyhRXdzIoTcZJbOamtnLRWdnorN71F
kNHMz/+rbwVcf5lu37rn6vL0zev3Hu6fPNy9Prp7f3b3/fQm4OvrMG+3SB+3
OD+3RD+3lAD39KBX2SGv88NeF4S9Lo14XRrlVhXlVh3jRkhwq4t3a0h0a0x2
a0h1a0x3q89wI2S6EbLdanLdavLdagrdKovdKkpfV5S8Li1/XVrpXlrpVlTl
XlD1tqDWPa/2bW7du8w6j4yGd+mNHqmN71OIHxMo7+MpH2Opn6Kpn6NpntH0
zxEMz3D6lzDml1CWVyjLJ4z5NZztF8ryC2b5B3P8Q9gBIezAIFZQMCcokB0c
xA0P4IQE8iKCeBH+3MgAflQgP9qPF+nPi/UXxAUI4gP4CQH8eD9+gh8/Ubz0
Fyb5C5P9han+whR/Qaq/QLxM9xdk+AsyA/hZvk2ZfsIsP2G2ZJnjJ8zzF+b4
CPN8hfm+wjw/YYG3MN+nqcCHX+gjKP4qKPQWFHsLSrBlqY+gxAdZCsu/Ciu8
heXewgovfpUXv+Irv8qbX/2FX+vFr/ZCloIaLwGyJHgJ6pDlF0HdV0E9UvAW
NPgI6r0FjT6CBl8+0Y/f6M8nBfCJ/nxiAJ8cyCcF8SnBfHIoOgiihPJpYXxq
KB/tgYTzqRFIP4RPjebTo4S0aCEjRkiPFTKRQryQFSdkxgvYCQIWNlHDSRaw
UwTsVAErlc9Kb+JkCpFgZwu5eUgIOHnNvMImJLjFTXwkyoS8shZBZTMaNc18
NJr4hFZhbYuQ0CKobxE0tAgaWwTEFgEJXfJJLU3kFiGlRUhtFtKahXR0KaA2
N9Fam6mtTXhOeVy4cOHChQsXLly4cOHChQsXLly4cOHChQvXn6gtG3fs3b7X
4fgpx5OnHB1Pnz5z/tTp86fPXzh7+dKZa1fPOl09f+v6eefr55xvXXh467zr
3XOPnS88db743OXyy4dX3rhedne58vbJ1fePr79/dOPT4xufH9/0dHX+8tDZ
0/W+l8vDrw8eerk89r7/+KvzU2/n5773XvndcwtAwvmNv7OH//0P/i6f/B94
Brp4Bbp6Bz70DXzkH+gaGPg4OOBRaMCj8IDHUQFPowKeRAc8jQt4kRDwMjHg
VVLAq+Qg95Qg99TAN0hkBHpkBn7MDPTMDfTMC/yCRH6gd0EwEn4lQYElQUGl
QUHlQcFlIWHlwWFloZEVIZFVYVGVYdGVoXHV4fHVYfFV4UlVkUik1USk1USl
10QikV0dnV0dlVMbk18bnV8bW1QTV1SHRGxpXXxZXWJ5XQIS1XXxNegyqaYu
ua4uhYAuU+trUgg1aQ016fW1aY21GcTaTHJ1Fqk6h1ydTa7OodbkUWpyyTV5
1KoCWlU+o6qAXl3ErC5mVBexKouZlUWsqhJmeSm7opxbUcapqOBUlLPLK3hV
5dzKSm5lNbe6iltdw62u5lbVcqtquFV13Jpabg2BW1PHrSZwqxu41fXc2kZu
bQO3lsitIXNrSMiSU0fm11F5dRReHZmHFGrpvHoaj8DgEei8OiavnsGrZ/EI
TF4Dm9fA4tUzeY0ctEzkcskcAYnDp7D5ZB6fxOVTkTIfLVO5QrpASOMLaUIh
Q4iWmQIho0nAQkIoYAoFDKGA3SxgNQuYzU2c5iZ2UxMXDSEHiRYhu0XIaxFy
0WhGWrmtLfzW5t++UnH9Q/WT54J+kByAPIA6lm2+vywM7Al6CjBGGcYrwyR1
MO0NU9XBsjdYqcEMVZitAvOU5ebLKyzopbKwp7qNnOYvMv2XyA5cLj18hfSo
VbJjVsoarJSZtFrOfHXPaat6zVyjOH+Nks0alaVrVFevUbFdo7Zxtfp2W409
a/vYrdU+uFbn6FqdE2t1T60dfG7t0Atr9C7bjr5ma3Dd1vCmrZGz7WSX9Rau
662frJvxbN2sF+vmua+zeffrkve/rvi8fo3XRlufDb/6bNgYsGlrwMbdgZv2
h245ELb1UNjWo6HbToTvcgjbfTpyz/mIfZcj9jpF7bsRaXcrcv+9yAMPow8+
ijr0NObIy5ij7jH2HrHHP8Sf8Iw/7h3nGBB3KijOMSTudHjcmai4s1FxF+Li
LsfFXYmPv5Yc75QSez017lZ63O2MmDuZMfdyYlxyox7mRbsWRD8qjH5cFPm8
MPJFcdSLkgi38gj3isg3lWEe1eEfa8I/1YZ+JoR51od9aQjxaQzxIYX6kkMD
qSFBlJBgWlgILSyMFhpOC4+ghUfSwqJokXG0iFhaRDwtKo4amciITKJHp9Gj
0+lRGfSYTHpMNj0mhx6XS4/Lo8cW0OMLmfFFjLhCRlwxI66EEVfKSChnxFcw
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
03SwjpKvwTpmIOhfBuuIngrW8elrsI7UqWAdqbODdWT+nGAdVf+ZYB00BNE0
iSAGmMNEN38O88K585fOW7xs/rKVi9asWbR+3eLNbEu3sC/eybFk35blR7Yv
O7mb5bc9K7kPrLp4aNUfR9bePLb29rF1D05ufHRq05NT7E9PbeE7uYX/+C6B
43uEjh0UOnxE+NAxkYMnRQ+cEdvPLXHg4pt9VyX3XZc6cEty/x3J/Q+lDzyW
OvhM6tALmaPC0sdEpY+/kj4hJX1cVvqEkvQptbenNGRO68mc1ZM5ZyRz1lT2
ovnbS5ZvL1u/vYZRSPaOo+w9J9n7brIET/knXnLPfeT4/eReBMgJhchRKST/
JloenQjJxSrIxyooJiipJChqJCppp6jopaoapKgYpqiapqmbUedCVmlatmma
jhk6Thm6zuk67um6Xpn63lQQBWQZBWcah2ebROSYRueYxGSbJeSaJ+WaJeda
pOW+z8DMOjvXNjfbLi/HHgVRQZZDYbZzUbZLcaZLcZZ7WZZneYZnRYYXMdO7
MtOnKt2/OsO/BgVRWnB9WnBDekhjalhTaiQpLZKcEtWcEt2S+rE1ObYtObY9
Oa4jObErOakzOWlyLtSVktqVltaVmt6VmtGVntOVltWVlt2VkYtaT3ped2Zh
d2ZRd0Zxd1ZJd1Zpd2ZZd3Z5d3ZFdxaxO6eyN6eqJ7u6J7emJ7e2J6euJ6++
J6+hJ7exJ7+pp4DUk0/uK2zuLWrpRbfFrb0lbdi2rL23vLO/oqOP2NlX0d1X
2dVX1d1X3dtX09NX2ztQ199f39dfN9Df0N/fONjfNNBP+jxIHhwgfxlo/jxA
poYpa6WGKWv7MthGDVOGzog6hj5Tw5R97qIaNiNCt5TR/v96bDGa/jGa9eRw
hnDo9IgeFs2F5fNgzSJgWwocK2DrKtjFCnvwcIQNTmyC05vgPAfjRS7mK5xz
/+BceJ1j0c3Ny+9sWnV/07r769kerN/0EM/Js27ro7W7eFn3PltziG/N0ees
J5+znuFby82/7hI//tpz/G2BjQ9ebOR5senJC3b+F5sFX3CIveB885JLWmCL
gsB2RYEdKgI7NAT3ar/cp//ygOHLI8ZCJ94JnjEX/O294DkbwUsOwlcdhW+4
CN10E7rtIXTfW+iRrwivvwhfsPCLUFGhCFGRCBHRaLFXH8WkPom/jZNQiH+t
FPdKJe6NRoKkVryUTqK0QeJb4wRps2Q5iyR5yyQ52yQFxxRF52Qll1RljxQV
7xRV/1T1gHSNkDT18DTt6AydTxnasRk6CRm6yRl6yRmGaRkmGWkmmWmmWelm
2almOamWuWmW+SlW+Sm2xakOxckOJcmOpclO5SnOFUluxCT3ymSPqgSv2kTv
ukTv+ni/hoTAxoSgprhgUlwIOT60JTaiNTaiLTayPfZjZ+ynjtiYrvjYrri4
rriEroTEroSkrvjkrsS0rsTUroS0zuSMzqTM7qSs7pTc7uS87uT87tSC7pTC
7pSi7rTi7tSSrtTSrvTynrSKnjRiT0ZlT0ZVT3p1T2ZNT2ZdT0Z9T1ZDT05j
d3ZTXw6pN6+5N5fcm9/SW9CKbYtREHX0l7T3lXX0lXb1lVFBROzpq+zuq+od
qO7vr+3rrxnor0VZNNjfMNDf+HmQNDjY9AWjEAml0BBGoeahzyiFWoYxCrUO
f2kf+tI5+qUDnQKhIBr53D021Dn6uWeC0vcfippI0/95jY9T/h2CGADmMmII
YpkLrItgAwuGoO2rYPda2IeHoxvgxGY4w053noP5Eoagede4FtzkWHyHk+UO
+6oHm1kfsm3gWc9OwHPysm4nrNn9dO3+56sP860+zr/2JP/a356v4X7BevUF
/jr/+rsvNz4U2PxYgP2ZAOcLAQ4RAQ4JAU5JwS1vBbcqCG5TEtyh/nKHpvA+
PaGDxpgdeydywkLkN9SsRM7ZCF9xErvqInrTXfQOap6iD/1Fef1FnwaJ8IWL
CISLiURjJv5JQjJGXDr2lXziG5UkSdTUE99oJkvpJEvrp741TJV7lyJrmSJn
maJkk6Jol6LsnKbklqrilqHqla7ul64RmKkVnKUZkaURlanzKUcvNls3IVs/
JdsgJdsoNdsoM+ddVqZZdpZFTtb7vAyL/EzrwkybonTbwnS70gynslTn8jQX
YppbZZp7dYpHTcqHuhTPmhTfhlS/plRfUnJAU3IIOTm0OTGsNSmiLSm8IyGq
M+Fjd8KnroSYnoTY7oT4vqSE3qSk3sTk3uTU3uQUbJua2Zua0ZuS1ZuS3ZuS
25+S05dW0JdW2Jda1JdR2Jde3Jde2pdZ1pdZ3pdB7MuqHMiqHsisGcipG8iu
HciuH8huGMhuHMBCRjcN5JEHcpv781v7C9v6C9r6izr6i7r6Czv7S7v7y7oG
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
TQXUtUlANcHvZLhAhvMkOEuCU1SbZNQRDFN0+0h0e5vpdjfT7STTbSfTcZHp
OMh07GS6DWS69WRYT8atbcIABR34vf+J33ZxtNNrKTk1dQ1L31mplmn6PyMg
Z0FTOnr/hWvKxzXm4RoKcPUFuNp8XFUhrqoARyzClRXjyopwJSW4wmJcYSmu
oASXW4ZZVikuqxyXXoZLr8CllONSiLjEClxiJS6OiIurwsVU4qKrcdFVuKga
XDhq1bjQWlxQHS6oFudfj5lfHc6nAefZiJlHA861CefaiHMh4RybcI5knD0J
Z9OMsyHjLFuo1owzb8WZotaCM2rDGbWDYRudQSedbhedbjeddjdoduPUu+hU
u+hV2ugVW5jeNjG/rmGWKJ8nUrJQIG8hf/bCp+lLCMlLHsSz3P60/GbEimth
K68Erbrgt+q819oz7qzHnVmP2q8/aM2212LDTuMNWww2c+ps3qzOyaayBa+0
ZZ3ijnVKu9Yr7V6vuH+jyuHNqkc2qx7l1Di5VfO3rVpnt2mf2657cYfOlZ3a
V3fpXtutc32P3u29+vf3Gjw4YPjwoMHjQyh8jJ8dNeE7Zixw3FToxDuxk6bi
p8xenbZ4fcpc+jcz2d/ey516r3TaTPWUudpJc61j77SPmRkceWd8yOTdflOz
/SaWe42tdhna7TJy3GHgss3QnUvfk8vAh13Pj13ff5NeEJtOOJtuNF4neq1W
7FrtuNVaSSs0UldoprFoZC9Ry1uiXrhItWi+Wtl8deJc1Wpm5ToG1QYGxSZ6
RRKdAhknRzVpMp0kmV6CTC/ehBMlMQiTGARJDPwkhudNDM/IDE/IDI/JDI/I
DA/JDPfJDHfJDDfJ9DfIjNdIjFebGS83M/7ezHihmfEs1c40M55qZjzRzHCs
mekQmelgC9P+Fqa9LUy7W5i2tzBta2Ha0sLE3sK0qYVxUzMzOl9a1YLOgv4z
N2JKFxdPv+jf8tfN/6VGCmymQywC0zJ+g+C/2THR6OlhAYe/fZyJQPM/vh6F
Dm8b9yeRqP+RoiIoYwaCCjEKTSKoehJBJbjyYiqCSjAEoZZXjiEom4qgjHIM
QakVGIKSiBiC4lFDEVRFRRBqtbiIGlzEJILqMQr5N1ApNImgJpzXNIJQI+Gc
UEMRRKYiqBln2TqFoLZpBNFPIsiwk06vi06vh4qgnpkIYpb9HkEvviJo6YP4
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
lMR3lFLLpbEdZWg5pqsstrM8tqsiprM8vrsirqsyvrsqrgfbJvZUx/di26Te
msT+2uS+miRsW588UJvSX5fS34Buk/sbkvsbkweakvtJKX2NKb2kpF5ySk9T
Uk9LYjc5uas5vqs1Ad22tyS0tca1tcV3tMe3dMa3YNs4ckcCuSuhqTOhoTOp
riOlviO1riO1qiOjqiOrsiOnrKMAtdKOoqKOksKOsoIOYl5HVW5HdXZnTXZn
fXZnQ1ZHY0ZHU2YnObOjJbuzJau9JbutPbO1Pbe1I7elI7e1M7els6C5s4Dc
U9jUW0TuKSb1FzYNFJEGi5v6SxoHShoGS+sGSus/lzUMltcPVtQNEusHy2sH
q2oGq2oHq2sGq6sGa6oHa6sGa6u/1FV9qa/8Ul/1pYH4pbFysKHic2PFQBNx
kEQcIBP7ScQ+MrGXROxvJva0EHuaid0txN5mYmcrsbON2NFK7GgjtncQ2zuJ
bR3E1nZiS0dFa1dFSwexpbOqtYvY2l3Z3FPd3F3Z2lXd2lPT2lvb3FfX3F8/
tW1o6a9vGWggDzaSqduWL03Ng6TmL+TWz+SWoebm4ZbWoda2keb24Za2ofb2
kfbO0Y72kc7Osc6O0a7Oka6u0e5uSnfXWE83pbdnord7vK97fKCH0tc90dMx
PvA/ybFD06+tWSFVvhM9wHyAVQCbALYBHAT4DeAywC3qizLC1BdolOlAjxGM
5sC7efB+IVguBpvlYLMKbFaDFStYrcfMciNYs4M9JzhsBccd4LwbnHaDy35w
PQhuR8DjOHw4BZ5nwPcc+J0Hv4sQdAlCr0LoHxBxA6JvQ/Q9iH0ACY8ggRdS
nmGWwQeZLyFLGHLEqPYKciUhUwbSZCFFAeKV4ZMqRGpAuC4E60OgEfgYwQdT
cDUHR2uwsQUrOzB3BBMXMHQFbQ9Q+QDyXiDtCWLeIOQNfN7A4w3XveGy99yz
3iuPebPt8+bi8t7P5n1qjffFZd4353s/YPJ8Bl4C4CUB7m/BTRVcdcDJEByN
wM4C7KzA0o7B3GmO8YcFhp6LDf1W6gWt1Q5bpxG+Qe3TZsVEDoXULbLp22Sy
dkvm7n9VcFis+KhoySnRsrOCpdwvSrn5Si/ylV59VnqDt/QuT+k9ntJHD0sf
3yvlu13+/EaZyB9lolfLJK6Uv75UKvV7ydsLxYrcBYrcuWrcWZrcGVrcydrc
iXrcsYbcUYbcEabcYabcQRbcvhbc3u+5Pay5Xey47R25rZ24LV25zd0umH34
3dj7kpHfVcOA64bBt4zC7hqF3zUM5zGM5jH89MQojs8okc8o+YVRuqBRuohB
lqhhroR+wWv9Iin90reGFfIGREWjSlXDKi2jWh3TRkOLemMLkqkV2dy22cqu
xc6xw8mlw921+4NHv49nb4DPYKj/5/Cg4cjgsU9hlITwiaSI8dTIiZRIJCV8
rDD5r3+pNP1D9afkmQvAAoAH4ALYyQCHGOG3uXBxAdxYTPeQhf7JcibB1XMk
WecprF+guWmREcfS91uX2W1b5rBjmcuuJS57lrgfWOh2eL77YWaXo0yux+ld
T9G5nALXs/DhPHy4AJ6XwPsKeF0B72vgcwP8boH/HQi4BwEPIPgRhDyGkCcQ
/gwi+eEjP8S8hHghiBeBRDFIkYCU15AuBekydFkyuGw5xhwFpjwlxlwV5lx1
5jxN5mxt5kxdpnR9xhRDhgRjulhTumgLiLCEcGsItoUAB/B1BE83cPcANw9w
8gR7H7DyAXN/MAoAvUDQCgDVIAb5oDnSQSwSQWsFgjY/DdrOE3TodtCJP4K4
uYOunQ66fyTo6f6glzuDxLYGSLEHym8MUsP76eD9jFl9LVi9rNm8bNk8HDZ5
uG528eBy8tpmF7DTJmCPVcjB9+FHzaOOvft0yiThtH7qeYMMbt2si9o5VzTz
rqkX3FIpvq1Uck+xlEeulCBfwvu25KlUyXOpkpevS4QlSkTFS16Jl7wWKZES
KpN9WabAX6ryvEyNr0zjWanW02KdJ8UGvAX6vHkmvDnveLPMeNPMeFPf8yZa
8cZZ8cbY80bb84Y78QY78wY58/q78Xp7ED548bp68br48jr6PnEMeGoX9Mw2
5LlNmIBthKB1tDBqtjEStnHitgmS1knS1ilvrdPlrTPlbDIVrXKUrfLU3hdo
WBZpvS/VsSrXsyw3sK40tqkys60xd6i3cqqzc2p0cG1y9CC5epA8PFu8fFr8
fNr9/buCAzvCgrujQvuiI/piIwYToj6nfPqSFjOUETucHjOWEkUpyfzZ1wFN
P00zyYMDmEMPS5noWecysi9g3rl47uGl80+sWnh+1eLrrEvvrl/6eONyAfaV
IhyrpbauVd6xTmv3eqN9GywPbnY8yu52bLPHCXbvU5u8Tm/yO8/mewHvy73G
+/fV3pdXel9d7n11mc+NJf63FvnfmR9wb37Qw7mBD5mDHjEGP8aFPMGFPoOw
53ThL+iiXkKUEC5ahP6TGH3sK6b4V3OS3sxLkVqQIrMgTXZxpvzSTMVlOcos
OWrL89WWF2isKtRaU6SzqkhvTZHBmmKjNQUma/Perc4xX5X5fmWqFUuSDUu8
w9IYx8WfnOdHus4Pc58T/GFOgA+jrx+Djx+jZwC9ezC9czCDfRiTZfhcs4hF
JuFL9SJXakasVY1gl4/Y9iZiv2jEcYEI7qcRVx5F3L4d8eiPiOcXIkTPRkie
iJQ9Gq58IFxzX6T+rlDTXSFWO0LsdwQ67w503e3nsc/PZ7+X32HPwGNuYSdd
wk87RXE7fPrdLu6STeJV69Rr5lm3LHJvv8u/Y1LwwKjokUHpE73ypzoVz3WI
LzWJgpoVwmoVoioVEioVbxQrZOQr3spVKMhVKMpUqEhVqr+p1HpF1JOo1Bev
NBQjGotWmIqUWwiXmgsXWQsX2grn2wpn2wlnOQinOQsnOwknuQvHuwt/8hSO
8hSO9BIO9REJ8hP0DxTxCRT2ChH+ECLyIUzULULMNUrC5eNr1xhJ53gZ53hp
10R512Q511Rl53QV50w15xxN5zxNlzxtpwJd5yJ9xxJDxzJjR6Kpc5WZU5WF
c62VS62da4O9O8nJs9HNk+zu3fzBr9nbr8UvoD0wuD00uCsstDcyvPtjZF9c
9EB8zEBSzJe0uKHMxOHspJHcpJHsREpGzHj5j7FS/1ekcX3N11/2pj/6/7r5
v1NVeWF5eWVFeVlVW89ft57WSG9168h/7UgD7SU5ueXNM5O1juZmpmXnFZaV
V1RWVtXU1FRUlNZ1TPzLEX41fX/bRTeXgW4ZM8O6eUwcC+fsWjLvCMuCk6sX
ca9ZcmMdyz22ZbybVrzkXCXKuUZqG6vKTrz2Hjbj/RutDrE7HeNwO87ucZLD
+/Rm7zOb/bg3+F5k87uw1vvSGp8rq3z+WOH9B4vPzaUBtxcH3F0QeH9hMM+8
wIdzgglMIbz0oU/pw/jowvlx4QK4aEG6aGH6aFGGGHGGuNfMCa/mJknOT5Ve
lPJ2YbrckiwFliwllhyV5bnqKwrUVhRorinUXlusu6ZIn7XIcG2x8doCU9Y8
szW5FqszLVenWa9ItlmR4LgsxmlJjMuCKLcF4R7zQj7MDfRl8vVHKcTkGcjg
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
bDnm23PNd9k6z3n7XPfdzG57Gd320rkcANdD4HoUXI6C60n4cBo+/Aae58H7
InhdBO9L4HMFfK+B/w0IuAUBdyDkHoQ8hNBHEP4Yop7Cx6cQwwfxLyD+JSQJ
QYoIpIpDxivIkIRsSciRhlxZyJeHPGW6PFXIV4ccLbosHcjQgxQDSDSCWBP4
ODNqoj34OIKnKxYy0XVG1EQzfzAMAN1A0AwA5SCQCcK9CVogEsTCF4QnBHHc
Ddp7PejwpaAzZ4IuHQ26tS+IsDPoOVeQ0OaAV2yBMuuCVFb5aa/yNVrha77C
y2qNl+0aD4d1Hq54Z4+NTl7sdgFbbAK2W4XssYjYbxZ90PTTUePEY3ppp/Uz
z+hkn9XKvaCef0m18A/lkmuKpbfkyu7JlD2QKeORLHv0quzJq7Ln4mUvRcoE
hctEhUvFXpa+flEu9bxc9mm58pNyFd5ytcdlGoRSrUcl+g8L9XjyjXlyTXmy
3/Gkv+NJs+BJsuKJs+KJteeJtucJd+IJceYJcubxd+Px9njwwYvH1YvH2feh
o+8jxwCCbRDBNuSJdRifTSS/VbQAajYxIjZxIjaJElbJr61TJa3TZayzUJO1
zFWyyld5X6j2vljjfZm2VYWuZYW+dZWxTfU7mzpz+0Yrp3pbpyZ7V5KjO9nV
o9nDs83Lp83Pp9Pfryc4sCs8uDcqdCA6YiA24kti9FBqzHBazEhm7Gh6zFhq
FKUk42dfBzT9HI2Njf0pgqY1F2AZAOsUiI4CcANcBXgA8BxAFOAtPagxg94C
MF0EFkvBcjlYrQS7NWC7DjPrDWC9GYsajZrNVnDYAY67scDRLvupgaMPg/tR
8DgBnqfB6yx4c4MPN/j9Dv5XIOgahN6EiFsQfRcLHP3xIcQSIJEXEp9BKj+k
vYB0AcgQgixRyJaA7NeQLQU5byFDHrNUJUhQhRgNiNSGCF0INoBAY/B5B14W
4G4OTjZgZw829mDhDObOYOgOep6g5gWKPiDnDW98QcQX+H2B1xfu+jJc9V18
wZf1lO/Gg747d/oe4vA9u9736irf28t8CQu9+Zm9hXE+kvBBETzUwV0fXIzA
2RQc3tPb2zBaOcyzcFlk5rXMxHuloe9avSA2vbCN2lHsGjGcyknbldN2yWfu
lM/c9zbnsFT+8dfFJ8VLzoqXXhQuvShUelmg9OqL0pv8pbeflT7gLeV5XPqE
UPrsYYnAvfKXt8tEb5W9ulkmeb1c+lqp7B8lCleKlS/lK1/O0bicpX05Xedy
iu7lJL3LsUaXo1EzvxxmfjnI4rKv5WU/q8uetpddHX53dL5s43LZyv2SuceV
915/mPleM/W9aRJw0zT4rlH4A9RMo3kxi3luFC9gnCRgnCpknCpsnCZmmPXK
KEdSP1/aoEhWv1TBqELRkKhsXKNhUqVrWqtjgcWOfveeZGFNNrdvsbZvdXDu
cHHudHPv9fLs8/HpCfQZCPX/Eh40FBk8GhNGSYwaTY6mpEVOpEUiKRFj+T++
DUjT/z+qrq5ub2///Pnz8Jcvw8MjQ0PDQ0NfhtASKvR/Q0MjWHkILY8Mo2XU
Ozw6PDI6PDw6MjI6OkwZHhkfGR4bHR0bHhkbGaUMD4+NDI+PjlJGhiljQ+Oj
I+PDaHWEMjJEGR0ZQz0jI5RhtIw2GxobHR4f+UIZHRrDRkDLaBfMPz72Be0+
PoZ1mdyOjaGDDE1Qt5SxkQnUT8HGR3dNYNVhdNcE5hnBjjU2hHrG0TIFbYz6
0QFHKJQhbBDKCGV8aIyC7h2mUKiHGx8eo3xBTwz1o21GMUM96CcZGaOgH2N0
cjtM3Y5gW6znCFbGDoaOOIqeOoU64tjYKAXrNkwZH8HKY9SBqGWsGXbsUfR4
mGdiFNtSRjEP+gkmyxNjoxNYlYLupRYmtyMTlK/VccoY+tViRkFHQD86ek6j
42NoeQzdUsbHUD8FrY5Tq6NfqxTsv6kC9q1gZbQFhYL2pZ4WdrIjoxPUPtjJ
Yp+Sen5jUyNOjoUdBj05CnX71UM9LWoVPQH0tMbGJyiU8XHsiBPo6Y6Po8NO
oA4KBRnHtmhxYpyCehHKODKBlscmRtB/5dGffR3QRBNNNNFEE0000UQTTTTR
RBNNNNFEE0000UQTTf9kzZs3b86cOaysa/F41Ljw+KN4/FU8/ikeL4Vfr4nf
aI7f7Izn8sPvCsXvi8Yfj8efTcBzp+CvpeHvZOJ58vHPS/BCRLxEHV66Ea/Y
jFdtx2t340368e8/4+0+412H8B9G8H5D+PDP+E+f8cn9+KxufF47vrgZX9aI
r67D11Xgm4rZWvLYOtLx3cn43k/4/nD8Z3/8qAfbuMP6MasN42YbKUbsFF3O
CfVtEyq7JhT2Tbw9RJE+QpE8QZE4QxE5SxG8QOG7QuG9TOG5PnHv9sTduxM3
H1L+eEy5+GziHP/EGYGJEwITh4Qm9ouN73kzvk1ynFNugl1xYqP6xHpNCpvB
GP4dBW8/jHcdxXt9YQv4zBY2yBY7wJbcz5bRh8/txhd34Eva8BUt+MomfF0d
vpGIbyxGTxnfnINvy8R3pOK70LOOxQ98xH+OwA+H4EcC8KN+eIo725jT+jH7
DWOWm8bebRwz3Dyqt3lcfRNFiZ0iu5nyhmNCjGtCmHPiJdfEs+3jj7aPP9g1
fmsvcm0/cvUQcvkIcuEEcvYMcuY8cvwicuIKcvg6cuA2su8+sucRsv0xsv0Z
wsWPcPIjXIIIB2pCCIcowiGGcIkjnK8QztcIpxTCKY1wyiCccginPMKpgHAq
IVzKVNNCuNQRLm2ESwfh0kW49BAufYTLCOEyRrjMEC5ThMsC4bJCuCypW1uE
yw7hdEQ4nRBOZ4TTBdnijnB5INs+IFt8EE5fhMMHYQ9ANvkhm4IQ9iBkczDC
GYFsiUB2fUL2xSJHk5HzqciNXIRQiAhXIPK1iF4zYteJeA0gkaNI0gSSNYEU
I0gFgjT+7MuApp+nP3sbaD4AJ8AZ6us/YgDKAEYAtgBOAB4A3kAfCIuCYWUE
rI+DLWmwJxeOF8O5SrhaC7ea4FErvOgCsT6QHQDVQdD5AiaDYDsArn3g1wXh
rRDTBMm1kFkB+UVQlgWVqVD3CUjh0OoHHa7QYwf9xjCiBaMKMP4KKEIwwQ/j
BEDuAXILkCuAXIDxczB+GsZPwvghGN/NML6VeZxj3vj6JcgaFmTlamQpfnz+
pnEGLgS2I7B7AvZMwIEJODoBJybgtwn4fQKuTcAdBB6OAd84CFPg7QgofwG9
QXjXBza94N5DPdN2+NgKySRIrYfsGsirgCL0fLOhIhUqE6H6I9RHACmYetYf
oMcJBmzhsyUMm8GYAVA0gKIIYzIwLg7jgjD+HCiPgXIbxq7BxAXs3JGjMLEf
JnbCBBdMbISJtTC+HJDFgCwAhBkQBkD/YajGiMBcBJYgsAKBNQiwIbARgclP
thP9cAjsQ+AAAocROIrACQROUu0MAueo9jvVriBwjWo3EbhHtYcIEKj2BIFn
CPAjIICAENVEEZCg2hsEpBF4i4A8AkpUU0FAk2o6COgjYICAIQImVDND4D0C
VgjYIWCPgCsCHgj4IhCMLPmEbExEDmYhl4uQJzWIVAui34PYjyB+40g0giQj
SDaVQjT9/6pZr0WvBtgJcB7gEYAEgBqAMdDbwTx3WOwLawKBLRQ4I2F3NByK
hZMpcCEbrhbCvTIgVAN/HQg1wasWkO8E1R7Q6wPTfng/CA798AHlTw+Ed0Js
CyQ1QWY95FVCcSkQ86A6G+qTgBwLLRHQ7g/d7tBnD4MWMGQAo+owqggUWRh7
TTcuyjguNH/8+eLxJ8vHCCvHHq4du79+7ObmsatcYxe2jZ3bMXZy7/jRA+OH
j4zvPzG287cxLu5x9t/HN1yhrL1KWXF9Ysmdifn3JhgfTdA9nQABCghPgMQo
Bh+lIdAdBONBsOoHxx7w6IGAbuqZtkFiK2SSIKsB8uugqApKS6GiACqzoDod
ahKhIRZI0dASDu1B0O0DfR9gwBUGnOCLLQyZwxdDGNaFUTUYUYSRtzAiCWPC
MCoAlCcw9pBu/A5u/Do95TL9BDfTxOk5E8fmjh9YiOxZguxiQbauRLjWIpvX
I+vZEdYtyOrtyIp9CMtBZOFRZP4phPkMwsSN0P+O0F9GcFcxsNDdQOhuIShT
cfcRuvsI/QOEngehf4zQExD6Z1R7jtAJIDjUBBGcGIITRXASCO411aQQnAyC
k0Vw8ghOiWoqCE6dapoITgfB6SF0Bgi9EWY4E4TBAqE3R5gsEQYbhN4GobNF
wIFqTgi4IOCG0Hki9J7IXH9kUSCyOgzZHI3sTUJOpyM38hC+UkSqFtFuQay7
Ea9BJJyCJCJIBoLkIUjVX/9Q6zLSqzso//kL4j+gifb8gszE2MTyps/fnEOk
1KTCH3Jw1JRkpWTkFuTkNvT9h6IW/V/U9wiaB8AGcADgMsBToJMCei1gNIf5
TrDUC1YFwIZQ4IqAnR/hUAycjIdz6XA1F24Vw6MK4KsBoQYQJ4N0Gyh3g2Yf
GA2AxQDYfAbnAfAegMA+iOqGhDZIJUN2AxRUQ2k5VBZAbS5dYwpdczy0RUNn
EPR4Qb8zfLamGzGFMW36MTV6ihLTmMzc8dcLx8VZxgVXjfOzjvHhKU82UR5z
Uu5vo9zaRbm6l3Jp/9i5I+Onj42fPD1+7NzYgYtju66M/7/2zgQqimPr48Um
zoAIokyxDsOiCKKoIRoCxt1njGKMinLE+DSugAoaMXGJKGjiGjDGFWM0Icbl
RVFwwQ23RMAFNyQKqPhQFAmK7NN9v6qaffFLcmL8Pt7re+ocbldVd9cMXT9u
dTf/6zeEa/c+5zFM7jqCx+G8/Ri+xTheNIm3jOTMZvImsxtN5jWgxXVoVTVK
rkabq0y2V5rtrDTd/xs6/NTk1BN0tgzllKKLJSjvHrpeiPLJeK+iO7mo6AIq
PoNKTqHSY6jsMCo/gH7bi6p2oRep6MUOVLsV1a03qf3StH6lWUOieUO8WcN8
i/q55o0zmjVEWsonNm8cK+LCxdwIK/lQK36QDd/flu9lx73dBrphCHSGAFfo
6AG+3uDtB56dwL0LuHYHp2Bo0xPs+0LL/mAzCKxCwWooiIdB8+EgGgmiUdA8
HMRjQBQBVqSMA6vxrEwGq0lgNRVEkSAmJRrEsSCOAfFsEM9h5RMQzwPxAhB/
BuJ4VhJAvJSVL0C8AsSrQLQGrJJoEa8F6w1gtR5sNoH1FrBKAVEKNNsGFqTs
AMvvwTIVRLvAajfY7QOHNJAeAt9j0P0s9LsAI/NgSj58cheWl8GWSthdDYc5
GgJlA1wGuPO71+kjZ3J59kt+DTPi1drp5A8008tPk1l1Af08qOuSS5qujfma
DBqeUa/i5AWLYsPa2Nu7OnktSD6owF3dxc0d27q7y2RuLk72tmJT5Lb6SLGy
O3d/+ZAgZ3sH2aCRJ/9KAuw/aQZLMC0EmTIENWMIakUQ9JMKQZmoG0HQKSWC
PriOxhAEFaFpWghKfIZWV6F1Wgja9wwdUSEo9z5D0C10O48gyPT+OdOHp4wh
aBlFELfAUj5HxFMEtSYI4j9y0UVQJzWCeIKgHu/wSgS9xxME+QxTIAi0EAQa
BM1vVCJobQ3aokSQWVqliRJBj1EuQ9BVFYJuGyLoiAZB1amoegeq24rqVQhq
TLRoiDdXI6iRIUg+VsSrEASGCOrsCp0UCOqgQtBb4KxAUD9oOQBs3nsJgiJo
sdZD0GSwJgiK0kJQLENQnAGCFqsQtEwfQdbJGgSRQhGUQotRBFmrEXRYiaD+
BgjaUw1HOOUq7MofQVCdF0J2Y3a/hhnxKq3+Ap1UwYmGLXzWqpDOI44/NLJT
lAtC7Wb+xTPzl3YoFzZ2rS2Zs+IyrS9O6kY3bFy8ZS42YnOEHFYeZnfiHuxT
9JdgJ4Vz9O5fHMIfNQFBAoKaAoIgkMQMC2lWr7Ki/EuF+tOjseZOTu6FvOv6
f7z5J0U3crNzL+eXa9Y8jcW3aIb50ttKLfiigpuq1IfcnZssVU91RU5OTrGW
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
/wNIFXH5
    "], {{0, 499}, {385, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{385, 499},
  PlotRange->{{0, 385}, {0, 499}}]], "Input",
 CellChangeTimes->{
  3.8130422452361565`*^9, 3.8131328567231054`*^9, {3.813150462952524*^9, 
   3.8131504656835785`*^9}, {3.813402076110377*^9, 3.813402083900344*^9}},
 ExpressionUUID -> "646e08c8-7bc0-4fb1-bbcf-48291ea55b0d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], "*)"}],
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "These", " ", "values", " ", "of", " ", "refractive", " ", "index", " ", 
    "for", " ", "the", " ", "most", " ", "common", " ", "optical", " ", 
    "glasses", " ", "and", " ", "birefringent", " ", "materials", " ", "are", 
    " ", 
    RowBox[{"defined", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
  GraphicsBox[{{{{}, {}, 
      TagBox[
       {RGBColor[0.915, 0.3325, 0.2125], AbsoluteThickness[1.6], Opacity[1.], 
        LineBox[CompressedData["
1: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
KW8=
         "]]},
       Annotation[#, "Charting`Private`Tag$68537#1"]& ], 
      TagBox[
       {RGBColor[0.83, 0.46, 0.], AbsoluteThickness[1.6], Opacity[1.], 
        LineBox[CompressedData["
1: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
jHSC7DMK/tGKXu3EmeOaQZDN2RxT9ej/A9jRfBs=
         "]]},
       Annotation[#, "Charting`Private`Tag$68537#2"]& ], 
      TagBox[
       {RGBColor[0.9575, 0.545, 0.11475], AbsoluteThickness[1.6], Opacity[1.],
         LineBox[CompressedData["
1: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
ZinDej4xuWFK7fTLRraMOuX6wSID6v8BaslUfQ==
         "]]},
       Annotation[#, "Charting`Private`Tag$68537#3"]& ], 
      TagBox[
       {RGBColor[1., 0.7575, 0.], AbsoluteThickness[1.6], Opacity[1.], 
        LineBox[CompressedData["
1:eJwd13c8ld8fAHBlSwNNFUmhXZSR+CBFqBCyC4mEyq6vlJWiQmYRIiMqJA1Z
lZFkjyKyufciRPd5kHt/n+f31329X/ec85zzOZ+zJGwvGdov5uDgYC7i4KB+
09JqxpJ2VcCKAeFT6X9IeHfn4+ZQjQqYPHkhW2mMBIMLClJ5lhUQ//ann9kg
CQztF9vavSrgqrm7VFoXCYEykrv+RVQAQ0WiZFUbCRv4Hu7dnFMBrRGDtnl1
JJyoDlJw7amAD4tSL5mXkfDqiOURHu1KeBzi6uH0lIT/NJbYyK+rAnfz5ud1
HiSs3Ox/zlKuCh6MrrezvUTCy0WEQ8DxKih6OCkt4kRCb3m/a71/FcisuWZS
dYYETSjyPc+oAo8+b21bPRK6xfbevMtVDd1X/K2qtEjwYqUHvhKrBtNtehXq
h0nIKokMZRlWw4JUkI3vQRIED12Ij/1QDS8eX7v8ZxsJ6et7EorbqiFZiBW9
WIoE1Xmj5P6JalBQauOV2kzC5SK1jN1bvsDGkl386aIktCqufV119ws4xweb
ewuSkHiguoFpVQMGcSQhMk1AxMbzSjZeNdD+8+9300kCgri502rv18DgOp/d
z8YJcG7T8Eopq4F0AWulizQCVDxLN+hIfAVCeWHC5RcBv14XXng8+BU+XLPJ
Vv5GQHOiUQvvwldgKOfLbPhKQFXQ9CG3VbXwe73cU64vBLw02rdC62gt/OeX
3TP2mQC/medvJjNrwbRyZ9mqYgLE9z/l1Lz4DSpndu3OfEHAyg2HXV4GfoNN
RFv6TA4BfFz97WsTv8Fxkv5JK5uAyRbx7PFv38DY568XK4OAcvcE/bjddXB3
yqIwO4WAswUPHjOm6sDRd6M1LZoAo4R9vMYC9eDg29kUGEWAdmDj5bLN9eCu
1Gsn+YCAvaeWaUafqger2LpY13ACFk3fYagU1sPONT7qcqEEpMr6K0T6NMD0
UqlAh5sEfE534PaPaIDNB+RrNG4QMLj2RMvlrAYY9/6xUsKPAGm26CX9Hw0w
ZLPUfug/AtrtzVt4NzTClzyVbfe8CbCUnRGo/q8RMhqnn9ldImD84shUaUgj
HAouM3Zyxfikd/54E9UISddSA91dCEhe+zEjI6cRpB/2qd27SEA/657GrZ+N
cPTq2WPdDgQ41EpfO6LcBL4vaixoZwkgudbbqGg1Aa3p4V4R9G3VZdoHTjWB
Y9kUj9oZArLzZ1ZtvdgEio4bHydbETAW9zGfK6EJPMPuv/M0J8DtnAX981wT
6NwqM/YxIuD6wn1TjaJmyElc+jr/GAFeNyomVKqbgRX6eiMX+vKiuVtKrc1A
JzjFTLUJOMdtX7j3dzNc1oyo59IiQGepsrD45hZI+Cx79bImAas3jtTO32kB
xRPHE+4CASuSN9gRsS3QaiGnzFQlgF/CcO5PWgscnHouY4P+t6VEhlHSAiE+
Hl0HVXD8O6OCf0y1QMmkm/LCQQJyDwEUmrWCpMuerCJ5ArJKPdrzzrfCjlOS
dgroVLVsl+furdDtlipbeICAWM1ViWn3WqGS58vi1/sJ8NUbJSM/toK1cJNw
qSzmh2XcK9dtbbDlZJbLoj0E9P03sVVmtg2KN9+PlJXBfAxQmjzC3Q4XK0UN
W6Qxf24HFtkJtYNzdVaxB9oves3J5G3toGpscue9FAGiL8BntXk7tAnMtups
JcDwV/hXrg9Y3vLBUOhmAirU9l7q8/0ORSbD+t4bCRg9ek2Jffs7kMctb29H
Cx+v4NwY8x3mQl6r/tqA+W1mGm/64jtIj2dKaqEXrtz82ND9HbqHbueJrSdA
Pq1RpFT1B0wXcE4MrCUgk/vKu0ccHRAbE6FbvhL/N1qQLV7aAew3dnK+6KrU
Oy+6RTvAe0X+XUX0MKSmbjrQAef/Pg1/JUKA1LWWuxkXOsBwvq8oR5iAjN8H
bF41d0B1aHld/gr09zn+r0874XycKYt7KbYvFRI0mt8JG9pjVesFsX0PEbZg
WSfo2wW1xqKHhXbOnOzoBGmrRJYMWkrP6lfb0p9Qm3xJ0WAJtlde9qrP6ycc
XD74Io8f/SzIYla7C8qG6TqZPAR8K9l/u9u4C6b4IzuvoqebBl9/tO0Cxzmh
bD202pzmslDfLuBwfcEzzU3ATx3uj6J5XeBzoStLA71iLFjq0JpuCO8X2jbO
ScC13SFTfkPdMBRgusR5EQEpGgpidn+6YTpn5dsj6GqTER0tdjdMiNKixdEr
b2g9Xb7uF+wyPT3UwoH518B7OkXvFzQfW92gih68fLv4Y8Ev4LZ97rWRzYQT
BXdCuAJ6oCSLNTH/jwmpuidGBO73wNn7+y51o5kDwlpCj3ogKSBNqAydtDKR
R+xVDzx/bVMWgJ7wfBms0N8De+TE3y1BayfS1Q9I9ILCoyW/JeeZwLBepubo
3wvpvQFTF2eZsDJn8tLFkF74cifS1QCtSjQnu97rhUUhO/kU0A/C49geD3tB
kl8tYjH6YPmmMv/8XnD65PP7EcmEMAk51YS+XnjvKvy+kWDCzsHTh+rV+6CL
p+nYSSYTQo0sNE9p94H+uzN88mh6hbXejxN9cNKHs38DOiPd3rLfog8cDL4P
Mf4yYZODuy/Tsw90JXh23EavZNwvFsvugwz7N4UVM0xYmKg8dEm4H+YO+Y2e
mmZC/bycyoqBfnD7cNKmcpIJh19+tJai90OMx7uYAvS7sydvHprohyM0mdYn
6LRKp8+O8/3A37j/kh/aJ/zJsY8iA3Bsv7O4IlpScrmJm+YAXOJ/5PdiAv/X
Ybi2pg/AmVwVjSe/mSDxMCUl3nEQXK9kyxaMMcF2t9r6CNdB2HDTfOYpOvVz
T0yIxyBsE1H8FIve8lsszOvmIMyNZ/tfQ0sdfuxpFD8IjntM7migt48/1Fnx
ZRCIe4a3WkeZsF89aiZEeghUzypfYjGY4NEue+nGriHoM1ujNoUuvNhM95Ib
grQtBasG0fKxQj32MAQpDcn1NWil0fCaw6eH4F2pl0cMWjXmbhL71hBUCmWE
7kJr04O1vYeH4LzEuKwtnQklqUcTJseGQMn742cjtKwl7+8L00OgIBBqr4Xe
0HA7ypJjGARUtPt2oidfh/1SFx2GeYeUAZLGhIc3Iz0ETwxDWdfIm1j0soOG
1cFGwyCv9E8mDB00LSzKNh8G598N326gXc9Hl005DINj+1ThBbSGXpzAd/9h
ONBw+aIamrHmccqTwmEQPXnEfXKECWearKZFi4fBeMX5n0Po1lCxo9GfhuHD
c1Grn+jSheTRWw3DsLpfMrcK/WAgVd6ZPgxS5oIJSWjex3Z3hiaGwUhmY3c0
2tdkS5c1cxjcbj04FIY+X5Pub8A5Ahn/oox90Mq5Wd/kN47A9YKDC6fQeY4X
xPMkR8Dc5L2CLlpq83a3bdtH4FXb2SgN9IqYnDUbFEZANu5f7j704LWXtosM
RkBM5GeoENps/6XCa6dHwAbW/+RH14/v4ZuxGgGd2kX6i0eo/Mx/Mew0AnVp
Vs+mh5lw9+hrsjZoBML3CGz9gV6rwT7XHjoCRQ7WIs3opyo6Tb0RI7D2vcyW
b+gP+3uf/U0cgbf0rS/L0YzNghbihSOwI8vYKQftJXa6etuHEZAKYLlloBeL
psrt/zgC3Tk9yU/QokKKgsfqRiCuceJ8PPoY267EbWgE/u349yIE3Tr3ctv1
USx/Rq4rEH2WORsTMjUCOXfv7LmJ9hkPd01cGAEteHvkKpqL3tmZwUmDLLcY
Pi90xOBWrXx+GtwrTJ50Q2f9/CBetYoG69et2OuC3v+d527jehrs2Wkc4oQu
bzYgOyVocHQskNMRrVefeG5IGq3n99Qe/b1mpHFiFw0+R29yskPbVsqqzMnR
YBWoG9mgf5dff8Z1kAbbG/Nsz6B53okErDtKA23hlFEL9IMC69+SejRYXfDE
3hwtlvvMfLchDXTr/i42Q2dnz1QpmtJg05De59No+QyQO2xNg+I0/QwT9Kcn
ocnHz9EgIjctxxh94nHbElMnGhgH9TUboTvjN/nYXqbBO52k9ZTtoy8OOnvR
ID33fPAp9GT4G31vXxoc/lC2nLJv2KIS/wAa3M+UKjJE84Xobbt7mwbJb1YE
UY4OiIuJvU+DGL5RZ8qb/PoXPYmmwb4roh6Un1/d5ZrziAa8x+fjKSt6+nQW
ptDAyaSvk3LF5c9HyzNoMHV1jRL1PX3nZQVfn9PgWXbPK8pdDmbiba/w/0I3
Laq/jnZPw3re0WBmNQeT8rT1BEEvpWHcX5RQ4/UzP3hupoIGQWLxj6l4CJgE
N7K+0kA8rCmaitfm4+ufiXynwaG9xyqpeL7UPr9KrJsGNzyv/qPifVAz319m
gAZv7ncdtUQbKmuZq0zQQPpw9gpqvvy3uS9x4KWDmOmCMTXfGsd6Tk4vpQPv
YtVtDlT+XtCNvrGSDnWKzTwX0AFZkhvjJeigPAgdzugg6dbdNcp0sJq1eeKB
1tRSczfWoIPQ/aF7VD5yOTx/26dNB1r9DXcfdHBGkNqcMR16qv6K+6KPVk0G
3bKkg2VCUt91Kn+GLWuE7eiwtpCIvIG+tfWA4Y7LdFjX5l4QQJU/8iT2rRcd
1JJKxYKo8vZLfx6+Tgftu3wuweiqoKvijYF0MFfdk3ALHfJ0yM4ylA5L+ebS
qfWlXWGQRYvA7yWuC71Nzf9gyZhHHB1E3klr3kF/4dy+b1ESHTJqMxop35aM
9bz3lA7+TxftDKXqH15ctC6HDsWrwgwp89m5stLz6aCXcl2N8peATg3Zd3SI
E52fourfST0aUlpKh5DTgnaUdT69qtWppAPrW0o49X2BfrEV32vpUKl0353q
39dFYUZ2zRgvnQgBqv+hEkT8xA863FDT1qfGq6Nu1/1fDx3GIg+pUfEQsGmQ
4Bumw63IH21UvL7eVD4fPUaHwuXOglQ8w1IyszdNY/2F7T3UfqFXLjLxfJYO
wct2HaPmR7D3hpwSBwOczV2OUPvFN/aodyUPA/f5mnpqv7grblpssJQBB4o4
e/+/P0AFxy8RBvjElrhT+4Hgmb1HnEQZoH3dN8iKqu+XeIe5iQEbuzIEqfy8
l8RXHyCN9dWDePSp9VvqIbx8NwOEZg85a6OX/eo1SdjPAJucDgU19P2N73sK
1Bnwfrk6bRdVXmXrFjVtBjww/q9ckipvFen47QQD3Ka9h9ai630XnpsaM0DV
O0F/KTo88cLUoAUDWi/KzHNQ66+47cAVWwbw/lH9NT2E50eX+rUFRwYsN+v6
M4SOWC/KudqLAauuT0ZVo/WVb2ml+jLg5so8obdUeYs/YbsDGRDsGpKWjo58
9HWlVgQDHjn4Dt5AGxbJm7XEMuDTrw+BF9HCnamPzzxmwNYp4zUm6Afr/pPy
yWZA9AXFOWm02IbZz0N5DNCVXpS7HP1MzNvm1FsGRK5crc4cxP1Y0j1xdwUD
UlIO/ixD60lNKSV+ZcBqJ2ZTKvqHzKXv/E0M+DhqHBiEnth1UXiomwGNci+n
DqOv7aXnGg4y4K/o+kQJNI+cw/FyBgPW7RDpWhjA7yva3U4gML5jjX/z0Xoa
FiwDoVHw2ZThzYv+odmRULZmFJz/ZL350c8EO63TSrvERuHJMz2lLPQ1vVMe
fDtGIVn2ZLc6mudkk5DXvlGQKt9OW4KONDiZO6AwCkl1yfytfXifMarTM1Ad
hbDj8wceobNMdBmlmqNwL4q4fRa936wmZKfuKHxruNJrii6z0Nr6yGAU6iK0
lA3Q7WcPn/W0HoUd9zjn1dHcF5Xbd/iMwvvBV6mS6AiX9+4P/UZhlSJr5Qbq
e5cVhHiDR2FlaWroSqp9Tzm9/shRiAombnCjbW/s+BSfMwqvHrc+GOnF+0zU
+pfcPaPwtbXQ7Dnap3g+uOfIGDxl1lxRRIsu4lL5pTsGXNH6tfvQJUcEZ7oM
xuCLYYf0DvTihg22nVZjEHaVSd+IDutTUW3zHMPxBT/gRCfx3GR+TR+DZ08V
vRp68HzQ53J4wz0Od0wKHlxALx8S1L5XOQ5WCt2emb/wvBN1EM63nwB9+cL8
Pd2YT6NZyUs9J2Eubvnc3E8mGDRoFF3XmoIGTb3r2Z1MmBdcR6xd/QfUguT/
XOlgwvV7Cvbf2/8Ax7/7QQY/cP1FX/vemDkN3o2fSlZ+x/vJL+7/xp1mwOHl
4vShNibU+NepHdj+F27r3Xn3thXP45z3Au9m/8KlzjPJXi1MsLqekVr67y+M
ORWtc0OvOBl1sJL9FzRpP2Jc0F5/nJ2auZmw1PNG1Dm0utKmr2NCTOjrOJpu
iP5RdeuOxHbMk+NR2/ageftP8YWZMyFQXnKC3syEogK1lEgrvGfXJuQPoZ2D
dynGn2VCSt+QVx+6WYbXMf08E3KKVwp0oJMuFVWXuWFczMZOfUHLL2wKmQll
wqWdin6Z6HNrf3Nbf2CCiVKJlyN6n+/onfRSJnBcfGF8Ds3qoS0d/8iEjRV+
SmfR8ZkDq3y/MEGocNEKU3SdfMfWRxiXZ3sV57So9o0rjrTju+R6q3qTDJrz
/ceajfgOKstO4t6KbtxQdtwe31VKhV0ggXYafG88g+9AF3u1qnXoZPdce2EB
Ap68vr1hCZrvwaPgE1sI4LgVzfrdxIS2v3H8sdIEvGMffDiKTjWLude9nQDN
i70HaehDEhExzvvwHVzhHtWHvpIXnB6qSoDB7raEVnRn/eXKKlMCPi95JVqM
zpR1PbbMkgDrM46736M9Yi/WGZ8hwHbWXOcNepn1+bZBewIm27UT8tCHxy2G
FrsTEO/zMC0d/XyJFjfcI+Bj6AqbSHTP2boD3hEEyIk+WRqOFn5z6nxuFAFb
r7h/vov2Pnu2WvwRAbuI/bq30RqFV+9wZBIgLB9XdwPtKcBRpJhNwLnxlKrr
6KwztxiXXxDQ25JU8x96qUCUbl8BASX9zePe6B/Wz5d+KicgxC09/zJ6yWtZ
1bnPBGRt6vjnilblf+8qW01A4cAHQxd0WkFlQ2odAatf/hZzQrfz6XH8bCSg
f/mlGEc0n3XzXpFWAmqV2asd0K58PZGBnRjPHfnK59BPrOw/fegm4M85rh5b
dOur0T/TvQRsM/p6zwZ90Io8dW6EAPEa4WVn0C6v/IISGQQ8G6jusUKn8HIX
to4TUN1tVGKJ5n4ltPrIDAFx26wSzdGKvPFHrxMErJQTTDJDO1mKeRfOETAb
Npdjin6c/zRzfIGANc4aVafRjTw7fmxdRILyXtaYCZrTMp/PmouEk+bamyjL
5ysoxfKScC1S+awxOtFC8xHPMhKS/W7zGKEb8r5+VRUiYZ/qWpdT6MU8BvNe
K0k4LlbSa4jeb/F9R+4aErYEPLCh7JBnZTkiSkL/n4IJA/Qj7sG74mIkNIur
hFH+Zu5UclqCBM9fx/ZTZudOjodvIeHFdiZDHy3L7S32RZqEVinrXMr25gsn
OHaQ0Lc+yZ9yfG7gDcXdJIRebbah/JVLIO/yPhKs2tfoU14wi+jN2k8CYyJU
j/Le3NVCfQokdGZrn6Zsy/VYfZ0yCWtFXC9TjjGTdDNQxfIWa+Mpf3n5LPWO
Ognres/VU57n3NvyUZME/s1XRKj+7jZ7wzmnRcJArbkD5bMvD+2X1SUhNxe+
Uo7i/HzO6QQJPtUqh6h4VJkei0k1IMHpgHsJZfJFQ2WnEQnkYdZxKp47OE2Y
wqYkEPYL45StTbukdC1I+Cwf/piKf2K99KCuNQmuqZ4nqfnp1HR/omdDQojc
huXU/K39UGp9/BwJg+KJXZRP7xPYcMKBBMfiZe+o+Y/NNO444USC6PV7T6j8
aN34JPakCwkqf/c9pPJHX0BRyMCdhKi/hgUW6Ps3A+sNvEjQVudsp/LvG7M+
zPAqCQkay8qp/BRwET12ypcEVaez7VR97QF7HqMbJOx4LT5G9e+WWf5nowAS
2Pm6i6jxVjT8u2kcTMIV5sCqE2j14qh5kzAS/NJOqxxF35TteXf6Pgl8CrL6
GujSrO1eppEkLHfwtlWl1kvMx0mzOBKqWRAsT+WH68SQZRoJlv9KP0uht2zS
bbT9QEKHv/gWXmp+Y2Pv2ZWS8LbacxcntZ4E+3XOfcTxf9grz27E83zWp9K+
GvPfrOUIgV7VnFHk2ELCeMAnqxE0T9DidNdREvx1uS9Xo+kj769eWz8LftXH
NoSgNSZXSRaLzUJ58eGiAPQj8sq3BYlZ4M26ftoPrcO/XdxfZhb84/PCPdHP
tz+qCDkwC5m9Swk79GWXa8tjTs5CkkrwEzU088/B9NzAWRDz+HFutgHXF+tD
4+Aotqf2IssRPW3CY+b2cg7M2DrThvVMOMl/j3OHyzzkFPq/Ua7Dc0JD8ZXY
oX9QnLvaZsk3zNeSHQ8OLPwDsqTKjfyK7yWx4o5rHAsQyq34Zxq9zE9Popxz
Af4esHOfQG9SdcnTEVgA75KFa8PoI6Uv68+sWYDl2/uTW9HhpfuWhO5bgAuD
V4/koyXLFIJ+2S+AJGvXdmf0TvEvtZIXFoC78PSYA1r+hqnIBecFYPWz8uzQ
2nA1ddoN27fpVbdAu5QVlfPdXIBM4RcBOui3ZSoLso8WoOCtx61taN3yw14h
9QuQFjfwhV6D60v9oU5ME7Zvzt42jPb49FssrXUBWu6suN+PTqp4WF3auQBu
TTvP/ERPfplYyxxegHHexVJ16NimhA/n2Auw/nyvbj66t3+aQ2MvC6BjuYwv
esbuWNtJORa8d2+d8UHzDyU9s5JnwYSOU6UnWnbkmOHVQyyYV5N2u4QOHk1O
y9NmgajI2zlb9PYZ3aPiNixIbm6o16H6x/007F8kC8JkXrzfiP7tHSA4H80C
uZvdG9ajHRln783GseBnfU7QWrRVw8Zw5mMWGB/QsBVBH30Y92DyGQsEZRVM
+NHrdoU9HPzIAvtQexkm3iuiky+IDlSwoPHQ4Y5p9DJh7YQ+XBxZhzTCp9CL
Ca7Hv+pYYC5RJTCOHiv3S/nRwYJ6rTa1QXSpkVvmtykW+Kfn5LWgFav1ZWpn
WBDwNOdtE/qV0p5nNQQL+utNKxrQmWJj2VULLMhp+PW7Fh1Bs39Zzs+G7vj4
OxVoAQvNPWWCbAj6xlH2CR1UtzmvZDkb1BzOzJWjr77qyS9axYYTolsDS9C2
vmaFryXYEOnc0f0G3fVbQb5gCxtywucPF6JNbFa/zZdmw/vYM3kFaN2jLe9e
7mJDZbFIYh56/4rjxVlKbOiyUS7PRr8M2KGSeQjrW/1n9gy97S9/aTqwYR2P
7mwmWqyzqiz1CBuIqXK9dDTvU7XPiQZs6DktppmCTszas7fLiA3XjznNJqH3
vhB7vN6UDb6VdW8eo83f/PN6ZM2GpU7LdRLQv4tGBzps2OBQxLvpETqwrFN/
nT0bPg/qsuLRz7+82x5/kQ3qz8ZaYtFqdZlx313ZkNFmVxuDbmuK5VrjxoY0
DsvaaLRTe/AVE082DET3t0ShWZ0ev2J82HBLgHvoAfpBj51u239s2DvSyIpE
Sw8avlt5gw2CpackKBfT1LcaBbChfU+CXgQ6t2qKfSGYDVv+5YWGo/8HVQDG
Ig==
         "]]},
       Annotation[#, "Charting`Private`Tag$68537#4"]& ], 
      TagBox[
       {RGBColor[0.6175, 0.715, 0.], AbsoluteThickness[1.6], Opacity[1.], 
        LineBox[CompressedData["
1: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
Op2OJxT18eYsI/8f/68MVw==
         "]]},
       Annotation[#, "Charting`Private`Tag$68537#5"]& ], 
      TagBox[
       {RGBColor[0.15, 0.715, 0.595], AbsoluteThickness[1.6], Opacity[1.], 
        LineBox[CompressedData["
1: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
+tT/A4XBzGI=
         "]]},
       Annotation[#, "Charting`Private`Tag$68537#6"]& ]}, {}, {}}, {{}, {
      {RGBColor[0.3625, 0.545, 0.85], AbsolutePointSize[6], AbsoluteThickness[
       1.6], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"\[Square]\"\>",
          StripOnInput->False,
          FontSize->15], {0., 0.}], {{{0.8, 1.5462}}, {{0.8, 1.4819}}, {{0.8, 
        1.4633}}, {{0.8, 1.3867}}, {{0.8, 1.5472}}, {{0.8, 1.7522}}, {{0.8, 
        1.6614}}, {{0.8, 1.6488}}, {{0.8, 1.5015}}, {{0.8, 1.3751}}, {{0.8, 
        1.5383}}, {{0.8, 1.76013}}, {{0.8, 1.4533}}, {{0.8, 
        1.0002663791983342`}}, {{0.8, 1.5108}}, {{0.8, 1.7761}}}]}, 
      {RGBColor[0.677, 0.358, 0.595], AbsolutePointSize[6], AbsoluteThickness[
       1.6], GeometricTransformationBox[InsetBox[
         StyleBox["\<\"\[Square]\"\>",
          StripOnInput->False,
          FontSize->15], {0., 0.}], {{{0.633, 1.5506}}, {{0.633, 1.4819}}, {{
        0.633, 1.4669}}, {{0.633, 1.3888}}, {{0.633, 1.5516}}, {{0.633, 
        1.7579}}, {{0.633, 1.668}}, {{0.633, 1.6488}}, {{0.633, 1.5074}}, {{
        0.633, 1.377}}, {{0.633, 1.5426}}, {{0.633, 1.766}}, {{0.633, 
        1.457}}}]}, {}}, {}, {}, {{}, {}}}, {{{}, {
       {GrayLevel[0], AbsolutePointSize[6], AbsoluteThickness[1.6], 
        GeometricTransformationBox[
         TagBox[InsetBox["neBBO633", {0., 0.}],
          "InsetString"], {{{0.553, 1.5506}}, {{0.553, 
         1.5506}}}]}, {}}, {}, {}, {{}, {}}}, {{}, {
       {GrayLevel[0], AbsolutePointSize[6], AbsoluteThickness[1.6], 
        GeometricTransformationBox[
         TagBox[InsetBox["neCCO633", {0., 0.}],
          "InsetString"], {{{0.553, 1.4819}}, {{0.553, 
         1.4819}}}]}, {}}, {}, {}, {{}, {}}}, {{}, {
       {GrayLevel[0], AbsolutePointSize[6], AbsoluteThickness[1.6], 
        GeometricTransformationBox[
         TagBox[InsetBox["neKDP633", {0., 0.}],
          "InsetString"], {{{0.553, 1.4669}}, {{0.553, 
         1.4669}}}]}, {}}, {}, {}, {{}, {}}}, {{}, {
       {GrayLevel[0], AbsolutePointSize[6], AbsoluteThickness[1.6], 
        GeometricTransformationBox[
         TagBox[InsetBox["neMgF633", {0., 0.}],
          "InsetString"], {{{0.553, 1.3888}}, {{0.553, 
         1.3888}}}]}, {}}, {}, {}, {{}, {}}}, {{}, {
       {GrayLevel[0], AbsolutePointSize[6], AbsoluteThickness[1.6], 
        GeometricTransformationBox[
         TagBox[InsetBox["neQua633", {0., 0.}],
          "InsetString"], {{{0.553, 1.5616}}, {{0.553, 
         1.5616}}}]}, {}}, {}, {}, {{}, {}}}, {{}, {
       {GrayLevel[0], AbsolutePointSize[6], AbsoluteThickness[1.6], 
        GeometricTransformationBox[
         TagBox[InsetBox["neSap633", {0., 0.}],
          "InsetString"], {{{0.553, 1.7579}}, {{0.553, 
         1.7579}}}]}, {}}, {}, {}, {{}, {}}}, {{}, {
       {GrayLevel[0], AbsolutePointSize[6], AbsoluteThickness[1.6], 
        GeometricTransformationBox[
         TagBox[InsetBox["noBBO633", {0., 0.}],
          "InsetString"], {{{0.553, 1.668}}, {{0.553, 
         1.668}}}]}, {}}, {}, {}, {{}, {}}}, {{}, {
       {GrayLevel[0], AbsolutePointSize[6], AbsoluteThickness[1.6], 
        GeometricTransformationBox[
         TagBox[InsetBox["noCCO633", {0., 0.}],
          "InsetString"], {{{0.553, 1.6488}}, {{0.553, 
         1.6488}}}]}, {}}, {}, {}, {{}, {}}}, {{}, {
       {GrayLevel[0], AbsolutePointSize[6], AbsoluteThickness[1.6], 
        GeometricTransformationBox[
         TagBox[InsetBox["noKDP633", {0., 0.}],
          "InsetString"], {{{0.553, 1.5074}}, {{0.553, 
         1.5074}}}]}, {}}, {}, {}, {{}, {}}}, {{}, {
       {GrayLevel[0], AbsolutePointSize[6], AbsoluteThickness[1.6], 
        GeometricTransformationBox[
         TagBox[InsetBox["noMgF633", {0., 0.}],
          "InsetString"], {{{0.553, 1.377}}, {{0.553, 
         1.377}}}]}, {}}, {}, {}, {{}, {}}}, {{}, {
       {GrayLevel[0], AbsolutePointSize[6], AbsoluteThickness[1.6], 
        GeometricTransformationBox[
         TagBox[InsetBox["noQua633", {0., 0.}],
          "InsetString"], {{{0.553, 1.5426}}, {{0.553, 
         1.5426}}}]}, {}}, {}, {}, {{}, {}}}, {{}, {
       {GrayLevel[0], AbsolutePointSize[6], AbsoluteThickness[1.6], 
        GeometricTransformationBox[
         TagBox[InsetBox["noSap633", {0., 0.}],
          "InsetString"], {{{0.553, 1.771}}, {{0.553, 
         1.771}}}]}, {}}, {}, {}, {{}, {}}}, {{}, {
       {GrayLevel[0], AbsolutePointSize[6], AbsoluteThickness[1.6], 
        GeometricTransformationBox[
         TagBox[InsetBox["nUVFS633", {0., 0.}],
          "InsetString"], {{{0.553, 1.457}}, {{0.553, 
         1.457}}}]}, {}}, {}, {}, {{}, {}}}}, {{{}, {
       {GrayLevel[0], AbsolutePointSize[6], AbsoluteThickness[1.6], 
        GeometricTransformationBox[
         TagBox[InsetBox["neBBO800", {0., 0.}],
          "InsetString"], {{{0.88, 1.5512}}, {{0.88, 
         1.5512}}}]}, {}}, {}, {}, {{}, {}}}, {{}, {
       {GrayLevel[0], AbsolutePointSize[6], AbsoluteThickness[1.6], 
        GeometricTransformationBox[
         TagBox[InsetBox["neCCO800", {0., 0.}],
          "InsetString"], {{{0.88, 1.4819}}, {{0.88, 
         1.4819}}}]}, {}}, {}, {}, {{}, {}}}, {{}, {
       {GrayLevel[0], AbsolutePointSize[6], AbsoluteThickness[1.6], 
        GeometricTransformationBox[
         TagBox[InsetBox["neKDP800", {0., 0.}],
          "InsetString"], {{{0.88, 1.4683}}, {{0.88, 
         1.4683}}}]}, {}}, {}, {}, {{}, {}}}, {{}, {
       {GrayLevel[0], AbsolutePointSize[6], AbsoluteThickness[1.6], 
        GeometricTransformationBox[
         TagBox[InsetBox["neMgF800", {0., 0.}],
          "InsetString"], {{{0.88, 1.3867}}, {{0.88, 
         1.3867}}}]}, {}}, {}, {}, {{}, {}}}, {{}, {
       {GrayLevel[0], AbsolutePointSize[6], AbsoluteThickness[1.6], 
        GeometricTransformationBox[
         TagBox[InsetBox["neQua800", {0., 0.}],
          "InsetString"], {{{0.88, 1.5672}}, {{0.88, 
         1.5672}}}]}, {}}, {}, {}, {{}, {}}}, {{}, {
       {GrayLevel[0], AbsolutePointSize[6], AbsoluteThickness[1.6], 
        GeometricTransformationBox[
         TagBox[InsetBox["neSap800", {0., 0.}],
          "InsetString"], {{{0.88, 1.7472}}, {{0.88, 
         1.7472}}}]}, {}}, {}, {}, {{}, {}}}, {{}, {
       {GrayLevel[0], AbsolutePointSize[6], AbsoluteThickness[1.6], 
        GeometricTransformationBox[
         TagBox[InsetBox["noBBO800", {0., 0.}],
          "InsetString"], {{{0.88, 1.6614}}, {{0.88, 
         1.6614}}}]}, {}}, {}, {}, {{}, {}}}, {{}, {
       {GrayLevel[0], AbsolutePointSize[6], AbsoluteThickness[1.6], 
        GeometricTransformationBox[
         TagBox[InsetBox["noCCO800", {0., 0.}],
          "InsetString"], {{{0.88, 1.6488}}, {{0.88, 
         1.6488}}}]}, {}}, {}, {}, {{}, {}}}, {{}, {
       {GrayLevel[0], AbsolutePointSize[6], AbsoluteThickness[1.6], 
        GeometricTransformationBox[
         TagBox[InsetBox["noKDP800", {0., 0.}],
          "InsetString"], {{{0.88, 1.5015}}, {{0.88, 
         1.5015}}}]}, {}}, {}, {}, {{}, {}}}, {{}, {
       {GrayLevel[0], AbsolutePointSize[6], AbsoluteThickness[1.6], 
        GeometricTransformationBox[
         TagBox[InsetBox["noMgF800", {0., 0.}],
          "InsetString"], {{{0.88, 1.3751}}, {{0.88, 
         1.3751}}}]}, {}}, {}, {}, {{}, {}}}, {{}, {
       {GrayLevel[0], AbsolutePointSize[6], AbsoluteThickness[1.6], 
        GeometricTransformationBox[
         TagBox[InsetBox["noQua800", {0., 0.}],
          "InsetString"], {{{0.88, 1.5383}}, {{0.88, 
         1.5383}}}]}, {}}, {}, {}, {{}, {}}}, {{}, {
       {GrayLevel[0], AbsolutePointSize[6], AbsoluteThickness[1.6], 
        GeometricTransformationBox[
         TagBox[InsetBox["noSap800", {0., 0.}],
          "InsetString"], {{{0.88, 1.76013}}, {{0.88, 
         1.76013}}}]}, {}}, {}, {}, {{}, {}}}, {{}, {
       {GrayLevel[0], AbsolutePointSize[6], AbsoluteThickness[1.6], 
        GeometricTransformationBox[
         TagBox[InsetBox["nUVFS800", {0., 0.}],
          "InsetString"], {{{0.88, 1.4533}}, {{0.88, 
         1.4533}}}]}, {}}, {}, {}, {{}, {}}}, {{}, {
       {GrayLevel[0], AbsolutePointSize[6], AbsoluteThickness[1.6], 
        GeometricTransformationBox[
         TagBox[InsetBox["refIndexAir", {0., 0.}],
          "InsetString"], {{{0.88, 1.0002663791983342`}}, {{0.88, 
         1.0002663791983342`}}}]}, {}}, {}, {}, {{}, {}}}, {{}, {
       {GrayLevel[0], AbsolutePointSize[6], AbsoluteThickness[1.6], 
        GeometricTransformationBox[
         TagBox[InsetBox["refIndexNBK7800", {0., 0.}],
          "InsetString"], {{{0.88, 1.5208}}, {{0.88, 
         1.5208}}}]}, {}}, {}, {}, {{}, {}}}, {{}, {
       {GrayLevel[0], AbsolutePointSize[6], AbsoluteThickness[1.6], 
        GeometricTransformationBox[
         TagBox[InsetBox["refIndexSLAH800", {0., 0.}],
          "InsetString"], {{{0.88, 1.7761}}, {{0.88, 
         1.7761}}}]}, {}}, {}, {}, {{}, {}}}}, {{{}, {
       {RGBColor[0.915, 0.3325, 0.2125], AbsolutePointSize[6], 
        AbsoluteThickness[1.6], GeometricTransformationBox[
         TagBox[InsetBox["refIndexNSF6", {0., 0.}],
          "InsetString"], {{{2.325, 1.77895}}, {{2.325, 
         1.77895}}}]}, {}}, {}, {}, {{}, {}}}, {{}, {
       {RGBColor[0.83, 0.46, 0.], AbsolutePointSize[6], AbsoluteThickness[
        1.6], GeometricTransformationBox[
         TagBox[InsetBox["refIndexNBK7", {0., 0.}],
          "InsetString"], {{{2.3254, 1.51921}}, {{2.3254, 
         1.51921}}}]}, {}}, {}, {}, {{}, {}}}, {{}, {
       {RGBColor[0.6175, 0.715, 0.], AbsolutePointSize[6], AbsoluteThickness[
        1.6], GeometricTransformationBox[
         TagBox[InsetBox["refIndexMgF2", {0., 0.}],
          "InsetString"], {{{2., 1.344}}, {{2., 
         1.344}}}]}, {}}, {}, {}, {{}, {}}}}, {{{}, {
       {RGBColor[0.9575, 0.545, 0.11475], AbsolutePointSize[6], 
        AbsoluteThickness[1.6], GeometricTransformationBox[
         TagBox[InsetBox["refIndexUVFS", {0., 0.}],
          "InsetString"], {{{2.1, 1.42659}}, {{2.1, 
         1.42659}}}]}, {}}, {}, {}, {{}, {}}}, {{}, {
       {RGBColor[1., 0.7575, 0.], AbsolutePointSize[6], AbsoluteThickness[
        1.6], GeometricTransformationBox[
         TagBox[InsetBox["refIndexCaF2", {0., 0.}],
          "InsetString"], {{{1.97009, 1.413965}}, {{1.97009, 
         1.413965}}}]}, {}}, {}, {}, {{}, {}}}, {{}, {
       {RGBColor[0.15, 0.715, 0.595], AbsolutePointSize[6], AbsoluteThickness[
        1.6], GeometricTransformationBox[
         TagBox[InsetBox["refIndexSLAH", {0., 0.}],
          "InsetString"], {{{2.32542, 1.73466}}, {{2.32542, 
         1.73466}}}]}, {}}, {}, {}, {{}, {}}}}},
   AspectRatio->NCache[
     Rational[1, 2], 0.5],
   Axes->{False, False},
   AxesLabel->{None, None},
   AxesOrigin->{0.1, 1.3640000003918369`},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{
      FormBox["\"refractive index (adim.)\"", TraditionalForm], None}, {
      FormBox["\"wavelength (\[Mu]m)\"", TraditionalForm], None}},
   FrameStyle->Directive[
     RGBColor[
     0.22222222222222227`, 0.22222222222222227`, 0.22222222222222227`], 39, 
     Thickness[Large]],
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->{{165, 35}, {165, 35}},
   ImageSize->1250,
   LabelStyle->{FontSize -> 39, FontFamily -> "Cambria", 
     GrayLevel[0]},
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{0.1, 2.5}, {1.3640000003918369`, 1.8650556393655873`}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}]}]], "Input",
 CellChangeTimes->{{3.813422150217678*^9, 3.813422202905407*^9}, {
  3.81342252916336*^9, 3.8134225316300974`*^9}, {3.813471035221882*^9, 
  3.813471060643385*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"Special", " ", "Instructions"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"SetOptions", "[", 
    RowBox[{
     RowBox[{"EvaluationNotebook", "[", "]"}], ",", 
     RowBox[{"AutoStyleOptions", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<CommentStyle\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"FontWeight", "\[Rule]", "Plain"}], ",", 
          RowBox[{"FontColor", "\[Rule]", 
           RowBox[{"Darker", "[", "Red", "]"}]}], ",", 
          RowBox[{"ShowAutoStyles", "\[Rule]", "False"}], ",", 
          RowBox[{"ShowSyntaxStyles", "\[Rule]", "False"}], ",", 
          RowBox[{"AutoNumberFormatting", "\[Rule]", "False"}], ",", 
          RowBox[{"FontFamily", "\[Rule]", "\"\<Consolas\>\""}]}], "}"}]}], 
       "}"}]}]}], "]"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8129731903134627`*^9, 3.812973190651091*^9}, {
   3.8130308991518793`*^9, 3.813030970304807*^9}, {3.8130310140882893`*^9, 
   3.8130310405719213`*^9}, 3.8130381698126163`*^9, 3.8134022033355036`*^9, 
   3.813549233076646*^9},
 ExpressionUUID -> "5ec6339d-b098-4ce9-af52-1ec07e7f5838"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Off", "[", 
   RowBox[{"InterpolatingFunction", "::", "dmval"}], "]"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", "Constants", " ", "*)"}]}], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"um", "=", "                  ", 
    RowBox[{"10", "^", 
     RowBox[{"(", 
      RowBox[{"-", "6"}], ")"}]}]}], ";"}],
  FontSize->12,
  FontColor->RGBColor[1, 0, 0]], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"mm", "=", "                  ", 
    RowBox[{"10", "^", 
     RowBox[{"(", 
      RowBox[{"-", "3"}], ")"}]}]}], ";"}],
  FontSize->12,
  FontColor->RGBColor[1, 0, 0]], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   StyleBox[
    RowBox[{
     RowBox[{"waveLength", "=", 
      RowBox[{"0.8", " ", "um"}]}], ";"}],
    FontSize->36], 
   StyleBox["\[IndentingNewLine]",
    FontSize->36], 
   StyleBox[
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"waveLength", "=", 
       RowBox[{"0.532", " ", "um"}]}], ";"}], "*)"}],
    FontSize->36], 
   StyleBox["\[IndentingNewLine]",
    FontSize->36], 
   StyleBox[
    RowBox[{"(*", 
     RowBox[{"Select", " ", "your", " ", "main", " ", "wavelength", " ", 
      RowBox[{"here", "."}]}], "*)"}],
    FontSize->12]}],
  FontColor->RGBColor[1, 0, 0]], "\[IndentingNewLine]", 
 StyleBox[
  RowBox[{
   RowBox[{"k0", "=", "                  ", 
    RowBox[{"2", "*", 
     RowBox[{"Pi", "/", "waveLength"}]}]}], ";"}],
  FontSize->36,
  FontColor->RGBColor[1, 0, 0]], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Protect", "[", 
    RowBox[{"um", ",", "mm", ",", "k0", ",", "waveLength"}], "]"}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], "*)"}],
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{"Refractive", " ", "Index", " ", "for", " ", "various", " ", 
     RowBox[{"materials", "."}]}], " ", "*)"}],
   FontSize->18]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"refIndexNBK7800", "=", "1.5108"}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"N", "-", 
      RowBox[{
       RowBox[{"BK7", " ", "@", " ", "800"}], " ", "nm", " ", "from", " ", 
       RowBox[{"https", ":"}]}]}], "//", 
     RowBox[{
      RowBox[{"refractiveindex", ".", "info"}], "/", 
      RowBox[{"?", "shelf"}]}]}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"glass", "&"}], "book"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"BK7", "&"}], "page"}], "=", 
      RowBox[{"SCHOTT", " ", "."}]}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"refIndexSLAH800", "=", "1.7761"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"S", "-", 
      RowBox[{
       RowBox[{"LAH64", " ", "@", " ", "800"}], " ", "nm", " ", "from", " ", 
       RowBox[{"https", ":"}]}]}], "//", 
     RowBox[{
      RowBox[{"refractiveindex", ".", "info"}], "/", 
      RowBox[{"?", "shelf"}]}]}], "=", 
    RowBox[{
     RowBox[{
      RowBox[{"glass", "&"}], "book"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"OHARA", "-", "LAH"}], "&"}], "page"}], "=", 
      RowBox[{"S", "-", 
       RowBox[{"LAH64", " ", "."}]}]}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Here", " ", "is", " ", "the", " ", "refractive", " ", "index", " ", "for",
     " ", "the", " ", "medium", " ", "between", " ", 
    RowBox[{"components", "."}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"refIndexAirTab", "=", 
   RowBox[{"{", 
    RowBox[{"1.0003128650267126", ",", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"-", " ", "source"}], " ", "Optica", " ", "Software"}], "*)"}],
      "\n", "1.0002824469995648", ",", "1.0002738810151126", ",", "\n", 
     "1.0002701958763696", ",", "1.0002682603645856", ",", "\n", 
     "1.0002671145835633", ",", "1.0002663791983342", ",", "\n", 
     "1.000265878696659", ",", "1.000265522494052", ",", "\n", 
     "1.000265259898407", ",", "1.000265060708263", ",", "\n", 
     "1.000264906006238", ",", "1.0002647834467842", ",", "\n", 
     "1.000264684692264", ",", "1.0002646039456309", ",", "\n", 
     "1.000264537074204", ",", "1.0002644810670525", ",", "\n", 
     "1.0002644336882403", ",", "1.0002643932490562", ",", "\n", 
     "1.00026435845473"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"refIndexAirTab", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{"i", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", 
          RowBox[{"0.2", " ", "um"}], ",", 
          RowBox[{"2.1", " ", "um"}], ",", 
          RowBox[{"0.1", " ", "um"}]}], "}"}]}], "]"}], ",", 
      "refIndexAirTab"}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"refIndexAirFun", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{"refIndexAirTab", ",", 
     RowBox[{"InterpolationOrder", "\[Rule]", "6"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"refIndexAir", "=", 
    RowBox[{"refIndexAirFun", "[", "waveLength", "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "The", " ", "refractive", " ", "index", " ", "is", " ", "evaluated", " ", 
    "at", " ", "the", " ", "working", " ", 
    RowBox[{"wavelength", "."}]}], "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"@", " ", "800"}], " ", "nm", " ", "from", " ", 
     RowBox[{"https", ":"}]}], "//", 
    RowBox[{"refractiveindex", ".", 
     RowBox[{"info", ":"}]}]}], "   ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"noKDP800", "=", "1.5015"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Potassium", " ", "Dideuterium", " ", "Phosphate", " ", 
     RowBox[{"(", "KDP", ")"}]}], ",", " ", 
    RowBox[{"ordinary", " ", "index"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"neKDP800", "=", "1.4633"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Potassium", " ", "Dideuterium", " ", "Phosphate", " ", 
     RowBox[{"(", "KDP", ")"}]}], ",", " ", 
    RowBox[{"extraordinary", " ", "index"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"noBBO800", "=", "1.6614"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"\[Beta]", "-", 
     RowBox[{"Barium", " ", "Borate", " ", 
      RowBox[{"(", "BBO", ")"}]}]}], ",", " ", 
    RowBox[{"ordinary", " ", "index"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"neBBO800", "=", "1.5462"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"\[Beta]", "-", 
     RowBox[{"Barium", " ", "Borate", " ", 
      RowBox[{"(", "BBO", ")"}]}]}], ",", " ", 
    RowBox[{"extraordinary", " ", "index"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"noMgF800", "=", "1.3751"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Magnesiun", " ", "Flouride"}], ",", " ", 
    RowBox[{"ordinary", " ", "index"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"neMgF800", "=", "1.3867"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Magnesiun", " ", "Flouride"}], ",", " ", 
    RowBox[{"extraordinary", " ", "index"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"noQua800", "=", "1.5383"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Crystal", " ", "Quartz"}], ",", " ", 
    RowBox[{"ordinary", " ", "index"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"neQua800", "=", "1.5472"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Crystal", " ", "Quartz"}], ",", " ", 
    RowBox[{"extraordinary", " ", "index"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"noSap800", "=", "1.76013"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"Sapphire", ",", " ", 
    RowBox[{"ordinary", " ", "index"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"neSap800", "=", "1.7522"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"Sapphire", ",", " ", 
    RowBox[{"extraordinary", " ", "index"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nUVFS800", "=", "1.4533"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"Ultra", "-", 
    RowBox[{"Violet", " ", "Grade", " ", "Fused", " ", "Silica"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"noCCO800", "=", "1.6488"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"Calcite", ",", " ", 
    RowBox[{"ordinary", " ", "index"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"neCCO800", "=", "1.4819"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"Calcite", ",", " ", 
    RowBox[{"extraordinary", " ", "index"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"@", " ", "633"}], " ", "nm", " ", "from", " ", 
     RowBox[{"https", ":"}]}], "//", 
    RowBox[{"refractiveindex", ".", 
     RowBox[{"info", ":"}]}]}], "   ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"noKDP633", "=", "1.5074"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Potassium", " ", "Dideuterium", " ", "Phosphate", " ", 
     RowBox[{"(", "KDP", ")"}]}], ",", " ", 
    RowBox[{"ordinary", " ", "index"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"neKDP633", "=", "1.4669"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Potassium", " ", "Dideuterium", " ", "Phosphate", " ", 
     RowBox[{"(", "KDP", ")"}]}], ",", " ", 
    RowBox[{"extraordinary", " ", "index"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"noBBO633", "=", "1.6680"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"\[Beta]", "-", 
     RowBox[{"Barium", " ", "Borate", " ", 
      RowBox[{"(", "BBO", ")"}]}]}], ",", " ", 
    RowBox[{"ordinary", " ", "index"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"neBBO633", "=", "1.5506"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"\[Beta]", "-", 
     RowBox[{"Barium", " ", "Borate", " ", 
      RowBox[{"(", "BBO", ")"}]}]}], ",", " ", 
    RowBox[{"extraordinary", " ", "index"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"noMgF633", "=", "1.3770"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Magnesiun", " ", "Flouride"}], ",", " ", 
    RowBox[{"ordinary", " ", "index"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"neMgF633", "=", "1.3888"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Magnesiun", " ", "Flouride"}], ",", " ", 
    RowBox[{"extraordinary", " ", "index"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"noQua633", "=", "1.5426"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Crystal", " ", "Quartz"}], ",", " ", 
    RowBox[{"ordinary", " ", "index"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"neQua633", "=", "1.5516"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Crystal", " ", "Quartz"}], ",", " ", 
    RowBox[{"extraordinary", " ", "index"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"noSap633", "=", "1.7660"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"Sapphire", ",", " ", 
    RowBox[{"ordinary", " ", "index"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"neSap633", "=", "1.7579"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"Sapphire", ",", " ", 
    RowBox[{"extraordinary", " ", "index"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"nUVFS633", "=", "1.4570"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"Ultra", "-", 
    RowBox[{"Violet", " ", "Grade", " ", "Fused", " ", "Silica"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"noCCO633", "=", "1.6488"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"Calcite", ",", " ", 
    RowBox[{"ordinary", " ", "index"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"neCCO633", "=", "1.4819"}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"Calcite", ",", " ", 
    RowBox[{"extraordinary", " ", "index"}]}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"refIndexNSF6Fun", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"4.047*^-7", ",", "1.86506"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.358*^-7", ",", "1.84738"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.800*^-7", ",", "1.8298"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.861*^-7", ",", "1.82783"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.461*^-7", ",", "1.81266"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.876*^-7", ",", "1.80518"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.893*^-7", ",", "1.80491"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6.328*^-7", ",", "1.79883"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6.428*^-7", ",", "1.79749"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6.563*^-7", ",", "1.79608"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"7.065*^-7", ",", "1.79114"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"8.521*^-7", ",", "1.78144"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.0140*^-6", ",", "1.77486"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.0600*^-6", ",", "1.77341"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.5296*^-6", ",", "1.76307"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.9701*^-6", ",", "1.75541"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.3254*^-6", ",", "1.74895"}], "}"}]}], "}"}], ",", 
     RowBox[{"InterpolationOrder", "\[Rule]", "6"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"refIndexNSF6", "=", 
    RowBox[{"refIndexNSF6Fun", "[", "waveLength", "]"}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"https", ":"}], "//", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"shop", ".", "schott", ".", "com"}], "/", "medias"}], "/", 
       "SCHOTT"}], "-", "datasheet", "-", "N", "-", 
      RowBox[{"SF6", ".", 
       RowBox[{"pdf", "?", "context"}]}]}]}], "=", 
    "bWFzdGVyfHJvb3R8NDgyODE3fGFwcGxpY2F0aW9uL3BkZnxoMjIvaGRkLzg4MjI1NjQ3ODIxM\
TAucGRmfDk3YmIyMzgwMWFlMjk4NDYxOWRkYzdmZTM2MmNkNmM0NjQwM2VkNWIxYThiYmI4MzlhMDg\
3ZDUzYTRiMmI0YWE"}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"refIndexNBK7Fun", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3.126*^-7", ",", "1.54862"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.341*^-7", ",", "1.54272"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.650*^-7", ",", "1.53627"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.047*^-7", ",", "1.53024"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.358*^-7", ",", "1.52668"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.800*^-7", ",", "1.52283"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.861*^-7", ",", "1.52238"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.461*^-7", ",", "1.51872"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.876*^-7", ",", "1.5168"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.893*^-7", ",", "1.51673"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6.328*^-7", ",", "1.51509"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6.438*^-7", ",", "1.51472"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6.563*^-7", ",", "1.51432"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"7.065*^-7", ",", "1.51289"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"8.521*^-7", ",", "1.5098"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.0140*^-6", ",", "1.50731"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.0600*^-6", ",", "1.50669"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.5296*^-6", ",", "1.50091"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.9701*^-6", ",", "1.49495"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.3254*^-6", ",", "1.48921"}], "}"}]}], "}"}], ",", 
     RowBox[{"InterpolationOrder", "\[Rule]", "6"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"refIndexNBK7", "=", 
    RowBox[{"refIndexNBK7Fun", "[", "waveLength", "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"https", ":"}], "//", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"shop", ".", "schott", ".", "com"}], "/", "medias"}], "/", 
       "schott"}], "-", "datasheet", "-", "n", "-", "bk7", "-", 
      RowBox[{"eng", ".", 
       RowBox[{"pdf", "?", "context"}]}]}]}], "=", 
    "bWFzdGVyfHJvb3R8NjkxODAwfGFwcGxpY2F0aW9uL3BkZnxoZTUvaDM4Lzg4MTAzMTYxMDM3M\
TAucGRmfGJjNmI4ZjFmY2Q1NjMxMTE0MjkzMTUwOGRmMTUzOTg2NWJjZTgzMjA0OTc2NTNiMThjN2R\
hMjI4NGZmMWM4MWU"}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"refIndexUVFSFun", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1.900*^-7", ",", "1.56572"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.000*^-7", ",", "1.55051"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.139*^-7", ",", "1.53431"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.267*^-7", ",", "1.52275"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.302*^-7", ",", "1.52008"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.399*^-7", ",", "1.51337"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.483*^-7", ",", "1.50840"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.652*^-7", ",", "1.50003"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.753*^-7", ",", "1.49591"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.803*^-7", ",", "1.49404"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.894*^-7", ",", "1.49099"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.967*^-7", ",", "1.48873"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.022*^-7", ",", "1.48719"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.303*^-7", ",", "1.48054"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.404*^-7", ",", "1.47858"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.511*^-7", ",", "1.47671"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.611*^-7", ",", "1.47513"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.650*^-7", ",", "1.47454"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.047*^-7", ",", "1.46962"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.358*^-7", ",", "1.46669"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.416*^-7", ",", "1.46622"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.579*^-7", ",", "1.46498"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.765*^-7", ",", "1.46372"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.861*^-7", ",", "1.46313"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.880*^-7", ",", "1.46301"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.965*^-7", ",", "1.46252"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.145*^-7", ",", "1.46156"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.320*^-7", ",", "1.46071"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.461*^-7", ",", "1.46008"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.876*^-7", ",", "1.45846"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.893*^-7", ",", "1.45840"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6.328*^-7", ",", "1.45702"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6.438*^-7", ",", "1.45670"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6.563*^-7", ",", "1.45637"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6.943*^-7", ",", "1.45542"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"7.065*^-7", ",", "1.45515"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"7.860*^-7", ",", "1.45356"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"8.200*^-7", ",", "1.45298"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"8.300*^-7", ",", "1.45282"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"8.521*^-7", ",", "1.45247"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"9.040*^-7", ",", "1.45170"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.0140*^-6", ",", "1.45024"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.0640*^-6", ",", "1.44963"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.1000*^-6", ",", "1.44920"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.2000*^-6", ",", "1.44805"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.3000*^-6", ",", "1.44692"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.4000*^-6", ",", "1.44578"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.5000*^-6", ",", "1.44462"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.5500*^-6", ",", "1.44402"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.6600*^-6", ",", "1.44267"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.7000*^-6", ",", "1.44217"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.8000*^-6", ",", "1.44087"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.9000*^-6", ",", "1.43951"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.0000*^-6", ",", "1.43809"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.1000*^-6", ",", "1.43659"}], "}"}]}], "}"}], ",", 
     RowBox[{"InterpolationOrder", "\[Rule]", "6"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"refIndexUVFS", "=", 
    RowBox[{"refIndexUVFSFun", "[", "waveLength", "]"}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"https", ":"}], "//", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"www", ".", "cvilaseroptics", ".", "com"}], "/", "media"}], 
       "/", "wysiwyg"}], "/", "cms"}], "-", 
     RowBox[{
      RowBox[{"pages", "/", "pdf"}], "/", 
      RowBox[{"material_properties", ".", "pdf"}]}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"refIndexCaF2Fun", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1.5763*^-7", ",", "1.55927"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.9300*^-7", ",", "1.501804"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.4830*^-7", ",", "1.46793"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.8040*^-7", ",", "1.458251"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.9673*^-7", ",", "1.454649"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.1257*^-7", ",", "1.451744"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.3415*^-7", ",", "1.448497"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.6501*^-7", ",", "1.444893"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.0466*^-7", ",", "1.441490"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.3583*^-7", ",", "1.439470"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.8000*^-7", ",", "1.437272"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.8613*^-7", ",", "1.437014"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.4607*^-7", ",", "1.434932"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.8756*^-7", ",", "1.433843"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.8930*^-7", ",", "1.433803"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6.3280*^-7", ",", "1.432882"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6.4385*^-7", ",", "1.432676"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6.5627*^-7", ",", "1.432455"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"7.0652*^-7", ",", "1.431667"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"8.5211*^-7", ",", "1.430024"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.01398*^-6", ",", "1.428795"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.06000*^-6", ",", "1.428506"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.52958*^-6", ",", "1.426115"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.97009*^-6", ",", "1.423965"}], "}"}]}], "}"}], ",", 
     RowBox[{"InterpolationOrder", "\[Rule]", " ", "6"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"refIndexCaF2", "=", 
    RowBox[{"refIndexCaF2Fun", "[", "waveLength", "]"}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"http", ":"}], "//", 
    RowBox[{
     RowBox[{
      RowBox[{"www", ".", "yuanch", ".", "com"}], "/", "pdf"}], "/", 
     RowBox[{"fhg", ".", "pdf"}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"refIndexMgF2Fun", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1.14*^-7", ",", "1.742"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.17*^-7", ",", "1.68"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.19*^-7", ",", "1.651"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.21*^-7", ",", "1.628"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.30*^-7", ",", "1.566"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.40*^-7", ",", "1.509"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.50*^-7", ",", "1.48"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.60*^-7", ",", "1.461"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.70*^-7", ",", "1.448"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.8*^-7", ",", "1.439"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.90*^-7", ",", "1.431"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.00*^-7", ",", "1.423"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.20*^-7", ",", "1.413"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.48*^-7", ",", "1.403"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.57*^-7", ",", "1.401"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.66*^-7", ",", "1.399"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.80*^-7", ",", "1.396"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.00*^-7", ",", "1.393"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.30*^-7", ",", "1.389"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.37*^-7", ",", "1.389"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.50*^-7", ",", "1.387"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.55*^-7", ",", "1.386"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.00*^-7", ",", "1.384"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.46*^-7", ",", "1.379"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"7.00*^-7", ",", "1.376"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.087*^-6", ",", "1.373"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.512*^-6", ",", "1.370"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.000*^-6", ",", "1.368"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.500*^-6", ",", "1.364"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.030*^-6", ",", "1.36"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3.571*^-6", ",", "1.354"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.000*^-6", ",", "1.349"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.546*^-6", ",", "1.341"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.000*^-6", ",", "1.334"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.569*^-6", ",", "1.324"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6.060*^-6", ",", "1.314"}], "}"}]}], "}"}], ",", 
     RowBox[{"InterpolationOrder", "\[Rule]", "6"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"refIndexMgF2", "=", 
    RowBox[{"refIndexMgF2Fun", "[", "waveLength", "]"}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"https", ":"}], "//", 
    RowBox[{
     RowBox[{
      RowBox[{"www", ".", "crystran", ".", "co", ".", "uk"}], "/", 
      "optical"}], "-", 
     RowBox[{"materials", "/", "magnesium"}], "-", "fluoride", "-", 
     "mgf2"}]}], " ", "*)"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"refIndexSLAHFun", "=", 
   RowBox[{"Interpolation", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"3.65015*^-7", ",", "1.83016"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.04656*^-7", ",", "1.81666"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.35835*^-7", ",", "1.80888"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.4157*^-7", ",", "1.80765"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.8000*^-7", ",", "1.8006"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"4.8613*^-7", ",", "1.79963"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.4607*^-7", ",", "1.79196"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.8756*^-7", ",", "1.78800"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"5.89290*^-7", ",", "1.78785"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6.32800*^-7", ",", "1.78453"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6.43850*^-7", ",", "1.78379"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"6.56270*^-7", ",", "1.78300"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"7.06520*^-7", ",", "1.78018"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"7.68190*^-7", ",", "1.77737"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"8.52110*^-7", ",", "1.77433"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.01398*^-6", ",", "1.76996"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.12864*^-6", ",", "1.76750"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.52958*^-6", ",", "1.76026"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1.97000*^-6", ",", "1.75220"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2.32542*^-6", ",", "1.74466"}], "}"}]}], "}"}], ",", 
     RowBox[{"InterpolationOrder", "\[Rule]", " ", "6"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"refIndexSLAH", "=", 
    RowBox[{"refIndexSLAHFun", "[", "waveLength", "]"}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"https", ":"}], "//", 
    RowBox[{
     RowBox[{"www", ".", "ohara"}], "-", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"gmbh", ".", "com"}], "/", "fileadmin"}], "/", 
       "user_upload"}], "/", "export"}], "-", 
     RowBox[{
      RowBox[{
       RowBox[{"data", "/", "pdf"}], "/", "product_datasheets"}], "/", "S"}], 
     "-", 
     RowBox[{"LAH64_English", "_.", "pdf"}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], "*)"}],
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{
    "Here", " ", "some", " ", "custom", " ", "Color", " ", "Functions", " ", 
     "are", " ", 
     RowBox[{"defined", "."}]}], " ", "*)"}],
   FontSize->18]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"val1", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "9"], ",", 
     FractionBox["23", "63"], ",", 
     FractionBox["13", "21"], ",", 
     FractionBox["47", "63"], ",", 
     FractionBox["55", "63"], ",", "1"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"val1WP", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "63"], ",", 
     FractionBox["1", "16"], ",", 
     FractionBox["1", "9"], ",", 
     FractionBox["23", "63"], ",", 
     FractionBox["4", "9"], ",", 
     FractionBox["11", "21"], ",", 
     FractionBox["38", "63"], ",", 
     FractionBox["47", "63"], ",", 
     FractionBox["55", "63"], ",", " ", "1"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"val2", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["5", "6"], ",", "1"}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"val6", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "9"], ",", 
     FractionBox["23", "63"], ",", 
     FractionBox["50", "103"], ",", 
     FractionBox["115", "206"], ",", 
     FractionBox["13", "21"], ",", 
     FractionBox["145", "206"], ",", 
     FractionBox["47", "63"], ",", 
     FractionBox["55", "63"], ",", 
     FractionBox["390", "421"], ",", "1"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"val7", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["4", "5"], ",", "1"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"valsCD3", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["5", "9"], ",", 
     FractionBox["2", "3"], ",", 
     FractionBox["7", "9"], ",", 
     FractionBox["8", "9"], ",", "1"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"valsCD97", "=", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      FractionBox["1", "10"], ",", 
      FractionBox["1", "5"], ",", 
      FractionBox["3", "10"], ",", 
      FractionBox["2", "5"], ",", 
      FractionBox["1", "2"], ",", 
      FractionBox["3", "5"], ",", 
      FractionBox["7", "10"], ",", 
      FractionBox["4", "5"], ",", 
      FractionBox["9", "10"], ",", "1"}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"col1", "=", 
    RowBox[{"{", 
     RowBox[{
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 
             Rational[9, 16]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.375],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 9/16]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 
              Rational[9, 16]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 
        Rational[9, 16]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 1],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.33333333333333337`, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1, 0.5, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0.5, 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[1, 2], 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.3333333333333333, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1/2, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[1, 2], 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[1, 2], 0, 0],
       Editable->False,
       Selectable->False]}], "}"}]}], ";"}], "\n"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"col1WP", "=", 
    RowBox[{"{", 
     RowBox[{
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[17, 20], 
             Rational[19, 27], 
             Rational[17, 20]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.5666666666666667, 0.4691358024691358, 0.5666666666666667],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[17/20, 19/27, 17/20]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[17, 20], 
              Rational[19, 27], 
              Rational[17, 20]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[17, 20], 
        Rational[19, 27], 
        Rational[17, 20]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0.5, 0, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.33333333333333337`, 0., 0.33333333333333337`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0.5, 0, 0.5]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.5, 0, 0.5]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.5, 0, 0.5],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[1, 4], 0, 
             Rational[13, 16]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.16666666666666666`, 0., 0.5416666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1/4, 0, 13/16]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[1, 4], 0, 
              Rational[13, 16]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[1, 4], 0, 
        Rational[13, 16]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 1],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 
             Rational[4, 5], 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.5333333333333333, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0, 4/5, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
              Rational[4, 5], 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 
        Rational[4, 5], 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.33333333333333337`, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1, 0.5, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0.5, 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[1, 2], 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.3333333333333333, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1/2, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[1, 2], 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[1, 2], 0, 0],
       Editable->False,
       Selectable->False]}], "}"}]}], ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"col1WO", "=", 
    RowBox[{"{", 
     RowBox[{
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[19, 27], 
             Rational[659, 864], 
             Rational[17, 20]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.4691358024691358, 0.5084876543209876, 0.5666666666666667],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[19/27, 659/864, 17/20]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[19, 27], 
              Rational[659, 864], 
              Rational[17, 20]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[19, 27], 
        Rational[659, 864], 
        Rational[17, 20]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 
             Rational[51, 256], 
             Rational[51, 128]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.1328125, 0.265625],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0, 51/256, 51/128]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
              Rational[51, 256], 
              Rational[51, 128]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 
        Rational[51, 256], 
        Rational[51, 128]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[1, 4], 0, 
             Rational[13, 16]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.16666666666666666`, 0., 0.5416666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1/4, 0, 13/16]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[1, 4], 0, 
              Rational[13, 16]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[1, 4], 0, 
        Rational[13, 16]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.6666666666666666],
          FrameTicks->None,
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 1],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 
             Rational[4, 5], 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.5333333333333333, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0, 4/5, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
              Rational[4, 5], 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 
        Rational[4, 5], 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.33333333333333337`, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1, 0.5, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0.5, 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[1, 2], 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.3333333333333333, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1/2, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[1, 2], 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[1, 2], 0, 0],
       Editable->False,
       Selectable->False]}], "}"}]}], ";"}], "\[IndentingNewLine]"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"col2", "=", 
    RowBox[{"{", 
     RowBox[{
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 
             Rational[1, 2], 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.3333333333333333, 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0, 1/2, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
              Rational[1, 2], 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 
        Rational[1, 2], 1],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 1],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0.5, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.33333333333333337`, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1, 0.5, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0.5, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0.5, 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"col3", "=", 
    RowBox[{"{", 
     RowBox[{
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0.5, 0, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.33333333333333337`, 0., 0.33333333333333337`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0.5, 0, 0.5]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.5, 0, 0.5]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.5, 0, 0.5],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 1],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0.5, 0, 0.5], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.33333333333333337`, 0., 0.33333333333333337`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0.5, 0, 0.5]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0.5, 0, 0.5]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0.5, 0, 0.5],
       Editable->False,
       Selectable->False]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"col6", "=", 
    RowBox[{"{", 
     RowBox[{
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[1, 4], 0, 
             Rational[1, 4]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.16666666666666666`, 0., 0.16666666666666666`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1/4, 0, 1/4]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[1, 4], 0, 
              Rational[1, 4]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[1, 4], 0, 
        Rational[1, 4]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[9, 20], 0, 
             Rational[1, 2]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.3, 0., 0.3333333333333333],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[9/20, 0, 1/2]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[9, 20], 0, 
              Rational[1, 2]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[9, 20], 0, 
        Rational[1, 2]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[4, 5], 0, 
             Rational[3, 5]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.5333333333333333, 0., 0.4],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[4/5, 0, 3/5]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[4, 5], 0, 
              Rational[3, 5]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[4, 5], 0, 
        Rational[3, 5]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 1],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 
             Rational[2, 5], 
             Rational[4, 5]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.26666666666666666`, 0.5333333333333333],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0, 2/5, 4/5]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
              Rational[2, 5], 
              Rational[4, 5]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 
        Rational[2, 5], 
        Rational[4, 5]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 1],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 1, 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 
             Rational[3, 4], 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.5, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0, 3/4, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
              Rational[3, 4], 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 
        Rational[3, 4], 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 
             Rational[1, 3], 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.2222222222222222, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1, 1/3, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 
              Rational[1, 3], 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 
        Rational[1, 3], 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 0, 0],
       Editable->False,
       Selectable->False]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"col7", "=", 
    RowBox[{"{", 
     RowBox[{
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {GrayLevel[0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->GrayLevel[0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "GrayLevel[0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = GrayLevel[0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["GrayLevelColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       GrayLevel[0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[1, 5], 
             Rational[1, 5], 
             Rational[1, 5]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.13333333333333333`, 0.13333333333333333`, 0.13333333333333333`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1/5, 1/5, 1/5]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[1, 5], 
              Rational[1, 5], 
              Rational[1, 5]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[1, 5], 
        Rational[1, 5], 
        Rational[1, 5]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[2, 5], 
             Rational[3, 10], 
             Rational[1, 4]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.26666666666666666`, 0.2, 0.16666666666666666`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[2/5, 3/10, 1/4]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[2, 5], 
              Rational[3, 10], 
              Rational[1, 4]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[2, 5], 
        Rational[3, 10], 
        Rational[1, 4]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[3, 5], 
             Rational[2, 5], 
             Rational[1, 5]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.4, 0.26666666666666666`, 0.13333333333333333`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[3/5, 2/5, 1/5]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[3, 5], 
              Rational[2, 5], 
              Rational[1, 5]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[3, 5], 
        Rational[2, 5], 
        Rational[1, 5]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[4, 5], 
             Rational[2, 5], 
             Rational[1, 2]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.5333333333333333, 0.26666666666666666`, 0.3333333333333333],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[4/5, 2/5, 1/2]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[4, 5], 
              Rational[2, 5], 
              Rational[1, 2]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[4, 5], 
        Rational[2, 5], 
        Rational[1, 2]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[3, 4], 
             Rational[1, 2], 
             Rational[7, 10]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.5, 0.3333333333333333, 0.4666666666666667],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[3/4, 1/2, 7/10]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[3, 4], 
              Rational[1, 2], 
              Rational[7, 10]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[3, 4], 
        Rational[1, 2], 
        Rational[7, 10]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[19, 20], 
             Rational[9, 10], 
             Rational[9, 10]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6333333333333333, 0.6, 0.6],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[19/20, 9/10, 9/10]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[19, 20], 
              Rational[9, 10], 
              Rational[9, 10]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[19, 20], 
        Rational[9, 10], 
        Rational[9, 10]],
       Editable->False,
       Selectable->False]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"colorData3tab", "=", 
    RowBox[{"{", 
     RowBox[{
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[2, 255], 0.89, 0.81], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.00522875816993464, 0.5933333333333334, 0.54],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[2/255, 0.89, 0.81]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[2, 255], 0.89, 0.81]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[2, 255], 0.89, 0.81],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[2, 255], 
             Rational[26, 51], 
             Rational[79, 85]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.00522875816993464, 0.33986928104575165`, 0.6196078431372549],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[2/255, 26/51, 79/85]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[2, 255], 
              Rational[26, 51], 
              Rational[79, 85]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[2, 255], 
        Rational[26, 51], 
        Rational[79, 85]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[13, 85], 
             Rational[29, 255], 
             Rational[25, 51]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.10196078431372549`, 0.07581699346405228, 0.32679738562091504`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[13/85, 29/255, 25/51]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[13, 85], 
              Rational[29, 255], 
              Rational[25, 51]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[13, 85], 
        Rational[29, 255], 
        Rational[25, 51]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[8, 17], 
             Rational[67, 255], 
             Rational[149, 255]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.3137254901960784, 0.17516339869281045`, 0.3895424836601307],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[8/17, 67/255, 149/255]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[8, 17], 
              Rational[67, 255], 
              Rational[149, 255]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[8, 17], 
        Rational[67, 255], 
        Rational[149, 255]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[227, 255], 
             Rational[1, 85], 
             Rational[25, 51]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.5934640522875817, 0.00784313725490196, 0.32679738562091504`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[227/255, 1/85, 25/51]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[227, 255], 
              Rational[1, 85], 
              Rational[25, 51]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[227, 255], 
        Rational[1, 85], 
        Rational[25, 51]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[77, 85], 
             Rational[7, 255], 
             Rational[11, 85]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.6039215686274509, 0.018300653594771243`, 0.08627450980392157],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[77/85, 7/255, 11/85]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[77, 85], 
              Rational[7, 255], 
              Rational[11, 85]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[77, 85], 
        Rational[7, 255], 
        Rational[11, 85]],
       Editable->False,
       Selectable->False]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"colorData97tab", "=", 
    RowBox[{"{", 
     RowBox[{
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[1281, 2000], 
             Rational[931, 4000], 
             Rational[119, 800]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.427, 0.15516666666666667`, 0.09916666666666667],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1281/2000, 931/4000, 119/800]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[1281, 2000], 
              Rational[931, 4000], 
              Rational[119, 800]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[1281, 2000], 
        Rational[931, 4000], 
        Rational[119, 800]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[1411, 2000], 
             Rational[391, 1000], 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.4703333333333333, 0.26066666666666666`, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1411/2000, 391/1000, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[1411, 2000], 
              Rational[391, 1000], 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[1411, 2000], 
        Rational[391, 1000], 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[21, 25], 
             Rational[109, 200], 
             Rational[459, 4000]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.56, 0.36333333333333334`, 0.0765],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[21/25, 109/200, 459/4000]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[21, 25], 
              Rational[109, 200], 
              Rational[459, 4000]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[21, 25], 
        Rational[109, 200], 
        Rational[459, 4000]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[247, 400], 
             Rational[143, 200], 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.4116666666666667, 0.4766666666666667, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[247/400, 143/200, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[247, 400], 
              Rational[143, 200], 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[247, 400], 
        Rational[143, 200], 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[3, 20], 
             Rational[143, 200], 
             Rational[119, 200]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.1, 0.4766666666666667, 0.39666666666666667`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[3/20, 143/200, 119/200]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[3, 20], 
              Rational[143, 200], 
              Rational[119, 200]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[3, 20], 
        Rational[143, 200], 
        Rational[119, 200]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[29, 80], 
             Rational[109, 200], 
             Rational[17, 20]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.24166666666666667`, 0.36333333333333334`, 0.5666666666666667],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[29/80, 109/200, 17/20]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[29, 80], 
              Rational[109, 200], 
              Rational[17, 20]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[29, 80], 
        Rational[109, 200], 
        Rational[17, 20]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[23, 40], 
             Rational[167, 400], 
             Rational[17, 20]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.38333333333333336`, 0.2783333333333333, 0.5666666666666667],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[23/40, 167/400, 17/20]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[23, 40], 
              Rational[167, 400], 
              Rational[17, 20]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[23, 40], 
        Rational[167, 400], 
        Rational[17, 20]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[7093, 10000], 
             Rational[2111, 5000], 
             Rational[1271, 2000]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.47286666666666666`, 0.28146666666666664`, 0.4236666666666667],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[7093/10000, 2111/5000, 1271/2000]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[7093, 10000], 
              Rational[2111, 5000], 
              Rational[1271, 2000]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[7093, 10000], 
        Rational[2111, 5000], 
        Rational[1271, 2000]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[1379, 1600], 
             Rational[5827, 10000], 
             Rational[501, 800]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.5745833333333333, 0.3884666666666667, 0.4175],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1379/1600, 5827/10000, 501/800]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[1379, 1600], 
              Rational[5827, 10000], 
              Rational[501, 800]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[1379, 1600], 
        Rational[5827, 10000], 
        Rational[501, 800]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[1949, 2000], 
             Rational[3199, 4000], 
             Rational[611, 800]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.6496666666666666, 0.5331666666666667, 0.5091666666666667],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1949/2000, 3199/4000, 611/800]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[1949, 2000], 
              Rational[3199, 4000], 
              Rational[611, 800]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[1949, 2000], 
        Rational[3199, 4000], 
        Rational[611, 800]],
       Editable->False,
       Selectable->False]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"opticaCF", "=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Hue", "[", 
       RowBox[{
        RowBox[{"0.65", "-", 
         RowBox[{
          RowBox[{"#", "^", "0.5"}], " ", "0.65"}]}], ",", "1", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "^", "0.5"}], " ", "0.9"}], "+", "0.1"}]}], "]"}], 
      "&"}], ")"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"Similar", " ", "to", " ", 
    RowBox[{"Optica", "'"}], "s", " ", 
    RowBox[{"version", "."}]}], "*)"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"opticaCFBright", "=", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Hue", "[", 
       RowBox[{
        RowBox[{"0.65", "-", 
         RowBox[{
          RowBox[{"#", "^", "0.5"}], " ", "0.65"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "^", "0.5"}], " ", "0.9"}], "+", "0.1"}], ",", "1"}], 
       "]"}], "&"}], ")"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"Similar", " ", "to", " ", 
    RowBox[{"Optica", "'"}], "s", " ", "version", " ", "but", " ", 
    RowBox[{"Brighter", "."}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"jetMLVPH", "[", 
    RowBox[{"u_", "?", "NumericQ"}], "]"}], ":=", 
   RowBox[{"Blend", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"val1", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"col3", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "val1", "]"}]}], "}"}]}], "]"}], ",", "u"}], 
    "]"}]}], 
  RowBox[{"(*", 
   RowBox[{"Cyclic", " ", "CF", " ", "simiar", " ", "to", " ", "Matlab", " ", 
    RowBox[{"version", "."}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"jetMLV18", "[", 
    RowBox[{"u_", "?", "NumericQ"}], "]"}], ":=", 
   RowBox[{"Blend", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"val1", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "^", "1.8"}], ",", 
         RowBox[{"col1", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "val1", "]"}]}], "}"}]}], "]"}], ",", "u"}], 
    "]"}]}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"This", " ", "is", " ", "MatLab", " ", "version"}], ",", " ", 
    RowBox[{
    "modified", " ", "to", " ", "highlight", " ", "low", " ", "intensity", 
     " ", 
     RowBox[{"regions", "."}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"jetMLVWP", "[", 
    RowBox[{"u_", "?", "NumericQ"}], "]"}], ":=", 
   RowBox[{"Blend", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"val1WP", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"col1WP", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "val1WP", "]"}]}], "}"}]}], "]"}], ",", "u"}],
     "]"}]}], 
  RowBox[{"(*", 
   RowBox[{"Rainbow", " ", "similar", " ", "with", " ", "MatLab", " ", 
    RowBox[{"version", "."}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"jetMLVWO", "[", 
    RowBox[{"u_", "?", "NumericQ"}], "]"}], ":=", 
   RowBox[{"Blend", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"val1WP", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"col1WO", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "val1WP", "]"}]}], "}"}]}], "]"}], ",", "u"}],
     "]"}]}], 
  RowBox[{"(*", 
   RowBox[{
   "Another", " ", "variation", " ", "starting", " ", "from", " ", "MatLab", 
    " ", 
    RowBox[{"version", "."}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"jetVLV15", "[", 
    RowBox[{"u_", "?", "NumericQ"}], "]"}], ":=", 
   RowBox[{"Blend", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"val2", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "^", "1.5"}], ",", 
         RowBox[{"col2", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "val2", "]"}]}], "}"}]}], "]"}], ",", "u"}], 
    "]"}]}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"VirtualLab", " ", "Fusion", " ", "version"}], ",", " ", 
    RowBox[{
    "modified", " ", "to", " ", "highlight", " ", "low", " ", "intensity", 
     " ", 
     RowBox[{"regions", "."}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ophirCF", "[", 
    RowBox[{"u_", "?", "NumericQ"}], "]"}], ":=", 
   RowBox[{"Blend", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"val6", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "^", "2"}], ",", 
         RowBox[{"col6", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "val6", "]"}]}], "}"}]}], "]"}], ",", "u"}], 
    "]"}]}], 
  RowBox[{"(*", 
   RowBox[{"Similar", " ", "to", " ", 
    RowBox[{"Ophir", "'"}], "s", " ", "Beam", " ", "Profiler", " ", 
    RowBox[{"version", "."}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"GBPCF", "[", 
    RowBox[{"u_", "?", "NumericQ"}], "]"}], ":=", 
   RowBox[{"Blend", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"val7", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "^", "2"}], ",", 
         RowBox[{"col7", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "val7", "]"}]}], "}"}]}], "]"}], ",", "u"}], 
    "]"}]}], 
  RowBox[{"(*", 
   RowBox[{"Gray", " ", "-", " ", "Brown", " ", "-", " ", "Pink"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"colorData3", "[", 
    RowBox[{"u_", "?", "NumericQ"}], "]"}], ":=", 
   RowBox[{"Blend", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"valsCD3", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "^", "2"}], ",", 
         RowBox[{"colorData3tab", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "valsCD3", "]"}]}], "}"}]}], "]"}], ",", 
     "u"}], "]"}]}], 
  RowBox[{"(*", 
   RowBox[{"Similar", " ", "to", " ", 
    RowBox[{"Mathematica", "'"}], "s", " ", 
    RowBox[{
     RowBox[{"ColorData", "[", "3", "]"}], "."}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"colorData97", "[", 
    RowBox[{"u_", "?", "NumericQ"}], "]"}], ":=", 
   RowBox[{"Blend", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"valsCD97", "[", 
          RowBox[{"[", "i", "]"}], "]"}], ",", 
         RowBox[{"colorData97tab", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "valsCD97", "]"}]}], "}"}]}], "]"}], ",", 
     "u"}], "]"}]}], 
  RowBox[{"(*", 
   RowBox[{"Similar", " ", "to", " ", 
    RowBox[{"Mathematica", "'"}], "s", " ", 
    RowBox[{
     RowBox[{"ColorData", "[", "97", "]"}], "."}]}], "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"More", " ", "Color", " ", 
    RowBox[{"Functions", "."}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vals0", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["3", "50"], ",", 
     FractionBox["23", "100"], ",", 
     FractionBox["33", "100"], ",", 
     FractionBox["23", "50"], ",", 
     FractionBox["53", "100"], ",", 
     FractionBox["3", "5"], ",", 
     FractionBox["73", "100"], ",", 
     FractionBox["83", "100"], ",", 
     FractionBox["9", "10"], ",", "1"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vals1", "=", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     FractionBox["3", "10"], ",", 
     FractionBox["2", "5"], ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["3", "5"], ",", 
     FractionBox["7", "10"], ",", 
     FractionBox["4", "5"], ",", 
     FractionBox["9", "10"], ",", 
     FractionBox["24", "25"], ",", "1"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"vals6", "=", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      FractionBox["1", "10"], ",", 
      FractionBox["23", "100"], ",", 
      FractionBox["3", "10"], ",", 
      FractionBox["9", "25"], ",", 
      FractionBox["1", "2"], ",", 
      FractionBox["14", "25"], ",", 
      FractionBox["63", "100"], ",", 
      FractionBox["7", "10"], ",", 
      FractionBox["19", "25"], ",", 
      FractionBox["24", "25"], ",", "1"}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"cololrs0", "=", 
    RowBox[{"{", 
     RowBox[{
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[43, 64], 
             Rational[9, 10], 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.4479166666666667, 0.6, 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[43/64, 9/10, 1]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[43, 64], 
              Rational[9, 10], 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[43, 64], 
        Rational[9, 10], 1],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[79, 128], 
             Rational[49, 128], 1], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.4114583333333333, 0.2552083333333333, 0.6666666666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{79/128, 49/128, 1}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[79, 128], 
              Rational[49, 128], 1]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[79, 128], 
         Rational[49, 128], 1}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[51, 256], 
             Rational[17, 256], 
             Rational[127, 128]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.1328125, 0.044270833333333336`, 0.6614583333333334],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{51/256, 17/256, 127/128}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[51, 256], 
              Rational[17, 256], 
              Rational[127, 128]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[51, 256], 
         Rational[17, 256], 
         Rational[127, 128]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[3, 128], 
             Rational[1, 4], 
             Rational[47, 64]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.015625, 0.16666666666666666`, 0.4895833333333333],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{3/128, 1/4, 47/64}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[3, 128], 
              Rational[1, 4], 
              Rational[47, 64]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[3, 128], 
         Rational[1, 4], 
         Rational[47, 64]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[13, 64], 
             Rational[243, 256], 
             Rational[5, 128]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.13541666666666666`, 0.6328125, 0.026041666666666668`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{13/64, 243/256, 5/128}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[13, 64], 
              Rational[243, 256], 
              Rational[5, 128]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[13, 64], 
         Rational[243, 256], 
         Rational[5, 128]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[139, 256], 
             Rational[127, 128], 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.3619791666666667, 0.6614583333333334, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{139/256, 127/128, 0}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[139, 256], 
              Rational[127, 128], 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[139, 256], 
         Rational[127, 128], 0}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[109, 128], 
             Rational[237, 256], 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.5677083333333334, 0.6171875, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{109/128, 237/256, 0}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[109, 128], 
              Rational[237, 256], 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[109, 128], 
         Rational[237, 256], 0}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[255, 256], 
             Rational[57, 128], 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6640625, 0.296875, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{255/256, 57/128, 0}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[255, 256], 
              Rational[57, 128], 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[255, 256], 
         Rational[57, 128], 0}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[61, 64], 
             Rational[29, 256], 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6354166666666666, 0.07552083333333333, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{61/64, 29/256, 0}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[61, 64], 
              Rational[29, 256], 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[61, 64], 
         Rational[29, 256], 0}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[189, 256], 
             Rational[3, 256], 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.4921875, 0.0078125, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{189/256, 3/256, 0}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[189, 256], 
              Rational[3, 256], 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[189, 256], 
         Rational[3, 256], 0}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[33, 128], 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.171875, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{33/128, 0, 0}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[33, 128], 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[33, 128], 0, 0}],
       Editable->False,
       Selectable->False]}], "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cololrs2", "=", 
    RowBox[{"{", 
     RowBox[{
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[1, 8], 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.08333333333333333, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1/8, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[1, 8], 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[1, 8], 0, 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[7, 9], 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.5185185185185185, 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[7/9, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[7, 9], 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[7, 9], 0, 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[25, 26], 
             Rational[1, 12], 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6410256410256411, 0.05555555555555555, 0.],
          FrameTicks->None,
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[25/26, 1/12, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[25, 26], 
              Rational[1, 12], 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[25, 26], 
        Rational[1, 12], 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 
             Rational[5, 16], 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.20833333333333334`, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1, 5/16, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 
              Rational[5, 16], 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 
        Rational[5, 16], 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 
             Rational[7, 12], 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.3888888888888889, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1, 7/12, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 
              Rational[7, 12], 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 
        Rational[7, 12], 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 
             Rational[11, 13], 
             Rational[1, 79]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.6666666666666666, 0.5641025641025641, 0.008438818565400843],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1, 11/13, 1/79]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 
              Rational[11, 13], 
              Rational[1, 79]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 
        Rational[11, 13], 
        Rational[1, 79]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 
             Rational[43, 44], 
             Rational[1, 5]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.6666666666666666, 0.6515151515151515, 0.13333333333333333`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1, 43/44, 1/5]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 
              Rational[43, 44], 
              Rational[1, 5]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 
        Rational[43, 44], 
        Rational[1, 5]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 
             Rational[4, 7]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.38095238095238093`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 4/7]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 
              Rational[4, 7]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 
        Rational[4, 7]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 
             Rational[9, 11]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.5454545454545454],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 9/11]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 
              Rational[9, 11]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 
        Rational[9, 11]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 
             Rational[8, 9]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.5925925925925926],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 8/9]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 
              Rational[8, 9]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 
        Rational[8, 9]],
       Editable->False,
       Selectable->False]}], "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cololrs2b", "=", 
    RowBox[{"{", 
     RowBox[{
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 
             Rational[1, 12], 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.05555555555555555, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0, 1/12, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
              Rational[1, 12], 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 
        Rational[1, 12], 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 
             Rational[11, 14], 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.5238095238095238, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0, 11/14, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
              Rational[11, 14], 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 
        Rational[11, 14], 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[1, 18], 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.037037037037037035`, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1/18, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[1, 18], 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[1, 18], 1, 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[5, 16], 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.20833333333333334`, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[5/16, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[5, 16], 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[5, 16], 1, 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[10, 17], 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.39215686274509803`, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[10/17, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[10, 17], 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[10, 17], 1, 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[6, 7], 1, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.5714285714285714, 0.6666666666666666, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[6/7, 1, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[6, 7], 1, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[6, 7], 1, 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 
             Rational[1, 6]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.1111111111111111],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 1/6]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 
              Rational[1, 6]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 
        Rational[1, 6]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 
             Rational[4, 7]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.38095238095238093`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 4/7]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 
              Rational[4, 7]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 
        Rational[4, 7]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 
             Rational[5, 6]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.5555555555555556],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 5/6]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 
              Rational[5, 6]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 
        Rational[5, 6]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 1, 
             Rational[20, 21]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.6666666666666666, 0.6666666666666666, 0.6349206349206349],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1, 1, 20/21]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 1, 
              Rational[20, 21]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 1, 
        Rational[20, 21]],
       Editable->False,
       Selectable->False]}], "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cololrs3", "=", 
    RowBox[{"{", 
     RowBox[{
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[1, 10], 0, 
             Rational[1, 8]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.06666666666666667, 0., 0.08333333333333333],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1/10, 0, 1/8]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[1, 10], 0, 
              Rational[1, 8]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[1, 10], 0, 
        Rational[1, 8]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[1, 12], 
             Rational[1, 5], 
             Rational[9, 14]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.05555555555555555, 0.13333333333333333`, 0.42857142857142855`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1/12, 1/5, 9/14]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[1, 12], 
              Rational[1, 5], 
              Rational[9, 14]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[1, 12], 
        Rational[1, 5], 
        Rational[9, 14]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[1, 44], 
             Rational[5, 13], 
             Rational[4, 9]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.015151515151515152`, 0.2564102564102564, 0.2962962962962963],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1/44, 5/13, 4/9]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[1, 44], 
              Rational[5, 13], 
              Rational[4, 9]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[1, 44], 
        Rational[5, 13], 
        Rational[4, 9]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[1, 40], 
             Rational[10, 19], 
             Rational[2, 7]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.016666666666666666`, 0.3508771929824561, 0.19047619047619047`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1/40, 10/19, 2/7]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[1, 40], 
              Rational[10, 19], 
              Rational[2, 7]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[1, 40], 
        Rational[10, 19], 
        Rational[2, 7]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[1, 22], 
             Rational[7, 11], 
             Rational[1, 7]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.030303030303030304`, 0.42424242424242425`, 0.09523809523809523],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1/22, 7/11, 1/7]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[1, 22], 
              Rational[7, 11], 
              Rational[1, 7]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[1, 22], 
        Rational[7, 11], 
        Rational[1, 7]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[3, 11], 
             Rational[3, 4], 
             Rational[1, 21]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.18181818181818182`, 0.5, 0.031746031746031744`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[3/11, 3/4, 1/21]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[3, 11], 
              Rational[3, 4], 
              Rational[1, 21]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[3, 11], 
        Rational[3, 4], 
        Rational[1, 21]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[7, 10], 
             Rational[4, 5], 
             Rational[1, 10]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.4666666666666667, 0.5333333333333333, 0.06666666666666667],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[7/10, 4/5, 1/10]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[7, 10], 
              Rational[4, 5], 
              Rational[1, 10]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[7, 10], 
        Rational[4, 5], 
        Rational[1, 10]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[19, 20], 
             Rational[6, 7], 
             Rational[3, 5]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6333333333333333, 0.5714285714285714, 0.4],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[19/20, 6/7, 3/5]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[19, 20], 
              Rational[6, 7], 
              Rational[3, 5]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[19, 20], 
        Rational[6, 7], 
        Rational[3, 5]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 
             Rational[11, 12], 
             Rational[7, 8]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.6666666666666666, 0.6111111111111112, 0.5833333333333334],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1, 11/12, 7/8]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 
              Rational[11, 12], 
              Rational[7, 8]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 
        Rational[11, 12], 
        Rational[7, 8]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 
             Rational[16, 17], 
             Rational[12, 13]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.6666666666666666, 0.6274509803921569, 0.6153846153846154],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1, 16/17, 12/13]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 
              Rational[16, 17], 
              Rational[12, 13]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1, 
        Rational[16, 17], 
        Rational[12, 13]],
       Editable->False,
       Selectable->False]}], "}"}]}], ";"}], "\n"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"cololrs4", "=", 
    RowBox[{"{", 
     RowBox[{
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[1, 14], 
             Rational[1, 38], 
             Rational[1, 8]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.047619047619047616`, 0.017543859649122806`, 0.08333333333333333],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1/14, 1/38, 1/8]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[1, 14], 
              Rational[1, 38], 
              Rational[1, 8]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[1, 14], 
        Rational[1, 38], 
        Rational[1, 8]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[3, 8], 0, 
             Rational[10, 13]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.25, 0., 0.5128205128205128],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[3/8, 0, 10/13]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[3, 8], 0, 
              Rational[10, 13]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[3, 8], 0, 
        Rational[10, 13]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[7, 11], 0, 
             Rational[9, 14]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.42424242424242425`, 0., 0.42857142857142855`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[7/11, 0, 9/14]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[7, 11], 0, 
              Rational[9, 14]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[7, 11], 0, 
        Rational[9, 14]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[11, 13], 
             Rational[1, 8], 
             Rational[3, 10]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.5641025641025641, 0.08333333333333333, 0.2],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[11/13, 1/8, 3/10]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[11, 13], 
              Rational[1, 8], 
              Rational[3, 10]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[11, 13], 
        Rational[1, 8], 
        Rational[3, 10]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[12, 13], 
             Rational[6, 17], 
             Rational[2, 9]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.6153846153846154, 0.23529411764705882`, 0.14814814814814814`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[12/13, 6/17, 2/9]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[12, 13], 
              Rational[6, 17], 
              Rational[2, 9]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[12, 13], 
        Rational[6, 17], 
        Rational[2, 9]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[20, 21], 
             Rational[7, 13], 
             Rational[1, 5]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.6349206349206349, 0.358974358974359, 0.13333333333333333`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[20/21, 7/13, 1/5]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[20, 21], 
              Rational[7, 13], 
              Rational[1, 5]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[20, 21], 
        Rational[7, 13], 
        Rational[1, 5]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[12, 13], 
             Rational[8, 11], 
             Rational[1, 7]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.6153846153846154, 0.48484848484848486`, 0.09523809523809523],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[12/13, 8/11, 1/7]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[12, 13], 
              Rational[8, 11], 
              Rational[1, 7]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[12, 13], 
        Rational[8, 11], 
        Rational[1, 7]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[15, 16], 
             Rational[7, 8], 
             Rational[2, 5]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.625, 0.5833333333333334, 0.26666666666666666`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[15/16, 7/8, 2/5]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[15, 16], 
              Rational[7, 8], 
              Rational[2, 5]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[15, 16], 
        Rational[7, 8], 
        Rational[2, 5]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[30, 31], 
             Rational[14, 15], 
             Rational[5, 7]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.6451612903225806, 0.6222222222222222, 0.47619047619047616`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[30/31, 14/15, 5/7]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[30, 31], 
              Rational[14, 15], 
              Rational[5, 7]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[30, 31], 
        Rational[14, 15], 
        Rational[5, 7]],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[46, 47], 
             Rational[20, 21], 
             Rational[5, 6]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.6524822695035462, 0.6349206349206349, 0.5555555555555556],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[46/47, 20/21, 5/6]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[46, 47], 
              Rational[20, 21], 
              Rational[5, 6]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[
        Rational[46, 47], 
        Rational[20, 21], 
        Rational[5, 6]],
       Editable->False,
       Selectable->False]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"cololrs5", "=", 
    RowBox[{"{", 
     RowBox[{
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[3, 64], 
             Rational[1, 32], 
             Rational[17, 256]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.03125, 0.020833333333333332`, 0.044270833333333336`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{3/64, 1/32, 17/256}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[3, 64], 
              Rational[1, 32], 
              Rational[17, 256]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[3, 64], 
         Rational[1, 32], 
         Rational[17, 256]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[31, 256], 
             Rational[47, 128], 
             Rational[17, 64]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.08072916666666667, 0.24479166666666666`, 0.17708333333333334`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{31/256, 47/128, 17/64}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[31, 256], 
              Rational[47, 128], 
              Rational[17, 64]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[31, 256], 
         Rational[47, 128], 
         Rational[17, 64]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[19, 64], 
             Rational[59, 128], 
             Rational[53, 256]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.19791666666666666`, 0.3072916666666667, 0.13802083333333334`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{19/64, 59/128, 53/256}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[19, 64], 
              Rational[59, 128], 
              Rational[53, 256]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[19, 64], 
         Rational[59, 128], 
         Rational[53, 256]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[73, 128], 
             Rational[61, 128], 
             Rational[71, 256]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.3802083333333333, 0.3177083333333333, 0.18489583333333334`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{73/128, 61/128, 71/256}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[73, 128], 
              Rational[61, 128], 
              Rational[71, 256]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[73, 128], 
         Rational[61, 128], 
         Rational[71, 256]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[197, 256], 
             Rational[127, 256], 
             Rational[67, 128]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.5130208333333334, 0.3307291666666667, 0.3489583333333333],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{197/256, 127/256, 67/128}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[197, 256], 
              Rational[127, 256], 
              Rational[67, 128]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[197, 256], 
         Rational[127, 256], 
         Rational[67, 128]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[207, 256], 
             Rational[19, 32], 
             Rational[203, 256]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.5390625, 0.3958333333333333, 0.5286458333333334],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{207/256, 19/32, 203/256}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[207, 256], 
              Rational[19, 32], 
              Rational[203, 256]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[207, 256], 
         Rational[19, 32], 
         Rational[203, 256]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[197, 256], 
             Rational[97, 128], 
             Rational[119, 128]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.5130208333333334, 0.5052083333333334, 0.6197916666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{197/256, 97/128, 119/128}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[197, 256], 
              Rational[97, 128], 
              Rational[119, 128]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[197, 256], 
         Rational[97, 128], 
         Rational[119, 128]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[209, 256], 
             Rational[231, 256], 
             Rational[241, 256]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.5442708333333334, 0.6015625, 0.6276041666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{209/256, 231/256, 241/256}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[209, 256], 
              Rational[231, 256], 
              Rational[241, 256]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[209, 256], 
         Rational[231, 256], 
         Rational[241, 256]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[115, 128], 
             Rational[123, 128], 
             Rational[61, 64]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.5989583333333334, 0.640625, 0.6354166666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{115/128, 123/128, 61/64}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[115, 128], 
              Rational[123, 128], 
              Rational[61, 64]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[115, 128], 
         Rational[123, 128], 
         Rational[61, 64]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[239, 256], 
             Rational[125, 128], 
             Rational[247, 256]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.6223958333333334, 0.6510416666666666, 0.6432291666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{239/256, 125/128, 247/256}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[239, 256], 
              Rational[125, 128], 
              Rational[247, 256]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[239, 256], 
         Rational[125, 128], 
         Rational[247, 256]}],
       Editable->False,
       Selectable->False]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"cololrs6", "=", 
    RowBox[{"{", 
     RowBox[{
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 0, 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0., 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0, 0, 0]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 0, 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0, 0, 0],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 
             Rational[3, 128], 
             Rational[39, 64]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.015625, 0.40625],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{0, 3/128, 39/64}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
              Rational[3, 128], 
              Rational[39, 64]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{0, 
         Rational[3, 128], 
         Rational[39, 64]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 
             Rational[139, 256], 
             Rational[125, 128]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.3619791666666667, 0.6510416666666666],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{0, 139/256, 125/128}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
              Rational[139, 256], 
              Rational[125, 128]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{0, 
         Rational[139, 256], 
         Rational[125, 128]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0, 
             Rational[111, 128], 
             Rational[109, 128]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.578125, 0.5677083333333334],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{0, 111/128, 109/128}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[0, 
              Rational[111, 128], 
              Rational[109, 128]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{0, 
         Rational[111, 128], 
         Rational[109, 128]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[1, 128], 
             Rational[63, 64], 
             Rational[65, 128]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.005208333333333333, 0.65625, 0.3385416666666667],
          FrameTicks->None,
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{1/128, 63/64, 65/128}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[1, 128], 
              Rational[63, 64], 
              Rational[65, 128]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[1, 128], 
         Rational[63, 64], 
         Rational[65, 128]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[107, 256], 
             Rational[127, 128], 
             Rational[1, 64]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.2786458333333333, 0.6614583333333334, 0.010416666666666666`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{107/256, 127/128, 1/64}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[107, 256], 
              Rational[127, 128], 
              Rational[1, 64]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[107, 256], 
         Rational[127, 128], 
         Rational[1, 64]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[101, 128], 
             Rational[233, 256], 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.5260416666666666, 0.6067708333333334, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{101/128, 233/256, 0}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[101, 128], 
              Rational[233, 256], 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[101, 128], 
         Rational[233, 256], 0}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[31, 32], 
             Rational[161, 256], 0], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6458333333333334, 0.4192708333333333, 0.],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{31/32, 161/256, 0}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[31, 32], 
              Rational[161, 256], 0]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[31, 32], 
         Rational[161, 256], 0}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[
             Rational[255, 256], 
             Rational[65, 256], 
             Rational[7, 128]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.6640625, 0.16927083333333334`, 0.036458333333333336`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{255/256, 65/256, 7/128}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
              Rational[255, 256], 
              Rational[65, 256], 
              Rational[7, 128]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{
         Rational[255, 256], 
         Rational[65, 256], 
         Rational[7, 128]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 
             Rational[11, 256], 
             Rational[77, 256]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.6666666666666666, 0.028645833333333332`, 0.20052083333333334`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{1, 11/256, 77/256}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 
              Rational[11, 256], 
              Rational[77, 256]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{1, 
         Rational[11, 256], 
         Rational[77, 256]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 
             Rational[11, 256], 
             Rational[11, 16]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.6666666666666666, 0.028645833333333332`, 0.4583333333333333],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{1, 11/256, 11/16}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 
              Rational[11, 256], 
              Rational[11, 16]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{1, 
         Rational[11, 256], 
         Rational[11, 16]}],
       Editable->False,
       Selectable->False], ",", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1, 
             Rational[3, 4], 
             Rational[255, 256]], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0.6666666666666666, 0.5, 0.6640625],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[{1, 3/4, 255/256}]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[1, 
              Rational[3, 4], 
              Rational[255, 256]]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[{1, 
         Rational[3, 4], 
         Rational[255, 256]}],
       Editable->False,
       Selectable->False]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"spectralCF", "[", 
   RowBox[{"u_", "?", "NumericQ"}], "]"}], ":=", 
  RowBox[{"Blend", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"vals0", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "^", "1.2"}], ",", 
        RowBox[{"cololrs0", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "vals0", "]"}]}], "}"}]}], "]"}], ",", "u"}], 
   "]"}]}], "\n", 
 RowBox[{
  RowBox[{"hotCF", "[", 
   RowBox[{"u_", "?", "NumericQ"}], "]"}], ":=", 
  RowBox[{"Blend", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"vals1", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "^", "2"}], ",", 
        RowBox[{"cololrs2", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "vals1", "]"}]}], "}"}]}], "]"}], ",", "u"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"radioactiveCF", "[", 
   RowBox[{"u_", "?", "NumericQ"}], "]"}], ":=", 
  RowBox[{"Blend", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"vals1", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "^", "2"}], ",", 
        RowBox[{"cololrs2b", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "vals1", "]"}]}], "}"}]}], "]"}], ",", "u"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"kindlCF", "[", 
   RowBox[{"u_", "?", "NumericQ"}], "]"}], ":=", 
  RowBox[{"Blend", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"vals1", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "^", "2"}], ",", 
        RowBox[{"cololrs3", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "vals1", "]"}]}], "}"}]}], "]"}], ",", "u"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"plasmaCF", "[", 
   RowBox[{"u_", "?", "NumericQ"}], "]"}], ":=", 
  RowBox[{"Blend", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"vals1", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "^", "2"}], ",", 
        RowBox[{"cololrs4", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "vals1", "]"}]}], "}"}]}], "]"}], ",", "u"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cubehelixCF", "[", 
   RowBox[{"u_", "?", "NumericQ"}], "]"}], ":=", 
  RowBox[{"Blend", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"vals1", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "^", "2"}], ",", 
        RowBox[{"cololrs5", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "vals1", "]"}]}], "}"}]}], "]"}], ",", "u"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"beamprofilerCF2", "[", 
    RowBox[{"u_", "?", "NumericQ"}], "]"}], ":=", 
   RowBox[{"Blend", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"vals6", "[", 
           RowBox[{"[", "i", "]"}], "]"}], "^", "1.4"}], ",", 
         RowBox[{"cololrs6", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "vals6", "]"}]}], "}"}]}], "]"}], ",", "u"}], 
    "]"}]}], 
  RowBox[{"(*", 
   RowBox[{
   "Many", " ", "beam", " ", "profilers", " ", "use", " ", "something", " ", 
    "similar", " ", "to", " ", "this", " ", 
    RowBox[{"CF", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], "*)"}],
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{"Here", " ", "are", " ", "some", " ", "options", " ", "for", " ", 
     RowBox[{"plotting", "."}]}], " ", "*)"}],
   FontSize->18], 
  RowBox[{
   RowBox[{"SetOptions", "[", 
    RowBox[{"ListLinePlot", ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"Axes", "\[Rule]", "False"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "785"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"Darker", "[", 
         RowBox[{"Darker", "[", "Gray", "]"}], "]"}], ",", "39", ",", 
        "Thick"}], "]"}]}], ",", 
     RowBox[{"ImagePadding", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"165", ",", "35"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"165", ",", "35"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Thick"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<r (\[Mu]m)\>\"", ",", "\"\<Intensity (arb.units)\>\""}], 
       "}"}]}], ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"FontSize", "\[Rule]", "39"}], ",", 
         RowBox[{"FontFamily", "\[Rule]", "\"\<Cambria\>\""}], ",", "Black"}],
         "}"}], "}"}]}]}], "]"}], ";"}]}], "\n", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"ListPlot", ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"Axes", "\[Rule]", "False"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "785"}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
    RowBox[{"FrameStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{
       RowBox[{"Darker", "[", 
        RowBox[{"Darker", "[", "Gray", "]"}], "]"}], ",", "39", ",", 
       "Thick"}], "]"}]}], ",", 
    RowBox[{"ImagePadding", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"165", ",", "35"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"165", ",", "35"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Thick"}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<r (\[Mu]m)\>\"", ",", "\"\<Intensity (arb.units)\>\""}], 
      "}"}]}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"FontSize", "\[Rule]", "39"}], ",", 
       RowBox[{"FontFamily", "\[Rule]", "\"\<Cambria\>\""}], ",", "Black"}], 
      "}"}]}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"Plot", ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"Axes", "\[Rule]", "False"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "785"}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
    RowBox[{"FrameStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{
       RowBox[{"Darker", "[", 
        RowBox[{"Darker", "[", "Gray", "]"}], "]"}], ",", "39", ",", 
       "Thick"}], "]"}]}], ",", 
    RowBox[{"ImagePadding", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"165", ",", "35"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"165", ",", "35"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", "Thick"}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<r (\[Mu]m)\>\"", ",", "\"\<Intensity (arb.units)\>\""}], 
      "}"}]}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"FontSize", "\[Rule]", "39"}], ",", 
       RowBox[{"FontFamily", "\[Rule]", "\"\<Cambria\>\""}], ",", "Black"}], 
      "}"}]}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"DensityPlot", ",", 
    RowBox[{"ImageSize", "\[Rule]", "785"}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
    RowBox[{"FrameStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{
       RowBox[{"Darker", "[", 
        RowBox[{"Darker", "[", "Gray", "]"}], "]"}], ",", "39", ",", 
       "Thick"}], "]"}]}], ",", 
    RowBox[{"ImagePadding", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"165", ",", "35"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"165", ",", "35"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<x (\[Mu]m)\>\"", ",", "\"\<y (\[Mu]m)\>\""}], "}"}]}], ",", 
    RowBox[{"LabelStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"FontSize", "\[Rule]", "39"}], ",", 
       RowBox[{"FontFamily", "\[Rule]", "\"\<Cambria\>\""}], ",", "Black"}], 
      "}"}]}], ",", 
    RowBox[{"PlotRangePadding", "\[Rule]", "0"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"BarLegend", "[", 
      RowBox[{"Automatic", ",", 
       RowBox[{"LabelStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"FontSize", "\[Rule]", "39"}], ",", 
          RowBox[{"FontFamily", "\[Rule]", "\"\<Cambria\>\""}], ",", 
          "Black"}], "}"}]}], ",", 
       RowBox[{"LegendMarkerSize", "\[Rule]", "554.5"}]}], "]"}]}], ",", 
    RowBox[{"ColorFunction", "\[Rule]", " ", "ophirCF"}]}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"SetOptions", "[", 
    RowBox[{"ListDensityPlot", ",", 
     RowBox[{"ImageSize", "\[Rule]", "785"}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"Darker", "[", 
         RowBox[{"Darker", "[", "Gray", "]"}], "]"}], ",", "39", ",", 
        "Thick"}], "]"}]}], ",", 
     RowBox[{"ImagePadding", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"165", ",", "35"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"165", ",", "35"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<x (\[Mu]m)\>\"", ",", "\"\<y (\[Mu]m)\>\""}], "}"}]}], 
     ",", 
     RowBox[{"LabelStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"FontSize", "\[Rule]", "39"}], ",", 
        RowBox[{"FontFamily", "\[Rule]", "\"\<Cambria\>\""}], ",", "Black"}], 
       "}"}]}], ",", 
     RowBox[{"PlotRangePadding", "\[Rule]", "0"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"BarLegend", "[", 
       RowBox[{"Automatic", ",", 
        RowBox[{"LabelStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"FontSize", "\[Rule]", "39"}], ",", 
           RowBox[{"FontFamily", "\[Rule]", "\"\<Cambria\>\""}], ",", 
           "Black"}], "}"}]}], ",", 
        RowBox[{"LegendMarkerSize", "\[Rule]", "554.5"}]}], "]"}]}], ",", 
     RowBox[{"ColorFunction", "\[Rule]", " ", "ophirCF"}]}], "]"}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"SetOptions", "[", 
     RowBox[{"ListPointPlot3D", ",", 
      RowBox[{"ColorFunction", "\[Rule]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"spectralCF", "[", "#3", "]"}], "&"}], ")"}]}], ",", 
      RowBox[{"BoxRatios", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "1", ",", " ", "0.005"}], "}"}]}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "785"}], ",", 
      RowBox[{"AspectRatio", "\[Rule]", "1"}], ",", 
      RowBox[{"LabelStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"FontSize", "\[Rule]", "39"}], ",", 
         RowBox[{"FontFamily", "\[Rule]", "\"\<Cambria\>\""}], ",", "Black"}],
         "}"}]}], ",", 
      RowBox[{"PlotRangePadding", "\[Rule]", "0"}], ",", 
      RowBox[{"ColorFunctionScaling", "\[Rule]", "False"}], ",", 
      RowBox[{"ViewPoint", "\[Rule]", "Top"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"PointSize", "[", "0.01", "]"}]}], ",", 
      RowBox[{"ImagePadding", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"165", ",", "35"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"165", ",", "35"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<x (\[Mu]m)\>\"", ",", "\"\<y (\[Mu]m)\>\"", ",", "\"\<\>\""}], 
        "}"}]}], ",", 
      RowBox[{"AxesStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"Darker", "[", 
          RowBox[{"Darker", "[", "Gray", "]"}], "]"}], ",", "39", ",", 
         "Thick"}], "]"}]}], ",", 
      RowBox[{"BoxStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{
         RowBox[{"Darker", "[", 
          RowBox[{"Darker", "[", "Gray", "]"}], "]"}], ",", "39", ",", 
         "Thick"}], "]"}]}]}], "]"}], ";"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], "*)"}],
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
  StyleBox[
   RowBox[{"(*", " ", "Definitions", " ", "*)"}],
   FontSize->18], "\[IndentingNewLine]", 
  RowBox[{"(*", "     ", 
   RowBox[{
    RowBox[{"-", " ", "Typical"}], " ", "interface", " ", "functions"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SLz", "[", 
     RowBox[{"x_", ",", "y_", ",", "R_", ",", "Ck_"}], "]"}], "=", 
    "               ", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"x", "^", "2"}], "+", 
        RowBox[{"y", "^", "2"}]}], ")"}], "/", "R"}], "/", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{"Sqrt", "[", 
        RowBox[{"1", "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", "Ck"}], ")"}], "*", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"x", "^", "2"}], "+", 
             RowBox[{"y", "^", "2"}]}], ")"}], "/", 
           RowBox[{"R", "^", "2"}]}]}]}], "]"}]}], ")"}]}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"Standard", " ", "surface"}], ";", " ", 
     RowBox[{
      RowBox[{"x", " ", "y"}], " ", "\[Rule]", " ", 
      RowBox[{"input", " ", "coordinates"}]}]}], ",", " ", 
    RowBox[{"R", " ", "\[Rule]", " ", 
     RowBox[{"Radius", " ", "of", " ", "curvature"}]}], ",", " ", 
    RowBox[{"Ck", " ", "\[Rule]", " ", 
     RowBox[{"Conical", " ", 
      RowBox[{"constant", "."}]}]}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Axz", "[", 
     RowBox[{"x_", ",", "y_", ",", "R_", ",", "Al_"}], "]"}], "=", 
    "                 ", 
    RowBox[{"R", "+", 
     RowBox[{"SLz", "[", 
      RowBox[{"x", ",", "y", ",", 
       RowBox[{"R", "*", 
        RowBox[{
         RowBox[{"Cot", "[", 
          RowBox[{
           RowBox[{"Al", "/", "180."}], "*", "Pi"}], "]"}], "^", "2"}]}], ",", 
       RowBox[{
        RowBox[{"-", "1"}], "-", 
        RowBox[{
         RowBox[{"Cot", "[", 
          RowBox[{
           RowBox[{"Al", "/", "180."}], "*", "Pi"}], "]"}], "^", "2"}]}]}], 
      "]"}]}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
     "Rounded", " ", "tip", " ", "axicon", " ", "with", " ", "tip", " ", 
      "radius", " ", "R"}], ";", " ", 
     RowBox[{
      RowBox[{"x", " ", "y"}], " ", "\[Rule]", " ", 
      RowBox[{"input", " ", "coordinates"}]}]}], ",", " ", 
    RowBox[{"R", " ", "\[Rule]", " ", 
     RowBox[{
     "Radius", " ", "of", " ", "curvature", " ", "of", " ", "the", " ", 
      "tip"}]}], ",", " ", 
    RowBox[{"Al", " ", "\[Rule]", " ", 
     RowBox[{
      RowBox[{"Axicon", "'"}], "s", " ", 
      RowBox[{"angle", "."}]}]}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ALz", "[", 
     RowBox[{"x_", ",", "y_", ",", "R_", ",", "Ck_", ",", "coef_"}], "]"}], 
    "=", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"x", "^", "2"}], "+", 
         RowBox[{"y", "^", "2"}]}], ")"}], "/", "R"}], "/", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "+", "Ck"}], ")"}], "*", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"x", "^", "2"}], "+", 
              RowBox[{"y", "^", "2"}]}], ")"}], "/", 
            RowBox[{"R", "^", "2"}]}]}]}], "]"}]}], ")"}]}], "+", 
     RowBox[{
      RowBox[{"Dot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"#", "^", "1"}], ",", 
            RowBox[{"#", "^", "2"}], ",", 
            RowBox[{"#", "^", "3"}], ",", 
            RowBox[{"#", "^", "4"}], ",", 
            RowBox[{"#", "^", "5"}], ",", 
            RowBox[{"#", "^", "6"}], ",", 
            RowBox[{"#", "^", "7"}], ",", 
            RowBox[{"#", "^", "8"}]}], "}"}], "&"}], "@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"x", "^", "2"}], "/", 
            RowBox[{"mm", "^", "2"}]}], "+", 
           RowBox[{
            RowBox[{"y", "^", "2"}], "/", 
            RowBox[{"mm", "^", "2"}]}]}], ")"}]}], ",", "coef"}], "]"}], " ", 
      "mm"}]}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"Even", " ", "aspherical", " ", "surface"}], ";", " ", 
     RowBox[{
      RowBox[{"x", " ", "y"}], " ", "\[Rule]", " ", 
      RowBox[{"input", " ", "coordinates"}]}]}], ",", " ", 
    RowBox[{"R", " ", "\[Rule]", " ", 
     RowBox[{"Radius", " ", "of", " ", "curvature"}]}], ",", " ", 
    RowBox[{"Ck", " ", "\[Rule]", " ", 
     RowBox[{"Conical", " ", "constant"}]}], ",", " ", 
    RowBox[{"coef", " ", "\[Rule]", " ", 
     RowBox[{"aspherical", " ", "surface", " ", 
      RowBox[{"coefficients", "."}]}]}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"OAP", "[", 
     RowBox[{"x_", ",", "y_", ",", "R_", ",", "x0_"}], "]"}], "=", 
    "            ", 
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"x", "-", "x0"}], ")"}], "^", "2"}], "+", 
         RowBox[{"y", "^", "2"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"2", " ", "R"}], ")"}]}], ")"}]}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", "     ", 
   RowBox[{
    RowBox[{"-", " ", "Typical"}], " ", "transmission", " ", "functions"}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Singular", " ", "Phase", " ", "Dislocation", " ", "and", " ", "related", 
    " ", 
    RowBox[{"functions", "."}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"T\[Lambda]", "[", 
     RowBox[{"\[Theta]_", ",", "\[Lambda]0\[Lambda]_", ",", "m_Integer"}], 
     "]"}], ":=", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"\[ImaginaryI]", " ", "\[Lambda]0\[Lambda]", " ", 
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{"m", " ", "\[Theta]"}], ",", " ", 
         RowBox[{"2", "\[Pi]"}]}], "]"}]}], "-", 
      RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", "\[Lambda]0\[Lambda]"}]}], 
     "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
     "Transmission", " ", "function", " ", "of", " ", "a", " ", "sectional", 
      " ", "SPP", " ", "designed", " ", "for", " ", "\[Lambda]0", " ", "that",
       " ", "is", " ", "illumitated", " ", "with", " ", "wavelength", " ", 
      "\[Lambda]", " ", 
      RowBox[{"(", 
       RowBox[{"\[Lambda]0\[Lambda]", " ", "=", " ", 
        RowBox[{"\[Lambda]0", "/", "\[Lambda]"}]}], ")"}]}], ";", " ", 
     RowBox[{"\[Theta]", " ", "\[Rule]", " ", 
      RowBox[{"azimuthal", " ", "angle"}]}]}], ",", " ", 
    RowBox[{"m", " ", "\[Rule]", " ", 
     RowBox[{"topological", " ", "charge", " ", "of", " ", "the", " ", 
      RowBox[{"SPP", "."}]}]}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"T\[Lambda]Fourier", "[", 
     RowBox[{
     "\[Theta]_", ",", "\[Lambda]0\[Lambda]_", ",", "m_Integer", ",", 
      "kMax_Integer"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"\[Pi]", " ", "\[Lambda]0\[Lambda]"}], "]"}], "/", "\[Pi]"}], 
      ")"}], 
     RowBox[{
      StyleBox[
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"k", "=", 
         RowBox[{"-", "kMax"}]}], "kMax"],
       FontSize->18], 
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{"\[ImaginaryI]", " ", "k", " ", "m", " ", "\[Theta]"}], "]"}],
        "/", 
       RowBox[{"(", 
        RowBox[{"\[Lambda]0\[Lambda]", "-", "k"}], ")"}]}]}]}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "T\[Lambda]", " ", "is", " ", "decomposed", " ", "in", " ", "Fourier", 
     " ", 
     RowBox[{"Series", ".", " ", "T\[Lambda]"}], " ", "as", " ", "sum", " ", 
     "of", " ", "vortex", " ", "modes", " ", "with", " ", "indices", " ", 
     "between"}], " ", "-", 
    RowBox[{"kMax", " ", "and", " ", 
     RowBox[{"kMax", "."}]}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TN", "[", 
     RowBox[{
     "\[Theta]_", ",", "\[Lambda]0\[Lambda]_", ",", "m_Integer", ",", 
      "\[CapitalNu]_Integer"}], "]"}], ":=", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"\[ImaginaryI]", " ", "\[Lambda]0\[Lambda]", " ", 
       RowBox[{"Mod", "[", 
        RowBox[{
         RowBox[{"m", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Floor", "[", 
             RowBox[{
              RowBox[{"\[CapitalNu]", " ", "\[Theta]"}], ",", " ", 
              RowBox[{"2", " ", "\[Pi]"}]}], "]"}], "/", "\[CapitalNu]"}], 
           ")"}]}], ",", 
         RowBox[{"2", " ", "\[Pi]"}]}], "]"}]}], "-", 
      RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", "\[Lambda]0\[Lambda]"}], 
      "+", 
      RowBox[{"\[ImaginaryI]", " ", "\[Pi]", " ", 
       RowBox[{"(", 
        RowBox[{"m", "/", "\[CapitalNu]"}], ")"}]}]}], "]"}]}], ";"}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "Transmission", " ", "function", " ", "of", " ", "a", " ", "sectional", 
    " ", "Diffractive", " ", "SPP", " ", "designed", " ", "for", " ", 
    "\[Lambda]0", " ", "with", " ", "N", " ", "steps", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"i", ".", "e", ".", " ", "N"}], "/", "m"}], " ", "discrete", 
       " ", "levels"}], ")"}], "."}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TNFourier", "[", 
     RowBox[{
     "\[Theta]_", ",", "m_Integer", ",", "\[CapitalNu]_Integer", ",", 
      "kMax_Integer"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"-", "\[CapitalNu]"}], " ", "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"\[Pi]", " ", 
         RowBox[{"m", "/", "\[CapitalNu]"}]}], "]"}], "/", "\[Pi]"}], ")"}], 
     RowBox[{
      StyleBox[
       UnderoverscriptBox["\[Sum]", 
        RowBox[{"k", "=", 
         RowBox[{"-", "kMax"}]}], "kMax"],
       FontSize->18], 
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{"\[ImaginaryI]", 
         RowBox[{"(", 
          RowBox[{"m", "-", 
           RowBox[{"\[CapitalNu]", " ", "k"}]}], ")"}], " ", "\[Theta]"}], 
        "]"}], "/", 
       RowBox[{"(", 
        RowBox[{"m", "-", 
         RowBox[{"\[CapitalNu]", " ", "k"}]}], ")"}]}]}]}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "TN", " ", "is", " ", "decomposed", " ", "in", " ", "Fourier", " ", 
     RowBox[{"Series", ".", " ", "TN"}], " ", "as", " ", "sum", " ", "of", 
     " ", "vortex", " ", "modes", " ", "with", " ", "indices", " ", 
     "between"}], " ", "-", 
    RowBox[{"kMax", " ", "and", " ", 
     RowBox[{"kMax", "."}]}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"T\[Lambda]Fourier", "[", 
     RowBox[{
     "\[Theta]_", ",", "\[Lambda]0\[Lambda]_", ",", "m_Integer", ",", 
      "kList_List"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"\[Pi]", " ", "\[Lambda]0\[Lambda]"}], "]"}], "/", "\[Pi]"}], 
      ")"}], 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"\[ImaginaryI]", " ", "k", " ", "m", " ", "\[Theta]"}], 
         "]"}], "/", 
        RowBox[{"(", 
         RowBox[{"\[Lambda]0\[Lambda]", "-", "k"}], ")"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "kList"}], "}"}]}], "]"}]}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "Summation", " ", "of", " ", "certain", " ", "vortex", " ", "modes", " ", 
    "with", " ", "indices", " ", "included", " ", "in", " ", "the", " ", 
    "list", " ", "kList", " ", "with", " ", "the", " ", "Fourier", " ", 
    "coefficients", " ", "of", " ", 
    RowBox[{"T\[Lambda]", "."}]}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"TNFourier", "[", 
     RowBox[{
     "\[Theta]_", ",", "m_Integer", ",", "\[CapitalNu]_Integer", ",", 
      "kList_List"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"-", "\[CapitalNu]"}], " ", "*", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"\[Pi]", " ", 
         RowBox[{"m", "/", "\[CapitalNu]"}]}], "]"}], "/", "\[Pi]"}], ")"}], 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Exp", "[", 
         RowBox[{"\[ImaginaryI]", 
          RowBox[{"(", 
           RowBox[{"m", "-", 
            RowBox[{"\[CapitalNu]", " ", "k"}]}], ")"}], " ", "\[Theta]"}], 
         "]"}], "/", 
        RowBox[{"(", 
         RowBox[{"m", "-", 
          RowBox[{"\[CapitalNu]", " ", "k"}]}], ")"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "kList"}], "}"}]}], "]"}]}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "Summation", " ", "of", " ", "certain", " ", "vortex", " ", "modes", " ", 
    "with", " ", "indices", " ", "included", " ", "in", " ", "the", " ", 
    "list", " ", "kList", " ", "with", " ", "the", " ", "Fourier", " ", 
    "coefficients", " ", "of", " ", 
    RowBox[{"TN", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", "     ", 
   RowBox[{"-", " ", "Miscelaneous"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Not", " ", "yet", " ", 
    RowBox[{"defined", "."}]}], "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  StyleBox[
   RowBox[{"(*", "     ", 
    RowBox[{
     RowBox[{"-", " ", "Grids"}], " ", "of", " ", "parallel", " ", "rays"}], 
    "*)"}],
   FontSize->18]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CartesianGrid", "[", 
     RowBox[{"rad_", ",", "num_Integer"}], "]"}], "  ", ":=", 
    RowBox[{"Flatten", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", "y"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", 
          RowBox[{"-", 
           RowBox[{"N", "@", "rad"}]}], ",", "rad", ",", 
          RowBox[{"2", " ", 
           RowBox[{"rad", "/", 
            RowBox[{"(", 
             RowBox[{"num", "-", "1."}], ")"}]}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"y", ",", 
          RowBox[{"-", 
           RowBox[{"N", "@", "rad"}]}], ",", "rad", ",", 
          RowBox[{"2", " ", 
           RowBox[{"rad", "/", 
            RowBox[{"(", 
             RowBox[{"num", "-", "1."}], ")"}]}]}]}], "}"}]}], "]"}], ",", 
      "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"rad", " ", "\[Rule]", " ", 
     RowBox[{
     "the", " ", "spatial", " ", "extent", " ", "of", " ", "the", " ", "rays",
       " ", "bundle"}]}], ",", " ", 
    RowBox[{"num", " ", "\[Rule]", " ", 
     RowBox[{"related", " ", "to", " ", "the", " ", "number", " ", "of", " ", 
      RowBox[{"rays", "."}]}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"The", " ", "version", " ", "without", " ", "chief"}], "-", 
    RowBox[{
    "ray", " ", "is", " ", "more", " ", "suitable", " ", "when", " ", "we", 
     " ", "deal", " ", "with", " ", "singular", " ", "beams", " ", "with", 
     " ", "the", " ", "singularity", " ", "along", " ", "the", " ", "chief"}],
     "-", 
    RowBox[{"ray", "."}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "HexapolarGrid", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"\"\<chiefRay\>\"", "\[Rule]", " ", "True"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"HexapolarGrid", "[", 
     RowBox[{"rad_", ",", "num_Integer", ",", 
      RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], " ", ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"OptionValue", "[", "\"\<chiefRay\>\"", "]"}], "\[Equal]", 
       "True"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0"}], "}"}], "}"}], ",", 
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"p", " ", 
             RowBox[{"rad", "/", "num"}], 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Cos", "[", "th", "]"}], ",", 
               RowBox[{"Sin", "[", "th", "]"}]}], "}"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"p", ",", "1", ",", "num"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"th", ",", 
              RowBox[{"2", " ", 
               RowBox[{"Pi", "/", 
                RowBox[{"(", 
                 RowBox[{"6.", " ", "p"}], ")"}]}]}], ",", " ", 
              RowBox[{"2", "Pi"}], ",", 
              RowBox[{"2", " ", 
               RowBox[{"Pi", "/", 
                RowBox[{"(", 
                 RowBox[{"6.", " ", "p"}], ")"}]}]}]}], "}"}]}], "]"}], ",", 
          "1"}], "]"}]}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"p", " ", 
           RowBox[{"rad", "/", "num"}], 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Cos", "[", "th", "]"}], ",", 
             RowBox[{"Sin", "[", "th", "]"}]}], "}"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"p", ",", "1", ",", "num"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"th", ",", 
            RowBox[{"2", " ", 
             RowBox[{"Pi", "/", 
              RowBox[{"(", 
               RowBox[{"6.", " ", "p"}], ")"}]}]}], ",", " ", 
            RowBox[{"2", "Pi"}], ",", 
            RowBox[{"2", " ", 
             RowBox[{"Pi", "/", 
              RowBox[{"(", 
               RowBox[{"6.", " ", "p"}], ")"}]}]}]}], "}"}]}], "]"}], ",", 
        "1"}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"rad", " ", "\[Rule]", " ", 
     RowBox[{
     "the", " ", "spatial", " ", "extent", " ", "of", " ", "the", " ", "rays",
       " ", "bundle"}]}], ",", " ", 
    RowBox[{"num", " ", "\[Rule]", " ", 
     RowBox[{"related", " ", "to", " ", "the", " ", "number", " ", "of", " ", 
      RowBox[{"rays", "."}]}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"LineGrid", "[", 
     RowBox[{"rad_", ",", "num_Integer"}], "]"}], "            ", ":=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", 
         RowBox[{"N", "@", "rad"}]}], ",", "rad", ",", 
        RowBox[{"2", " ", 
         RowBox[{"rad", "/", 
          RowBox[{"(", 
           RowBox[{"num", "-", "1."}], ")"}]}]}]}], "}"}]}], "]"}]}], ";"}], 
  " ", 
  RowBox[{"(*", 
   RowBox[{
   "Useful", " ", "for", " ", "graphics", " ", "or", " ", "optimization", " ",
     "of", " ", "circularly", " ", "symmetric", " ", "optical", " ", 
    RowBox[{"systems", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"rad", " ", "\[Rule]", " ", 
     RowBox[{
     "the", " ", "spatial", " ", "extent", " ", "of", " ", "the", " ", "rays",
       " ", "bundle"}]}], ",", " ", 
    RowBox[{"num", " ", "\[Rule]", " ", 
     RowBox[{"the", " ", "number", " ", "of", " ", 
      RowBox[{"rays", "."}]}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"CircleGrid", "[", 
     RowBox[{"rad_", ",", "num_Integer"}], "]"}], "       ", ":=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"rad", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Cos", "[", "th", "]"}], ",", 
         RowBox[{"Sin", "[", "th", "]"}]}], "}"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"th", ",", 
        RowBox[{"2", " ", 
         RowBox[{
          RowBox[{"N", "@", "Pi"}], "/", "num"}]}], ",", 
        RowBox[{"2", " ", "Pi"}], ",", 
        RowBox[{"2", " ", 
         RowBox[{
          RowBox[{"N", "@", "Pi"}], "/", "num"}]}]}], "}"}]}], "]"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"rad", " ", "\[Rule]", " ", 
     RowBox[{
     "distance", " ", "from", " ", "the", " ", "optica", " ", "axis", " ", 
      "of", " ", "the", " ", "rays", " ", "bundle"}]}], ",", " ", 
    RowBox[{"num", " ", "\[Rule]", " ", 
     RowBox[{"the", " ", "number", " ", "of", " ", 
      RowBox[{"rays", "."}]}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], "*)"}],
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  StyleBox[
   RowBox[{"(*", "     ", 
    RowBox[{
     RowBox[{"-", " ", "Functions"}], " ", "needed", " ", "for", " ", 
     "system", " ", "optimization"}], "*)"}],
   FontSize->18], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FindFocus", "[", 
    RowBox[{"surfaceCoordinates_List", ",", "rayTilt_List"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"sc", "=", 
        RowBox[{"Transpose", "@", "surfaceCoordinates"}]}], ",", 
       RowBox[{"ta", "=", 
        RowBox[{"Transpose", "@", "rayTilt"}]}], ",", "rx", ",", "ry", ",", 
       "tx", ",", "ty", ",", "tz"}], "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rx", "=", 
       RowBox[{"sc", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"surfaceCoordinates", " ", "\[Rule]", " ", 
         RowBox[{
         "input", " ", "coordinates", " ", "of", " ", "the", " ", "rays"}]}], 
        ","}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"ry", "=", 
       RowBox[{"sc", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"tx", "=", 
       RowBox[{"ta", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"rayTilt", "            ", "\[Rule]", " ", 
        RowBox[{"input", " ", "direction", " ", 
         RowBox[{"vectors", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"ty", "=", 
       RowBox[{"ta", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "ta", "]"}], "\[GreaterEqual]", " ", "3"}], 
        ",", 
        RowBox[{"tz", "=", 
         RowBox[{"ta", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ",", 
        RowBox[{"tz", "=", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"1", "-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"tx", "^", "2"}], "+", 
             RowBox[{"ty", "^", "2"}]}], ")"}]}], "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Total", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"rx", "*", "tx"}], "+", 
            RowBox[{"ry", "*", "ty"}]}], ")"}], "/", "tz"}], "]"}]}], "/", 
       RowBox[{"Total", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"tx", "^", "2"}], "+", 
           RowBox[{"ty", "^", "2"}]}], ")"}], "/", 
         RowBox[{"tz", "^", "2"}]}], "]"}]}]}]}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "]"}]}], 
  RowBox[{"(*", 
   RowBox[{
   "This", " ", "function", " ", "return", " ", "the", " ", "position", " ", 
    "of", " ", "the", " ", "focal", " ", "plane", " ", "with", " ", "respect",
     " ", "to", " ", "the", " ", "plane", " ", "on", " ", "which", " ", 
    "surfaceCoordinates", " ", "and", " ", "rayTilt", " ", "are", " ", 
    RowBox[{"defined", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "FindFocusGaussian", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"\"\<radius\>\"", "\[Rule]", " ", 
      RowBox[{"1", " ", "mm"}]}], "}"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "The", " ", "option", " ", "\"\<radius\>\"", " ", "is", " ", "the", " ", 
    "radius", " ", "of", " ", "the", " ", "Gaussian", " ", "beam", " ", "at", 
    " ", 
    RowBox[{"1", "/", 
     RowBox[{"e", "^", "2."}]}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FindFocusGaussian", "[", 
    RowBox[{"surfaceCoordinates_List", ",", "rayTilt_List", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"sc", "=", 
        RowBox[{"Transpose", "@", "surfaceCoordinates"}]}], ",", 
       RowBox[{"ta", "=", 
        RowBox[{"Transpose", "@", "rayTilt"}]}], ",", "rx", ",", "ry", ",", 
       "tx", ",", "ty", ",", "tz", ",", "W"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"W", "=", 
       RowBox[{"OptionValue", "[", "\"\<radius\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"rx", "=", 
       RowBox[{"sc", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"surfaceCoordinates", " ", "\[Rule]", " ", 
         RowBox[{
         "input", " ", "coordinates", " ", "of", " ", "the", " ", "rays"}]}], 
        ","}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"ry", "=", 
       RowBox[{"sc", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"tx", "=", 
       RowBox[{"ta", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"rayTilt", "            ", "\[Rule]", " ", 
        RowBox[{"input", " ", "direction", " ", 
         RowBox[{"vectors", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"ty", "=", 
       RowBox[{"ta", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "ta", "]"}], "\[GreaterEqual]", " ", "3"}], 
        ",", 
        RowBox[{"tz", "=", 
         RowBox[{"ta", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ",", 
        RowBox[{"tz", "=", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"1", "-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"tx", "^", "2"}], "+", 
             RowBox[{"ty", "^", "2"}]}], ")"}]}], "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Total", "[", 
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "2"}], 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"rx", "^", "2"}], "+", 
               RowBox[{"ry", "^", "2"}]}], ")"}], "/", 
             RowBox[{"W", "^", "2"}]}]}], "]"}], "*", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"rx", "*", "tx"}], "+", 
             RowBox[{"ry", "*", "ty"}]}], ")"}], "/", "tz"}]}], "]"}]}], "/", 
       RowBox[{"Total", "[", 
        RowBox[{
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "2"}], 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"rx", "^", "2"}], "+", 
              RowBox[{"ry", "^", "2"}]}], ")"}], "/", 
            RowBox[{"W", "^", "2"}]}]}], "]"}], "*", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"tx", "^", "2"}], "+", 
            RowBox[{"ty", "^", "2"}]}], ")"}], "/", 
          RowBox[{"tz", "^", "2"}]}]}], "]"}]}]}]}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "]"}]}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "This", " ", "function", " ", "return", " ", "the", " ", "position", " ", 
     "of", " ", "the", " ", "focal", " ", "plane", " ", "with", " ", 
     "respect", " ", "to", " ", "the", " ", "plane", " ", "on", " ", "which", 
     " ", "surfaceCoordinates", " ", "and", " ", "rayTilt", " ", "are", " ", 
     "defined"}], ",", " ", "\[IndentingNewLine]", 
    RowBox[{
    "assuming", " ", "that", " ", "rays", " ", "carry", " ", "a", " ", 
     "certain", " ", "energy", " ", "that", " ", "changes", " ", "according", 
     " ", "to", " ", "a", " ", "Gaussian", " ", "function", " ", "with", " ", 
     "respect", " ", "to", " ", "the", " ", "optical", " ", 
     RowBox[{"axis", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FindFocusLine", "[", 
    RowBox[{"surfaceCoordinates_List", ",", "rayTilt_List"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"sc", "=", 
        RowBox[{"Transpose", "@", "surfaceCoordinates"}]}], ",", 
       RowBox[{"ta", "=", 
        RowBox[{"Transpose", "@", "rayTilt"}]}], ",", "rx", ",", "ry", ",", 
       "tx", ",", "ty", ",", "tz", ",", "W"}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rx", "=", 
       RowBox[{"sc", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"surfaceCoordinates", " ", "\[Rule]", " ", 
         RowBox[{
         "input", " ", "coordinates", " ", "of", " ", "the", " ", "rays"}]}], 
        ","}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"ry", "=", 
       RowBox[{"sc", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"tx", "=", 
       RowBox[{"ta", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"rayTilt", "            ", "\[Rule]", " ", 
        RowBox[{"input", " ", "direction", " ", 
         RowBox[{"vectors", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"ty", "=", 
       RowBox[{"ta", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "ta", "]"}], "\[GreaterEqual]", " ", "3"}], 
        ",", 
        RowBox[{"tz", "=", 
         RowBox[{"ta", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ",", 
        RowBox[{"tz", "=", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"1", "-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"tx", "^", "2"}], "+", 
             RowBox[{"ty", "^", "2"}]}], ")"}]}], "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"Total", "[", 
         RowBox[{
          RowBox[{"\[Sqrt]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"rx", "^", "2"}], "+", 
             RowBox[{"ry", "^", "2"}]}], ")"}]}], "*", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"rx", "*", "tx"}], "+", 
             RowBox[{"ry", "*", "ty"}]}], ")"}], "/", "tz"}]}], "]"}]}], "/", 
       RowBox[{"Total", "[", 
        RowBox[{
         RowBox[{"\[Sqrt]", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"rx", "^", "2"}], "+", 
            RowBox[{"ry", "^", "2"}]}], ")"}]}], "*", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"tx", "^", "2"}], "+", 
            RowBox[{"ty", "^", "2"}]}], ")"}], "/", 
          RowBox[{"tz", "^", "2"}]}]}], "]"}]}]}]}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "]"}]}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "This", " ", "function", " ", "return", " ", "the", " ", "position", " ", 
     "of", " ", "the", " ", "focal", " ", "plane", " ", "with", " ", 
     "respect", " ", "to", " ", "the", " ", "plane", " ", "on", " ", "which", 
     " ", "surfaceCoordinates", " ", "and", " ", "rayTilt", " ", "are", " ", 
     "defined"}], ",", "\[IndentingNewLine]", 
    RowBox[{"assuming", " ", "a", " ", "line", " ", "grid", " ", "of", " ", 
     RowBox[{"rays", ".", " ", "The"}], " ", "energy", " ", "carried", " ", 
     "by", " ", "the", " ", "rays", " ", "increase", " ", "linearly", " ", 
     "with", " ", "the", " ", "distance", " ", "from", " ", "the", " ", 
     "optical", " ", "axis", " ", "to", "\[IndentingNewLine]", "simulate", 
     " ", "a", " ", "circular", " ", 
     RowBox[{"beam", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FindDivergence", "[", "rayTilt_List", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ta", "=", 
        RowBox[{"Transpose", "@", "rayTilt"}]}], ",", "tx", ",", "ty"}], 
      "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tx", "=", 
       RowBox[{"ta", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"rayTilt", "            ", "\[Rule]", " ", 
        RowBox[{"input", " ", "direction", " ", 
         RowBox[{"vectors", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"ty", "=", 
       RowBox[{"ta", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"ArcSin", "[", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         RowBox[{"Total", "[", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"tx", "^", "2"}], "+", 
            RowBox[{"ty", "^", "2"}]}], ")"}], "]"}], "/", 
         RowBox[{"Length", "[", "tx", "]"}]}], "]"}], "]"}]}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  RowBox[{"(*", 
   RowBox[{
   "This", " ", "function", " ", "return", " ", "the", " ", "geometrically", 
    " ", "computed", " ", "divergence", " ", "of", " ", "the", " ", 
    RowBox[{"beam", "."}]}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "FindDivergenceGaussian", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"\"\<radius\>\"", "\[Rule]", " ", 
      RowBox[{"1", " ", "mm"}]}], "}"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "The", " ", "option", " ", "\"\<radius\>\"", " ", "is", " ", "the", " ", 
    "radius", " ", "of", " ", "the", " ", "Gaussian", " ", "beam", " ", "at", 
    " ", 
    RowBox[{"1", "/", 
     RowBox[{"e", "^", "2."}]}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FindDivergenceGaussian", "[", 
    RowBox[{"surfaceCoordinates_List", ",", "rayTilt_List", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"sc", "=", 
        RowBox[{"Transpose", "@", "surfaceCoordinates"}]}], ",", 
       RowBox[{"ta", "=", 
        RowBox[{"Transpose", "@", "rayTilt"}]}], ",", "rx", ",", "ry", ",", 
       "tx", ",", "ty", ",", "W"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"W", "=", 
       RowBox[{"OptionValue", "[", "\"\<radius\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"rx", "=", 
       RowBox[{"sc", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"surfaceCoordinates", " ", "\[Rule]", " ", 
         RowBox[{
         "input", " ", "coordinates", " ", "of", " ", "the", " ", "rays"}]}], 
        ","}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"ry", "=", 
       RowBox[{"sc", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"tx", "=", 
       RowBox[{"ta", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"rayTilt", "            ", "\[Rule]", " ", 
        RowBox[{"input", " ", "direction", " ", 
         RowBox[{"vectors", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"ty", "=", 
       RowBox[{"ta", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Preferable", " ", "to", " ", "use", " ", "the", " ", "input", " ", 
        "coordinates", " ", "for", " ", 
        RowBox[{"surfaceCoordinates", "."}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"ArcSin", "[", 
       RowBox[{"Sqrt", "[", 
        RowBox[{
         RowBox[{"Total", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"tx", "^", "2"}], "+", 
             RowBox[{"ty", "^", "2"}]}], ")"}], 
           RowBox[{"Exp", "[", 
            RowBox[{
             RowBox[{"-", "2"}], 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"rx", "^", "2"}], "+", 
                RowBox[{"ry", "^", "2"}]}], ")"}], "/", 
              RowBox[{"W", "^", "2"}]}]}], "]"}]}], "]"}], "/", 
         RowBox[{"Total", "[", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"-", "2"}], 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"rx", "^", "2"}], "+", 
               RowBox[{"ry", "^", "2"}]}], ")"}], "/", 
             RowBox[{"W", "^", "2"}]}]}], "]"}], "]"}]}], "]"}], " ", 
       "]"}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "This", " ", "function", " ", "return", " ", "the", " ", "geometrically", 
     " ", "computed", " ", "divergence", " ", "of", " ", "the", " ", "beam"}],
     ",", "\[IndentingNewLine]", 
    RowBox[{
    "assuming", " ", "that", " ", "rays", " ", "carry", " ", "a", " ", 
     "certain", " ", "amount", " ", "of", " ", "energy", " ", "that", " ", 
     "changes", " ", "according", " ", "to", " ", "a", " ", "Gaussian", " ", 
     "function", " ", "with", " ", "the", " ", "distance", " ", "from", " ", 
     "the", " ", "optical", " ", 
     RowBox[{"axis", "."}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FindDivergenceLine", "[", 
    RowBox[{"surfaceCoordinates_List", ",", "rayTilt_List"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"sc", "=", 
        RowBox[{"Transpose", "@", "surfaceCoordinates"}]}], ",", 
       RowBox[{"ta", "=", 
        RowBox[{"Transpose", "@", "rayTilt"}]}], ",", "rx", ",", "ry", ",", 
       "tx", ",", "ty"}], "}"}], ",", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rx", "=", 
       RowBox[{"sc", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"surfaceCoordinates", " ", "\[Rule]", " ", 
         RowBox[{
         "input", " ", "coordinates", " ", "of", " ", "the", " ", "rays"}]}], 
        ","}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"ry", "=", 
       RowBox[{"sc", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"tx", "=", 
       RowBox[{"ta", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"rayTilt", "            ", "\[Rule]", " ", 
        RowBox[{"input", " ", "direction", " ", 
         RowBox[{"vectors", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"ty", "=", 
       RowBox[{"ta", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Preferable", " ", "to", " ", "use", " ", "input", " ", "coordinates", 
        " ", "for", " ", 
        RowBox[{"surfaceCoordinates", "."}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{"Total", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"tx", "^", "2"}], "+", 
            RowBox[{"ty", "^", "2"}]}], ")"}], 
          RowBox[{"Sqrt", "[", 
           RowBox[{
            RowBox[{"rx", "^", "2"}], "+", 
            RowBox[{"ry", "^", "2"}]}], "]"}]}], "]"}], "/", 
        RowBox[{"Total", "[", 
         RowBox[{"Sqrt", "[", 
          RowBox[{
           RowBox[{"rx", "^", "2"}], "+", 
           RowBox[{"ry", "^", "2"}]}], "]"}], "]"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "This", " ", "function", " ", "return", " ", "the", " ", "geometrically", 
     " ", "computed", " ", "divergence", " ", "of", " ", "the", " ", "beam"}],
     ",", "\[IndentingNewLine]", 
    RowBox[{
    "assuming", " ", "that", " ", "rays", " ", "carry", " ", "a", " ", 
     "certain", " ", "amount", " ", "of", " ", "energy", " ", "that", " ", 
     "changes", " ", "linearly", " ", "with", " ", "the", " ", "distance", 
     " ", "from", " ", "the", " ", "optical", " ", 
     RowBox[{"axis", "."}]}]}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FindSpotSize", "[", 
    RowBox[{"surfaceCoordinates_List", ",", "rayTilt_List"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"sc", "=", 
        RowBox[{"Transpose", "@", "surfaceCoordinates"}]}], ",", 
       RowBox[{"ta", "=", 
        RowBox[{"Transpose", "@", "rayTilt"}]}], ",", "rx", ",", "ry", ",", 
       "rz", ",", "tx", ",", "ty", ",", "tz"}], "}"}], ",", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rx", "=", 
       RowBox[{"sc", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"surfaceCoordinates", " ", "\[Rule]", " ", 
         RowBox[{
         "input", " ", "coordinates", " ", "of", " ", "the", " ", "rays"}]}], 
        ","}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"ry", "=", 
       RowBox[{"sc", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"tx", "=", 
       RowBox[{"ta", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"rayTilt", "            ", "\[Rule]", " ", 
        RowBox[{"input", " ", "direction", " ", 
         RowBox[{"vectors", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"ty", "=", 
       RowBox[{"ta", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "ta", "]"}], "\[GreaterEqual]", " ", "3"}], 
        ",", 
        RowBox[{"tz", "=", 
         RowBox[{"ta", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ",", 
        RowBox[{"tz", "=", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"1", "-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"tx", "^", "2"}], "+", 
             RowBox[{"ty", "^", "2"}]}], ")"}]}], "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"rz", "=", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Total", "[", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"rx", "*", "tx"}], "+", 
             RowBox[{"ry", "*", "ty"}]}], ")"}], "/", "tz"}], "]"}]}], "/", 
        RowBox[{"Total", "[", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"tx", "^", "2"}], "+", 
            RowBox[{"ty", "^", "2"}]}], ")"}], "/", "tz"}], "]"}]}]}], ";", 
      RowBox[{"(*", 
       RowBox[{
       "This", " ", "part", " ", "compute", " ", "the", " ", "positon", " ", 
        "of", " ", "the", " ", "focal", " ", "plane", " ", "in", " ", "the", 
        " ", "same", " ", "way", " ", "as", " ", 
        RowBox[{"FindFocus", "."}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"rx", "=", 
       RowBox[{"rx", "+", 
        RowBox[{"rz", "*", 
         RowBox[{"tx", "/", "tz"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ry", "=", 
       RowBox[{"ry", "+", 
        RowBox[{"rz", "*", 
         RowBox[{"ty", "/", "tz"}]}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{"Total", "[", 
         RowBox[{
          RowBox[{"rx", "^", "2"}], "+", 
          RowBox[{"ry", "^", "2"}]}], "]"}], "/", 
        RowBox[{"Length", "[", "rx", "]"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  RowBox[{"(*", 
   RowBox[{
   "This", " ", "function", " ", "return", " ", "the", " ", "geometrically", 
    " ", "computed", " ", "focal", " ", "spot", " ", 
    RowBox[{"size", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"FindSpotSizeGaussian", ",", " ", 
    RowBox[{"FindSpotSizeLine", " ", "-", " ", 
     RowBox[{
     "will", " ", "be", " ", "defined", " ", "in", " ", "the", " ", "further",
       " ", 
      RowBox[{"versions", "."}]}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"--", 
    RowBox[{"--", 
     RowBox[{"--", 
      RowBox[{"--", 
       RowBox[{"--", 
        RowBox[{"--", 
         RowBox[{"--", 
          RowBox[{"--", 
           RowBox[{"--", 
            RowBox[{"--", 
             RowBox[{"--", 
              RowBox[{"--", 
               RowBox[{"--", 
                RowBox[{"--", 
                 RowBox[{"--", 
                  RowBox[{"--", 
                   RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"-", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{"--", 
                    RowBox[{
                    "--", "-"}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}\
]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}]}], "*)"}],
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Ray", " ", "Tracing", " ", "Functions"}], " ", "-", " ", 
     RowBox[{"Parallel", " ", "Version"}]}], "*)"}],
   FontSize->18], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Here", " ", "is", " ", "an", " ", "exemplification", " ", "of", " ", 
    "the", " ", "method", " ", "used", " ", "to", " ", "find", " ", "the", 
    " ", "intersection", " ", "of", " ", "the", " ", "rays", " ", "with", " ",
     "the", " ", 
    RowBox[{"surface", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1:eJzs3XWcVGUXB/ClkY6la+lYBAnpOT86JLZoWFhgu2aT7VmQLkE6JISlYYFl
gaVBOkVCQlFEpLsl332eZXBFQVB4Qfz98X3f63jn3mfu3OEjvzlzTtHuRnvX
lBYWFoHpE//HvltIvYCAbmEOadU/uHTzrlLZO1XiZp0UFhYHEqltC4teICIi
IiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIi
IiIiIiIiIiIiIiIi+jdZciEaBs9oLCsZjQdpolF6fRgOzwxBsx2ROFHYH/e8
/LFmdwRSVfNBQ0tfwCIC+Y54485aH7idC3+6rR5X+5hcfDH65wj93GyfBSG0
d5Q+ZqqJkThYMOlclxKi9Xnf9mv/rzi2NBrf+UdjyIZoODtHYlvGcFwxRWF/
xiBYJfjD1ToC2wYlvb/J31O1rR5vbWHEd54RuNsuCOHLwjDUFI3WO036mG/7
tREREREREREREf2XmLO+pXOjMS1bpM7r0hePhOUSbzhZuWN/1UAE7qoFF7dy
MFp0g/2mc1LX86rUydQBixLmSe2+q2TsJHu02hsjMZbLxO1nu6fb6nG1z50v
14vn5g5wSHzuwZDscNzjikE+tWAVa48jqYJwarUHGnzgh+rfRWJ5XAR29TPp
7FGt7W1fn/eN+b1W17ln7WAU3xYOi7l2GPhYkPmUK34OyQSrarck4o4D2j9e
pN/f5O8p7tmhToY46Ru8W1Z/1A7pUuTDqZrNENc7Ah6OwTgnEW/9NRIRERER
EREREf0XPJv13cwSjvlpbLCmSR3sS9kNG2pdkrkdt0uTAfaocGyabD+5QM5/
aIf2hadJrZTLZMTPdpjaJUbyVVkmV39JygBnJMt4Tf3j9eNqnzwfL9b7f5h4
nM1bFuvjqGMuilkmPeGAUo3WyZSmj2TcaVe03twcmRxdYRcdga0twpj3vkaq
XjqFYzg2bI3UubrrZ/Vw58NuWHBxndTbsU56nLPFt1c/k03jJkmpi63QsMxo
qTZroeQfZoeoDDP0ezpmkj26zl0uPbrtk4hGnREw3RoL0nfAB8UjcX9BCI5W
jXrrr5OIiIiIiIiIiOh9pvoh5CkcrX+br3K5m23cdA3n1ym74eiCtVJ3xzrp
2NkWD3yGSK2ls6RpI3ukerxcKnS5I+nOu6B9aHXc2m6DoxsDscjKHbd6eWFR
o3DkffJbftdzSdvmx9U+Nfe3xvwPAnXtbj/rktiV3glBi09LuzJrpZaFHRzb
fy4xxaeLR4IdLn6+QioUeyhjT7ui78pWsHP10vW9qsZY9Y5gP4e/72BcOPpd
DsIwywgUy18fkb0t0RIOuFNloqyuO01Kz2uFs5tHyuX+K2Rylq6oUbsYKpxt
jqC0oVi/ykW/p2IRgcHHE9/nJkZ9/7S43xOR1yPgPCYaeRPvq8sJfH+IiIiI
iIiIiIjeFNXz9kDBaFTvEILCEUZYXArEpjylcX/2Tfk1wB5fDhkjuUvOku7n
bNEqZIlMfZgVNRO8MPqyIzY7umNVlkjU6RaGHU2T+uiKZ1KmF/cnuav5cbXP
0rORuJ8mGmXWhyF4VxAOxYWjQElnuPzQAuO7u+q8d1CVBGkTY4Oj5UfIncLz
xcbSAXf3XJKla8vpfg6fpTTqnsBq/azpfXUqG7+wL/H6pwzS2fuOB7XQJEdm
5P3aDqX9xsuVW3Mkc1pbXa/rnjMDvj3hhQ2rXFDS6I9ZxUzMb4mIiIiIiIiI
iN4BFyKiMHVBFGZ+5I+wXR3QoKw7Dv50XnJELpPMXW1RKW6CFHGLFUdDe9RK
Uwjf5LfFgM7hcM7XE1ftI3Hs4D/P+FROqHovqLz3wQcBuGoZput719/IgsOP
7RGYfoLMfBSj895PNsZIPc+rYunvhkNl2uhZb9vGRKFl6t/3A7j05Jgjepp0
TamaHTYj3l/XmqrZYUvOvL4ZYeYeF7PymvRxVN+DwPW++vjqXMlrXFsmq3FV
tdOXkmWkL1rzsLYRmDjAF2GfGeEfF4nwXaHokzYKTpNMerv4oSCdty8u66vn
2Zln3iWff7cp2A9jvvztcfU+Pizhgk3znWBX3h/7+hSC8eAZqbPOFj0mfC4T
rGfImWM2mPB4mvw6KD2iUnliyLhO+LJWD3TqHvbSc9bMs/MMT7J988y+zV1e
38w+dQ+YZ/apa2ie2fdP781ne1OrWnf1/ka5++s5dJ9Z/rbmZ9eprk+FeF+c
vBOh59YNtgmBqaZJz7NT9edHD76+7ybUcdTrVcdUx1ffuahzqfNWfuyv12Ce
l/fstTWvX72WVfv99OtS95j63ke9XvV+qXtVXQfWzBMRERERERERvXtUr9Sw
3lEoPMgP5Wq007PPerc+IW1Ni+RMFVsU7zFe+q1aqDNey5UFn2a8QUsDcc0+
8rXmVJKsN+wH6T0xpGB9ePl0w6niW6Vll11S6XhrNG+6Vpq6fSfRvXvgln1j
bD1lxIb0UfB/EP67Y6ns+vKGKHyWIwCxjTrBt5UHal94IAOv7JPwmq1xKX2C
dD2zS4aFtkWcY26cfNAYxzwjMOuDYBy+E/5K61b7n7mWlOuq49jt6A4Pm236
+BGJ5zptu0Kfd+7DztjWqIJez081I7HOIlSv82XWPGBDG/Qs8JWsnnlASsZ0
Q3CHGqj3QSfYHDVickAVOHa2hK1VJ5zMvkrPszPPvFPz0Xzj7FFi8ExZOfon
6eveXs+8239jvRSZYg+HrTPk0O44neue2TxSKnw5QW7UbInug3pJ7aEjpUDx
lqjS8lM5t26KrulVeW/sV3FSL8EOy7ovee41jPMI17moyqtDQ0P0zL5aD70x
1rLt05l9PcqVeW0z+3L5u6F6kdr4aKIDDF5hGD7NqM/7qrm9uW+J6vl86JgJ
jmOCUG+3DzZMCcVXxVshNKfg7gUnNHS9LGoOneprYV7zs+tU8+m2jN0sRd07
6rl1p9OUQervvHG0s53uN6Iy/3/SX1rl2GkOm/T3Beq7g6LjA/S8PENOO0T6
2eL4Im993pKLf9VrMM/Le/bamtevXkvgnVP6ddVt6oTNeUrr1zuveaDu36Ku
A2cgEhERERERERG9ey4+yRV3RfpjacGOuLfbHfELr8jeCavkw9U22L5/kOyP
nqozQN/5C3SvhpzDvHD6bjMM3emGB5PCcXKmv+6Z8DpqFFUWF/dMTWzAk5rY
eEToOlVVy6oeVz0iTBVNen+VDyc/zouy6xPONrA5MkrSnZ2rM665yzKgc1xd
3Tf43oFALPF4tYxX5ZkTJ0XqnsPqONlHdNUZmjq+Ote9jKP0eeOsOsCyXkm9
nkZfR+BQ4d/PI3vRmi9dsMWW+FE6a00Y3AEfdL4mQ7Olwr2P7JF7xTzpblwj
3aztsG7kVCmwKF52rEqaiXYzJl7c7tnheLMvZefj5WJa3A61Wh8QY+gJ+XqQ
PX64OUe+Gb7iacb7YbKMt9ZzMt6FX8VJ3ScZb5czu2Rosox3aeJ7pK6h7cIg
nffevuGGrz+rg9sfdsNDjxsy88SmpzP7ZrReIDXr/zazTz1untmHe7/N7FO9
I1JWi5EOd5dKbQs7OM+fLDP3zpU0I5L6eJiWTdM13lE1Y2T+2K9k18k2mDMh
qz5vlqWhOu9V95LKnA2ef35PmvPSg8dMONUgAOcvuKNmxQCkLlMSlzo/EsuH
rZGveKzUGLhYgi1skH3DCPlgznypUslWr2dOpnh9TZZPnqHXeX2GHXKPmyxp
vOfJ9AQbdCyYtH/RzvYIqJkgKbo/kl/uvXp/afWZUvuYc92Kt3zQf1so3LbV
wP0elli5qBN6jV0qd4us0vfD6rRjpUK1BTLQ0g4X7KfodZqvp/naHr4Wox8f
lLjPgVMxep0/d7FF/y+/kOqJr3dKGQfdl1tdB7Xm8Gwt9PVRub3Ke9V1O/oa
6vmJiIiIiIiIiOjvSd4nQdUB5q4bpushs2/OibWdWmN21Az5LGqmuIe1RIO8
faTAdzE6D9zsPFua570s9+t0xFrrTHBxK4c0E7wxc6MNUv3gig4xYci5z1P/
pl79Bl/9BvxR4yD9G/DsmUN0ve6eliaUTojUue7rrAdW3reMN90IG5xpMEDn
rks9W8F+30iZvnipnn+XueIZufh9KXT70gvl9rfQ13/HuaSZaDcaeGBc1WD0
rNgEcQ+a4dKhYJzI5YV1973QO/E92ljNBd8udsLEgX74sVABxC0/KZfm2iJP
is+l5KDpcvqYDSY+6dUQmaxXQ4fuYdj6pFeDynJVT4CK34UiQ0IUOq/xQ+2R
brDe7I3xV7Iga+w2nXl+nXGsnCn5he7tXGnEQrHKelsmdHfFmJPV9Mw+tWbz
zD7znD7VT0D1Ci4T4Klfi5rTp16jpXUtxBzvisW7fpGEFAnStrsNYlIOklUp
xsiRw62wfHeM9Dq4XUrFdMNPLnVhvylxLccjEesa/qf9MUo/uf+vtA3DvYDa
yJZ4/1/M2Qale82VK/lnSd7ZLXWeHHhyqaTr6QBXhwtic6gUBuz2gm3hlvqa
9xoWhhqZ3PU6J1UKxb3vm+l1durthLr5l4tDbIK0jrHB4kODZW3WpP7SG2pd
kjNpymBu80DkWuKt+zmoPtXPZtHmdaoceGCOYHgXD8dZYytkyVYGnpOSct0t
WxbLJmsb7E28zlttV8qJoQ64dO+CBBct/Yd1quuZ/Nqqx9W1Vfuo/W9c64oR
487rNWdsmjRvsfbSWTqjTn1tjajro2qSVX2vum7q+51ne48QEREREREREdH/
lzypY1SztFTdo6rTu9/SW9dD1iv9UH4c6oA5UTN0xvtr+lbwNg6UmbUnSNHr
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
v3TG+2uTaN23YVygP9YXCtb9HDL8clWft5DTaPly80zJ1NQWixLmydACOXDh
pk/i2nzQdXpSner/63OmzrWudJDOwM8nruFx+8xQ10qtberRYTKp7Cg9I290
9YGyYukM/Rkxrv5S90tR3wWo9y7Gcpm+Z151W70X6ji7Qu2wqsoX+vh+aVvh
dOJ1VueNS7zm8ydN0O8dmjqhcjz0OgPjkvoev+0/o4iIiIiIiIiI3ndHn/Rk
UL+XV3WJqoZQ/Y4+Hkm1her39UPbRuiaQ/W7+0PHTLoWUf0+fckr1osq5npO
cyZs4Riu5zSVWtRTz2Kzbh2BoqU8UDyjC3pO8MeC+tXQ+lR2qPlW+zdO13lv
fpeWKJFmuEz+bpGU/9kBOX2yYl3BBlg0IBxrPIKwZH7407Ux4/1rb6pXg8p1
K97yQbusobru+mxBS0TubaPngo1Kv0w+XG2DPoFjJHfJWbrPwK+LJkjDW7E6
y90xfYaY+sdL4wH2Ol+9/eV6qZ2sn7OvRTddK36iQW2MvG+Ed4l6OFT3I1hk
ddQ5ZMses2Vlzb++5i967Z1uj5dJYXP1bLj10Qfl7KTimPdBIJrtMSL33p66
b+3/63OqrrN6f1Vtrbr+8xLfd5XBqvclb+VhYhE18k8z3sxOSyXvk4x3RrL8
9nVuB3o6IMeyNbLkziGx29EdkSka6j9DzlyLxMG4/1/GOytv0p9j6juFwPVJ
/UC+84z4XU1y8seT7/+2/xwmIiIiIiIiIvondg03wcMxGFtPGdFovxHpUuRD
M7fvpH36Nphyc4X4jNwqsXPb4JjFHdmytQJSnwlCTLw/st8J0b8ff93rSd4X
QvVcnbXOF+dWOuObMl5YUS4dGlVOkHXXbJBi8ygJ/mimrrcsN+kXmXW7nK7D
PPm9HyatCNH1mep4zHj/2uvKeM09Yw/PDIF9dARGLnfApSzWSFjUCZU+XSpL
6yyWtZ1bYfOxwfLJpHl6ftmUm7/I0VbZkO68Cwb61NK9PlRv4UVW7rpXw8DO
4UhVzQcmF1+s2R2ha8LVdwGf7IjExQ09MSxxvY2HRcC2nBuarDMg05EuWDZ5
hu5l8bntX1/zey+o4y2YrI538ZM6XlVDm+pv1vGq65OncLTuK6K+K1EZeKPG
Afo7lMHHfbBrta/+bkXlkKoXivrOReWQ6rOgvgdZ+6SO98IzdbzW6UdJpyzT
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
4h2LfxREltE1xndNfrjg/se5geb1q/tK9SE5f8EdNSsGIHWZkrjU+ZH+fmHa
zlj51GqJRHxtg3RTx8rZwMVS28IOuwvP0Pezuk/U+tX29Rl2uGg/Re+j9k+b
uL96rsp1y2xcKy3uPZI12d3058vW1Qs1vvutnvl5vYifXefBuUHYHu6lPxc7
o2qg5t6cOHaiI3qNXSoj0y+TTomfzU8Dx0iukrP05+veognS8Fas7Fxlp/sM
mz+bas35qiR9NtWav3OOl4GJ12112rFyqOts3fv6dp+5T3PdwuOSPo/9t4Wi
kYMXbs8OxtWc0Rhy3AduTV5v71xmuUREREREREREf4/59+Yq71W5k6qVVb/1
HpbSqHsjPL4YiOFFbHUtq8ohc/pkhVW1W+KxuYPO02r3XSVjJtljUcI8mfFk
rr3KCc3b6vFaT/ZR+6v5XEXdO+rjqJ7Axxd5wyHQVveOOBgXrvtIqDWo3+yb
c90X5WDPUjWQyWuVVR+GqbV8dN5rf8Ub/jtK6/petYbAO6fk9pfrf7d+87Z6
XO3TyPWyfBufU/e1OGtshVvW3fBV51CsX+UCp/KNkDqwO04V3ypdzuyS8Jqt
9W/bB17ZJ3Mfdsa2RhUQ26gTfqoZiXUWobpvsHmdavvyhih8liNA7+PbygO1
LzzQz1XHuZg+QR9T9RGNc8yNkw8aJ+VaHwTj2zuvnvGq+XRqDSO/CECVqcF6
bd0np0L/DUm/x6+WeZv0utZa9y9NuTs/cuc36jxtXmQwbob++e/xzddZ5Wyq
t4A57627JgDVi9SGum42Vp1079lnr7P5PjHfGx0eL3p6b/wckglL15bT1zz3
NluUP+Kp+9OOvuyFTPbesLgUiI8LlYF/Ows4jWmD2LXL5cGTWWa7nswya5hs
ltnu4X++fnVf5S0cjd39knLUzmOCUHe3j64b/6p4K4TmFF3fru4Bdc+3hINe
v7rn/2z9ah/1eg8cz4KwxOdenx2g6+TVMVWuq75PUedSNbrmPhUvw9zDwdzL
osX9nijcyQ+FsobDkNMOcc6CiwPc9HUzfzbVesyfzeSfx+RrVq9F9dkw3+eq
96/6PMacbY7YHXa6VjliiROupXUDLCJQq1ln7PmsC7NcIiIiIiIiIqJ/gbjn
9NEN7R2FNR5BsErw17Or7pj80NDSF2IRgVTVfPTv7lWtad4nvRrUtnrcvI/a
/56XP07eidDHUTPgzH19VU3jsYOvln39FXPeq3I8Vd+rzlWjQ4ju56DWsGq/
H0wuv1+/eVs9rvaJcvfXc6bUc1UGfqJpUtbUa3fU0wxZ5VGtLYxwtU6aUeXa
xKhzcpXFRV6PgPOYpDVcTvh9D2GV9Y3oadL7qJ6oM+L99XPVcZac8dHHVBnX
3XZB+lzqvC9Tz/y89zR5ntnimblau5/M1Qr4k7lax15irtazOaTqM6COo/rN
qpliz15n831ivje2DvJ5em/sz/jHe0Ndq+vfmN7Y+pVnv+9Q97x6f9U9oO75
YZYRT+/nP1u/2ke9XvV+qef+3e8pXnadyftFqz7D6rqZP5tqPea1Jf88Jl/z
3FZe2N7CCN+eEbha2gmHA5zRISYM/Yd3wK3lnTB8Xk+4n/1KBm3/hlkuERER
ERERERER0VvyMv1yWZdLRERERERERERE9HYxyyUiIiIiIiIiIiJ6972JLPd5
ua5F3HqZu2yvxAQzyyUiIiIiIiIiIiL6u5LnqHVduyLokhPKtgt5bVnu82p0
kexczHKJiIiIiIiIiIiIXuxlanRVbe28ZXtlZnCb15blskaXiIiIiIiIiIiI
6OWxdy4RERERERERERHRu49ZLhEREREREREREdG/y5vuncs5aERERERERERE
RET/3Nvqncs5aEREREREREREREQvj/0WiIiIiIiIiIiIiP5d2G+BiIiIiIiI
iIiI6N3HfgtERERERERERERE7z72WyAiIiIiIiIiIiL6d3ld/RaY5RIRERER
ERERERG9OW+63wJ75xIRERERERERERG9Xv/PGl32ziUiIiIiIqL31ZrQqKca
5vZ4yvEbt6caGQKfyrfa9NTbXjsREf07sEaXiIiIiIiI6M0ZONnrKffwQWKW
LSrvUz9csYDZnhQeTzHvJSKi52GNLhEREREREdH/R/I63t1LWz/VsFZlMWty
aqfB7HKbx2LGvJeIiFijS0RERERERPTuYN5LRETP8zJZLmt0iYiIiIiI6F03
NSYadU+bcCujCanGh8O5fDBWlTJi62lP/f/qn9Xj6t+r/dT+b3vNfxfzXiIi
el39FlijS0RERERERO+KxkWi4GsVgvC6ftjr0RppH5ZG8WaXxH/NLIke96P8
eiMfcvQyIGByewxv1BU7C7jg51XuqLbSB9YTgv61+S/zXiKi99ub7rfAGl0i
IiIiIiJ6V5jreG9mNCHl+HCEtTVi5oXuaNW3LfatsEbZzg/kZkIfSX8+SvZ9
HyqW6wPF5ce+kjNyrwxZkBepi9eH4/32+u/Lbg1dcLezOxrm9sBsgz/2Tw/R
GWpMhAnxjd/dv98y7yUiej/8P2eisUaXiIiIiIiI/oln+yuoelpVV6vqa/s+
cEPNYm6wGO76t8QfckFMBhesSeeM/ZW6YM7udmg40wZ3L7SC24HmuD6/ERwH
A6njyiBXyCPJOXGS7L5XXCa4Z5VvovNI9dtF5ETL6tKj6I9is7Q4Mk10wN7o
zmjxs9u/ou6XeS8R0buPM9GIiIiIiIjo3+7Z/gpOOUsgS4ujErltoIwfFSZb
c3aRRwOav3Z3FjSVhyvrS8yZ2pKzqZXMmn7CsLGxi2H13cF1Dm+sVqdhtuZ1
8j9wrXN735d1As7PM7QrV0DCO7hI5uWfyo+u34pap1qvWrdav3odb/tavgjz
XiKid8f/s0aX/RaIiIiIiIjoTXu2v0K5N1jHOztZHa/7gea4kayON3eyOt7x
7lllf3QeqfGkjtf5T+p41TrVem++w3W8z/OqeW/Vbx6I2S9jHGHWyBD4FLNf
IqIXe16uyxpdIiIiIiIiot882/ch/E/68d56Tj/ewS/oxzvnX9SP91U9L+9t
3a6OmKV0yvJUsEfOp364YgEz1voSESV5Xb0XWKNLRERERERE/0XP9n1I97A0
ije7JP5rZkn0uB/l3o18yNHLgIDJ7TG8UVfsLOCi64VV3fC/uS73dUme96ps
22xgefun2NuBiOiP3kTvBdboEhERERER0X/Rs30fepQPxqpSRmw97an/X/3z
fz3H/TvYy5eI6I/edO8F1ugSERERERER0ZvAvJeI/mvYe4GIiIiIiIjorz3b
R9f6mblrRUu6P+2NO9vgD/8mIfBbH4mmdyJx1T8cGauF6scPOfrg/GNvnP08
aVbbs/Pa1D+rf6eOqfZrfNJPn0s9/8LECL0G1WuX9b0vh3kvEb2v2HuBiIiI
iIiI6NX8sikSsWl7wtjCF9+ksMGQBXkRvi5e+oVXlTn98snhRkXkcIoS0qtD
bZk09qqsdy2DFKbWWLzOAeu218LVLWVwsMkJmTRnmtRaN1GGdksrw6deNSiP
Bux6Sv2z+ncTvs6p97va9ahM+Dgjhn5UFpYtGiHmqDPqbfJFsxUhOm9mP4eX
x7yXiP6NXleNLnsvEBERERER0X9dP/dIXL4YBOf23jg4oRmWNcqMMx+NkOK7
Yw0//OBiOFvLaFjRpogh4Hw5w6xC02Vr9llS4qcl4mIaIlOdM8rX/bPJgjEp
pFf77wwzT39n+OngHsOaxnsM8V47DdPXbjE8XPmV4chPMQaHGsMMJb/xMwzd
kspQ9nIqw5RMdQxzU040DLA5Z2hQv7CY9s+WDn6ZdN7b4mc3PYft/MQIXdv7
tq/RvwnzXiJ6l72JGl32XiAiIiIiIqL/ur/KeD0GHa1zN7B37buBKerUG1TG
MDpfsMHnwmHD2by55OepkyW94xFJda8YNkwCKlk1QO6VTmgc2wPD9jjpbeMi
R/3vdroWQ5rCHyDnxEnyOOVDg8/QJYYDC+/U+fWHVnVOdv/Y4LRnmcHrfDZd
3xt3zBoTS3XX/RxWzQxlzvs3Me8lonfBm56Pxt4LRERERERE9F/3VxmvadSu
Ooc3Lq/do2pJg9XyhQafxxmlRrtvJfW9Ypj8Uzt809wZZ3f7o7Z1xNO6W9Vj
QZpF623Vc0H9O7XPzhg3pAhph12uxZC1/jeyvthDw/ApAw3V+lY0LIuDwS7L
ON3Poe3mnyVmQSXdv7fhgMTn+YW99ev0b8e8l4jeNM5HIyIiIiIiIno7/irj
PXyjmuFC5jYGh65zDC17D5Weu1Pret2rXVzxw4+BL91PQe3jezEEzVcadX3v
cP+SqDV/q6h+Dv4XBhvCZJyhVd3PDHcWbDcUvva15NxTBk1ie6BfCz9kaBfK
3ryvEfNeInpdOB+NiIiIiIiI6O37q4w3wDfUYPMkey3yJHtVvRj6/o3s1bQi
FFXW+MFiuCtWfWuNFPe+lccDdhluNPjcULFyH0Op016GcrOXGHbUHCeONtkw
LLwFcm73Ro+WwXo23Nu+Vu8j5r1E9KredO8F1ugSERERERERvZq/ynjdPKJ1
BquyWJXJqmxWZbRV1/jpzPZVzvWijNc98TzqfOq86vxqHWo9al1qfWqdb/ta
ve+Y9xLR8/yTXJe9F4iIiIiIiIjeLGa89GeY9xL9N72JnrrsvUBERERERET0
ZjHjpb/CvJfo/fame+qyRpeIiIiIiIjozWLGS6+CeS/R+4E9dYnov2DL1Wjk
n2hCoYNR6N8uGi3CA9DV3hsr7E0IqOqJyFKeqFfVhFIdPd7o9rm9HrAe6wkP
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
T26L0tVN+urH8f3IfgEAAADkOAvjo+/muvnmjtc8E0I0on+IDr7WT+tWqatd
GjbXy88tkUs/95JJA0pZct0CO0+ZnI46qVdiHinW2V+e3NFM3b+pprMfaqP1
Px2lrbYFWfZ+WxWM1lYnzZa71H93r81gm/c2vPyNyerwI0XVanF02F2Z8T0g
1wUAIGcj+wUAAACQE1lz3bw2uW6pGJPu2lZHr//VTHdfrSYlvJ8WI8ud6VXW
tGZPXpk8oJRWf7OYHAvdIEb2u3J2dX39s4E69tav/WX3aJVL4/WhW19zbYdo
S66b0u+dUt7b4cAAsfrS78xdP3/kq1aZsdMbujlIx70crAf9I3VdzDZZ6blX
yl8m1wUAIKcj+wUAAADgaGz7da09DMa+ruudfV3bXHfTlektjVzX6GR4yPUR
meX7oVTb0F69A1pqs/NDtcWtX+u8NUyP1DLfzXUf5DXZ5r11LvW560KbyWL1
1ON51SqjOhxsM9gT5sF64dGhum7/GJ13c5EsCl0tF716kOsCAJBLkf0CAAAA
sDef77ndmVBmVKQu+WSsLv1+uE6Ibq+vOXfQl5rG3+1hODaxhOnGbydNxtza
s4hlX9c21zVurnVaH2HJdY2s2Oh5yMjXmdl5b1o7Gch1AQCALbJfAAAAANnB
6GRouG6C1p0XpolH/PSnNs/qvCeKav0e6+S3kuX0uF+sqU/zb01/jiymI5JG
m6YWryo/la2vfx0sqk9vbaf7avmpc4+BKnt89PTMUF3Y2EeHJPjpPJcwzTPz
weaf+4Tp5CRfLfimv/onjVHXW6/N6HnQO/2979/T35uevNc2gz1VxUs/m/CM
blwRrv+6fEj8vvxc6gzuoNPyL5U/R7wofV9sqfuaLpbzO6fKscIttcWpzXKt
yFJ5tVIrjYkbrHEdO+vSCV76c9cojX/BVwstHaGtm5i15oARGlXTn5mZmZmZ
mTmXzq8UMOsf5X113lVfbTwnSqP/6K0Hx3pqrSvj9duXW+mTX7TRzkOCtVOB
J2XGa57JMt6UZrJfAAAA5Ca2/QNGTjim7Xht+mGgjpsaoP9+MVwnLB+h1V1D
tPPOSEteGDXbrC8uzB07l8ae7cgB43Rn3Fj9oqK3TpjeWA/ENNdHni0lm8fV
lPV5H9Zvt3zw1JCIFaYF5wpphaSTT/VvvskUf72Yznxjmil/cG25sLi0Lvl4
u+n/PnCT333L6I2pX6R7vtH5EX1rSnlxnTdOjnRvoC+ucNZdfXvqercIXVlg
jP58PirZ+0hN3nvo9zxqdSJ28F1eHwzT4oOe1VXXR2rsw0ny0Q+fynLX5tpx
lodO6FVOXN6dItteGaSrbv5LTAt6JZsrjRuiG1oXloeX9BGPvYH6xfa28s05
b3n7w2DdV7CLvHnJl5mZmZmZmZk5xdk2m7XNbFOT8aY1+93Qd7Q27/6yvOo5
X2zz3uz++ygAAABwP3/XP1DPrYO+eqiDlm2/XMb8+YJcedNF11/qJVMS8mqX
Hf213SMjdE6JUD0WG5Xtrz8rdKgyQUvvH6NRwyN0+tEeuqBEVa17qqEW/uUJ
OVjDS7ZNeMSSux6yyWCzYr55J+OtdyfjnX4n492QQsZrK6W8t5HHCKlXwEt8
+nrJUbehYh78qAz6rbKEH7sp5587KOVnHZKbbbpq/AftZeKhSfJwpQBd1fw3
kxyokK7PWczMzMzMzMzM9jC/Y5Mtt2li1loDRmhkTf9s//soAAAAcC9rrmv0
wXbaGanzPgzQU3FDdf4XQ/T7ikW0y0Pvy8Hlj1j6B5KeLyGftCip26p+Zeqx
9JTEzuxj6QootWS0Bj+ROzJeY4/3/AWztioYrXnnjtcvmoRbuhGObfTTdr+N
0F/6/Lc/Ic4l6+Zf7nQ1FLjT1VD3TldDqztdDWuWp7xnbfuzhysPRmqZ0iO0
4hcjtPZBb/2jcyvNu6m1dircQZ1/ryP1Pm0tkbGR0mv1LtMatwOm1r9dl++/
XCPn3l0nB1wH6OH4ZvLVQz1le1iQNv+jvRQ49qysuPX56Jtbn4+W3Pp8xMzM
zMzMzMycnjk1fbxpnW2/ju3X/9Bmj/eiTVdwdv99FAAAADB6GIxehfjI2/u6
Rg9D2SF+llx3/7UhOu3FIjrL90OZ+H55neq321Tz9SumIc8XtvQP5O32h2nI
6056c+oXuTbjdWTd77lpYv15wxM2vXOF6o7WA4kvyJ4bc5L9rGKRrQH63fJz
pri95cTNpaO+8dsBU6sD+SXinRiZeLa+7KviJg1ezaO15v0gjQv/nzg19dU/
B/bUTrV76cDfo7R1WT+N/clPjR2Y2nd69piZmZmZmZmZU5qNPt5Ld/p4m8yJ
0pg/eusP6ezjTSnLtb3pZnvrzTbX9aCPFwAAANnE2NFd2+H23qlxI6xo07F6
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
VHxe76YfnTgrD73+qNYK7a5hL12R8+Vi5MnjkZKwu6+2W9pdr/zqrjemdhEr
28frDEqSPzZMksKnJ8jVi+W1VIxJQ17vp8PqhVv2eY3+huz+d3Uv8l4AAAAA
AADg7+XEjDcrs9wH6aaz5rrG7u64KaP0UNHwZF274RULaI2HfjWFDHxJTi94
0dK123FgS91ScZI0PDpdqhZprb3++lyeaT5Ruvrvl6W/Pqvukz31q/WuGl/E
Wz8qOFz3ug1JlvHaPm77/Gqdzsjoj5ZJ9GuHZWPNYP38pL8a/8zuf4f3Q94L
AAAAAAAA/FdOyXjT052bUX0LqXmdqelk+DF+ntSqGiE1JzXUXZsnSanPZsun
E7roG3M3y5rnd0hktS76280h2vFKW/3Jt5r+UdRs2b8d5xls+fdjWLvfO1nG
a/u47fPHtxqliSN6a8Hrte4+buzzZve/z9RKTd576Pc8anUidvBd7U2hd5H9
AgAAAAAAwFE5WsabGd256e1bSI20dDLY5rp51myW5esSJT68j6rPUC0z+xkd
YRqjy5zN+pl7pF59Y4zl6xs9ukafrjXLNfxdxmth+/xbc4cqEzTIJeJ/Hnc0
KeW95wr4i5XnxeF3PRaRT63Y9QUAAAAAAICjsteM1977FlLjQTsZ4m4ukkWh
q+WiVw89YR6sFx4dquv23851zQ3NOsN8n7toqcx4czrbvLfdIyPuOhHU6y66
HQAAAAAAAJAT7Bo1TueUCLXsl/7SuIlOScirHctXUecGteScX4i4vldRz/m3
FuPxLjv6W3Iy4/nHYzM+43WUvoXUSE8nw9qYbfKu515xvtxHQzYH6biXg/Wg
f2Tqfm8y3vuiyxcAAAAAAAA5zdoO0Ro126wXvjbr3iURWt01xJL3Xhnkp21G
+WuTs2GWXNd4vPPOSEs2Zjx/xsL77JL+A0ftW0iNjOpkCDvzjNbpG5G63V1b
ZLypRt4LAAAAAAAA3F9O6FtIjWzpZEjBsY1+OjnJV598zFejdkyTuf8eJztK
DxHbx7P7z4U9Iu8FAAAAAAAAbstJfQv383e5rtHJcCWuino/kQWdDCnIO3e8
1p0Xpk0/DNTEEb31mdLVtXjX78X28ez+M2LvyHsBAAAAAACQkRbGR2urk2b9
s6hZ880dr8PrhevGmsH6+Ul/yz+N/208bvz/xvOM52fF68rJfQv/JD1duxnW
yfAPf17+uPXnoUOVCRrkEqHjW41K9nh2/5l2JOS9AAAAAAAASC/bnM7Yyyxw
vZZW63RGRn+0TKJfOyx/XSyvpWJMGvJ6P53Zfqjuquht+Xl9Y1/TdV5YuvPf
3NK3kBpp6dqtezRailebKV2TOmdKJwOyHnkvAAAAAAAAHoTt/qXx8/bjPIN1
6a/PqvtkT/1qvavWGZQkf2yYJIVOT5CvfhwrZTaHivfhyVI6KlFeXOGsD1Vr
o4Ov9bPkir7tvC231Iwbagmm0ZYba0ZeFR9pttxes/6euaVvITUetGu3cbeJ
MsftVWnj3i1TOhmQvch7AQAAAAAAcrZ7+xVc7/SgJrt7NdPngazd763xRbz1
o4LDda/bEH1rd19tt7S7XvnVXX33ddEL77TXwdNVH1pTW8tG3JDScfNl99Vq
Ms+vhHwdXU6aXaoiR7o1k2FVD0v396tpsbhemhg9SOev89W/+oWoy8ix+uL1
8frYwH7aKnyA/nUtWLt9OlmODZgtvQp5644th0znfigt7Q8O07em7jKVe7VI
ivOSzt664vv6UnK+hzQsNVqP5WulNyLa6qkLoZroPlwjI310nkuY5X0NSfCz
u9nY1y10Z1/XeHxYaVddeLOVZXdXXStI4Nczku3uZmUnA+wHeS8AAAAAAEDO
c2+/gvXuVdSOaTL33+Pk89JD5MbULhnu8oqn5fqHbST+56ek9NMusmzJEdOW
Dt6mTVemt/x2S9OW7Zy6tKyQ5NPy0leLW4acftsUG1pB1vYbJC9/FCVFO38l
U5yuSVCLhjrR30uv/zJSnnSdJZuX+eqPl6pL9a3dZfLLNXX+Y++bel6oKXMj
K+v0FotNITUfS3HutLyylm35vunG/rqytLyLHm38mFz5cZR4dnTRhCauMnnG
OLueF+6qo/MWD5WhkXPF2N0tetZJe+9y1cmdCuqS4RdM5X+YKQsDZopr66my
6ceW5Log7wUAAAAAAMgh7u1XqJuJe7wJNnu8fvu66MU7e7y9JtfW9y/9Je5t
XpPXJlaSMx0jTHNnv2JqtcNZro780DQw6H1pHOGiHyXW1RnVn9A3D/fTWf8a
LMW/nSqLtgfq8Ul15DmXXrLTd7xOvuGkxV+pre+9HqADzU56okpdffFCiJY7
8pjGn2ihcS5hOtC3hsY1Mzn83OrJEP1+TjWt+UFLrVh8uJrfe0T7B7TQ/zw2
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
6A==
        "], {{0, 316}, {467, 0}}, {0., 1.},
        ColorFunction->RGBColor],
       BoxForm`ImageTag["Real32", ColorSpace -> "RGB", Interleaving -> False],
       Selectable->False],
      DefaultBaseStyle->"ImageGraphics",
      ImageSize->{295., Automatic},
      ImageSizeRaw->{467, 316},
      PlotRange->{{0, 467}, {0, 316}}], " ", "with", " ", "derivatives", " ", 
     "known"}], ",", " ", 
    RowBox[{
    "2", " ", "iterations", " ", "are", " ", "needed", " ", "to", " ", "find",
      " ", "the", " ", 
     RowBox[{"intersection", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1: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
JUl6w36U1h1D89eHh1d3nCq2TVp22S2VfmqN5k3XSVOXHySyT0/ctmuMbaeM
2Jg2Ar4PQ/9wLJVdX9kYgc+z+SG6USd4t3JD7YsPZdDV/RJaszUup42Trmd3
y/DgtohxyIkTDxvjmHsYZn8UiO/vhr7SutX+Z68n5LrqOLY7e8DNers+flj8
uc7YrNTnnfeoM7Y3qqDX82vNcKy3CNbrfJk1D9zYBr3yfS1rZh2UElHdEdih
Bup91AnWR42Y4lcFDp0tYVO4E05kXa3n2Zln3qn5aN4xdig+ZJasGvOr9HNt
r2feHbi5QQpNtYP9tplyeE+MznXPbhklFb6aKDdrtkSPwb2l9rBRkq9YS1Rp
+ZmcXz9V1/SqvDf66xipF2eL2B5Ln3sNY9xCdS6q8urg4CA9s6/WI0+Ms2yb
OLOvZ9nSb2xmXw5fF1QvVBsfT7KHwSMEI6Yb9XlfNbc39y1RPZ8PHzPBYWwA
6u3xwsapwfi6WCsEZxfcu9gNDZ2viJpDp/pamNf87DrVfLqt47ZIEdeOem7d
mVSlkfIHTxztbKv7jajM/5/0l1Y5dqrvTfrzAvXZQZEJfnpeniG7LcJ9bPDT
Yk993hJLftNrMM/Le/bamtevnov/3VP6edVt2g1bcpXSz3d+c3/dv0VdB85A
JCIiIiIiIiJ6/1x6mivuDvfFsvwdcX+PK5Yvuir7Jq6W8mussePAYDkQOU1n
gN4LFupeDdmHe+DMvWYYtssFDyeH4sQsX90z4U3UKKosLuaZmli/pzWxyxGm
61RVLat6XPWIMFU06f1VPpz0OC/Kro87WsP6yGhJc26ezrjmxaZD55i6um/w
/YP+WOr2ahmvyjMnTQ7XPYfVcbKO7KozNHV8da776Ufr88YU7gDLeiX0ehp9
E4bDBf84j+xFa7580QZbl4/WWWvckA74qPN1GZYlBe5/bIecK+dLD+Na6W5l
i/Wjpkm+xctl5+qEmWi3opaLy31b/NTsK9n1ZIWYlrRDrdYHxRh8XL4ZbIef
b82Vb0esTMx4yyfJeGs9J+Nd9HWM1H2a8XY5u1uGJcl4l8W/Ruoa2iwK0Hnv
nZsu+ObzOrhTvjseud2UWcc3J87sm9l6odSs//vMPvW4eWYf7v8+s0/1jkhe
LUo63FsmtS1s4bhgiszaN09SjUzo42GKna5rvCNqRsmCcV/L7hNtMHdiZn3e
TMuCdd6r7iWVORvc//qeNOelh46ZcKqBHy5cdEXNin5IWboELnd+LJaPWiNP
sWipMWiJBFpYI+vGkfLR3AVSpZKNXs/cDMv1NVkxZaZe542Ztsg5foqk8pwv
M+Ks0TF/wv5FOtvBr2acJOvxWE7ff/X+0uo9pfYx57oVb3thwPZguGyvgQc9
LbFqcSf0HrdM7hVare+HNanHSYVqC2WQpS0u2k3V6zRfT/O1/f56lH58cPw+
B09F6XWe7GKDAV99KdXjn+/U0va6L7e6DmrNoVla6OujcnuV96rrdvQN1PMT
EREREREREdHrSdonQdUB5qwboushs27JjnWdWmNOxEz5PGKWuIa0RIPcfSXf
D1E6D9ziOEea574iD+p0xDqrDHByKYtUEz0xa5M1UvzsjA5RIci+311/p159
B199B/xx4wD9HfCsGYN0ve7eliaUigvXue6brAdWPrSMN81Ia5xtMFDnrsvc
W8Fu/yiZsWSZnn+XseJZufRjSXT/ygNlD7TQ13/n+YSZaDcbuGF81UD0qtgE
MQ+b4fLhQBzP4YH1DzzQJ/412lTNCd8t6YZJg3zwS4F8iFlxQi7Ps0GuZF9I
icEz5Mwxa0x62qshPEmvhg49QrDtaa8GleWqngAVfwhGurgIdF7rg9qjXGC1
xRMTrmZC5ujtOvP8Jv04OVviS93budLIRVI48x2Z2MMZY09U0zP71JrNM/vM
c/pUPwHVK7i0n7t+LmpOn3qOlla1EPVTVyzZfVriksVJ2x7WiEo+WFYnGytH
vm+FFXuipPehHVIyqjt+daoLu83xa/kpHNHOoX/ZH6PU0/v/atsQ3PerjSzx
9/+l7G1Qqvc8uZp3tuSe01Lnyf4nlkmaXvZwtr8o1odLYuAeD9gUbKmvee/h
IaiRwVWvc3KlYNz/sZleZ6c+3VA37wqxj46T1lHWWHJ4iKzLnNBfemOty3I2
VWnMa+6PHEs9dT8H1af62SzavE6VAw/KFgjPYqE4Z2yFTFlKw31yQq67desS
2WxljX3x13mbzSo5Pswel+9flMAipf60TnU9k15b9bi6tmoftf/N610xcvwF
veb0TRPmLdZeNltn1CmvrxV1fVRNsqrvVddNfb7zbO8RIiIiIiIiIiL6/5Kn
dYxqlpaqe1R1eg9aeup6yHqlHskvw+wxN2Kmznh/S9sKnsZBMqv2RClyoyV2
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
pTPe35pE6r4N4/19saFAoO7nkO70NX3eAt3GyFdbZkmGpjZYHDdfhuXLhou3
vOLX5oWuMxLqVP9f7zN1rvWlAnQGfiF+DU/aZ4S6Vmpt044Ol8llRusZeWOq
D5KVy2bq94hxzVe6X4r6LEC9dlGWsfqeedVt9Vqo4+wOtsXqKl/q4/ukboUz
8ddZnTcm/povmDxRv3Zo2g2Vl0Ov0z8moe/xu/4dRURERERERET0oTv6tCeD
+r68qktUNYTqe/TLkVBbqL5fP6xtmK45VN+7P3zMpGsR1ffTl75ivahiruc0
Z8IWDqF6TlPJxb30LDar1mEoUtINxdI7oddEXyysXw2tT2WFmm91YNMMnffm
dWqJ4qlGyJQfFku5k/bI7pUZ6/M3wOKBoVjrFoClC0IT18aM9++9rV4NKtet
eNsL7TIH67rrc/ktEb6vjZ4LNjptrJRfY42+/mMlZ4nZus/Ab4snSsPb0TrL
3TljppgGLJfGA+10vnrnqw1SO0k/Z2+L7rpW/HiD2hj1wAjP4vVwuO7HsMjs
oHPIlj3nyKqaf3/NX/TcO92ZIJND5unZcBsiD8m5ycUw/yN/NNtrRM59vXTf
2v/X+1RdZ/X6qtpadf3nx7/uKoNVr0vuysPFImLUX2a8Gbstk9xPM96ZSfLb
N7nt726PbLFrZendw2K7swfCkzXUv0POXg/HoZh3k/HOzp3wO019vuC/IaE3
yA/uYX/YTrrPu/49TERERERERET0T+weYYKbQyC2nTKi0QEj0iTLg2YuP0j7
tG0w9dZK8Rq1TaLntcExi7uydVsFpDwbgKjlvsh6N0h/f/xNrydpXwjVc3X2
em+cX+WIb0t7YGXZNGhUOU7WX7dGsi2jJfDjWbresuzk0zL7Tlldh3niRx9M
Xhmk6zPV8Zjx/r03lfGae8Z+PysIdpFhGLXCHpczWSFucSdU+myZLKuzRNZ1
boUtx4bIp5Pn6/llU2+dlqOtsiDNBScM8qqle32o3sKLC7vqXg2DOociRTUv
mJy8sXZPmK4JV58FfLozHJc29sLw+PU2Hh4Gm7IuaLLegAxHuiB2ykzdy+IL
m7+/5vdfUMebP0kd75KndbyqhjbFa9bxquuTq2Ck7iuiPitRGXijxn76M5Qh
P3lh9xpv/dmKyiFVLxT1mYvKIdV7QX0Osu5pHe/FZ+p4rdKOlk6ZZkiO0TZI
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
3TB9HDUDztzXV9U0Hjv0atnX3zHnvSrHU/W96lw1OgTpfg5qDasP+MDk9Mf1
m7fV42qfCFdfPWdK/azKwI83Tciaeu+JSMyQVR6lsi9nq4QZVc5NjDonV1lc
+I0wXfeo1nAl7o89hFXWN7KXSe+jeqLOXO6rf1YdZ+nZhDxNZVz32gXoc6nz
vkw98/Ne06R5Zotn5mrteTpXy+8v5mo9+3385x0/aQ6p+gyo46h+s2qm2LPX
2XyfmO+NbYO9Eu+NA+n/fG+oa3XjW9NbW7/y7Ocd6p5Xr6+6B9Q9P9wyLPF+
/qv1q33U81Wvl/rZ1/2c4mXXmbRftOozrK6b+b2p1mNeW9L3Y9I1q+ei+iqr
a16sjxE/ZvdHurgIZN/vrvtax8Zfz42VHXD8cBdmuURERERERERERETvgZfp
l8ssl4iIiIiIiIiIiOjdYpZLRERERERERERE9P57U1nuw4fhMmrkSNm3p8Uf
HreI2SDzYvdJVCCzXCIiIiIiIiIiIqI3IWmmWte5KwIud0OZdkH/KMt9Xo0u
khyfWS4RERERERERERHRy3uZGl1VZzs/dp/MCmzzj7Jc1ugSERERERERERER
vR72ziUiIiIiIiIiIiJ6/zHLJSIiIiIiIiIiIvp3eRu9czkHjYiIiIiIiIiI
iOjN+n/2zuUcNCIiIiIiIiIiIqLXw34LRERERERERERERP8u7LdARERERERE
RERE9P5jvwUiIiIiIiIiIiKi9x/7LRARERERERERERH9u/yTfgvMcomIiIiI
iIiIiIj+P95GvwX2ziUiIiIiIiIiIiJ6e952jS575xIREREREdF/wdrgiERf
tXdP1MjgnyjPGlOid71eIiL692GNLhEREREREdHbM2iKRyK3HVPErGhQCpjt
TeaWiHkvERG9DNboEhEREREREf1/JK3jLXOnTaIb9fuJWe3KyWHGvJeIiJJi
jS4RERERERHR+4N5LxERPc/LZLms0SUiIiIiIqL30bSoSNQ9Y8Lt9CakmBAK
x3KBWF3SiG1n3PX/qj+rx9Xfq/3U/u96zW8C814iIvon/RZYo0tERERERETv
i8aFIuBdOAihdX2wz601Uj8qhWLNLovv2tkSOf4X+e1mHmTrbYDflPYY0agr
duVzwsnVrqi2ygtWEwM+iPyXeS8R0YftbfRbYI0uERERERERvS/Mdby30puQ
fEIoQtoaMetiD7Tq1xb7V1qhTOeHciuur6S9ECH7fwwWyw3+4vRLP8kevk+G
LsyNlMXqw+FBe/3fyC4NnXCvsysa5nTDHIMvDswI0rlpVJgJyxv/O/77lnkv
EdGH4W3PRGONLhEREREREf0Tz/ZXUPW0qq5W1df2e+iCmkVdYDHC+bUsP+yE
qHROWJvGEQcqdcHcPe3QcJY17l1sBZeDzXFjQSM4DAFSxpRGjqDHkn3SZNlz
v5hMdM0s30bmkup3CsnxltWlZ5FfxHpZMWSYZI99kZ3R4qTLv67ul3kvEdH7
jzPRiIiIiIiI6N/o2f4K3bIXR6YWRyV8+yCZMDpEtmXvIo8HNn/j7i5sKo9W
1Zeos7Ule9PCMnvGccOmxk6GNfeG1Pl+U7U6DbM0r5P3oXOdO/u/quN3Yb6h
Xdl8EtrBSTKu+Ex+cf5O1DrVetW61frV83jX1/JlMe8lInp/vO0aXfZbICIi
IiIiorft2f4KZd9iHe+cJHW8rgeb42aSOt6cSep4J7hmlgORuaTG0zpex7+o
41XrVOu99S+p432el8l7f75qAbPTYx0SNTL4J2L2S0T08p6X67JGl4iIiIiI
iP7rnu37EPoX/XhvP6cf75AX9OOd+y/tx/uqnpf3XkvtLmZtbzomKhqUAmas
9SUi+rN/0nuBNbpERERERET0X/Rs34c0j0qhWLPL4rt2tkSO/0Xu38yDbL0N
8JvSHiMadcWufE66XljVDX8odblvStK8V+XcZqe97ROxtwMR0Z+9qd4LrNEl
IiIiIiKi/6Jn+z70LBeI1SWN2HbGXf+v+jNz3H+GvXyJiP7sbfReYI0uERER
EREREb1tzHuJ6L+GvReIiIiIiIiI/tqzfXStnpm7VqSEa2Jv3DkGX/g2CYLP
hnA0vRuOa76hSF8tWD9+2MELF5544twXCbPanp3Xpv6s/k4dU+3X+ISPPpf6
+YuTwvQaVK9d1ve+Oua9RPShYu8FIiIiIiIior93enM4olP3grGFN75NZo2h
C3MjdP1y6R9aVeb2zyPfNyok3ycrLr071JbJ467JBufSSGZqjSXr7bF+Ry1c
21oah5ocl8lzp0ut9ZNkWPfUMmLaNYPyeODuROrP6u8mfpNd73et61GZ+El6
DPu4DCxbNELUUUfU2+yNZiuDdN7Mfg6vh3kvEf0b/ZMaXfZeICIiIiIiov+6
/q7huHIpAI7tPXFoYjPENsqIsx+PlGJ7og0//+xkOFfLaFjZppDB70JZw+wC
M2Rb1tlS/Nel4mQaKtMc08s3A7LIwrHJpHf7Hwyzzvxg+PXQXsPaxnsNyz12
GWas22p4tOprw5Ffowz2NYYbSnzrYxi2NYWhzJUUhqkZ6hjmJZ9kGGh93tCg
fkExHZgjHXwy6Ly3xUkXPYftwqQwXdv7rq/RvxXzXiJ6n72pGl32XiAiIiIi
IqL/ur/LeN0GH61zz79P7Xv+yerUG1zaMCZPoMHr4veGc7lzyMlpUyStwxFJ
cb8oNk4GKhVugJyruqFxdE8M39tNbxsXO+i/2+VcFKkKfoTskybLk+SPDF7D
lhoOLrpb57efW9U50eMTQ7e9sQaPC1l0fW/MMStMKtlD93NYPSuYOe8bwLyX
iN4Hb2M+GnsvEBERERER0X/d32W8ptG763y/aUXtnlVLGAqvWGTwepJearT7
TlLeL4opv7bDt80dcW6PL2pbhSXW3aoeC9IsUm+rngvq79Q+u6JckCyoHXY7
F0Xm+t/KhqKPDCOmDjJU61fREBsDg22m8bqfQ9stJyVqYSXdv7fhwPif8wl5
59fpQ8K8l4jeNs5HIyIiIiIiIvr/+buM9/ub1QwXM7Yx2Heda2jZZ5j02pNS
1+te6+KMn3/xf+l+Cmof70tBaL7KqOt7R/iWQK0F20T1c/C9OMQQIuMNrep+
bri7cIeh4PVvJPve0mgS3RP9W/ggXbtg9uZ9S5j3EtGbwvloRERERERERO/G
32W8ft7BBuun2Wuhp9mr6sXQ7zWyV9PKYFRZ6wOLEc5Y/Z0Vkt3/Tp4M3G24
2eALQ8XKfQ0lz3gYys5ZathZc7w4WGfB8NAWyL7DEz1bBurZcO/6Wn3omPcS
0at6G70XWKNLRERERERE9Gr+LuN1cYvUGazKYlUmq7JZldFWXeujM9tXOdeL
Ml7X+POo86nzqvOrdaj1qHWp9al1vutr9V/CvJeInudVc132XiAiIiIiIiJ6
u5jx0t9h3kv03/Smeuqy9wIRERERERHR28WMl14F816iD9vb6KnLGl0iIiIi
IiKit4sZL70u5r1EHwb21CWiD9XWa5HIO8mEAociMKBdJFqE+qGrnSdW2png
V9Ud4SXdUa+qCSU7ur3V7fP73GA1zh1uYsK3v3rh4RFvjI4y4esJfmjXqBei
u0ei1YkwlEseqde8bB5/XxIRERHRq2HGS28C816ifxfmukT0X/AgMBITWvvr
XPeTj0JxPiAVxradLMv3+uDba24y846LzF9lxME0zd/qtvW6DuKStpcMSO+D
QiOipeaqDVKtgT8Wjbkv12PzIU2TEJjWN0MJC0fc6G6Cx4RA7Pg4DEN+jYST
fSTqLOTvUiIiIiJ6MWa89Ka9TN7781ULmJ0e65CokcE/EbNfojeLs9KI6L9m
k3MkYq746nraNd1C4PXzVZ27ehY2YptVTkk2I6dMzeeNNNctxafcp/JgqBG1
fBrJgPZOsnCVEYfSNJcZ8fu/7vaYOc6SKcaIgNKfSuZVHeR0DyPau4j43Gwo
5b/zRs1V+WREi4bSbLox/t+6XvLD5Ph/g2cLxJ5b5WCXpRlS1TTBfUIggqaH
YelF1vcSERER0fMx46W36Xl577XU7mLW9qZjoqJBKWDGWl+i18NZaURECV6U
8U5YUEnafN5E57pFpv4kMXNL4pNx4dgY3RnNaziiflUTSj/tt/C626X6uuDn
OxEYeaEncl5phu0lw1CtuxWO5LsvJXv4Y9DPAXLA0VFMd71RNPKJoYFlOWni
l5D3ehbeKRUXBOn63p513DG+QkI/h5D2/H1LRERERH/GjJf+X5LmvQ1zuiU6
7W2fiL0diF4PZ6UREf3ZizLeLZafyJZpLWXBKqN+fH7mT3Q2q/Zv5h7yRs6v
eiz0uBcJZ/tIXLIIR7ZpkahuE4x0jb1gsTgC333dDhUqlkemOQGIWOQmNx52
EKu53vixTV4pH9tFlpl8ED3mvlTPVAPIktC/97M1IfqY7/raEhEREdH75czm
cESn7gVjC298m8waQxbmRtj65TIgtKrM7Z9Hvm9USHJXKCXX3OtJjOmWnKtS
VedyI+v6YZfPq/37V+0/Iv7n1M+r46jjqeOq4x+JP486nzqvOr9ah1qPWpda
n1rnu75W9Hawly/R62FPXSKiF3vXGe/zqFrcQV9G4jNTAG4cdIV1tjBMG5cB
oZ4xUqWtEQMKV5TqG60lvZdR9++9GpwHkbvC9Ly2Ro8D0W3Zy/1eVr0dVM6s
5rh9XT9c58xqvpv7jED0eOin5741qu+NrGHeeh6ceTbcX82PM8+MU7PqzDPj
nhR79Zlx6rmrPsP7NkQgYHgw1v5oQvtJHjgy3wNRLU04M8Ydkx97YN8yE271
TehLHPRjJD6/b/pHfYlfdF41g2/dZXfdt1k9rnJ4NafP3A/5Xd/HRERERC9j
WlQk6p6J/zdUehOSTwhF2YkBqLbKCydXu6LfQxcUKeGKe51ddS471+CLAzOC
dBYXFWbC8sav9m8etb/6OfXz6jjqeOq46vjqPOp86rzq/Godaj1qXWp9ap3v
+lrR28e8l+jFmOsSEb289zXjVTYviMS+9oH4Mq838g4Pw+he2TF4zTLxdjKi
WNbicvGjhjK7ohG7/Fzly5+Sod8PIVjUwB0xWfz1LLnnHVdlkvWiTDoXVbPb
ihp8kLKmCSV2tEDt9Z/iVr0QZNiRA6dqJoOa++Y9Y7kc2bdKz4NTs+Fc0/b6
y/lx5plxUQOdE2fGXa158w8z487b/z4z7nkZadtVoaj8wISoAE/8sqMe6ln1
QtHMX0q9nSNlW5QPQi8ESX3LMZLtlD/SbcyLspmt4dbLhJX3AvF9l/DXqmFW
axjvEKLz201lnVHzcDUs+iQQKe4Mk/QxI/QMvo98+spWv7lSN349P24D+hb1
0ut0HRn6zu9jIiIiIqJ/M+a9RAk4K42I6PW8jxmvqnFV9a5ZOkYi0zpvrBjf
A673g1Gj/1nJmdVP1mQ34txvRcU/up6u4y08IlquBeeBaVcYDrygjtdcp6pq
UPdN9ELt9RHI07w8ug9OBov1/nBc5yPXL/SSeUONGHiluvwS1UP69jHCaXIL
ibINlAnLjZjfp7l0iXX708w4tzZNE2fG/bi0YuLMuPJn8vxhZpz3zHFSPVeg
Pu+qLt1xs7sJ1eLXozJnVd9rXqd+Xfb64s5iJ6yOf13a77os50dGyuiyRuT6
pYT0flRfDqps+fYymZItD+IWhCFkiAdGXw9Ei+hXmz2nztu3bAiu1fDD8h3x
/6asVxmG4nekVgkfpM1XRT4pbitzKhpR63BPUY+r9fywxVHvr9bpzDpeIiIi
IqI3hnkv/df8k1yXs9KIiBK8y4z3eX0Sfgj0g3zuju97RWBPoXr4+nBORBfy
x9I5dvIkfT2ZHuSNdIdyi/FOZ1n+tB9vtaf9eDf/RT9eta36GBR9FIx200w4
tbQHDhoro3+6QAzYGSKFHd1kVWojMgZmkirbOsulLD4oU3aNbIo/74rvgmF/
ryFSl+6BkFUR6DzD+YUz48oUCsOWTmUReeOuDMjhj0JX7aXBkHqSM9AbY+zv
Gu7friadZxmRe0C41PwpBb7dFIIbn7iipI0/zvr8ns2qa/JZkty1bL3KqPM0
dz3Xr5L0iGogae97o8OOTyUm6wbxXBIEu3nNMfsTTxStlHA9X6Zvg8qTNz7N
k+8udtL3gDlPVjXSOzNUlZGLbPR51eNt51XFsvj1qP0nOIQk5tJERERERPTm
Me+lD0nSrNX/aQb7g3sYziTJZl8112WNLhFRghdlvBMWVJI2nzeR+0ONKDL1
J4mZWxJVx4VjfXRntKjh+Jc9aV9lu+MMZ52RBq2KwOdVmyPXlWbYUz0E3bZk
hcH4mywq5A/rfV2kR8NOsvKIN4pEPjEcz1dLsmwwYnmTYAlo/I20iw3CHstP
UXKkOyZUSOh5q3LLpM/xy68jUXJLEMp18kXVz8JRpEYZWPa7JAXH+iLt4jDJ
X2aohK73Qae4IfL9gGRwSRmCW7s7I/kJd927YFv47310Y56pj312ZpzKqL92
MWJOlZ467226IhM65Fop69obUdupoNy5WVXcb3jD+I3I6u83yreXgzAlzgYb
L3hjQ41InL3++3wNdUyVo/bZa9J1sypfrTI8QNfTrrey1seZd7+4bO7rIguy
+SPjjhy4Y9cSeXuY4Dbj7/s2mPszPHv82vHHH7HIRt8DH+WrovNe9biq71V1
xWp/lT8/e52JiIiIiOjtYd5L/0bPq9Fd3nuzRLc9IHnuttE9FqY/7bHAXJeI
6PW8KOPdbpVTks/IKVPyeSPtdUvxLfepzntr+TSSge2d/rIn7atsT41uJmPn
OIvPfCMunDZI1lUddC+C812qyKwWjSXfE28sOVxK+hgcZEpVH3Rs/ZnOdVct
CsKRqg3w2dHuOD7EhBo2wdjTwISYi3/OYBVzHa/a58KYSD2nbP93RrTtaMLZ
Me6wdvZAnJ0JHSZ5IOi4Hwa0S5g7lrR/gjnLVXW2xWPDdS+IiZPDscElBMW6
RqLaoWDsnxKIk1tNmNveA8XK9EA613AEbiiCz+VXcegX/7wql5brOUXaXvZG
rV4G8diyWk5uCcK3Fq3QfIg3FlSJxKTJf5yhbO7bYFHcD79mdMYJ9xBcq3lT
vovpL8ZwI1rUKCVWgQ3lweZX69vA/gxERERERP9ezHvpfcZZaURE/38vyni3
WeWUZDNyytR83khz3VJ8yn0qD55mvAPaOyX2pJ0Rv/+z2yq/VftUm2zExfs1
9M+6jvNG+N7U+pilH3nhtwGnDNbW2fR2k4BUMt6yqlTOasRP9WfJRre1UnRh
AORgLkxaUwm53MJQKW1PXa9b9boJKdKGvTDXfRkqs1W1rKpGt0RUJO5vCUa7
Rr1Q8LAJ+Sd74+GR+PXGn+P8Pjd8d8MFP92J0LXH2SdbI2JXmM5mKz+oijbF
QuAwuCKaGnOi8vAAFPO9JGuSrZMtqX3w2Y4m0nBIPZ2Tj4+4bOjWrcQrZbyK
ymNVffKpPoFYUdyE+dOawurzHMic3h+j8jSXKjtsJH3bhL7BL9O3gf0ZiIiI
iIg+HMx76X3AXJeI6N16mV4ND5L0avhkXDg2RndG8xqOiT1pk/anNW+rvrUH
fnHEYonQ/WxDt5dH9M0ALM6+VjIc/Ewy9jSi/I855WDykpLnM2+kuFJS9k+e
Jl+18Uetn/Pi+4vV0XF0OCwzOmPcEF9M6R2J/LcjEJsy8oX9B/6OyifzTjKh
wKEIFM0bidh0Xrhg74iy3mH45VxF3IjNh/G7AnCr1mqpuWqDBFT1gfW6DtJx
VYBkjEnIrq8P7ixVgoxw/qWuXD/bRTL0M+JgSRvpvbW7ZIzfnrq3lbRp4ySf
NTPC70k5qXCuilhYvn7Gq6gcW/VeKFIpEqFDPHRPBo8lQTh0e5n0ru8m6doa
cafSJ3r7RX0b2J+BiIiIiOjDxbyX/p+Y6xIRvT/e1sw1lUmqPHDIr5G6n22h
C4FIVdME+5BuOFCnIVYPC0LjvpvEPaavNPVLmHfWwLKcmO566zlllr8Nkq3R
/ghclQMFajRC7fURcLD0wY6Pw/QxnV6hV0DSXg2F80bCT9yRrU0XOKcMwbdb
f5P+J8bKUAcfrE7ZUmptaaR7RMybXFoq77CRsWWNyOVYR1Z/3El85ydkvO1X
Bcig9D6IGugsR/atkk/z+ut611M1k0HV0N4rXg5LpxrQN0UoDtcriENWv8q4
VkY0HldGvp6A18p4FVWL2zI6Eh4zAjHnE0/dkyHDjhxQtbuqV4PKeK8NsHtu
34as0xJ6SrA/AxERERHRh495L70Nr5rrJt1WfXenPe27G9t7syxqe0By32Wu
S0T0JrytjPdZKp9UfRVGxf+8Oe+dE9gZU8dX0PW9Y5b2koOOjjJiujfG2N81
TKuUTxqc80bhq/Yyx2KEnEseiNuTy+F2uu642d2EajbBf+iX+6Lzqlx05b1A
hFXxQuqNYSjWMQ+mZPpGhjj4YPHBemLbs7xcHeqNlMeqyNiaPjIghz+KeV+T
qDOW2Fs9BOfKNkWTky0QsipC1yervg3uYoJfVXdkCfNG72km3ceg50M/9CsT
iZ/T+sH+thfKzorAtAoVMc3quu453LBPBendrt5rZ7yKyqtV7wWV2ebrYdI9
Gb7MlgcLs/nDcXILnfE+27chlX1zHKjugf2jEnoFu0T10M9rXYHLsry6SfdA
Zn8GIiIiIqIPF/Ne+if+Sa6btEb3tMkBN/J3RezhXvDb4I2Qz4045h7GXJeI
6A34f2W8SZnre6vbBGPfRC+UcIhAn9rl0KfHE9k50gd9djSRyOAqug/wNetb
ht7x22rW2/ImwaL2sbodjDpzu+qf7d8uoffC83oIqPlon1SLRKP63ticzgYd
jwbBOGO53PvRVdLe98aasOJS+MtP5fFZI9I4nxbL0LKIzhKBDEed0Cv+sUXd
E3rhql4HKudU9clJe9smZc6TC7QIxNrvPfDFV2GolyU7bEutkrsuRjSpUVhK
+FX5Rxmv8qp9G2b3zIav7zXAotQRGBjRED4F82FibX9kuNNeuu1rpGun2Z+B
iIiIiOi/gXkvvYw3leuyRpeI6P/jXWS8Zuq7/6oWd0C7SKxI54XKK7tB5bd2
Nnfl0arBug+wmvX2xYk8emZZ2vjtQ46OsmOkD2zj9+lxsQKKO0Tonrr+w4P/
sofDN1lD8c2vJixq4A77trVw8eNA7PJzleMGG5212owoKrnLt5eZLf1wyTML
3Fp/igIDTOh4LwBTMv593mqmznvJIhz3S0Yi+oArtjl8ipFdglCz2TLJncFZ
Zh33xsUsKeXzn4v944xXMefJcfcCcWuoJ3YvCcORyNxo1meLnL9khNXQalLi
uL0cin/tdkTOEtxOh3bGEGSamBd7xv8oE+cbsczqY7HYba3reNmfgYiIiIjo
v4d5LyXFXJeI6N/rXWa8ZuY5aAHDg3UfBlWjq/Lbr+8F6Npd1cPBZZw3rlrf
Mqi8V21/tqOJzoE3xe/Tu3Y5VFrZ7S97OKg63gkVInHgVy9kn2yN25ODUHhE
tFTd3VHcb3jj/G9FpedPTXUd79WSZ6Tn/rL4NHcELGq6Ic1NP2SbltDLV9Wy
mme9qXzVvOag6WE6o1Y588zajsiwLxzZfMoi8sZdmdbeB+Ue1xK/MpXFOo03
7g04ZbDsXlgqnvRGqgJ1ZPCaZZLGPwipmzXHl3m9dZ+HFo1ePlc29xku9igY
BUaaMPFedyyeVgnj+gfgfENHKR/bRfcWvjoqlwTPHis/LffFjiPD5eYog+QK
9EZA/VLsz0BERERERBrz3v8m5rpERB+G9yHjNXudHg5FxxkxYGeIpExlgTRN
QnBqaQ8UNfjoHgsq/wyOP+Y5n0hkueqHvmnc8O2mEBRLboFbO4eKwywjUD6v
+C7LL8vDvRE0vo5szR0mF+z8McozO1b6l8e2kmFoUbA7DvziiB/vRKBkRzeU
6uuCoFURiLLsAuOpxrh2OhhHat6Thu13yrVJPmi/p7McD+0mHje8YedmJYcL
GsSqgzfGR1w2DE6TS9zGeSPkWEXpsCpAiqwIQKrRlXWP37EHTJhfNeS5vSBe
dN3067jXV/dYULW4KrM9OKe3rtGdl9VSTp8oIjvhjSPNHxt+HpFDWn/hjXP9
KrE/AxERERER/Qnz3g8bc10iog/P+5Txmr1KD4cQL2/MzlVETi3xkbMV/FEu
3BKjlzfBjxYmlN7jp+tse/0Yib0Nfq8T/r51NzjcrIgauQIxbeUgcY/pK82n
G5H6xzzSwLKcVPjOGwd6F5cKF5vLqR5GZLjRWAa2d5KMMUb8cqyF2Dm76muy
LEsHiZ3srh/fXLitHBgbJpea+mD2qVVinHJVBnbvhSUF8mGGd1r82tQPVo9r
SdXHBqm32hv+XxXTtcReO/zwXf2cusa4w1gTZi8N1LXHr3rNVM2tymZVj4Xl
OyJQtl5l1Cl+R9fo/ri0ovQ89rHYpPHGzysuGHzLVJamfkYceWCUs+4P5ET8
a2ldwgnLhrE/AxERERER/dHL5L0/X7WA2emxDokaGfwTMft9t5jrEhF92B4G
RmJCa390tfPEJx+F4kJAKoxpO1li9/rgrGc/qRw6Qla189WPV/usjs5I1f77
s4a+9bU928NBZbNFmnwM/5KB8Og7VMJ8h8kU8cGBG9ZyyjVCfkrliyMxX8q6
XdelbMMQdLzYFlejfdG0cySqNo1IrBPetyEChS4EJh5zt2tTpG0SgoHz7kmo
cZdUb+CPqIHO4py2lwxK74NDaZrLjDsusnCVEa3WddCP96rqo2e37S+9VSbs
CsCXt3LjoLEycrmFoUFXZ0Tdc8ONMibEZHCFx7L4//+YJhi29XZIPcsxMn2S
DwqWDpVVRUbK2Hm++MKUFkNLAHk9TcgQ64/RTq93bXfPNuFosmCkX2zCvdAu
WBJbBtPG++PJjEayaW0zuXXQGz7rC0muDM6SKb0/ovNmw1aHT7GiuAlzygfq
fsLsz0BERERE9N+x7ZtILG8cifBRJnh8FoH01YJR3MoPH+/phQtPPLF/qBvO
tglAzaIu6DLHFW0m+mJtGkdcm+iMLC0+RdZBBuSzbIgl1RtJ+pHlpUvDFpLy
UUex6GovX5brIecap8CmfClQNCgFa33fAea6RET/HeYctcChCF032zLUD13s
PBFnZ8L6TB44Mt9DZ6HqcZW12hxI2P//+V3+pNmsWsPaH03oMClhbRENTCjd
0Q1W49wR1dKEDA09sP87o+7BmyJtGPbE/33MxUjEzPvjepP21A2eHqZ7O6jn
mKGvEWOiTPCr6q6P6S4Jx1d1zqqG+cK+hHOp8zau741mFY0odNikZ5+pvrgl
oxJ6RKxIGQnLU5EYFf8zOz4O0+uJa2LE5Mceep3V5rm/0WurnkvfJHW8qveC
4Wkdr+rJ0COqgaS57432Oz6VmKwbxGNJEOzmNcecTzxRtFIkvq4f/so9IoiI
iIiI6N9lWfx/F9kaI3E7vQlyJxQz1gejxUkXFCncFePndUO9tqVhanJDal8t
g/+xd99xVdfv/8dduQcJ7nBvrTTJyfu6kNwDceJGkyUiCIIoy52mlkblwL1S
08xdtlw5PmpkmpZWao5y5EJTU7Kf75P4PfqLQmX7+ON+6+W74+GcA95unCcX
z6vhFzFiH+Uiq4oU1clzLxs/bagtl7zt9M64PYaNTWMZ+Kat3hp/05hyarkM
f8ZWh05aLtMaFdWI4g76xyfFNct7jhowYoDk7ucta6NHyKT5WfXIoax0O6Qw
cl0AADIWc+ea571ei7Ilh2up3n56K1sf7Xh0qJYP/E12REVJtNnHO7OqdOzd
QeY4DNIrf34h8yo9p3GfhOvcBn7q1nSItl35/2fgAAAAADKPiXOH66Lwv3Pd
rxuEarmovnq8u7OWiWqmzf98T779YaA0bF5M39u02XBe/qw0XFZIT1T6zLid
u4I0/s5Wvdx2G8t61bJkvDdW7DJGfFfLcr3YHyuMJr9WkQZ3b3/E5nVjVmw1
ub7JTod4FZby4R9Ji+Dn9EhJWz3p3EDLDvSUi6eD5Lz3SNnxTVa6fJMRuS4A
AOlXQn7bbv/fe+hCjwdpXN8o/fyCr8677qs/XY/Uyef66aGX3PXD7WHqcrua
7u4WL64ug3Rl7daybmZzebdrgJ456SZVn98mw+eE6pz9TfVALW91uBKlOyLC
tWa24ZasOK2fKwAAAIDkN3fRcL0SF6XT/wzXiz39dWe1V/Uz305a+K1j0mbI
QPHeWkQnxY83ntl11rA5YaN9Y7PIXJs18ttb9XS3V3mte+wV7XVqoBbd2Eej
L3lqTNlgbb6yn35fsJ/l+uaZqiMrVFXz9rYxM6WQZwspdPd+JvctYnxh2EiF
RrZ6tpm95BlxQU73qa7h37ysI/o31SYRQyWo0Chxmzqa3W2PiVwXAICM4bmG
YfpawWAt5RelzxYy9Fqu/Gr29wZsGyXzBo+Wlz8L0P6dW4hHMw/Z1ytAV9ap
LVvOtRC3ggH6zWlnefal1+TCx4PVL+iWxIbW0WI2UTpqa4ClU+Kf+isAAAAA
ZB5m1+5rz0To/JUhWq5YiM6Oaq5bQ4voCw2raqtLvxkvZM8vE4oX0tj1U4x5
9s2lyXgH3eNVXou7ddfsfwTqmb2BWmRQuOZo+Hdnb8L7BzM37uAy3HK9UY1w
/SsiyHL7rKFulrzXvJ9N5f80Ns4pYrn//cNHGC9/7yQVT1bS4c422nJUay0d
3UYbRbfWDyd1eGB3G3nvvyPXBQAg44mZGaF7Fw/R2LVRmr2xq0acL6urzw/W
Aa+NkxoLxt/fB5ewA855ZZBlZ1zFwiG6fUURyy45xy8idbD4aulzITrkx9Tv
UgYAAACQNmqGR2nB7UN0nN0gLdW0v/ZbXlr/lIPysnMZrTT8Ofnt3KtyJaqU
bhkrMuD8ddnwThft7tTPsnOtZ60IS66blI9j5r2/fh2urTcGWOZ7s/TqoA2X
75CKl1+QigNtdL/NHOOwQzFZXaSo5lr9k7zboI4ujA3UiXP91fH7IVrteuf7
yHv/f+S6AACkDrNLwdwHZ+6tM7sUusYMUPcOfg+crW+T1Ps1f05udimY2ay5
P27pwRBL3mvulZvQacD9fXAJO+B+fcfXsjPO3El3bXSIZZecuavO3AHHPjUA
AADg6WLO8Tr9EqXHq0Rp6baRWn1GsM772l/9S4fomHhvfe8ZX3W4GKxNiva3
5LqtdoXrZ0MjNSI6SifNTdr7h4QuiAqzwzX6ez8t80IfXb/NVYde2y7zRz1v
yXhD7OYbhd4sLrdXFtMuX56Uvlde1uXj737ccYG6d/0wy8dMQN77N3JdAABS
h3VmO/VKhJ4I7qbz93XX3NUD9VDs6/L1namS6+754N1z7N3zqW0RusrBTb9Y
1PWJs18AAAAASWfmkGuXDbfsHRv3zN3vy4+EW/pps38TrN99G6i/zxyiQ+b6
6b6J/fXXzsHaoLy39l7iozPKBmuWyV6Wc8J18zbm7Q/2GmjJRc37cawRbslF
zfs3P1ZaP9+UZObG5nyvmesOGBWpxbcG66RP/dRhqr/6OjdS73dsdElgFY17
7hdj8ex8sr1FIZ176nMj+1E3sTtQV9ccqaGbOnpomOdQ/WTxUMsMsPX9P815
L7kuAACpb9HkKJ1wZKA6R/mrZ0yQbimxUtpk+0RcWvprfGA2WXapnMwu5a9+
J+KM0k4l5NbEAC2Yy1mKN3cn+wUAAABSmJlDmrmr5hpuySG7Dg7QbXGD9YOW
LbRmmRb6frZOOsMjv/763W/i7VtVz7//jthHuciqIkV18tzLxk8basslbzu9
M26P5Zxw3byNefuZS+dJVPM4Me+nSZ7GWq6su269e/+BHweqXA+zfFxzhnZt
BtyBYT7m9gHD9fd8UZbnMuSVMK27caDmWuirlRoM1nZt+lrmdevl76Prvyxv
yXV31aimrvltJOcfL8uazwtp/M73DN+CTlLrtZIatX+JfN7YVt0WvqptTnrr
HocQrbU+8j+7IJ6GvJdcFwCAtOX60BzvyeBuOm9fd+0aP0gHu4yV3EuiZc69
jNfeqYRcuDBQfz5+3IieYkP2CwAAAKSAhN4AM18tsTVYT6/urycrB+j0yxV1
VcVrcqZFDX2pW2FZFtZYThwvrB+/ttQoudle3l1eWF/zPGj4rq0o/3O008+a
fWUs61XLkvHeWLHLqHz5BZmc305nhS8zPp1TRLZUflYXHulmTDyVRZauKqw+
/8smYdcGyIrwGnrDLr8e7+6sNTcPUqdt/paMNPu9nWVp/fok1WtTI3T88r9z
3V8vt9OqE1tprrkrpNSGMbIotJS+ej2XvLhNxPcrW+1U/w3DIzC3vFCsgJ4v
0NlY+30BCQwrrdkmn5YeOe3U8ZCbti7WRZ/9xkPXtxqm08dF6InTkUnugkiQ
mfJecl0AANKnxPLePFaZ7e17WW7R5u5kvwAAAEAyMzsEXnsmQuevDNGpoSG6
smULdehZVCsMq6Ht89uI/+6qsv5YAT01qpAx5LOSUu1YUbWNmSnH4s9K5U3t
dfNM1Y0Nm2tc0UBttrKfRl/y1Jiywdr87tncI1YmOsBymxNRVfVZ16Y6ZvMs
mZWlg4w8aKtfvN/RcOi3yzB7CdqevWC0HTJQ4nvW10m1qunOaq/qcZtQzVd3
qCV/Nh9nWr9W/+X5Z8PUrs4wjVjWX3vdEh1X1UlHjPKSbNM+k2ujqmjpaZHi
4j1HXPwr6EsHzxmHfnC05L0r8r5jVM9XQELfKKQvxm+yzPH+/l4V7WR3VD50
KKz7D/fRclF9Ld0OLXeFW+aEH+c1yYh5L7kuAAAZi+tD+9e6xQzQ3h389Jdt
EbrawU0/X9SV7BcAAABIRma3QOS5SEu/7va8A/St8f0sPQx5xr4vL2Sx07ku
wcbIPPllnKeNbir/pzGw0SlLrps11E2d53nqgi+GaqMa4Zae3kn3OnXX3OtY
MM9mZ6zZXWDeZmOvEL29LkSzn+6pHzRysuS9FQ5NlWJuDSXUtpC2sXcxXsie
X4bNKKJDc8XI1tAi2uXTflq7jK8lfzYfZ3rv7DWfb46Gwy0Zao/JQzXbnqGW
vPd/0/z10wFDNK72AB15w08PRQVbeht+X9JHxzbuo7u9ymtcHRsNv15Vy7yR
TX7xqCqXChXUSfHjjdV56sgJ15La7M/3pNcvhbWLVW/Di0nobUhMes57HzXX
jY+PkOgpUyR2bxuN+WuezBu8Wq72ba+no3pp3HPuuv7gEHJdAADSGNkvAAAA
kDIcWkRqq8bh+knlAPV7vbM2KdBO+0Vtld2Vxkp095LqsbC07Jg3QA58XFrP
v3hKfu/6kmZtGqRLjUC98cfQR+oNWHOvq3bZkVBt6XX3+/GdAdruREX1Wnpc
so0tos/eeNPoNjq/HG5bSD/94pAhR9fIJ64tdUeBturt6K8zV4Xp6bvfo6f1
a5YcrPev+Y2K1DN7A3V6j/5a72M/zXGrvP7v83MS36+4nmq3xljcKN74n28B
reT9iZEtifvXHlV6y3sHb/LXYW8G6BHfcF0/Ypus7LJfStxIPNe1vr7u7u0/
uHv74ndvH2R1P2n9OQcAAP+M7BcAAAB4Mgm567WHdoTlXOirtz4P1nKVfPS9
5r661CXEkuuOKTJU476J0kXhUY+dK364Ilw/WR6sPWJDNOjDV9TdtYDuuFxO
h15YanzwRjH53tNGK+xdaZy1fU8KN2+m385oqW6BA7WKa5iO9ckcGe/DzLx3
9ZFwzXpymF7u7WXpvij+nbO2HTlJ5pYrJ9nWFtTfLo8xCr1ZXG6vLKZdvjwp
fa+8rMvHB2uTcYG6d/2wZHssaZX3Ws/ZWs/fzrCay00s16WTAQCAzIfsFwAA
AEifJs4drt1aDVW70oHq1CZQN3tV1SydfxbH9UV055E3jNey5pM59oW0xpLV
xqXdK+SXPc31jbA2evWHgdp3RJjle/q0fg4pxbPjcL39bbge/DFAd9TrpxfG
dlDHM7tkcI4X5Zyjjcr3M40uO4tY9tllvXVIfuxaS2eUDVaHzwZp6RzJl/Fa
S+m8l65dAADwqMh+AQAAgLRh9uiavQTT/wzXhQsH6luF+2qvrzrqV1/sl59b
trL0/dYd86KxssYtY8ZXNprnWg4puO2i+Ni56QurPbTN1UB93zMi1fp4zSza
nFXOuzJSW+0K1yVGoHb6w1frXPx7trnpb/3Vv3SIZebZ7MW1bxv52HvQErw2
NUJtW4fpEQc/LVWprVYs3UxPX31DfrepKK5nCmqLCyONIw7FZHWRoppr9U/y
boM6+mvnYN1XOVCHu6dMxmstufJe6wz2bJm++mVkH/1kRYhmvXFUfL7aIdV6
NdPxzyyW3/tPFLeJjnqg7ny5smucnMzjqA3PbpLbeRfLO/ZOOiKml8Y0b6WL
I/vqr20idNHr3pp7cX9t7BCllbv314jKvpw5c+bMmTPnp+j8Vs4ovVbCW2fc
8tY6d7+vGn6tkx4Z2kWr3AzT79500gZ7nLVV7wBtmbOBTJrW5YGMN7Ez2S8A
AADw9063hJ1rf0UEaViBIF06x0mrtX5WNx6uonHP/WIcKJVXhn+TTy8Xb2Tc
8nxJ7EeW1H7ljkng+Vo66VTgY3X/Pqlu1yN0br7BuuOnARq3r6eOXpRFfdq8
JXMLPad1K5WVsXV7y5DY5/TOM++L31VbnXLg8fegJeTJ9TaFau/bwVrh1+7q
YV9Zb/rU0dURp4wiMwtL0Y8L6jyXYKOabx1553RlzXu2kF6e09ayx221U4gl
H07Nz2tS8t6jl7JogtPv9rqv74Z+WrDnq7rqTz99t0C8fPbDZllWo742n+Kq
kR2LSdkPxsq2t3rqqr+yijGr4wNn+2G99ePGeaTAgs7iun+g7tn+inx72VPe
3xigB3K1loXXvTlz5syZM2fOnB84W2ez1pltUjLeR81+P3YL1Prt3pR3uswU
67w3rb8nBwAAAB5VQq5rzrUGyVC9vS5E283ppaNvOGnvsU11zOZZsi6ymTTY
YqMH9+YxbC7eMd5eYas7T5WQ8qcuy4pxHfRkuZ46J9rPMkP7JN2/j8vMk81d
Zt99G6gd1gVadpyd+e43aRlfXCt6f3J/D9rpdmsMadJRihWoq9lvldc3Puqu
2f8ItOxQsxsUfj/vNV8Tc77XnENOeH3Ox4RbbvN1g1CtvcRDLxbuoX9eb6/L
i/8oFXf2FvM1+WBrY+PthqeMcddtdO3p7HI51wb5eltzbXC2uY7fMkC/HBqm
rz0TYelVTqvPd2J5by3X/lIzZ1/xcusrJ2q7S1Sv56Tnb6Ul5ORfcmXkESkx
5aj85dxGF21oKqOOjpYC9gN0Vf3fDDlU8onec3HmzJkzZ86cOafVeblVtuzs
EKVVuvfX8Mq+af79OQAAAJAU/5TrrvqjlzZd2VgHXWiqPksXysjRvWTkQVv9
4v2OhkO/XcaOFoV0XLuzRti1AbK1Zn2NeaOili3rrgUmhej+BaEaER2VqrO7
D0vYg2buoTNndLP+0EK/adFMz9i/Jx7RnWV098Kaa003485vvxhbV9joq7FZ
ZK7NGileoK7u8Sqv9Y69oiMX99WiG/to9CVP3T4zSJut7Gc5l44O0NplX7Hc
pvWIplrf7ZDMuft3O3cvooOeW2A8s+ussf5YAd0x/FvjR193WVm8ho5el0+P
HWmqlwYGaeDHgVpkULjlNU+t/orEWP8e4sq7r5edbX8ttae/Vj3iqddaOWm2
TxtryzzNtPilalJzc2MJfzdcOq7ebaypfcho/NufcvirNXL5g/VyqEZ3Pbao
nuzL0UG2B/tr/WtNJefJV2XF3fdK3959r7Tg7nslzpw5c+bMmTPnRz0npY/3
Uc/W92N9/xut5nivWnUFp/X36gAAAEBiHifXDf+wgLbJ9o0x6u71Pier6/Qu
+TQ6h7M+v3mQOm3zV7kepjkaDn+kroOUtObec7x29zlu7BWiDXIFW57jxLDq
WnB7fUveu3mYmwydUUTf27TZKNDBRrIMK6QnKn1m3MpdQfw6FFZvt93G0l61
ZF09O72xYpeRvelL8mZ+O40essrIcqqObKn8rPZzWGw02lhGlq0qrCeb5ZT3
egXImRZ/57rm63OicoDO2DjA8jo75RquTr9EpfrsbruH9psk/O7haasOutzV
A/VQ7Ovy9Z2pD/zeYt6tA/T7ZZeNmP3FpHbZ5jrnt0OG06FnJHT5CBl18Xk5
UKa2vPBOFq0y4wepk+cnsanrrb/36KAtq3bUHpcitHERH333Zx8152Gq3uvc
48yZM2fOnDlztj6bfbzX7/XxOkyN0BHXOukPT9jHm1iWa73TzXrXm3Wu60of
LwAAANIpszMhe8O/c13rzPNUh8Za/uP/y3Wb5rbTnGu6WXLd7S0K6fh2Zx/I
dc0cOD3klo/63M38OSHv/dkm9P58b8vgPtq4S1X99bvfxPFSNW34RYyUjnKx
7EebMveycXRDbbnkbad3xu0xCts0tlyf1DenLKy9XHx8q+pl98OyNbSIvp+t
k65/o4nurPaqbo0bbJnXNXPv9JDrTr0SoSeCu+n8fd0TzXKtu+maOPhpz96n
DJeGxcS/dW+96pRFRsa1kTOTe2nTT11li/0bsnVQB82yWdVuZ+NH3t2W1l8P
AAAgbTzJz50T6+MlywUAAEBmZvYAJOS62aeHaZbIIA3tFqS9bnfV6mWqa+sX
6+uNkQvk+q8dLd0FZq6bc9dZw+aEjfaNzSL5W/lKg5311OXbCg/M62aUXDcx
a+7165rzxquOhKvfqEjNW3eoHvo2UGvtHaLn/vLTfRP765nOwdqgvLf2XuKj
MWWDNctkL3Uo9/f1M29561tbB+r1mUO02YlBumBliE7/M1zPxYTrlbi/eypS
q4chKe+V3OIHaZDLWMmzJDrR90fWue60V131ow4FpUfnkeLw3Wax7TtGWtm/
qOu3nxA//90y62gz/f7KQH1tmp9WbRCa6O428l4AAJ5OZLkAAADAk0nIdbNZ
5bqFRxi6e1s1/fOPerr3VgUp5NlCzCx3ct8ixpqvs8mY7oW14sL8cnLwx2Jm
vyujK+rsL3vo0Lt/19xBZt3DkBFz3cwgud4rJTaje3Gpi4Y8ayMN3h8jP/f7
XIKcxsrGnbW0Y6Vt0urQV/Lyno6qXu4afKGPVnML1feKR2nUi1E6KWp4orvb
kpr3fuwepXlXRqrm+vvnEXscQtQ3foie/MRHS3n5avOrwZbzvK/9LR3L5m2O
V4lKF53GAAA8zchyAQAAgORj3a+b0MNgzuvWuDeva53rfnpzgqOZ65qdDDlq
FJUp3hulwsdN1XOAo9a74q4N7/7d4luDLRlaeurXfRqlRN+CdZY7PPfnUmjz
CDk08wV1iJ4vnVpOkh0vS5Jy3cQec1Ly3vKh2dV0sGx2fXdFkI7w8dcmn3ha
dtLlqOCsZWbbasCzNfWHYi9Iq9MD5OiSUjo2zEGWBu+SWdnb6DdZ2+mQlgF6
6HiY5T1kWn+eAADI7MhyAQAAgJRjdg6YnQl2g8J1wRdDdfFhD40c3lSnFW+m
b9RddL+H4eSoQsad334xzHPjLnkt87rWua65c63lR6HMRqaRR+1b0FIDLXvQ
vllSXLL+4Kn7bsYaq7/MJ7/UGaC7Kp0wsi4o+kDfgnWWO3zbbHFdOl46rDP0
tc1jpV6Ht+XAwtaaZc0mWbY+VhaFdH7kXDcxieW917xny5l3ZsrbS9+RV4r1
09OHXPSLiBf1wOmmWjJkjuXnEVW62ejCI4cdPyxz2PC4UFAr7F1pnLV9Two3
b6bfzmipboEDtYprmI71IeMFACC5kOUCAAAAqcvsZHhxfaRWnxGsscd99Gfn
V3XGy/n0+fbr5bdni+kpn3eNzvW/M373y6/94wONcQXLyc9Fntc/juTTFlub
6IEqPlq8fQ+Vr7303OTBOreOl6V7dsa97tnHOf/aOVjHxHtrroW+lt+1r3H3
sZk9D3qvv3dtGvc8mNm1+TjMeWfz9/09aoboJ5UDdMcvvpb/mn82r5v/37xd
cmfdT/K+yaWlv1YOvWN47CkjWVp76aBCReSZSypVS1fSS+NqGB7up4wRS7vo
lWMV5XfXCEvfgiweLUuklu6/MlLqrJ4s7uVba522o2Rq7XfE2aVtiuS6iTFz
3h72kfrBgAi9Wqa//tG5l86a3V47lu+t1zrk1lMTP5Sqx4re/7o9VymPTq9v
22jozVij6MdkvAAApJQn+b0hslwAAADg8ZnZo1/3YborZqjuKeWpkRPq6KER
9bXoq4Vl07DK8lG2Avrdlg2NeoeuMGZdzq0l439p1K3+p8aiP/Pr5DnjjWcC
qkrcfFtd8Pl246cNteWSt53eGbfnic93WhXVpWNLSI0Zw+R4uxd04oriutut
g35UO1RX5hyiv15J2zyuWZlI9S8bqmFOgzS2fyfN+WcVrdDyggR+9p4Mn3ZM
/rhawtJdHDS7q05u6q677762Zg9s3Y0DLXn14+S/T/K+yfq9Utf4QXp9+EDZ
GDdeXiwcqMc6P6Ptuz2nM3OU1gsjrxvjc7lJYHlX/TF3Fv2mYw2N/m6uHB+1
XOKKtdH6uyOkyJ235Oe4Nhrz1zyZN3i1XO3bXk9H9dK459x1/cEhKZLrJkjo
EmlUI1z/igjSdUaQNsnTWP/68lmds6OaVh6fQ3KF3P26CS+oAS4ljKPP/GLM
vPt1e3PwyEZ5nztExgsAQDJL7PuTpOxpJcsFAAAAkoeZVdoeHKIRHqE64UR7
nVWonFY/+6LmOfOyHKnUV7ZFFrXkrketMtjUOP91L+OteS/jnXAv4/04nWS8
CXO81/JFWXbSDesSoIvPv6ouY7rovo9qaLWe8XLt49GS+1yk7PtxqNhtGiye
x8aIbUSsmHm12RVr9hybuah3E0+92dNHmxTtr0uMQC0XcvdzUT9ct7SL0PeW
Rv5n30JS3jeZue7gu7fPfff25vuvAn3aq9fAzno2brBWr1JBP8rXSL9zsNGu
144YoSW8Jdtnn8mh7zdKgzcNvZR1oAyoeF4cKjbXNs3flmyvfyqlJrvqNz9u
l9U3DsqkoV00aJO/DnszQI/4hqfI6/1wl0iTKA99rmJTSyfDubB58sIvLuIc
a6dze+40vqj9gnz9QU11n7FAbu/7UMyfR3zUuYzR9GAuIeMFACB5LZocpROO
DFTnKH/1jAnSLSVWSptsn1h+byg+MJssu1SOLBcAAABIYWZWeSUuSp1yDbdk
lXscQizdCObMaZPf+uuZzv/XnxBTNvXOZ+51NeS819VQ/V5Xg9O9roY1j9HV
8HC/gjlPa87Vms/V/FgNyntbPv7jWHfQUxfl9dTPcnno/tq9deleN22yuJ3e
PO+i3gdaa9zyptprgmqONVW1SOgdsY2ZKeb+uhk+heSb4cWk3vUycrxtPelX
7pjEOZfXqcGN1eZOK+27vLuG7Z0pxSasFeftfvr6mKZy4LKndMztqTu3HDUu
/2ArTY/006XjdhvF3sn7wHlBK09dcfh5eXamq2Ve92R2J70T+ool1307Vy/t
OL+vNg7or0437DTHqJr6xbd2evZiYVnd3lfWh+XWXONraJhtYx17KZ/4Huwi
xqoRsiWosI6t+oouO3f3+b3qpS/nGqhRvwxLsdndhK/PAaMiNfDjQLXL4qXT
lvXR+kfyart+G2TrimJqf/Sckeu5ZnLt45K6quw+WdujlE7Z/6rW+7Co9th3
2DJnHnh+glHIO98DGW+NbE31QqcWOqimn66yG6QFnw/S178M0RKfRt2X1v8+
AQBI71wfmuM9GdxN5+3rrtb5LVkuAAAAgOTycL9CH9uKWrDNYYnYOV6mvz1M
dtj2ljvjWie7GytayJ8bnWXRr43EtkVZeW/BcWNLM0/j05sTHL/bUtexiU1r
x5LxXo7X9813DDr3vnHgsxJy2a2jZCsQLB36fyVe1Q/KnBft9dBtN81apaGU
GBwmjfLZ61cf5TIW7TxivN7WXhsNfNs4nq2UTA8vrRMazjeCKpeXlstKaxHH
tcadg9VlcYmyeqJOebn54yDp0rys6p0qoj6hcqG2vQZVyi67SrtL3alxsnxz
I2PdUJVjlX8w9v1vqVHh2XVi/djMLPrYvSzaevY4uT9X/9XJ4L0ul3SOayQ/
lC+qh2LKyNffXZEV4zpo38OddJVDbz15JuDu+8Xq+nvjM5b58KuvvPX/Zbxu
Yxpo8e8cddbKPrqlWmEt7WynMYeL6VdZ+99H3gsAQNK5PrQvICG/JcsFAAAA
kFwe7leonoJzvEus5nh9DrTWq/fmeDuOqaprr/8hLs7TZNooe7nQPNSYHv2W
4bSzuNzy22j08F8rdULL6mex1XVSxZd1dWR3nfv5eMkatVgqlg7QMo459PKf
pXTa+dK6ziur5AvpKs5Ws7jmLHQP70oaU8944OzUIEgPT62glTc4aoHjr+q3
v9tpyIL6GhvdXlevy6fDxtTXxi3my4WLb8s7k6rrhE+3Gb+9+a7huf/2A1n0
V/dmj/cPLyZm18TV59zVp4lnsu2WS2onQ7WqWeTFsZ6ypWZ9vVO+om76srcW
mBSirt0H6ZsOg7TS5sH6yaEa2n7x2UQz3rVza2lIXB29+T83nXIyXEaXHyVh
7V+XRi9l0wTkvQAAAAAAABlHwtygmVWZnQBDXgmz5H/Dxg3QtyeGaOSy/lqx
RpC22hWunw2N1IjoKJ04N/l3SiFjeLj3IeyhPt5dWeKlYmCURDUMkVkeQTK0
anlplruRHMu+S0K3HpOtO0uqR6VWGvysjTQs9Ip0atJVO2y7bOyd9bIc2euj
LpvHSNHrb0vpvYP00uJR8uuv78ikUUG6Luuz+sfr1TRhFld8QmVG2WD9srm7
1v2qn+WxVT8fqjtnhVn6E5aWHKIdS4Wpk5e7zv2+q16+GqjrRmyTbM9vleNv
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
gprvXldD3XtdDd/e62r4yqqrYakRqGOKDNU4q66GR32+5L0AAAAAAACPzsxh
aq2PtPyOv5nPVJ3kp0GnO+iFXweo/4cherGnv+W636jI+7mNmTv9254mMt7/
9nC/QvUUnONt3bOLxg43tKGvoRMbOOmqsLZi/05LuW5bRXcuPyjzI31k2ih7
udA81Jge/ZbhtLO43PLbaPTwXyunFpXViwWf1wDXelrwYg+dmPsDiRq5Sw62
DlDXiJx6oFppnXa+tK7zyir5QrqKs9XcbIxVT0JKn50aBOnhqRW08gZHLXD8
Vf32dzsNWVBfzd7dS3/mVa/e9dW13fty8eLbcsLeUXdvGi2Fv4yWzZGt/79O
hmFvBugR3/BH/7ymQMabGpJ751pyIe8FAAAAAABIOjOzTdi1VTM8yjJj+vD1
h5Hxph8P9z6EPdTH6734tvQeFCJxE/yk6kI/kUprjenZzhlRS3dKEecf5NjM
4lqkYyttULiEbP+itaxe101H3nCSHQvD5Yyvr86a+IF0b/+p3PaMUJnXUVvO
cLP0LVSvUkE/ytdIE+ZmxSdUrHsSzMdm9uLunBWW4ufBm/x10TBvnZ9riPZv
t1Nyxm6XTkXaW/apVT29QPaMa6O/lnpNvOpNlUXNnrCTIRHW+XzCPPZO297y
QG6fDr5eHpZeM15r5L0AAAAAAADJj4w3dbWz2kcW1zdKu8YMUPcOftrYIUr9
hnnpuWZ99dNgf722zdDRFQrr0tVnZeTPQTLk1Fo5+lFR3brOTms519YWs101
pkBtWT+9m8jJ3topm5cceGGSrOwXoB+XmiT758b86060P94P0ZODhj6wyyyh
J2H0pGFi3Yub0q+JdR5r3bEww6p7IT4+QqKnTJHYvW2Sr5MhEdbz2Nb9G9bX
0/rr6J9khIzXGnkvAAAAAABA8iDjTXnWue7UKxF6Iribzt/XXXNXD9RDsa/L
13emyvsbA9Q1pqUsnNxP5m4fqEe9X5ZaSx3F43hvPdT0gjHxrYpS8BcP/enu
9SGV+0gLm0FqV/x1ib37d/8ty034uA8/JnNudsessDTLeK3zWCer+VtzLvf9
9bGyOKTzAzvUrM/J1smQCOv+Deu+Zevraf019U92DxqmUwsNtnTqnqnjoGOX
ZFNzh1rxF6pIsGs/sb9VQl8LcxBz19us7G30m6ztLDvgDh0PU/NrKC0fO3kv
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
/gUYJY8W
        "], {{0, 316}, {467, 0}}, {0., 1.},
        ColorFunction->RGBColor],
       BoxForm`ImageTag[
       "Real32", ColorSpace -> "RGB", Interleaving -> False, Magnification -> 
        Automatic],
       Selectable->False],
      DefaultBaseStyle->"ImageGraphics",
      ImageSize->{295., Automatic},
      ImageSizeRaw->{467, 316},
      PlotRange->{{0, 467}, {0, 316}}], "without", " ", "knowing", " ", "the",
      " ", "derivatives"}], ",", " ", 
    RowBox[{
    "4", " ", "or", " ", "more", " ", "are", " ", "iterations", " ", "needed",
      " ", "to", " ", "find", " ", "the", " ", 
     RowBox[{"intersection", "."}]}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SurfaceIntersection", "[", 
     RowBox[{"prevRayCoordinate_List", ",", "Z_List", ",", "rayTilt_List"}], 
     "]"}], "[", 
    RowBox[{"surface_", ",", "DxSurface_", ",", "DySurface_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"sc", "=", 
        RowBox[{"Transpose", "@", "prevRayCoordinate"}]}], ",", 
       RowBox[{"ta", "=", 
        RowBox[{"Transpose", "@", "rayTilt"}]}], ",", "S", ",", "k", ",", 
       "rx", ",", "ry", ",", "rz", ",", "tx", ",", "ty", ",", "tz"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"rx", "=", 
       RowBox[{"sc", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"prevRayCoordinate", " ", "\[Rule]", " ", 
         RowBox[{
         "input", " ", "coordinates", " ", "of", " ", "the", " ", "rays", " ",
           "or", " ", "the", " ", "coordinates", " ", "resulted", " ", "from",
           " ", "the", " ", "previous", " ", "iteration"}]}], ","}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{"ry", "=", 
       RowBox[{"sc", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"Z", " ", "\[Rule]", " ", 
        RowBox[{
        "a", " ", "list", " ", "with", " ", "z", " ", "coordinates", " ", 
         "of", " ", "the", " ", 
         RowBox[{"rays", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "sc", "]"}], "\[GreaterEqual]", " ", "3"}], 
        ",", 
        RowBox[{"rz", "=", 
         RowBox[{"sc", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ",", 
        RowBox[{"rz", "=", "Z"}]}], "]"}], ";", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"z", " ", "coordinate", " ", "is", " ", "needed"}], ",", " ", 
        RowBox[{
        "prevRayCoordinate", " ", "should", " ", "contain", " ", "the", " ", 
         "z", " ", "coordinate"}], ",", " ", 
        RowBox[{
        "in", " ", "this", " ", "case", " ", "the", " ", "variable", " ", "Z",
          " ", "is", " ", 
         RowBox[{"ignored", ".", " ", "Otherwise"}], " ", "a", " ", "list", 
         " ", "Z", " ", "is", " ", 
         RowBox[{"expected", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"tx", "=", 
       RowBox[{"ta", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"rayTilt", "            ", "\[Rule]", " ", 
        RowBox[{
        "input", " ", "direction", " ", "vectors", " ", "of", " ", "the", " ", 
         RowBox[{"rays", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"ty", "=", 
       RowBox[{"ta", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "ta", "]"}], "\[GreaterEqual]", " ", "3"}], 
        ",", 
        RowBox[{"tz", "=", 
         RowBox[{"ta", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ",", 
        RowBox[{"tz", "=", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"1", "-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"tx", "^", "2"}], "+", 
             RowBox[{"ty", "^", "2"}]}], ")"}]}], "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"ParallelMap", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"S", "=", 
            RowBox[{
             RowBox[{"surface", "[", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "-", 
             RowBox[{"#", "[", 
              RowBox[{"[", "3", "]"}], "]"}]}]}], ";", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"surface", " ", "\[Rule]", " ", 
              RowBox[{"the", " ", "surface", " ", "function", " ", 
               RowBox[{"(", 
                RowBox[{
                "must", " ", "be", " ", "a", " ", "function", " ", "of", " ", 
                 "two", " ", "variables"}], ")"}]}]}], ","}], "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"k", "=", 
            RowBox[{
             RowBox[{
              RowBox[{"DxSurface", "[", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "*", 
              RowBox[{"#", "[", 
               RowBox[{"[", "4", "]"}], "]"}]}], "+", 
             RowBox[{
              RowBox[{"DySurface", "[", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "*", 
              RowBox[{"#", "[", 
               RowBox[{"[", "5", "]"}], "]"}]}]}]}], ";", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"DxSurface", " ", "DySurface"}], " ", "\[Rule]", " ", 
             RowBox[{
             "derivatives", " ", "of", " ", "the", " ", "surface", " ", 
              "with", " ", "respect", " ", "to", " ", "x", " ", "and", " ", 
              RowBox[{"y", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", "3", "]"}], "]"}]}], "}"}], "+", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "4", "]"}], "]"}], ",", 
               RowBox[{"#", "[", 
                RowBox[{"[", "5", "]"}], "]"}], ",", 
               RowBox[{"#", "[", 
                RowBox[{"[", "6", "]"}], "]"}]}], "}"}], "*", 
             RowBox[{"S", "/", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "6", "]"}], "]"}], "-", "k"}], ")"}]}]}]}]}], 
          ")"}], "&"}], ",", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{
          "rx", ",", "ry", ",", "rz", ",", "tx", ",", "ty", ",", "tz"}], 
          "}"}], "]"}], "\[IndentingNewLine]", ",", 
        RowBox[{"Method", "\[Rule]", " ", "\"\<CoarsestGrained\>\""}]}], 
       "]"}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "This", " ", "function", " ", "return", " ", "the", " ", "coordinates", 
     " ", "x"}], ",", " ", "y", ",", " ", 
    RowBox[{
    "z", " ", "of", " ", "the", " ", "intersection", " ", "between", " ", 
     "the", " ", "ray", " ", "bundle", " ", "and", " ", "the", " ", "surface",
      " ", 
     RowBox[{"\"\<surface\>\"", ".", " ", "When"}], " ", "the", " ", 
     "derivatives", " ", "\"\<DxSurface\>\""}], ",", " ", 
    RowBox[{"\"\<DySurface\>\"", "are", " ", "given"}], ",", " ", 
    RowBox[{
     RowBox[{
     "the", " ", "method", " ", "used", " ", "is", " ", "similar", " ", "to", 
      " ", "Newton"}], "-", 
     RowBox[{
      RowBox[{"Raphson", ".", "\[IndentingNewLine]", "If"}], " ", "the", " ", 
      "derivatives", " ", "are", " ", "not", " ", "known", " ", 
      "analythical"}]}], ",", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"write", " ", "0"}], "&"}], " ", 
     RowBox[{"instead", ".", " ", "This"}], " ", "function", " ", "should", 
     " ", "be", " ", "used", " ", "in", " ", "a", " ", "Do", " ", "loop"}], 
    ",", " ", 
    RowBox[{
     RowBox[{"each", " ", "iteration", " ", "increases", " ", "the", " ", 
      RowBox[{"accuracy", ".", "\[IndentingNewLine]", "This"}], " ", "method",
       " ", "is", " ", "exact", " ", "in", " ", "1", " ", "iteration", " ", 
      "the", " ", "for", " ", "intersection", " ", "between", " ", "tilted", 
      " ", "rays", " ", "and", " ", "a", " ", "plane", " ", "surface", " ", 
      "or", " ", "the", " ", "intersection", " ", "between", " ", "rays", " ",
       "parallel", " ", "to", " ", "the", " ", "optical", " ", "axis", " ", 
      "and", " ", "a", " ", "non"}], "-", 
     RowBox[{"planar", " ", 
      RowBox[{"surface", "."}]}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "\"\<refractiveIndexMedium\>\"", " ", "refers", " ", "to", " ", "the", 
     " ", "medium", " ", "in", " ", "which", " ", "the", " ", "material", " ",
      "is", " ", "immersed"}], ",", " ", 
    RowBox[{"for", " ", "example"}], ",", " ", 
    RowBox[{
     RowBox[{"the", " ", "option", " ", "\"\<refractiveIndexMedium\>\""}], 
     "\[Rule]", " ", 
     RowBox[{
     "1.5", " ", "is", " ", "a", " ", "good", " ", "way", " ", "to", " ", 
      "model", " ", "an", " ", "optical", " ", "component", " ", "in", " ", 
      RowBox[{"water", "."}]}]}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "DirectionIn", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"\"\<refractiveIndexMedium\>\"", "\[Rule]", " ", "refIndexAir"}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DirectionIn", "[", 
     RowBox[{"prevRayCoordinate_List", ",", "rayTilt_List", ",", 
      RowBox[{"refractiveIndex_", "?", "NumericQ"}], ",", 
      RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], "[", 
    RowBox[{"DxSurface_", ",", "DySurface_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"refractiveIndexMedium", ",", 
       RowBox[{"sc", "=", 
        RowBox[{"Transpose", "@", "prevRayCoordinate"}]}], ",", 
       RowBox[{"ta", "=", 
        RowBox[{"Transpose", "@", "rayTilt"}]}], ",", "nD", ",", "tr", ",", 
       "tDot", ",", "Dx", ",", "Dy", ",", "rx", ",", "ry", ",", "rz", ",", 
       "tx", ",", "ty", ",", "tz"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"refractiveIndexMedium", "=", 
       RowBox[{"OptionValue", "[", "\"\<refractiveIndexMedium\>\"", "]"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"rx", "=", 
       RowBox[{"sc", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"prevRayCoordinate", " ", "\[Rule]", " ", 
         RowBox[{
         "input", " ", "coordinates", " ", "of", " ", "the", " ", "rays"}]}], 
        ","}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"ry", "=", 
       RowBox[{"sc", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"tx", "=", 
       RowBox[{"ta", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"rayTilt", "            ", "\[Rule]", " ", 
        RowBox[{
        "input", " ", "direction", " ", "vectors", " ", "of", " ", "the", " ", 
         RowBox[{"rays", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"ty", "=", 
       RowBox[{"ta", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "ta", "]"}], "\[GreaterEqual]", " ", "3"}], 
        ",", 
        RowBox[{"tz", "=", 
         RowBox[{"ta", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ",", 
        RowBox[{"tz", "=", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"1", "-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"tx", "^", "2"}], "+", 
             RowBox[{"ty", "^", "2"}]}], ")"}]}], "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"ParallelMap", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Dx", "=", 
            RowBox[{"DxSurface", "[", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"DxSurface", " ", "DySurface"}], " ", "\[Rule]", " ", 
             RowBox[{
             "derivatives", " ", "of", " ", "the", " ", "surface", " ", 
              "with", " ", "respect", " ", "to", " ", "x", " ", "and", " ", 
              RowBox[{"y", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{"Dy", "=", 
            RowBox[{"DySurface", "[", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"nD", "=", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "Dx"}], ",", 
               RowBox[{"-", "Dy"}], ",", "1"}], "}"}], "/", 
             RowBox[{"Sqrt", "[", 
              RowBox[{"1", "+", 
               RowBox[{"Dx", "^", "2"}], "+", 
               RowBox[{"Dy", "^", "2"}]}], "]"}]}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"tr", "=", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "3", "]"}], "]"}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", "4", "]"}], "]"}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", "5", "]"}], "]"}]}], "}"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"tDot", "=", 
            RowBox[{"Dot", "[", 
             RowBox[{"nD", ",", "tr"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"tr", "=", 
            RowBox[{
             RowBox[{"nD", "*", 
              RowBox[{"Sqrt", "[", 
               RowBox[{"1", "-", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"refractiveIndexMedium", "/", "refractiveIndex"}], 
                   ")"}], "^", "2"}], "*", 
                 RowBox[{"(", 
                  RowBox[{"1", "-", 
                   RowBox[{"tDot", "^", "2"}]}], ")"}]}]}], "]"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"tr", "-", 
                RowBox[{"nD", "*", "tDot"}]}], ")"}], "*", 
              RowBox[{"(", 
               RowBox[{"refractiveIndexMedium", "/", "refractiveIndex"}], 
               ")"}]}]}]}], ";", 
           RowBox[{"(*", 
            RowBox[{"refractiveIndex", " ", "\[Rule]", " ", 
             RowBox[{
             "refractive", " ", "index", " ", "of", " ", "the", " ", 
              "optical", " ", 
              RowBox[{"component", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{"tr", "=", 
            RowBox[{"tr", "/", 
             RowBox[{"Norm", "[", "tr", "]"}]}]}]}], ")"}], "&"}], ",", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{"rx", ",", "ry", ",", "tx", ",", "ty", ",", "tz"}], "}"}], 
         "]"}], "\[IndentingNewLine]", ",", 
        RowBox[{"Method", "\[Rule]", " ", "\"\<CoarsestGrained\>\""}]}], 
       "]"}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "This", " ", "function", " ", "return", " ", "the", " ", "direction", " ",
      "vector", " ", 
     RowBox[{"{", 
      RowBox[{"tx", ",", " ", "ty", ",", " ", "tz"}], "}"}], " ", "of", " ", 
     "the", " ", "rays", " ", "refracted", " ", "from", " ", "the", " ", 
     "surface"}], ",", " ", 
    RowBox[{
     RowBox[{
     "assuming", " ", "that", " ", "light", " ", "enter", " ", "in", " ", 
      "the", " ", 
      RowBox[{"component", ".", " ", "\[IndentingNewLine]", "This"}], " ", 
      "function", " ", "uses", " ", "the", " ", "vectorial", " ", "form", " ",
       "of", " ", "Snell", " ", "law", " ", "of", " ", 
      RowBox[{"refraction", ".", " ", "For"}], " ", "reflection", " ", "use", 
      " ", "the", " ", "value"}], " ", "-", 
     RowBox[{"refractiveIndexMedium", " ", "as", " ", 
      RowBox[{"refractiveIndex", "."}]}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "DirectionOut", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"\"\<refractiveIndexMedium\>\"", "\[Rule]", " ", "refIndexAir"}],
      "}"}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{"\"\<refractiveIndexMedium\>\"", " ", "\[Rule]", " ", 
    RowBox[{
    "refractive", " ", "index", " ", "of", " ", "the", " ", "medium", " ", 
     "in", " ", "which", " ", "the", " ", "material", " ", "is", " ", 
     RowBox[{"immersed", "."}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DirectionOut", "[", 
     RowBox[{"prevRayCoordinate_List", ",", "rayTilt_List", ",", 
      RowBox[{"refractiveIndex_", "?", "NumericQ"}], ",", 
      RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], "[", 
    RowBox[{"DxSurface_", ",", "DySurface_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"refractiveIndexMedium", ",", 
       RowBox[{"sc", "=", 
        RowBox[{"Transpose", "@", "prevRayCoordinate"}]}], ",", 
       RowBox[{"ta", "=", 
        RowBox[{"Transpose", "@", "rayTilt"}]}], ",", "nD", ",", "tr", ",", 
       "tDot", ",", "Dx", ",", "Dy", ",", "rx", ",", "ry", ",", "rz", ",", 
       "tx", ",", "ty", ",", "tz"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"refractiveIndexMedium", "=", 
       RowBox[{"OptionValue", "[", "\"\<refractiveIndexMedium\>\"", "]"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"rx", "=", 
       RowBox[{"sc", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"prevRayCoordinate", " ", "\[Rule]", " ", 
         RowBox[{
         "input", " ", "coordinates", " ", "of", " ", "the", " ", "rays"}]}], 
        ","}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"ry", "=", 
       RowBox[{"sc", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"tx", "=", 
       RowBox[{"ta", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"rayTilt", "            ", "\[Rule]", " ", 
        RowBox[{
        "input", " ", "direction", " ", "vectors", " ", "of", " ", "the", " ", 
         RowBox[{"rays", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"ty", "=", 
       RowBox[{"ta", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "ta", "]"}], "\[GreaterEqual]", " ", "3"}], 
        ",", 
        RowBox[{"tz", "=", 
         RowBox[{"ta", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ",", 
        RowBox[{"tz", "=", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"1", "-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"tx", "^", "2"}], "+", 
             RowBox[{"ty", "^", "2"}]}], ")"}]}], "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"ParallelMap", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Dx", "=", 
            RowBox[{"DxSurface", "[", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"DxSurface", " ", "DySurface"}], " ", "\[Rule]", " ", 
             RowBox[{
             "derivatives", " ", "of", " ", "the", " ", "surface", " ", 
              "with", " ", "respect", " ", "to", " ", "x", " ", "and", " ", 
              RowBox[{"y", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{"Dy", "=", 
            RowBox[{"DySurface", "[", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"nD", "=", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "Dx"}], ",", 
               RowBox[{"-", "Dy"}], ",", "1"}], "}"}], "/", 
             RowBox[{"Sqrt", "[", 
              RowBox[{"1", "+", 
               RowBox[{"Dx", "^", "2"}], "+", 
               RowBox[{"Dy", "^", "2"}]}], "]"}]}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"tr", "=", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "3", "]"}], "]"}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", "4", "]"}], "]"}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", "5", "]"}], "]"}]}], "}"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"tDot", "=", 
            RowBox[{"Dot", "[", 
             RowBox[{"nD", ",", "tr"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"tr", "=", 
            RowBox[{
             RowBox[{"nD", "*", 
              RowBox[{"Sqrt", "[", 
               RowBox[{"1", "-", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"refractiveIndex", "/", "refractiveIndexMedium"}], 
                   ")"}], "^", "2"}], "*", 
                 RowBox[{"(", 
                  RowBox[{"1", "-", 
                   RowBox[{"tDot", "^", "2"}]}], ")"}]}]}], "]"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"tr", "-", 
                RowBox[{"nD", "*", "tDot"}]}], ")"}], "*", 
              RowBox[{"(", 
               RowBox[{"refractiveIndex", "/", "refractiveIndexMedium"}], 
               ")"}]}]}]}], ";", 
           RowBox[{"(*", 
            RowBox[{"refractiveIndex", " ", "\[Rule]", " ", 
             RowBox[{
             "refractive", " ", "index", " ", "of", " ", "the", " ", 
              "optical", " ", 
              RowBox[{"component", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{"tr", "=", 
            RowBox[{"tr", "/", 
             RowBox[{"Norm", "[", "tr", "]"}]}]}]}], ")"}], "&"}], ",", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{"rx", ",", "ry", ",", "tx", ",", "ty", ",", "tz"}], "}"}], 
         "]"}], "\[IndentingNewLine]", ",", 
        RowBox[{"Method", "\[Rule]", " ", "\"\<CoarsestGrained\>\""}]}], 
       "]"}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "This", " ", "function", " ", "return", " ", "the", " ", "direction", " ",
      "vector", " ", 
     RowBox[{"{", 
      RowBox[{"tx", ",", " ", "ty", ",", " ", "tz"}], "}"}], " ", "of", " ", 
     "the", " ", "rays", " ", "refracted", " ", "from", " ", "the", " ", 
     "surface"}], ",", " ", 
    RowBox[{
     RowBox[{
     "assuming", " ", "that", " ", "light", " ", "exits", " ", "the", " ", 
      RowBox[{"component", ".", " ", "\[IndentingNewLine]", "This"}], " ", 
      "function", " ", "uses", " ", "the", " ", "vectorial", " ", "form", " ",
       "of", " ", "Snell", " ", "law", " ", "of", " ", 
      RowBox[{"refraction", ".", " ", "For"}], " ", "reflection", " ", "use", 
      " ", "the", " ", "value"}], " ", "-", 
     RowBox[{"refractiveIndex", " ", "as", " ", 
      RowBox[{"refractiveIndex", "."}]}]}]}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DirectionIn", "[", 
     RowBox[{
     "prevRayCoordinate_List", ",", "rayTilt_List", ",", 
      "refractiveIndex_List", ",", 
      RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], "[", 
    RowBox[{"DxSurface_", ",", "DySurface_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"refractiveIndexMedium", ",", 
       RowBox[{"sc", "=", 
        RowBox[{"Transpose", "@", "prevRayCoordinate"}]}], ",", 
       RowBox[{"ta", "=", 
        RowBox[{"Transpose", "@", "rayTilt"}]}], ",", "nD", ",", "tr", ",", 
       "tDot", ",", "Dx", ",", "Dy", ",", "rx", ",", "ry", ",", "rz", ",", 
       "tx", ",", "ty", ",", "tz"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"refractiveIndexMedium", "=", 
       RowBox[{"OptionValue", "[", "\"\<refractiveIndexMedium\>\"", "]"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"rx", "=", 
       RowBox[{"sc", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"prevRayCoordinate", " ", "\[Rule]", " ", 
         RowBox[{
         "input", " ", "coordinates", " ", "of", " ", "the", " ", "rays"}]}], 
        ","}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"ry", "=", 
       RowBox[{"sc", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"tx", "=", 
       RowBox[{"ta", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"rayTilt", "            ", "\[Rule]", " ", 
        RowBox[{
        "input", " ", "direction", " ", "vectors", " ", "of", " ", "the", " ", 
         RowBox[{"rays", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"ty", "=", 
       RowBox[{"ta", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "ta", "]"}], "\[GreaterEqual]", " ", "3"}], 
        ",", 
        RowBox[{"tz", "=", 
         RowBox[{"ta", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ",", 
        RowBox[{"tz", "=", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"1", "-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"tx", "^", "2"}], "+", 
             RowBox[{"ty", "^", "2"}]}], ")"}]}], "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"ParallelMap", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Dx", "=", 
            RowBox[{"DxSurface", "[", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"DxSurface", " ", "DySurface"}], " ", "\[Rule]", " ", 
             RowBox[{
             "derivatives", " ", "of", " ", "the", " ", "surface", " ", 
              "with", " ", "respect", " ", "to", " ", "x", " ", "and", " ", 
              RowBox[{"y", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{"Dy", "=", 
            RowBox[{"DySurface", "[", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"nD", "=", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "Dx"}], ",", 
               RowBox[{"-", "Dy"}], ",", "1"}], "}"}], "/", 
             RowBox[{"Sqrt", "[", 
              RowBox[{"1", "+", 
               RowBox[{"Dx", "^", "2"}], "+", 
               RowBox[{"Dy", "^", "2"}]}], "]"}]}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"tr", "=", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "3", "]"}], "]"}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", "4", "]"}], "]"}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", "5", "]"}], "]"}]}], "}"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"tDot", "=", 
            RowBox[{"Dot", "[", 
             RowBox[{"nD", ",", "tr"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"tr", "=", 
            RowBox[{
             RowBox[{"nD", "*", 
              RowBox[{"Sqrt", "[", 
               RowBox[{"1", "-", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"refractiveIndexMedium", "/", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "6", "]"}], "]"}]}], ")"}], "^", "2"}], "*", 
                 RowBox[{"(", 
                  RowBox[{"1", "-", 
                   RowBox[{"tDot", "^", "2"}]}], ")"}]}]}], "]"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"tr", "-", 
                RowBox[{"nD", "*", "tDot"}]}], ")"}], "*", 
              RowBox[{"(", 
               RowBox[{"refractiveIndexMedium", "/", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "6", "]"}], "]"}]}], ")"}]}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"tr", "=", 
            RowBox[{"tr", "/", 
             RowBox[{"Norm", "[", "tr", "]"}]}]}]}], ")"}], "&"}], ",", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{
          "rx", ",", "ry", ",", "tx", ",", "ty", ",", "tz", ",", 
           "refractiveIndex"}], "}"}], "]"}], 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"refractiveIndex", " ", "\[Rule]", " ", 
           RowBox[{
           "refractive", " ", "index", " ", "of", " ", "the", " ", "optical", 
            " ", "component"}]}], ",", " ", 
          RowBox[{
          "here", " ", "refractiveIndex", " ", "is", " ", "a", " ", "table", 
           " ", "equal", " ", "in", " ", "length", " ", "with", " ", 
           "prevRayCoordinate", " ", "and", " ", 
           RowBox[{"rayTilt", "."}]}]}], "*)"}], "\[IndentingNewLine]", ",", 
        RowBox[{"Method", "\[Rule]", " ", "\"\<CoarsestGrained\>\""}]}], 
       "]"}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "This", " ", "function", " ", "return", " ", "the", " ", "direction", " ",
      "vector", " ", 
     RowBox[{"{", 
      RowBox[{"tx", ",", " ", "ty", ",", " ", "tz"}], "}"}], " ", "of", " ", 
     "the", " ", "rays", " ", "refracted", " ", "from", " ", "the", " ", 
     "surface"}], ",", " ", 
    RowBox[{
    "assuming", " ", "that", " ", "light", " ", "enter", " ", "in", " ", 
     "the", " ", 
     RowBox[{"component", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "This", " ", "works", " ", "with", " ", "a", " ", "different", " ", 
    "refractive", " ", "index", " ", "for", " ", "each", " ", 
    RowBox[{"ray", ".", " ", "Good"}], " ", "for", " ", "modeling", " ", "of",
     " ", "anisotropic", " ", 
    RowBox[{"media", "."}]}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DirectionOut", "[", 
     RowBox[{
     "prevRayCoordinate_List", ",", "rayTilt_List", ",", 
      "refractiveIndex_List", ",", 
      RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], "[", 
    RowBox[{"DxSurface_", ",", "DySurface_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"refractiveIndexMedium", ",", 
       RowBox[{"sc", "=", 
        RowBox[{"Transpose", "@", "prevRayCoordinate"}]}], ",", 
       RowBox[{"ta", "=", 
        RowBox[{"Transpose", "@", "rayTilt"}]}], ",", "nD", ",", "tr", ",", 
       "tDot", ",", "Dx", ",", "Dy", ",", "rx", ",", "ry", ",", "rz", ",", 
       "tx", ",", "ty", ",", "tz"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"refractiveIndexMedium", "=", 
       RowBox[{"OptionValue", "[", "\"\<refractiveIndexMedium\>\"", "]"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"rx", "=", 
       RowBox[{"sc", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"prevRayCoordinate", " ", "\[Rule]", " ", 
         RowBox[{
         "input", " ", "coordinates", " ", "of", " ", "the", " ", "rays"}]}], 
        ","}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"ry", "=", 
       RowBox[{"sc", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"tx", "=", 
       RowBox[{"ta", "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{"rayTilt", "            ", "\[Rule]", " ", 
        RowBox[{
        "input", " ", "direction", " ", "vectors", " ", "of", " ", "the", " ", 
         RowBox[{"rays", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"ty", "=", 
       RowBox[{"ta", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "ta", "]"}], "\[GreaterEqual]", " ", "3"}], 
        ",", 
        RowBox[{"tz", "=", 
         RowBox[{"ta", "[", 
          RowBox[{"[", "3", "]"}], "]"}]}], ",", 
        RowBox[{"tz", "=", 
         RowBox[{"Sqrt", "[", 
          RowBox[{"1", "-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"tx", "^", "2"}], "+", 
             RowBox[{"ty", "^", "2"}]}], ")"}]}], "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"ParallelMap", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Dx", "=", 
            RowBox[{"DxSurface", "[", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"DxSurface", " ", "DySurface"}], " ", "\[Rule]", " ", 
             RowBox[{
             "derivatives", " ", "of", " ", "the", " ", "surface", " ", 
              "with", " ", "respect", " ", "to", " ", "x", " ", "and", " ", 
              RowBox[{"y", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{"Dy", "=", 
            RowBox[{"DySurface", "[", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"nD", "=", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "Dx"}], ",", 
               RowBox[{"-", "Dy"}], ",", "1"}], "}"}], "/", 
             RowBox[{"Sqrt", "[", 
              RowBox[{"1", "+", 
               RowBox[{"Dx", "^", "2"}], "+", 
               RowBox[{"Dy", "^", "2"}]}], "]"}]}]}], ";", 
           "\[IndentingNewLine]", "\[IndentingNewLine]", 
           RowBox[{"tr", "=", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "3", "]"}], "]"}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", "4", "]"}], "]"}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", "5", "]"}], "]"}]}], "}"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"tDot", "=", 
            RowBox[{"Dot", "[", 
             RowBox[{"nD", ",", "tr"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"tr", "=", 
            RowBox[{
             RowBox[{"nD", "*", 
              RowBox[{"Sqrt", "[", 
               RowBox[{"1", "-", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "6", "]"}], "]"}], "/", 
                    "refractiveIndexMedium"}], ")"}], "^", "2"}], "*", 
                 RowBox[{"(", 
                  RowBox[{"1", "-", 
                   RowBox[{"tDot", "^", "2"}]}], ")"}]}]}], "]"}]}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"tr", "-", 
                RowBox[{"nD", "*", "tDot"}]}], ")"}], "*", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "6", "]"}], "]"}], "/", 
                "refractiveIndexMedium"}], ")"}]}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"tr", "=", 
            RowBox[{"tr", "/", 
             RowBox[{"Norm", "[", "tr", "]"}]}]}]}], ")"}], "&"}], ",", 
        RowBox[{"Transpose", "[", 
         RowBox[{"{", 
          RowBox[{
          "rx", ",", "ry", ",", "tx", ",", "ty", ",", "tz", ",", 
           "refractiveIndex"}], "}"}], "]"}], 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{"refractiveIndex", " ", "\[Rule]", " ", 
           RowBox[{
           "refractive", " ", "index", " ", "of", " ", "the", " ", "optical", 
            " ", "component"}]}], ",", " ", 
          RowBox[{
          "here", " ", "refractiveIndex", " ", "is", " ", "a", " ", "table", 
           " ", "equal", " ", "in", " ", "length", " ", "with", " ", 
           "prevRayCoordinate", " ", "and", " ", 
           RowBox[{"rayTilt", "."}]}]}], "*)"}], "\[IndentingNewLine]", ",", 
        RowBox[{"Method", "\[Rule]", " ", "\"\<CoarsestGrained\>\""}]}], 
       "]"}]}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "This", " ", "function", " ", "return", " ", "the", " ", "direction", " ",
      "vector", " ", 
     RowBox[{"{", 
      RowBox[{"tx", ",", " ", "ty", ",", " ", "tz"}], "}"}], " ", "of", " ", 
     "the", " ", "rays", " ", "refracted", " ", "from", " ", "the", " ", 
     "surface"}], ",", " ", 
    RowBox[{
    "assuming", " ", "that", " ", "light", " ", "exits", " ", "the", " ", 
     RowBox[{"component", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "This", " ", "works", " ", "with", " ", "a", " ", "different", " ", 
    "refractive", " ", "index", " ", "for", " ", "each", " ", 
    RowBox[{"ray", ".", " ", "Good"}], " ", "for", " ", "modeling", " ", "of",
     " ", "anisotropic", " ", 
    RowBox[{"media", "."}]}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "FindOpticalPathLength", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<waveLength\>\"", "\[Rule]", " ", "waveLength"}], ",", 
      RowBox[{"\"\<returnHistogram\>\"", "\[Rule]", " ", "False"}]}], "}"}]}],
    ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"\"\<waveLength\>\"", " ", "\[Rule]", " ", 
     RowBox[{
     "wavelenght", " ", "of", " ", "the", " ", "radiation", " ", "used"}]}], 
    ",", " ", 
    RowBox[{"\"\<returnHistogram\>\"", " ", "\[Rule]", " ", 
     RowBox[{
     "returns", " ", "a", " ", "histogram", " ", "of", " ", "the", " ", 
      "list", " ", "carring", " ", "the", " ", "values", " ", "of", " ", 
      "optical", " ", "length", " ", "for", " ", "each", " ", 
      RowBox[{"ray", "."}]}]}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FindOpticalPathLength", "[", 
    RowBox[{"intersection_List", ",", "refractiveIndexs_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"lambda", ",", "k0", ",", "opticalLength"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"lambda", "=", 
       RowBox[{"OptionValue", "[", "\"\<waveLength\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"k0", "=", 
       RowBox[{"2", " ", 
        RowBox[{"Pi", "/", "lambda"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"opticalLength", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"intersection", "[", 
             RowBox[{"[", 
              RowBox[{"i", "+", "1"}], "]"}], "]"}], "-", 
            RowBox[{"intersection", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], ")"}], "*", 
          RowBox[{"refractiveIndexs", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{
            RowBox[{"Length", "[", "intersection", "]"}], "-", "1"}]}], 
          "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"intersection", " ", "\[Rule]", " ", 
         RowBox[{
         "a", " ", "list", " ", "of", " ", "lists", " ", "with", " ", "the", 
          " ", "coordinates", " ", "of", " ", "the", " ", "intersection", " ",
           "with", " ", "each", " ", "surface"}]}], ",", " ", 
        RowBox[{"Ex", ".", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"coords", ".", " ", "intersection"}], " ", "surface1"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"coords", ".", " ", "intersection"}], " ", "surface1"}], 
            "}"}], ",", " ", "..."}], " ", "}"}]}]}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"opticalLength", "=", 
       RowBox[{"Total", "[", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Sqrt]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "^", "2"}], "+", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "^", "2"}], "+", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "^", "2"}]}], ")"}]}], "&"}], 
          ",", "opticalLength", ",", 
          RowBox[{"{", "2", "}"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"refractiveIndexs", " ", "\[Rule]", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
          "a", " ", "list", " ", "of", " ", "refractive", " ", "indexes", " ",
            "of", " ", "each", " ", 
           RowBox[{"medium", ".", " ", 
            RowBox[{"Length", "[", "refractiveIndexs", "]"}]}]}], "+", "1"}], 
         " ", "\[Equal]", " ", 
         RowBox[{"Length", "[", "intersection", "]"}]}]}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"OptionValue", "[", "\"\<returnHistogram\>\"", "]"}], 
         "\[Equal]", " ", "True"}], ",", 
        RowBox[{"Print", "[", 
         RowBox[{"Histogram", "[", 
          RowBox[{"k0", " ", 
           RowBox[{"(", 
            RowBox[{"opticalLength", "-", 
             RowBox[{"Min", "[", "opticalLength", "]"}]}], ")"}], "mm"}], 
          "]"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      "opticalLength"}]}], "\[IndentingNewLine]", "]"}]}], 
  RowBox[{"(*", " ", 
   RowBox[{
   "This", " ", "function", " ", "gives", " ", "the", " ", "optical", " ", 
    "path", " ", "length", " ", "along", " ", "a", " ", 
    RowBox[{"ray", "."}]}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "FindOpticalPathLengthU", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<waveLength\>\"", "\[Rule]", " ", "waveLength"}], ",", 
     RowBox[{"\"\<returnHistogram\>\"", "\[Rule]", " ", "False"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FindOpticalPathLengthU", "[", 
    RowBox[{"intersection_List", ",", "refractiveIndexs_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"lambda", ",", "k0", ",", "opticalLength"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"lambda", "=", 
       RowBox[{"OptionValue", "[", "\"\<waveLength\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"k0", "=", 
       RowBox[{"2", " ", 
        RowBox[{"Pi", "/", "lambda"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"opticalLength", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "*", 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}], "&"}], ",", 
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"intersection", "[", 
                 RowBox[{"[", 
                  RowBox[{"i", "+", "1"}], "]"}], "]"}], "-", 
                RowBox[{"intersection", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], ")"}], ",", 
              RowBox[{"refractiveIndexs", "[", 
               RowBox[{"[", "i", "]"}], "]"}]}], "}"}], "]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{
            RowBox[{"Length", "[", "intersection", "]"}], "-", "1"}]}], 
          "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"intersection", " ", "\[Rule]", " ", 
         RowBox[{
         "a", " ", "list", " ", "of", " ", "lists", " ", "with", " ", "the", 
          " ", "coordinates", " ", "of", " ", "the", " ", "intersection", " ",
           "with", " ", "each", " ", "surface"}]}], ",", " ", 
        RowBox[{"Ex", ".", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"coords", ".", " ", "intersection"}], " ", "surface1"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"coords", ".", " ", "intersection"}], " ", "surface1"}], 
            "}"}], ",", " ", "..."}], " ", "}"}]}]}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"opticalLength", "=", 
       RowBox[{"Total", "[", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"\[Sqrt]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "^", "2"}], "+", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "^", "2"}], "+", 
              RowBox[{
               RowBox[{"#", "[", 
                RowBox[{"[", "3", "]"}], "]"}], "^", "2"}]}], ")"}]}], "&"}], 
          ",", "opticalLength", ",", 
          RowBox[{"{", "2", "}"}]}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"refractiveIndexs", " ", "\[Rule]", " ", 
         RowBox[{
          RowBox[{
           RowBox[{
           "a", " ", "list", " ", "of", " ", "lists", " ", "with", " ", "the",
             " ", "refractive", " ", "index", " ", "for", " ", "each", " ", 
            RowBox[{"ray", ".", " ", 
             RowBox[{"Length", "[", "refractiveIndexs", "]"}]}]}], "+", "1"}],
           " ", "\[Equal]", " ", 
          RowBox[{
           RowBox[{"Length", "[", "intersection", "]"}], " ", "and", " ", 
           RowBox[{"Length", "[", 
            RowBox[{"refractiveIndexs", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}]}], " ", "\[Equal]", " ", 
          RowBox[{
           RowBox[{"Length", "[", 
            RowBox[{"intersection", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "]"}], " ", "for", " ", "all", 
           " ", "i"}]}]}], ",", " ", "j"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"OptionValue", "[", "\"\<returnHistogram\>\"", "]"}], 
         "\[Equal]", " ", "True"}], ",", 
        RowBox[{"Print", "[", 
         RowBox[{"Histogram", "[", 
          RowBox[{"k0", " ", 
           RowBox[{"(", 
            RowBox[{"opticalLength", "-", 
             RowBox[{"Min", "[", "opticalLength", "]"}]}], ")"}], "mm"}], 
          "]"}], "]"}]}], "]"}], ";", "\[IndentingNewLine]", 
      "opticalLength"}]}], "\[IndentingNewLine]", "]"}]}], 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "This", " ", "function", " ", "gives", " ", "the", " ", "optical", " ", 
     "path", " ", "length", " ", "along", " ", "a", " ", "ray"}], ",", " ", 
    RowBox[{
    "considering", " ", "a", " ", "different", " ", "refractive", " ", 
     "index", " ", "for", " ", "each", " ", 
     RowBox[{"ray", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", "Rotations", " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "RotationX", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{"\"\<units\>\"", "\[Rule]", " ", "\"\<grad\>\""}], "}"}]}], 
   ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"\"\<units\>\"", " ", "\[Rule]", " ", 
     RowBox[{"units", " ", "for", " ", "angles"}]}], ",", " ", 
    RowBox[{
     RowBox[{"could", " ", "be", " ", "\"\<grad\>\"", " ", "or", " ", 
      RowBox[{"\"\<rad\>\"", ".", " ", "Is"}], " ", "expected", " ", "that", 
      " ", "for", " ", "\"\<units\>\""}], " ", "\[Rule]", " ", 
     RowBox[{"\"\<rad\>\"", " ", "to", " ", "use", " ", 
      RowBox[{"integer", "/", "half"}], " ", 
      RowBox[{"integer", "/", " ", "so"}], " ", "on", " ", "multiple", " ", 
      "of", " ", "\[Pi]"}]}], ",", " ", 
    RowBox[{
     RowBox[{
     "in", " ", "this", " ", "way", " ", "exact", " ", "results", " ", "and", 
      " ", "simplifications", " ", "are", " ", 
      RowBox[{"perimtted", ".", " ", "\[IndentingNewLine]", "For"}], " ", 
      "\"\<units\>\""}], " ", "\[Rule]", " ", "\"\<grad\>\""}], ",", " ", 
    RowBox[{"angle", " ", "is", " ", 
     RowBox[{"numericized", "."}]}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RotationX", "[", 
    RowBox[{"angle_", ",", "list_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"matrix", ",", "a"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"OptionValue", "[", "\"\<units\>\"", "]"}], "\[Equal]", 
          "\"\<grad\>\""}], ",", 
         RowBox[{
          RowBox[{"Pi", "/", "180."}], " ", "*", "angle"}], ",", "angle"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"matrix", "=", 
       RowBox[{"(", GridBox[{
          {"1", "0", "0"},
          {"0", 
           RowBox[{"Cos", "[", "a", "]"}], 
           RowBox[{"-", 
            RowBox[{"Sin", "[", "a", "]"}]}]},
          {"0", 
           RowBox[{"Sin", "[", "a", "]"}], 
           RowBox[{"Cos", "[", "a", "]"}]}
         }], ")"}]}], ";", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"angle", " ", "\[Rule]", " ", 
         RowBox[{"the", " ", "angle", " ", "of", " ", "rotation"}]}], ","}], 
       " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", ".", "matrix"}], "&"}], ",", "list"}], "]"}]}]}], 
    RowBox[{"(*", "          ", 
     RowBox[{"list", " ", "\[Rule]", " ", 
      RowBox[{
      "the", " ", "list", " ", "of", " ", "3", "D", " ", "coordinates", " ", 
       "on", " ", "which", " ", "rotation", " ", "is", " ", 
       RowBox[{"applied", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "]"}]}], 
  RowBox[{"(*", 
   RowBox[{
   "This", " ", "function", " ", "roatates", " ", "a", " ", "list", " ", "of",
     " ", "coordinates", " ", "around", " ", "axis", " ", 
    RowBox[{"X", "."}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "InverseRotationX", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"\"\<units\>\"", "\[Rule]", " ", "\"\<grad\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"InverseRotationX", "[", 
    RowBox[{"angle_", ",", "list_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"matrix", ",", "a"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"OptionValue", "[", "\"\<units\>\"", "]"}], "\[Equal]", 
          "\"\<grad\>\""}], ",", 
         RowBox[{
          RowBox[{"Pi", "/", "180."}], " ", "*", "angle"}], ",", "angle"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"matrix", "=", 
       RowBox[{"(", GridBox[{
          {"1", "0", "0"},
          {"0", 
           RowBox[{"Cos", "[", "a", "]"}], 
           RowBox[{"Sin", "[", "a", "]"}]},
          {"0", 
           RowBox[{"-", 
            RowBox[{"Sin", "[", "a", "]"}]}], 
           RowBox[{"Cos", "[", "a", "]"}]}
         }], ")"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", ".", "matrix"}], "&"}], ",", "list"}], "]"}]}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  RowBox[{"(*", 
   RowBox[{
   "This", " ", "function", " ", "roatates", " ", "a", " ", "list", " ", "of",
     " ", "coordinates", " ", "around", " ", "axis", " ", "X", " ", "in", " ",
     "the", " ", "opposite", " ", "sense", " ", "compared", " ", "with", " ", 
    RowBox[{"RotationX", "."}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "RotationY", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"\"\<units\>\"", "\[Rule]", " ", "\"\<grad\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RotationY", "[", 
    RowBox[{"angle_", ",", "list_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"matrix", ",", "a"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"OptionValue", "[", "\"\<units\>\"", "]"}], "\[Equal]", 
          "\"\<grad\>\""}], ",", 
         RowBox[{
          RowBox[{"Pi", "/", "180."}], " ", "*", "angle"}], ",", "angle"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"matrix", "=", 
       RowBox[{"(", GridBox[{
          {
           RowBox[{"Cos", "[", "a", "]"}], "0", 
           RowBox[{"-", 
            RowBox[{"Sin", "[", "a", "]"}]}]},
          {"0", "1", "0"},
          {
           RowBox[{"Sin", "[", "a", "]"}], "0", 
           RowBox[{"Cos", "[", "a", "]"}]}
         }], ")"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", ".", "matrix"}], "&"}], ",", "list"}], "]"}]}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  RowBox[{"(*", 
   RowBox[{
   "This", " ", "function", " ", "roatates", " ", "a", " ", "list", " ", "of",
     " ", "coordinates", " ", "around", " ", "axis", " ", 
    RowBox[{"Y", "."}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "InverseRotationY", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"\"\<units\>\"", "\[Rule]", " ", "\"\<grad\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"InverseRotationY", "[", 
    RowBox[{"angle_", ",", "list_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"matrix", ",", "a"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"OptionValue", "[", "\"\<units\>\"", "]"}], "\[Equal]", 
          "\"\<grad\>\""}], ",", 
         RowBox[{
          RowBox[{"Pi", "/", "180."}], " ", "*", "angle"}], ",", "angle"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"matrix", "=", 
       RowBox[{"(", GridBox[{
          {
           RowBox[{"Cos", "[", "a", "]"}], "0", 
           RowBox[{"Sin", "[", "a", "]"}]},
          {"0", "1", "0"},
          {
           RowBox[{"-", 
            RowBox[{"Sin", "[", "a", "]"}]}], "0", 
           RowBox[{"Cos", "[", "a", "]"}]}
         }], ")"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", ".", "matrix"}], "&"}], ",", "list"}], "]"}]}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  RowBox[{"(*", 
   RowBox[{
   "This", " ", "function", " ", "roatates", " ", "a", " ", "list", " ", "of",
     " ", "coordinates", " ", "around", " ", "axis", " ", "Y", " ", "in", " ",
     "the", " ", "opposite", " ", "sense", " ", "compared", " ", "with", " ", 
    RowBox[{"RotationY", "."}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "RotationZ", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"\"\<units\>\"", "\[Rule]", " ", "\"\<grad\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RotationZ", "[", 
    RowBox[{"angle_", ",", "list_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"matrix", ",", "a"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"OptionValue", "[", "\"\<units\>\"", "]"}], "\[Equal]", 
          "\"\<grad\>\""}], ",", 
         RowBox[{
          RowBox[{"Pi", "/", "180."}], " ", "*", "angle"}], ",", "angle"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"matrix", "=", 
       RowBox[{"(", GridBox[{
          {
           RowBox[{"Cos", "[", "a", "]"}], 
           RowBox[{"-", 
            RowBox[{"Sin", "[", "a", "]"}]}], "0"},
          {
           RowBox[{"Sin", "[", "a", "]"}], 
           RowBox[{"Cos", "[", "a", "]"}], "0"},
          {"0", "0", "1"}
         }], ")"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", ".", "matrix"}], "&"}], ",", "list"}], "]"}]}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  RowBox[{"(*", 
   RowBox[{
   "This", " ", "function", " ", "roatates", " ", "a", " ", "list", " ", "of",
     " ", "coordinates", " ", "around", " ", "axis", " ", 
    RowBox[{"Z", "."}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "InverseRotationZ", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"\"\<units\>\"", "\[Rule]", " ", "\"\<grad\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"InverseRotationZ", "[", 
    RowBox[{"angle_", ",", "list_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"matrix", ",", "a"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"OptionValue", "[", "\"\<units\>\"", "]"}], "\[Equal]", 
          "\"\<grad\>\""}], ",", 
         RowBox[{
          RowBox[{"Pi", "/", "180."}], " ", "*", "angle"}], ",", "angle"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"matrix", "=", 
       RowBox[{"(", GridBox[{
          {
           RowBox[{"Cos", "[", "a", "]"}], 
           RowBox[{"Sin", "[", "a", "]"}], "0"},
          {
           RowBox[{"-", 
            RowBox[{"Sin", "[", "a", "]"}]}], 
           RowBox[{"Cos", "[", "a", "]"}], "0"},
          {"0", "0", "1"}
         }], ")"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", ".", "matrix"}], "&"}], ",", "list"}], "]"}]}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  RowBox[{"(*", 
   RowBox[{
   "This", " ", "function", " ", "roatates", " ", "a", " ", "list", " ", "of",
     " ", "coordinates", " ", "around", " ", "axis", " ", "Z", " ", "in", " ",
     "the", " ", "opposite", " ", "sense", " ", "compared", " ", "with", " ", 
    RowBox[{"RotationZ", "."}]}], " ", "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "RotationAxis", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"\"\<units\>\"", "\[Rule]", " ", "\"\<grad\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RotationAxis", "[", 
    RowBox[{"angle_", ",", "direction_", ",", "list_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"matrix", ",", "a", ",", "ux", ",", "uy", ",", "uz"}], "}"}], 
     ",", 
     RowBox[{"(*", 
      RowBox[{"direction", " ", "\[Rule]", " ", 
       RowBox[{
       "direction", " ", "vector", " ", "around", " ", "which", " ", 
        "rotation", " ", "is", " ", 
        RowBox[{"performed", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"OptionValue", "[", "\"\<units\>\"", "]"}], "\[Equal]", 
          "\"\<grad\>\""}], ",", 
         RowBox[{
          RowBox[{"Pi", "/", "180."}], " ", "*", "angle"}], ",", "angle"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"ux", ",", "uy", ",", "uz"}], "}"}], "=", 
       RowBox[{"direction", "/", 
        RowBox[{"Norm", "[", "direction", "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"matrix", "=", 
       RowBox[{"(", GridBox[{
          {
           RowBox[{
            RowBox[{"Cos", "[", "a", "]"}], "+", 
            RowBox[{
             RowBox[{"ux", "^", "2"}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"Cos", "[", "a", "]"}]}], ")"}]}]}], 
           RowBox[{
            RowBox[{"ux", " ", "uy", " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"Cos", "[", "a", "]"}]}], ")"}]}], "-", 
            RowBox[{"uz", " ", 
             RowBox[{"Sin", "[", "a", "]"}]}]}], 
           RowBox[{
            RowBox[{"ux", " ", "uz", " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"Cos", "[", "a", "]"}]}], ")"}]}], "+", 
            RowBox[{"uy", " ", 
             RowBox[{"Sin", "[", "a", "]"}]}]}]},
          {
           RowBox[{
            RowBox[{"uy", " ", "ux", " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"Cos", "[", "a", "]"}]}], ")"}]}], "+", 
            RowBox[{"uz", " ", 
             RowBox[{"Sin", "[", "a", "]"}]}]}], 
           RowBox[{
            RowBox[{"Cos", "[", "a", "]"}], "+", 
            RowBox[{
             RowBox[{"uy", "^", "2"}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"Cos", "[", "a", "]"}]}], ")"}]}]}], 
           RowBox[{
            RowBox[{"uy", " ", "uz", " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"Cos", "[", "a", "]"}]}], ")"}]}], "-", 
            RowBox[{"ux", " ", 
             RowBox[{"Sin", "[", "a", "]"}]}]}]},
          {
           RowBox[{
            RowBox[{"uz", " ", "ux", " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"Cos", "[", "a", "]"}]}], ")"}]}], "-", 
            RowBox[{"uy", " ", 
             RowBox[{"Sin", "[", "a", "]"}]}]}], 
           RowBox[{
            RowBox[{"uz", " ", "uy", " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"Cos", "[", "a", "]"}]}], ")"}]}], "+", 
            RowBox[{"ux", " ", 
             RowBox[{"Sin", "[", "a", "]"}]}]}], 
           RowBox[{
            RowBox[{"Cos", "[", "a", "]"}], "+", 
            RowBox[{
             RowBox[{"uz", "^", "2"}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"Cos", "[", "a", "]"}]}], ")"}]}]}]}
         }], ")"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", ".", "matrix"}], "&"}], ",", "list"}], "]"}]}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
     "This", " ", "function", " ", "rotates", " ", "a", " ", "list", " ", 
      "of", " ", "coordinates", " ", "around", " ", "an", " ", "arbitrary", 
      " ", "axis", " ", "defned", " ", "by", " ", "the", " ", "direction", 
      " ", "vector", " ", "direction"}], " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"ux", ",", " ", "uy", ",", " ", "uz"}], "}"}]}], ",", " ", 
    RowBox[{
    "in", " ", "the", " ", "opposite", " ", "sense", " ", "compared", " ", 
     "with", " ", 
     RowBox[{"RotationAxis", "."}]}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "InverseRotationAxis", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"\"\<units\>\"", "\[Rule]", " ", "\"\<grad\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"InverseRotationAxis", "[", 
    RowBox[{"angle_", ",", "direction_", ",", "list_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"matrix", ",", "a", ",", "ux", ",", "uy", ",", "uz"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"OptionValue", "[", "\"\<units\>\"", "]"}], "\[Equal]", 
          "\"\<grad\>\""}], ",", 
         RowBox[{
          RowBox[{"Pi", "/", "180."}], " ", "*", "angle"}], ",", "angle"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"matrix", "=", 
       RowBox[{"(", GridBox[{
          {
           RowBox[{
            RowBox[{"Cos", "[", "a", "]"}], "+", 
            RowBox[{
             RowBox[{"ux", "^", "2"}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"Cos", "[", "a", "]"}]}], ")"}]}]}], 
           RowBox[{
            RowBox[{"ux", " ", "uy", " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"Cos", "[", "a", "]"}]}], ")"}]}], "+", 
            RowBox[{"uz", " ", 
             RowBox[{"Sin", "[", "a", "]"}]}]}], 
           RowBox[{
            RowBox[{"ux", " ", "uz", " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"Cos", "[", "a", "]"}]}], ")"}]}], "-", 
            RowBox[{"uy", " ", 
             RowBox[{"Sin", "[", "a", "]"}]}]}]},
          {
           RowBox[{
            RowBox[{"uy", " ", "ux", " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"Cos", "[", "a", "]"}]}], ")"}]}], "-", 
            RowBox[{"uz", " ", 
             RowBox[{"Sin", "[", "a", "]"}]}]}], 
           RowBox[{
            RowBox[{"Cos", "[", "a", "]"}], "+", 
            RowBox[{
             RowBox[{"uy", "^", "2"}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"Cos", "[", "a", "]"}]}], ")"}]}]}], 
           RowBox[{
            RowBox[{"uy", " ", "uz", " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"Cos", "[", "a", "]"}]}], ")"}]}], "+", 
            RowBox[{"ux", " ", 
             RowBox[{"Sin", "[", "a", "]"}]}]}]},
          {
           RowBox[{
            RowBox[{"uz", " ", "ux", " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"Cos", "[", "a", "]"}]}], ")"}]}], "+", 
            RowBox[{"uy", " ", 
             RowBox[{"Sin", "[", "a", "]"}]}]}], 
           RowBox[{
            RowBox[{"uz", " ", "uy", " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"Cos", "[", "a", "]"}]}], ")"}]}], "-", 
            RowBox[{"ux", " ", 
             RowBox[{"Sin", "[", "a", "]"}]}]}], 
           RowBox[{
            RowBox[{"Cos", "[", "a", "]"}], "+", 
            RowBox[{
             RowBox[{"uz", "^", "2"}], " ", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"Cos", "[", "a", "]"}]}], ")"}]}]}]}
         }], ")"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", ".", "matrix"}], "&"}], ",", "list"}], "]"}]}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "This", " ", "function", " ", "rotates", " ", "a", " ", "list", " ", "of",
      " ", "coordinates", " ", "around", " ", "an", " ", "arbitrary", " ", 
     "axis", " ", "defned", " ", "by", " ", "the", " ", "direction", " ", 
     "vector", " ", "direction"}], " ", "=", " ", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"ux", ",", " ", "uy", ",", " ", "uz"}], "}"}], "."}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Improper", " ", "Rotations"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "ReflexionX", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"\"\<units\>\"", "\[Rule]", " ", "\"\<grad\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ReflexionX", "[", 
   RowBox[{"angle_", ",", "list_", ",", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"matrix", ",", "a"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"a", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"OptionValue", "[", "\"\<units\>\"", "]"}], "\[Equal]", 
         "\"\<grad\>\""}], ",", 
        RowBox[{
         RowBox[{"Pi", "/", "180."}], " ", "*", "angle"}], ",", "angle"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"matrix", "=", 
      RowBox[{"(", GridBox[{
         {"1", "0", "0"},
         {"0", 
          RowBox[{"Cos", "[", "a", "]"}], 
          RowBox[{"Sin", "[", "a", "]"}]},
         {"0", 
          RowBox[{"Sin", "[", "a", "]"}], 
          RowBox[{"-", 
           RowBox[{"Cos", "[", "a", "]"}]}]}
        }], ")"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"#", ".", "matrix"}], "&"}], ",", "list"}], "]"}]}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "ReflexionY", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"\"\<units\>\"", "\[Rule]", " ", "\"\<grad\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ReflexionY", "[", 
   RowBox[{"angle_", ",", "list_", ",", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"matrix", ",", "a"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"a", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"OptionValue", "[", "\"\<units\>\"", "]"}], "\[Equal]", 
         "\"\<grad\>\""}], ",", 
        RowBox[{
         RowBox[{"Pi", "/", "180."}], " ", "*", "angle"}], ",", "angle"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"matrix", "=", 
      RowBox[{"(", GridBox[{
         {
          RowBox[{"Cos", "[", "a", "]"}], "0", 
          RowBox[{"Sin", "[", "a", "]"}]},
         {"0", "1", "0"},
         {
          RowBox[{"Sin", "[", "a", "]"}], "0", 
          RowBox[{"-", 
           RowBox[{"Cos", "[", "a", "]"}]}]}
        }], ")"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"#", ".", "matrix"}], "&"}], ",", "list"}], "]"}]}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "ReflexionZ", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{"\"\<units\>\"", "\[Rule]", " ", "\"\<grad\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ReflexionZ", "[", 
    RowBox[{"angle_", ",", "list_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"matrix", ",", "a"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"a", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"OptionValue", "[", "\"\<units\>\"", "]"}], "\[Equal]", 
          "\"\<grad\>\""}], ",", 
         RowBox[{
          RowBox[{"Pi", "/", "180."}], " ", "*", "angle"}], ",", "angle"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"matrix", "=", 
       RowBox[{"(", GridBox[{
          {
           RowBox[{"Cos", "[", "a", "]"}], 
           RowBox[{"Sin", "[", "a", "]"}], "0"},
          {
           RowBox[{"Sin", "[", "a", "]"}], 
           RowBox[{"-", 
            RowBox[{"Cos", "[", "a", "]"}]}], "0"},
          {"0", "0", "1"}
         }], ")"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Map", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"#", ".", "matrix"}], "&"}], ",", "list"}], "]"}]}]}], 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"ReflexionAxis", "..."}], "will", " ", "be", " ", "finished", 
      " ", "in", " ", "the", " ", "next", " ", 
      RowBox[{"versions", "."}]}], "*)"}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  StyleBox[
   RowBox[{"(*", " ", 
    RowBox[{"Geometric", " ", "Propagation", " ", "Operators"}], " ", "*)"}],
   FontSize->18], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"If", " ", "4", "th", " ", "param", " ", "is", " ", "present"}], 
    ",", " ", 
    RowBox[{"represent", " ", "wavelength", " ", "in", " ", "\[Mu]m"}], ",", 
    " ", 
    RowBox[{
    "in", " ", "not", " ", "present", " ", "the", " ", "wavelength", " ", 
     "is", " ", "that", " ", "defined", " ", "at", " ", "the", " ", 
     RowBox[{"beginning", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "The", " ", "interpolation", " ", "order", " ", "is", " ", "restricted", 
     " ", "to", " ", "1", " ", "for", " ", "hexagonal", " ", "or", " ", 
     "other", " ", "non"}], "-", 
    RowBox[{"uniform", " ", 
     RowBox[{"grids", "."}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Options", "[", "GeometricOperator", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<InterpolationOrder\>\"", "\[Rule]", " ", "6"}], ",", 
      RowBox[{"\"\<uniformGrid\>\"", "\[Rule]", " ", "False"}], ",", 
      RowBox[{"\"\<curvatureRadius\>\"", "\[Rule]", "0"}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"\"\<InterpolationOrder\>\"", " ", "\[Rule]", " ", 
    RowBox[{
    "the", " ", "interpolation", " ", "order", " ", "of", " ", "the", " ", 
     "interpolation", " ", "functions", " ", "for", " ", "optical", " ", 
     "path", " ", "length", " ", "and"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GeometricOperator", "[", 
     RowBox[{"rayCS_List", ",", "rayCE_List", ",", "rayOL_List", ",", 
      RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], "[", "f_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "interpolationOrder", ",", "rayCoordinateStart", ",", 
       "rayCoordinateEnd", ",", "opticalLength", ",", "opticalLengthMean", 
       ",", "mesh", ",", "meshE", ",", "area", ",", "areaE", ",", "index", 
       ",", "indexE", ",", "sqRD", ",", "sqRDEnd", ",", "X", ",", "Y", ",", 
       "S", ",", "x", ",", "y", ",", "cR", ",", "return"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"interpolationOrder", "=", 
       RowBox[{"OptionValue", "[", "\"\<InterpolationOrder\>\"", "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"OptionValue", "[", "\"\<uniformGrid\>\"", "]"}], "\[Equal]",
          "False"}], ",", 
        RowBox[{"interpolationOrder", "=", "1"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"cR", "=", 
       RowBox[{"OptionValue", "[", "\"\<curvatureRadius\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"rayCoordinateStart", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", 
            RowBox[{"{", 
             RowBox[{"1", ",", "2"}], "}"}], "]"}], "]"}], "&"}], ",", 
         "rayCS"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"rayCoordinateEnd", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", 
            RowBox[{"{", 
             RowBox[{"1", ",", "2"}], "}"}], "]"}], "]"}], "&"}], ",", 
         "rayCE"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"opticalLengthMean", "=", 
       RowBox[{"Mean", "[", "opticalLength", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"mesh", "=", 
       RowBox[{"VoronoiMesh", "[", "rayCoordinateStart", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"area", "=", 
       RowBox[{"PropertyValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"mesh", ",", "2"}], "}"}], ",", "MeshCellMeasure"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"index", "=", 
       RowBox[{"Flatten", "@", 
        RowBox[{
         RowBox[{"Nearest", "[", 
          RowBox[{"rayCoordinateStart", "\[Rule]", "Automatic"}], "]"}], "@", 
         RowBox[{"PropertyValue", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"mesh", ",", "2"}], "}"}], ",", "MeshCellCentroid"}], 
          "]"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"rayCoordinateStart", "=", 
       RowBox[{"rayCoordinateStart", "[", 
        RowBox[{"[", "index", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"sqRD", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
             RowBox[{"Sqrt", "[", 
              RowBox[{"1", "/", 
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "}"}], "&"}], "/@", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{"rayCoordinateStart", ",", "area"}], "}"}], "]"}]}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "1"}], ",", 
         RowBox[{"\"\<ExtrapolationHandler\>\"", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "&"}], ",", 
            RowBox[{"\"\<WarningMessage\>\"", "\[Rule]", "False"}]}], 
           "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"meshE", "=", 
       RowBox[{"VoronoiMesh", "[", "rayCoordinateEnd", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"areaE", "=", 
       RowBox[{"PropertyValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"meshE", ",", "2"}], "}"}], ",", "MeshCellMeasure"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"indexE", "=", 
       RowBox[{"Flatten", "@", 
        RowBox[{
         RowBox[{"Nearest", "[", 
          RowBox[{"rayCoordinateEnd", "\[Rule]", "Automatic"}], "]"}], "@", 
         RowBox[{"PropertyValue", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"meshE", ",", "2"}], "}"}], ",", "MeshCellCentroid"}], 
          "]"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"sqRDEnd", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
             RowBox[{"Sqrt", "[", 
              RowBox[{"1", "/", 
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "}"}], "&"}], "/@", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"rayCoordinateEnd", "[", 
              RowBox[{"[", "indexE", "]"}], "]"}], ",", "areaE"}], "}"}], 
           "]"}]}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "1"}], ",", 
         RowBox[{"\"\<ExtrapolationHandler\>\"", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"0", "&"}], ",", 
            RowBox[{"\"\<WarningMessage\>\"", "\[Rule]", "False"}]}], 
           "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"rayCoordinateEnd", "=", 
       RowBox[{"rayCoordinateEnd", "[", 
        RowBox[{"[", "index", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"opticalLength", "=", 
       RowBox[{"rayOL", "[", 
        RowBox[{"[", "index", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"X", ":=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "2"}], "]"}], "]"}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "}"}], "&"}], ",", 
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{"rayCoordinateStart", ",", "rayCoordinateEnd"}], "}"}], 
            "]"}]}], "]"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "1"}], ",", 
         RowBox[{"\"\<ExtrapolationHandler\>\"", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"#1", "&"}], ",", 
            RowBox[{"\"\<WarningMessage\>\"", "\[Rule]", "False"}]}], 
           "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Y", ":=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "2"}], "]"}], "]"}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "}"}], "&"}], ",", 
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{"rayCoordinateStart", ",", "rayCoordinateEnd"}], "}"}], 
            "]"}]}], "]"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "1"}], ",", 
         RowBox[{"\"\<ExtrapolationHandler\>\"", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"#2", "&"}], ",", 
            RowBox[{"\"\<WarningMessage\>\"", "\[Rule]", "False"}]}], 
           "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"cR", "\[Equal]", "0"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"S", ":=", 
          RowBox[{"Interpolation", "[", 
           RowBox[{
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "2"}], "]"}], "]"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "&"}], ",", 
              RowBox[{"Transpose", "[", 
               RowBox[{"{", 
                RowBox[{"opticalLength", ",", "rayCoordinateStart"}], "}"}], 
               "]"}]}], "]"}], ",", 
            RowBox[{"InterpolationOrder", "\[Rule]", "interpolationOrder"}], 
            ",", 
            RowBox[{"\"\<ExtrapolationHandler\>\"", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"opticalLengthMean", "&"}], ",", 
               RowBox[{"\"\<WarningMessage\>\"", "\[Rule]", "True"}]}], 
              "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"return", "[", 
           RowBox[{"x_", ",", "y_"}], "]"}], "=", 
          RowBox[{
           RowBox[{"f", "[", 
            RowBox[{
             RowBox[{"X", "[", 
              RowBox[{"x", ",", "y"}], "]"}], ",", 
             RowBox[{"Y", "[", 
              RowBox[{"x", ",", "y"}], "]"}]}], "]"}], "*", 
           RowBox[{"Exp", "[", 
            RowBox[{"\[ImaginaryI]", " ", "k0", " ", 
             RowBox[{"S", "[", 
              RowBox[{"x", ",", "y"}], "]"}]}], "]"}], "*", 
           RowBox[{
            RowBox[{"sqRDEnd", "[", 
             RowBox[{"x", ",", "y"}], "]"}], "/", 
            RowBox[{"sqRD", "[", 
             RowBox[{
              RowBox[{"X", "[", 
               RowBox[{"x", ",", "y"}], "]"}], ",", 
              RowBox[{"Y", "[", 
               RowBox[{"x", ",", "y"}], "]"}]}], "]"}]}]}]}], ";"}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"S", ":=", 
          RowBox[{"Interpolation", "[", 
           RowBox[{
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "2"}], "]"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "+", 
                  SqrtBox[
                   RowBox[{
                    RowBox[{"cR", "^", "2"}], "+", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}], "^", "2"}], "+", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "2"}], "]"}], "]"}], "^", "2"}]}], 
                    ")"}]}]]}]}], "}"}], "&"}], ",", 
              RowBox[{"Transpose", "[", 
               RowBox[{"{", 
                RowBox[{"opticalLength", ",", "rayCoordinateStart"}], "}"}], 
               "]"}]}], "]"}], ",", 
            RowBox[{"InterpolationOrder", "\[Rule]", "interpolationOrder"}], 
            ",", 
            RowBox[{"\"\<ExtrapolationHandler\>\"", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"opticalLengthMean", "&"}], ",", 
               RowBox[{"\"\<WarningMessage\>\"", "\[Rule]", "True"}]}], 
              "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"return", "[", 
           RowBox[{"x_", ",", "y_"}], "]"}], "=", 
          RowBox[{
           RowBox[{"f", "[", 
            RowBox[{
             RowBox[{"X", "[", 
              RowBox[{"x", ",", "y"}], "]"}], ",", 
             RowBox[{"Y", "[", 
              RowBox[{"x", ",", "y"}], "]"}]}], "]"}], "*", 
           RowBox[{"Exp", "[", 
            RowBox[{"\[ImaginaryI]", " ", "k0", 
             RowBox[{"(", " ", 
              RowBox[{
               RowBox[{"S", "[", 
                RowBox[{
                 RowBox[{"X", "[", 
                  RowBox[{"x", ",", "y"}], "]"}], ",", 
                 RowBox[{"Y", "[", 
                  RowBox[{"x", ",", "y"}], "]"}]}], "]"}], "-", 
               SqrtBox[
                RowBox[{
                 RowBox[{"cR", "^", "2"}], "+", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"X", "[", 
                    RowBox[{"x", ",", "y"}], "]"}], "^", "2"}], "+", 
                   RowBox[{
                    RowBox[{"Y", "[", 
                    RowBox[{"x", ",", "y"}], "]"}], "^", "2"}]}], ")"}]}]]}], 
              ")"}]}], "]"}], "*", 
           RowBox[{
            RowBox[{"sqRDEnd", "[", 
             RowBox[{"x", ",", "y"}], "]"}], "/", 
            RowBox[{"sqRD", "[", 
             RowBox[{
              RowBox[{"X", "[", 
               RowBox[{"x", ",", "y"}], "]"}], ",", 
              RowBox[{"Y", "[", 
               RowBox[{"x", ",", "y"}], "]"}]}], "]"}]}]}]}], ";"}]}], " ", 
       "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", "return"}]}],
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"GeometricOperator", "[", 
     RowBox[{
     "rayCS_List", ",", "rayCE_List", ",", "rayOL_List", ",", "waveLength_", 
      ",", 
      RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], "[", "f_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "interpolationOrder", ",", "rayCoordinateStart", ",", 
       "rayCoordinateEnd", ",", "opticalLength", ",", "opticalLengthMean", 
       ",", "mesh", ",", "meshE", ",", "area", ",", "areaE", ",", "index", 
       ",", "indexE", ",", "sqRD", ",", "sqRDEnd", ",", "X", ",", "Y", ",", 
       "S", ",", "x", ",", "y", ",", "cR", ",", "return", ",", "k0Local"}], 
      "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"interpolationOrder", "=", 
       RowBox[{"OptionValue", "[", "\"\<InterpolationOrder\>\"", "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"OptionValue", "[", "\"\<uniformGrid\>\"", "]"}], "\[Equal]",
          "False"}], ",", 
        RowBox[{"interpolationOrder", "=", "1"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"cR", "=", 
       RowBox[{"OptionValue", "[", "\"\<curvatureRadius\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"rayCoordinateStart", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", 
            RowBox[{"{", 
             RowBox[{"1", ",", "2"}], "}"}], "]"}], "]"}], "&"}], ",", 
         "rayCS"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"rayCoordinateEnd", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", 
            RowBox[{"{", 
             RowBox[{"1", ",", "2"}], "}"}], "]"}], "]"}], "&"}], ",", 
         "rayCE"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"opticalLengthMean", "=", 
       RowBox[{"Mean", "[", "opticalLength", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"mesh", "=", 
       RowBox[{"VoronoiMesh", "[", "rayCoordinateStart", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"area", "=", 
       RowBox[{"PropertyValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"mesh", ",", "2"}], "}"}], ",", "MeshCellMeasure"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"index", "=", 
       RowBox[{"Flatten", "@", 
        RowBox[{
         RowBox[{"Nearest", "[", 
          RowBox[{"rayCoordinateStart", "\[Rule]", "Automatic"}], "]"}], "@", 
         RowBox[{"PropertyValue", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"mesh", ",", "2"}], "}"}], ",", "MeshCellCentroid"}], 
          "]"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"k0Local", "=", 
       RowBox[{"2", " ", 
        RowBox[{"\[Pi]", "/", "waveLength"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"rayCoordinateStart", "=", 
       RowBox[{"rayCoordinateStart", "[", 
        RowBox[{"[", "index", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"sqRD", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
             RowBox[{"Sqrt", "[", 
              RowBox[{"1", "/", 
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "}"}], "&"}], "/@", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{"rayCoordinateStart", ",", "area"}], "}"}], "]"}]}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "1"}], ",", 
         RowBox[{"\"\<ExtrapolationHandler\>\"", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "&"}], ",", 
            RowBox[{"\"\<WarningMessage\>\"", "\[Rule]", "False"}]}], 
           "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"meshE", "=", 
       RowBox[{"VoronoiMesh", "[", "rayCoordinateEnd", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"areaE", "=", 
       RowBox[{"PropertyValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"meshE", ",", "2"}], "}"}], ",", "MeshCellMeasure"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"indexE", "=", 
       RowBox[{"Flatten", "@", 
        RowBox[{
         RowBox[{"Nearest", "[", 
          RowBox[{"rayCoordinateEnd", "\[Rule]", "Automatic"}], "]"}], "@", 
         RowBox[{"PropertyValue", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"meshE", ",", "2"}], "}"}], ",", "MeshCellCentroid"}], 
          "]"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"sqRDEnd", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
             RowBox[{"Sqrt", "[", 
              RowBox[{"1", "/", 
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "}"}], "&"}], "/@", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"rayCoordinateEnd", "[", 
              RowBox[{"[", "indexE", "]"}], "]"}], ",", "areaE"}], "}"}], 
           "]"}]}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "1"}], ",", 
         RowBox[{"\"\<ExtrapolationHandler\>\"", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"0", "&"}], ",", 
            RowBox[{"\"\<WarningMessage\>\"", "\[Rule]", "False"}]}], 
           "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"rayCoordinateEnd", "=", 
       RowBox[{"rayCoordinateEnd", "[", 
        RowBox[{"[", "index", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"opticalLength", "=", 
       RowBox[{"rayOL", "[", 
        RowBox[{"[", "index", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"X", ":=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "2"}], "]"}], "]"}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "}"}], "&"}], ",", 
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{"rayCoordinateStart", ",", "rayCoordinateEnd"}], "}"}], 
            "]"}]}], "]"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "1"}], ",", 
         RowBox[{"\"\<ExtrapolationHandler\>\"", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"#1", "&"}], ",", 
            RowBox[{"\"\<WarningMessage\>\"", "\[Rule]", "False"}]}], 
           "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Y", ":=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "2"}], "]"}], "]"}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "}"}], "&"}], ",", 
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{"rayCoordinateStart", ",", "rayCoordinateEnd"}], "}"}], 
            "]"}]}], "]"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "1"}], ",", 
         RowBox[{"\"\<ExtrapolationHandler\>\"", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"#2", "&"}], ",", 
            RowBox[{"\"\<WarningMessage\>\"", "\[Rule]", "False"}]}], 
           "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"cR", "\[Equal]", "0"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"S", ":=", 
          RowBox[{"Interpolation", "[", 
           RowBox[{
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "2"}], "]"}], "]"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "&"}], ",", 
              RowBox[{"Transpose", "[", 
               RowBox[{"{", 
                RowBox[{"opticalLength", ",", "rayCoordinateStart"}], "}"}], 
               "]"}]}], "]"}], ",", 
            RowBox[{"InterpolationOrder", "\[Rule]", "interpolationOrder"}], 
            ",", 
            RowBox[{"\"\<ExtrapolationHandler\>\"", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"opticalLengthMean", "&"}], ",", 
               RowBox[{"\"\<WarningMessage\>\"", "\[Rule]", "True"}]}], 
              "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"return", "[", 
           RowBox[{"x_", ",", "y_"}], "]"}], "=", 
          RowBox[{
           RowBox[{"f", "[", 
            RowBox[{
             RowBox[{"X", "[", 
              RowBox[{"x", ",", "y"}], "]"}], ",", 
             RowBox[{"Y", "[", 
              RowBox[{"x", ",", "y"}], "]"}]}], "]"}], "*", 
           RowBox[{"Exp", "[", 
            RowBox[{"\[ImaginaryI]", " ", "k0Local", " ", 
             RowBox[{"S", "[", 
              RowBox[{"x", ",", "y"}], "]"}]}], "]"}], "*", 
           RowBox[{
            RowBox[{"sqRDEnd", "[", 
             RowBox[{"x", ",", "y"}], "]"}], "/", 
            RowBox[{"sqRD", "[", 
             RowBox[{
              RowBox[{"X", "[", 
               RowBox[{"x", ",", "y"}], "]"}], ",", 
              RowBox[{"Y", "[", 
               RowBox[{"x", ",", "y"}], "]"}]}], "]"}]}]}]}], ";"}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"S", ":=", 
          RowBox[{"Interpolation", "[", 
           RowBox[{
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "2"}], "]"}], "]"}], ",", 
                 RowBox[{
                  RowBox[{"#", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "+", 
                  SqrtBox[
                   RowBox[{
                    RowBox[{"cR", "^", "2"}], "+", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}], "^", "2"}], "+", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "2"}], "]"}], "]"}], "^", "2"}]}], 
                    ")"}]}]]}]}], "}"}], "&"}], ",", 
              RowBox[{"Transpose", "[", 
               RowBox[{"{", 
                RowBox[{"opticalLength", ",", "rayCoordinateStart"}], "}"}], 
               "]"}]}], "]"}], ",", 
            RowBox[{"InterpolationOrder", "\[Rule]", "interpolationOrder"}], 
            ",", 
            RowBox[{"\"\<ExtrapolationHandler\>\"", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"opticalLengthMean", "&"}], ",", 
               RowBox[{"\"\<WarningMessage\>\"", "\[Rule]", "True"}]}], 
              "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"return", "[", 
           RowBox[{"x_", ",", "y_"}], "]"}], "=", 
          RowBox[{
           RowBox[{"f", "[", 
            RowBox[{
             RowBox[{"X", "[", 
              RowBox[{"x", ",", "y"}], "]"}], ",", 
             RowBox[{"Y", "[", 
              RowBox[{"x", ",", "y"}], "]"}]}], "]"}], "*", 
           RowBox[{"Exp", "[", 
            RowBox[{"\[ImaginaryI]", " ", "k0Local", 
             RowBox[{"(", " ", 
              RowBox[{
               RowBox[{"S", "[", 
                RowBox[{
                 RowBox[{"X", "[", 
                  RowBox[{"x", ",", "y"}], "]"}], ",", 
                 RowBox[{"Y", "[", 
                  RowBox[{"x", ",", "y"}], "]"}]}], "]"}], "-", 
               SqrtBox[
                RowBox[{
                 RowBox[{"cR", "^", "2"}], "+", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"X", "[", 
                    RowBox[{"x", ",", "y"}], "]"}], "^", "2"}], "+", 
                   RowBox[{
                    RowBox[{"Y", "[", 
                    RowBox[{"x", ",", "y"}], "]"}], "^", "2"}]}], ")"}]}]]}], 
              ")"}]}], "]"}], "*", 
           RowBox[{
            RowBox[{"sqRDEnd", "[", 
             RowBox[{"x", ",", "y"}], "]"}], "/", 
            RowBox[{"sqRD", "[", 
             RowBox[{
              RowBox[{"X", "[", 
               RowBox[{"x", ",", "y"}], "]"}], ",", 
              RowBox[{"Y", "[", 
               RowBox[{"x", ",", "y"}], "]"}]}], "]"}]}]}]}], ";"}]}], " ", 
       "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", "return"}]}],
     "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "This", " ", "propagation", " ", "operator", " ", "does", " ", "not", " ", 
    "carry", " ", "the", " ", "phase", " ", "difference", " ", 
    RowBox[{"accumumlated", ".", " ", "It"}], " ", "is", " ", "useful", " ", 
    "for", " ", "propagation", " ", "to", " ", "the", " ", "focal", " ", 
    "plane", " ", "together", " ", "with", " ", 
    RowBox[{"scalarRSFOperator", "."}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "AmplitudeGeometricOperator", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<InterpolationOrder\>\"", "\[Rule]", " ", "6"}], ",", 
     RowBox[{"\"\<uniformGrid\>\"", "\[Rule]", " ", "False"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"AmplitudeGeometricOperator", "[", 
     RowBox[{"rayCS_List", ",", "rayCE_List", ",", 
      RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], "[", "f_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "interpolationOrder", ",", "rayCoordinateStart", ",", 
       "rayCoordinateEnd", ",", "mesh", ",", "meshE", ",", "area", ",", 
       "areaE", ",", "index", ",", "indexE", ",", "sqRD", ",", "sqRDEnd", ",",
        "X", ",", "Y", ",", "S", ",", "x", ",", "y", ",", "return"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"interpolationOrder", "=", 
       RowBox[{"OptionValue", "[", "\"\<InterpolationOrder\>\"", "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"OptionValue", "[", "\"\<uniformGrid\>\"", "]"}], "\[Equal]",
          "False"}], ",", 
        RowBox[{"interpolationOrder", "=", "1"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"rayCoordinateStart", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", 
            RowBox[{"{", 
             RowBox[{"1", ",", "2"}], "}"}], "]"}], "]"}], "&"}], ",", 
         "rayCS"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"rayCoordinateEnd", "=", 
       RowBox[{"Map", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", 
            RowBox[{"{", 
             RowBox[{"1", ",", "2"}], "}"}], "]"}], "]"}], "&"}], ",", 
         "rayCE"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"mesh", "=", 
       RowBox[{"VoronoiMesh", "[", "rayCoordinateStart", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"area", "=", 
       RowBox[{"PropertyValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"mesh", ",", "2"}], "}"}], ",", "MeshCellMeasure"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"index", "=", 
       RowBox[{"Flatten", "@", 
        RowBox[{
         RowBox[{"Nearest", "[", 
          RowBox[{"rayCoordinateStart", "\[Rule]", "Automatic"}], "]"}], "@", 
         RowBox[{"PropertyValue", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"mesh", ",", "2"}], "}"}], ",", "MeshCellCentroid"}], 
          "]"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"rayCoordinateStart", "=", 
       RowBox[{"rayCoordinateStart", "[", 
        RowBox[{"[", "index", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"sqRD", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
             RowBox[{"Sqrt", "[", 
              RowBox[{"1", "/", 
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "}"}], "&"}], "/@", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{"rayCoordinateStart", ",", "area"}], "}"}], "]"}]}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "1"}], ",", 
         RowBox[{"\"\<ExtrapolationHandler\>\"", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "&"}], ",", 
            RowBox[{"\"\<WarningMessage\>\"", "\[Rule]", "False"}]}], 
           "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"meshE", "=", 
       RowBox[{"VoronoiMesh", "[", "rayCoordinateEnd", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"areaE", "=", 
       RowBox[{"PropertyValue", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"meshE", ",", "2"}], "}"}], ",", "MeshCellMeasure"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"indexE", "=", 
       RowBox[{"Flatten", "@", 
        RowBox[{
         RowBox[{"Nearest", "[", 
          RowBox[{"rayCoordinateEnd", "\[Rule]", "Automatic"}], "]"}], "@", 
         RowBox[{"PropertyValue", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"meshE", ",", "2"}], "}"}], ",", "MeshCellCentroid"}], 
          "]"}]}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"sqRDEnd", "=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"1", ",", "2"}], "]"}], "]"}], ",", 
             RowBox[{"Sqrt", "[", 
              RowBox[{"1", "/", 
               RowBox[{"#", "[", 
                RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], "}"}], "&"}], "/@", 
          RowBox[{"Transpose", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"rayCoordinateEnd", "[", 
              RowBox[{"[", "indexE", "]"}], "]"}], ",", "areaE"}], "}"}], 
           "]"}]}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "1"}], ",", 
         RowBox[{"\"\<ExtrapolationHandler\>\"", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"0", "&"}], ",", 
            RowBox[{"\"\<WarningMessage\>\"", "\[Rule]", "False"}]}], 
           "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"rayCoordinateEnd", "=", 
       RowBox[{"rayCoordinateEnd", "[", 
        RowBox[{"[", "index", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"X", ":=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "2"}], "]"}], "]"}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "1"}], "]"}], "]"}]}], "}"}], "&"}], ",", 
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{"rayCoordinateStart", ",", "rayCoordinateEnd"}], "}"}], 
            "]"}]}], "]"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "1"}], ",", 
         RowBox[{"\"\<ExtrapolationHandler\>\"", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"#1", "&"}], ",", 
            RowBox[{"\"\<WarningMessage\>\"", "\[Rule]", "False"}]}], 
           "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Y", ":=", 
       RowBox[{"Interpolation", "[", 
        RowBox[{
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{"2", ",", "2"}], "]"}], "]"}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{"1", ",", "2"}], "]"}], "]"}]}], "}"}], "&"}], ",", 
           RowBox[{"Transpose", "[", 
            RowBox[{"{", 
             RowBox[{"rayCoordinateStart", ",", "rayCoordinateEnd"}], "}"}], 
            "]"}]}], "]"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "1"}], ",", 
         RowBox[{"\"\<ExtrapolationHandler\>\"", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"#2", "&"}], ",", 
            RowBox[{"\"\<WarningMessage\>\"", "\[Rule]", "False"}]}], 
           "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"return", "[", 
        RowBox[{"x_", ",", "y_"}], "]"}], "=", 
       RowBox[{
        RowBox[{"f", "[", 
         RowBox[{
          RowBox[{"X", "[", 
           RowBox[{"x", ",", "y"}], "]"}], ",", 
          RowBox[{"Y", "[", 
           RowBox[{"x", ",", "y"}], "]"}]}], "]"}], "*", 
        RowBox[{
         RowBox[{"sqRDEnd", "[", 
          RowBox[{"x", ",", "y"}], "]"}], "/", 
         RowBox[{"sqRD", "[", 
          RowBox[{
           RowBox[{"X", "[", 
            RowBox[{"x", ",", "y"}], "]"}], ",", 
           RowBox[{"Y", "[", 
            RowBox[{"x", ",", "y"}], "]"}]}], "]"}]}]}]}], ";", 
      "\[IndentingNewLine]", "return"}]}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Physical", " ", "Optics"}], "*)"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "FresnelOperator", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<waveLength\>\"", "\[Rule]", " ", "waveLength"}], ",", 
     RowBox[{"\"\<padLevel\>\"", "\[Rule]", " ", "1"}], ",", 
     RowBox[{"\"\<refractiveIndexMedium\>\"", "\[Rule]", " ", "refIndexAir"}],
      ",", 
     RowBox[{"\"\<InterpolationOrder\>\"", "\[Rule]", " ", "3"}], ",", 
     RowBox[{"\"\<returnSamplingTest\>\"", "\[Rule]", " ", "False"}]}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FresnelOperator", "[", 
     RowBox[{"wFP_", ",", "nFP_", ",", "distP_", ",", 
      RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], "[", "f_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "lambda", ",", "padLevel", ",", "k0", ",", "interpolationOrder", ",", 
       "nFPpad", ",", "dkx", ",", "FP", ",", "f0T", ",", "fzT", ",", "x0", 
       ",", "y0", ",", "return"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"lambda", "=", 
       RowBox[{"OptionValue", "[", "\"\<waveLength\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"padLevel", "=", 
       RowBox[{"OptionValue", "[", "\"\<padLevel\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"k0", "=", 
       RowBox[{"2", " ", 
        RowBox[{"Pi", "/", "lambda"}], "*", 
        RowBox[{
        "OptionValue", "[", "\"\<refractiveIndexMedium\>\"", "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"interpolationOrder", "=", 
       RowBox[{"OptionValue", "[", "\"\<InterpolationOrder\>\"", "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"nFPpad", "=", 
       RowBox[{"nFP", "*", "padLevel"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"dkx", "=", 
       RowBox[{"Pi", "/", 
        RowBox[{"(", 
         RowBox[{"wFP", "*", "padLevel"}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"FP", "[", 
        RowBox[{"x0_", ",", "y0_"}], "]"}], "=", 
       RowBox[{"Exp", "[", 
        RowBox[{"\[ImaginaryI]", " ", "k0", "*", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"x0", "^", "2"}], "+", 
            RowBox[{"y0", "^", "2"}]}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{"2", " ", "distP"}], ")"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"OptionValue", "[", "\"\<returnSamplingTest\>\"", "]"}], 
         "\[Equal]", " ", "True"}], ",", 
        RowBox[{"Return", "[", 
         RowBox[{
          RowBox[{"ListLinePlot", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"N", "@", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Re", "[", "#", "]"}], "/", 
                  RowBox[{"Abs", "[", "#", "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"Im", "[", "#", "]"}], "/", 
                  RowBox[{"Abs", "[", "#", "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"Abs", "[", "#", "]"}], "/", 
                  RowBox[{"Max", "[", 
                   RowBox[{"Abs", "[", "#", "]"}], "]"}]}]}], "}"}]}], "&"}], 
             "@", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"f", "[", 
                 RowBox[{"x0", ",", "um"}], "]"}], "*", 
                RowBox[{"FP", "[", 
                 RowBox[{"x0", ",", "0"}], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"x0", ",", 
                 RowBox[{
                  RowBox[{"-", "wFP"}], "+", 
                  RowBox[{"2", " ", 
                   RowBox[{"wFP", "/", "nFP"}]}]}], ",", "wFP", ",", 
                 RowBox[{"2", " ", 
                  RowBox[{"wFP", "/", "nFP"}]}]}], "}"}]}], "]"}]}], ",", 
            RowBox[{"FrameLabel", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"\"\<\>\"", ",", "\"\<\>\""}], "}"}]}], ",", 
            RowBox[{"PlotMarkers", "\[Rule]", "\"\<\[Square]\>\""}], ",", 
            RowBox[{"ImageSize", "\[Rule]", " ", "6000"}], ",", 
            RowBox[{"AspectRatio", "\[Rule]", " ", 
             RowBox[{"1", "/", "20"}]}]}], "]"}], ",", "Module"}], "]"}]}], 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}], ";", "\n", 
      "\[IndentingNewLine]", 
      RowBox[{"f0T", ":=", 
       RowBox[{"RotateLeft", "[", 
        RowBox[{
         RowBox[{"ArrayPad", "[", 
          RowBox[{
           RowBox[{"N", "@", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"f", "[", 
                RowBox[{"x0", ",", "y0"}], "]"}], "*", 
               RowBox[{"FP", "[", 
                RowBox[{"x0", ",", "y0"}], "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"x0", ",", 
                RowBox[{
                 RowBox[{"-", "wFP"}], "+", 
                 RowBox[{"2", " ", 
                  RowBox[{"wFP", "/", "nFP"}]}]}], ",", "wFP", ",", 
                RowBox[{"2", " ", 
                 RowBox[{"wFP", "/", "nFP"}]}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"y0", ",", 
                RowBox[{
                 RowBox[{"-", "wFP"}], "+", 
                 RowBox[{"2", " ", 
                  RowBox[{"wFP", "/", "nFP"}]}]}], ",", "wFP", ",", 
                RowBox[{"2", " ", 
                 RowBox[{"wFP", "/", "nFP"}]}]}], "}"}]}], "]"}]}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"nFPpad", "-", "nFP"}], ")"}], "/", "2"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"nFPpad", "/", "2"}], "-", "1"}], ",", 
           RowBox[{
            RowBox[{"nFPpad", "/", "2"}], "-", "1"}]}], "}"}]}], "]"}]}], ";",
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"fzT", ":=", 
       RowBox[{
        RowBox[{"RotateRight", "[", 
         RowBox[{
          RowBox[{"Fourier", "[", "f0T", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"nFPpad", "/", "2"}], "-", "1"}], ",", 
            RowBox[{
             RowBox[{"nFPpad", "/", "2"}], "-", "1"}]}], "}"}]}], "]"}], "*", 
        "4", " ", "padLevel", " ", 
        RowBox[{
         RowBox[{"wFP", "^", "2"}], "/", 
         RowBox[{"(", 
          RowBox[{"lambda", " ", "distP", " ", "nFP"}], ")"}]}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"return", "[", 
        RowBox[{"x0_", ",", "y0_"}], "]"}], "=", 
       RowBox[{
        RowBox[{"-", " ", "\[ImaginaryI]"}], " ", 
        RowBox[{"Exp", "[", 
         RowBox[{"\[ImaginaryI]", " ", "k0", " ", "distP"}], "]"}], "*", 
        RowBox[{
         RowBox[{"ListInterpolation", "[", 
          RowBox[{
           RowBox[{"ArrayPad", "[", 
            RowBox[{"fzT", ",", 
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{"nFPpad", "-", "nFP"}], ")"}]}], "/", "2"}]}], "]"}], 
           ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "dkx"}], "*", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"nFP", "/", "2"}], "-", "1"}], ")"}]}], ",", 
                RowBox[{"dkx", "*", 
                 RowBox[{"nFP", "/", "2"}]}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "dkx"}], "*", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"nFP", "/", "2"}], "-", "1"}], ")"}]}], ",", 
                RowBox[{"dkx", "*", 
                 RowBox[{"nFP", "/", "2"}]}]}], "}"}]}], "}"}], "*", 
            RowBox[{"distP", "/", "k0"}]}], ",", 
           RowBox[{"InterpolationOrder", "\[Rule]", "interpolationOrder"}], 
           ",", 
           RowBox[{"\"\<ExtrapolationHandler\>\"", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"0", "&"}], ",", 
              RowBox[{"\"\<WarningMessage\>\"", "\[Rule]", "False"}]}], 
             "}"}]}]}], "]"}], "[", 
         RowBox[{
          RowBox[{"-", "x0"}], ",", 
          RowBox[{"-", "y0"}]}], "]"}], "*", 
        RowBox[{"FP", "[", 
         RowBox[{"x0", ",", "y0"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      "return"}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"This", " ", "is", " ", "experimental"}], " ", "-", " ", 
     RowBox[{"if", " ", "nrSteps"}]}], " ", "\[NotEqual]", " ", 
    RowBox[{"1", " ", "the", " ", "function", " ", "will", " ", "save", " ", 
     RowBox[{"Abs", "@", "data"}], " ", "for", " ", "Z", " ", "and", " ", 
     RowBox[{"X", "."}]}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "SPWOperator", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<waveLength\>\"", "\[Rule]", " ", "waveLength"}], ",", 
     RowBox[{"\"\<padLevel\>\"", "\[Rule]", " ", "1"}], ",", 
     RowBox[{"\"\<refractiveIndexMedium\>\"", "\[Rule]", " ", "refIndexAir"}],
      ",", 
     RowBox[{"\"\<InterpolationOrder\>\"", "\[Rule]", " ", "3"}], ",", 
     RowBox[{"\"\<nrSteps\>\"", "\[Rule]", " ", "1"}], ",", 
     RowBox[{"\"\<specklePattern\>\"", "\[Rule]", " ", "0"}], ",", 
     RowBox[{"\"\<returnSamplingTest\>\"", "\[Rule]", " ", "False"}], ",", 
     " ", 
     RowBox[{"\"\<tableForm\>\"", "\[Rule]", " ", "False"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SPWOperator", "[", 
     RowBox[{"wASP_", ",", "nASP_", ",", "distP_", ",", 
      RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], "[", "f_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "lambda", ",", "padLevel", ",", "k0", ",", "interpolationOrder", ",", 
       "ASP", ",", "nASPpad", ",", "FTf", ",", "IFT", ",", "kx", ",", "ky", 
       ",", "dkx", ",", "x0", ",", "y0", ",", "nZ", ",", "ASPtable", ",", 
       "ftable", ",", "FTfu", ",", "IFTu", ",", "XZprop", ",", "transmF", ",",
        "i"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"lambda", "=", 
       RowBox[{"OptionValue", "[", "\"\<waveLength\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"padLevel", "=", 
       RowBox[{"OptionValue", "[", "\"\<padLevel\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"k0", "=", 
       RowBox[{"2", " ", 
        RowBox[{"Pi", "/", "lambda"}], "*", 
        RowBox[{
        "OptionValue", "[", "\"\<refractiveIndexMedium\>\"", "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"interpolationOrder", "=", 
       RowBox[{"OptionValue", "[", "\"\<InterpolationOrder\>\"", "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"nZ", "=", 
       RowBox[{"OptionValue", "[", "\"\<nrSteps\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"transmF", "=", 
       RowBox[{"OptionValue", "[", "\"\<InterpolationOrder\>\"", "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ASP", "[", 
        RowBox[{"kx_", ",", "ky_"}], "]"}], "=", 
       RowBox[{"Exp", "[", 
        RowBox[{"\[ImaginaryI]", " ", "distP", " ", 
         RowBox[{"Sqrt", "[", 
          RowBox[{
           RowBox[{"k0", "^", "2"}], "-", 
           RowBox[{"kx", "^", "2"}], "-", 
           RowBox[{"ky", "^", "2"}]}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"nASPpad", "=", 
       RowBox[{"nASP", "*", "padLevel"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"dkx", "=", 
       RowBox[{"Pi", "/", 
        RowBox[{"(", 
         RowBox[{"wASP", "*", "padLevel"}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ASPtable", "=", 
       RowBox[{"N", "@", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"ASP", "[", 
           RowBox[{"kx", ",", "ky"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"kx", ",", 
            RowBox[{
             RowBox[{"-", "dkx"}], "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"nASPpad", "/", "2"}], "-", "1"}], ")"}]}], ",", 
            RowBox[{"dkx", "*", 
             RowBox[{"nASPpad", "/", "2"}]}], ",", "dkx"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"ky", ",", 
            RowBox[{
             RowBox[{"-", "dkx"}], "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"nASPpad", "/", "2"}], "-", "1"}], ")"}]}], ",", 
            RowBox[{"dkx", "*", 
             RowBox[{"nASPpad", "/", "2"}]}], ",", "dkx"}], "}"}]}], 
         "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ftable", "=", 
       RowBox[{"N", "@", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"f", "[", 
           RowBox[{"x0", ",", "y0"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"x0", ",", 
            RowBox[{
             RowBox[{"-", "wASP"}], "+", 
             RowBox[{"2", 
              RowBox[{"wASP", "/", "nASP"}]}]}], ",", "wASP", ",", 
            RowBox[{"2", 
             RowBox[{"wASP", "/", "nASP"}]}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"y0", ",", 
            RowBox[{
             RowBox[{"-", "wASP"}], "+", 
             RowBox[{"2", 
              RowBox[{"wASP", "/", "nASP"}]}]}], ",", "wASP", ",", 
            RowBox[{"2", 
             RowBox[{"wASP", "/", "nASP"}]}]}], "}"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"OptionValue", "[", "\"\<specklePattern\>\"", "]"}], 
         "\[NotEqual]", " ", "0"}], ",", 
        RowBox[{"ftable", "=", 
         RowBox[{"ftable", "*", 
          RowBox[{"Normal", "@", 
           RowBox[{"SparseArray", "[", 
            RowBox[{
             RowBox[{"Map", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"#", "\[Rule]", " ", 
                 RowBox[{"RandomComplex", "[", "]"}]}], "&"}], ",", 
               RowBox[{"Transpose", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"RandomSample", "[", 
                   RowBox[{
                    RowBox[{"Range", "[", "nASP", "]"}], ",", 
                    RowBox[{
                    "OptionValue", "[", "\"\<specklePattern\>\"", "]"}]}], 
                   "]"}], ",", 
                  RowBox[{"RandomSample", "[", 
                   RowBox[{
                    RowBox[{"Range", "[", "nASP", "]"}], ",", 
                    RowBox[{
                    "OptionValue", "[", "\"\<specklePattern\>\"", "]"}]}], 
                   "]"}]}], "}"}], "]"}]}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"nASP", ",", "nASP"}], "}"}], ",", "1"}], "]"}]}]}]}]}],
        "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"OptionValue", "[", "\"\<returnSamplingTest\>\"", "]"}], 
         "\[Equal]", " ", "True"}], ",", 
        RowBox[{
         RowBox[{"Print", "[", 
          RowBox[{"ListLinePlot", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"N", "@", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Re", "[", "#", "]"}], "/", 
                  RowBox[{"Abs", "[", "#", "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"Im", "[", "#", "]"}], "/", 
                  RowBox[{"Abs", "[", "#", "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"Abs", "[", "#", "]"}], "/", 
                  RowBox[{"Max", "[", 
                   RowBox[{"Abs", "[", "#", "]"}], "]"}]}]}], "}"}]}], "&"}], 
             "@", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"f", "[", 
                RowBox[{"x0", ",", "um"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"x0", ",", 
                 RowBox[{
                  RowBox[{"-", "wASP"}], "+", 
                  RowBox[{"2", " ", 
                   RowBox[{"wASP", "/", "nASP"}]}]}], ",", "wASP", ",", 
                 RowBox[{"2", " ", 
                  RowBox[{"wASP", "/", "nASP"}]}]}], "}"}]}], "]"}]}], ",", 
            RowBox[{"FrameLabel", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"\"\<\>\"", ",", "\"\<\>\""}], "}"}]}], ",", 
            RowBox[{"PlotMarkers", "\[Rule]", "\"\<\[Square]\>\""}], ",", 
            RowBox[{"ImageSize", "\[Rule]", " ", "8000"}], ",", 
            RowBox[{"AspectRatio", "\[Rule]", " ", 
             RowBox[{"1", "/", "20"}]}]}], "]"}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Return", "[", 
          RowBox[{"ftable", ",", "Module"}], "]"}]}]}], "\[IndentingNewLine]",
        "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"FTf", "=", 
       RowBox[{"RotateRight", "[", 
        RowBox[{
         RowBox[{"Fourier", "[", 
          RowBox[{"RotateLeft", "[", 
           RowBox[{
            RowBox[{"ArrayPad", "[", 
             RowBox[{"ftable", ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"nASPpad", "-", "nASP"}], ")"}], "/", "2"}]}], "]"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"nASPpad", "/", "2"}], "-", "1"}], ",", 
              RowBox[{
               RowBox[{"nASPpad", "/", "2"}], "-", "1"}]}], "}"}]}], "]"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"nASPpad", "/", "2"}], "-", "1"}], ",", 
           RowBox[{
            RowBox[{"nASPpad", "/", "2"}], "-", "1"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"OptionValue", "[", "\"\<returnSamplingTest\>\"", "]"}], 
         "\[Equal]", " ", "\"\<Fourier\>\""}], ",", "\[IndentingNewLine]", 
        RowBox[{"Return", "[", 
         RowBox[{
          RowBox[{"ListLinePlot", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"N", "@", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Re", "[", "#", "]"}], "/", 
                  RowBox[{"Abs", "[", "#", "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"Im", "[", "#", "]"}], "/", 
                  RowBox[{"Abs", "[", "#", "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"Abs", "[", "#", "]"}], "/", 
                  RowBox[{"Max", "[", 
                   RowBox[{"Abs", "[", "#", "]"}], "]"}]}]}], "}"}]}], "&"}], 
             "@", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"ASP", "[", 
                  RowBox[{"kx", ",", "0"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"kx", ",", 
                   RowBox[{
                    RowBox[{"-", "dkx"}], "*", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"nASPpad", "/", "2"}], "-", "1"}], ")"}]}], ",", 
                   RowBox[{"dkx", "*", 
                    RowBox[{"nASPpad", "/", "2"}]}], ",", "dkx"}], "}"}]}], 
                "]"}], "*", 
               RowBox[{"FTf", "[", 
                RowBox[{"[", 
                 RowBox[{"nASPpad", "/", "2"}], "]"}], "]"}]}], ")"}]}], ",", 
            RowBox[{"FrameLabel", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"\"\<\>\"", ",", "\"\<\>\""}], "}"}]}], ",", 
            RowBox[{"PlotMarkers", "\[Rule]", "\"\<\[Square]\>\""}], ",", 
            RowBox[{"ImageSize", "\[Rule]", " ", "8000"}], ",", 
            RowBox[{"AspectRatio", "\[Rule]", " ", 
             RowBox[{"1", "/", "20"}]}]}], "]"}], ",", "Module"}], "]"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"IFT", ":=", 
       RowBox[{"RotateRight", "[", 
        RowBox[{
         RowBox[{"InverseFourier", "[", 
          RowBox[{"RotateLeft", "[", 
           RowBox[{
            RowBox[{"FTf", "*", "ASPtable"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"nASPpad", "/", "2"}], "-", "1"}], ",", 
              RowBox[{
               RowBox[{"nASPpad", "/", "2"}], "-", "1"}]}], "}"}]}], "]"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"nASPpad", "/", "2"}], "-", "1"}], ",", 
           RowBox[{
            RowBox[{"nASPpad", "/", "2"}], "-", "1"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"nZ", "\[NotEqual]", " ", "1"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"IFTu", "=", "IFT"}], ";", "\[IndentingNewLine]", 
         RowBox[{"XZprop", "=", 
          RowBox[{"{", 
           RowBox[{"IFTu", "[", 
            RowBox[{"[", 
             RowBox[{"nASPpad", "/", "2"}], "]"}], "]"}], "}"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Do", "[", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{
            RowBox[{"FTfu", "=", 
             RowBox[{"RotateRight", "[", 
              RowBox[{
               RowBox[{"Fourier", "[", 
                RowBox[{"RotateLeft", "[", 
                 RowBox[{"IFTu", ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"nASPpad", "/", "2"}], "-", "1"}], ",", 
                    RowBox[{
                    RowBox[{"nASPpad", "/", "2"}], "-", "1"}]}], "}"}]}], 
                 "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"nASPpad", "/", "2"}], "-", "1"}], ",", 
                 RowBox[{
                  RowBox[{"nASPpad", "/", "2"}], "-", "1"}]}], "}"}]}], 
              "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"IFTu", "=", 
             RowBox[{"RotateRight", "[", 
              RowBox[{
               RowBox[{"InverseFourier", "[", 
                RowBox[{"RotateLeft", "[", 
                 RowBox[{
                  RowBox[{"FTfu", "*", "ASPtable"}], ",", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"nASPpad", "/", "2"}], "-", "1"}], ",", 
                    RowBox[{
                    RowBox[{"nASPpad", "/", "2"}], "-", "1"}]}], "}"}]}], 
                 "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"nASPpad", "/", "2"}], "-", "1"}], ",", 
                 RowBox[{
                  RowBox[{"nASPpad", "/", "2"}], "-", "1"}]}], "}"}]}], 
              "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"XZprop", "=", 
             RowBox[{"Join", "[", 
              RowBox[{"XZprop", ",", 
               RowBox[{"{", 
                RowBox[{"IFTu", "[", 
                 RowBox[{"[", 
                  RowBox[{"nASPpad", "/", "2"}], "]"}], "]"}], "}"}]}], 
              "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
           ",", 
           RowBox[{"nZ", "-", "1"}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Return", "[", 
          RowBox[{
           RowBox[{"ListInterpolation", "[", 
            RowBox[{
             RowBox[{"Abs", "[", "XZprop", "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"nZ", "-", "1"}], ")"}], "*", "distP"}]}], "}"}], 
               ",", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "wASP"}], "+", 
                   RowBox[{"2", 
                    RowBox[{"wASP", "/", "nASPpad"}]}]}], ",", "wASP"}], 
                 "}"}], "*", "padLevel"}]}], "}"}], ",", 
             RowBox[{"InterpolationOrder", "\[Rule]", "interpolationOrder"}], 
             ",", 
             RowBox[{"\"\<ExtrapolationHandler\>\"", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"0", "&"}], ",", 
                RowBox[{"\"\<WarningMessage\>\"", "\[Rule]", "False"}]}], 
               "}"}]}]}], "]"}], ",", "Module"}], "]"}]}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{"IFT", ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "wASP"}], "+", 
              RowBox[{"2", 
               RowBox[{"wASP", "/", "nASPpad"}]}]}], ",", "wASP"}], "}"}], 
           ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "wASP"}], "+", 
              RowBox[{"2", 
               RowBox[{"wASP", "/", "nASPpad"}]}]}], ",", "wASP"}], "}"}]}], 
          "}"}], "*", "padLevel"}], ",", 
        RowBox[{"InterpolationOrder", "\[Rule]", "interpolationOrder"}], ",", 
        RowBox[{"\"\<ExtrapolationHandler\>\"", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0", "&"}], ",", 
           RowBox[{"\"\<WarningMessage\>\"", "\[Rule]", "False"}]}], 
          "}"}]}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "SASPWOperator", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<waveLength\>\"", "\[Rule]", " ", "waveLength"}], ",", 
     RowBox[{"\"\<padLevel\>\"", "\[Rule]", " ", "1"}], ",", 
     RowBox[{"\"\<paraxialF\>\"", "\[Rule]", " ", "False"}], ",", 
     RowBox[{"\"\<refractiveIndexMedium\>\"", "\[Rule]", " ", "refIndexAir"}],
      ",", 
     RowBox[{"\"\<InterpolationOrder\>\"", "\[Rule]", " ", "10"}], ",", 
     RowBox[{"\"\<returnSamplingTest\>\"", "\[Rule]", " ", "False"}]}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SASPWOperator", "[", 
     RowBox[{"wASP_", ",", "nASP_", ",", "distP_", ",", 
      RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], "[", "f_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "lambda", ",", "padLevel", ",", "k0", ",", "paraxialF", ",", 
       "interpolationOrder", ",", "ASP", ",", "FP", ",", "paraxialASP", ",", 
       "FTf", ",", "FTfLens", ",", "IFT", ",", "nASPpad", ",", "z", ",", "kx",
        ",", "ky", ",", "dkx", ",", "x0", ",", "y0"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"lambda", "=", 
       RowBox[{"OptionValue", "[", "\"\<waveLength\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"padLevel", "=", 
       RowBox[{"OptionValue", "[", "\"\<padLevel\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"k0", "=", 
       RowBox[{"2", " ", 
        RowBox[{"Pi", "/", "lambda"}], "*", 
        RowBox[{
        "OptionValue", "[", "\"\<refractiveIndexMedium\>\"", "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"paraxialF", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"NumberQ", "[", 
          RowBox[{"OptionValue", "[", "\"\<paraxialF\>\"", "]"}], "]"}], ",", 
         RowBox[{"OptionValue", "[", "\"\<paraxialF\>\"", "]"}], ",", 
         "distP"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"interpolationOrder", "=", 
       RowBox[{"OptionValue", "[", "\"\<InterpolationOrder\>\"", "]"}]}], ";",
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"FP", "[", 
        RowBox[{"x0_", ",", "y0_"}], "]"}], "=", 
       RowBox[{"Exp", "[", 
        RowBox[{"\[ImaginaryI]", " ", "k0", "*", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"x0", "^", "2"}], "+", 
            RowBox[{"y0", "^", "2"}]}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{"2", " ", "paraxialF"}], ")"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ASP", "[", 
        RowBox[{"kx_", ",", "ky_"}], "]"}], "=", 
       RowBox[{"Exp", "[", 
        RowBox[{"\[ImaginaryI]", " ", "distP", " ", 
         RowBox[{"Sqrt", "[", 
          RowBox[{
           RowBox[{"k0", "^", "2"}], "-", 
           RowBox[{"kx", "^", "2"}], "-", 
           RowBox[{"ky", "^", "2"}]}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"paraxialASP", "[", 
        RowBox[{"kx_", ",", "ky_"}], "]"}], "=", 
       RowBox[{"Exp", "[", 
        RowBox[{"\[ImaginaryI]", " ", "paraxialF", "*", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"kx", "^", "2"}], "+", 
            RowBox[{"ky", "^", "2"}]}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{"2", " ", "k0"}], ")"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"nASPpad", "=", 
       RowBox[{"nASP", "*", "padLevel"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"dkx", "=", 
       RowBox[{"Pi", "/", 
        RowBox[{"(", "wASP", ")"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"OptionValue", "[", "\"\<returnSamplingTest\>\"", "]"}], 
         "\[Equal]", " ", "True"}], ",", 
        RowBox[{"Return", "[", 
         RowBox[{"ListLinePlot", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"N", "@", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"Re", "[", "#", "]"}], "/", 
                 RowBox[{"Abs", "[", "#", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"Im", "[", "#", "]"}], "/", 
                 RowBox[{"Abs", "[", "#", "]"}]}], ",", 
                RowBox[{
                 RowBox[{"Abs", "[", "#", "]"}], "/", 
                 RowBox[{"Max", "[", 
                  RowBox[{"Abs", "[", "#", "]"}], "]"}]}]}], "}"}]}], "&"}], 
            "@", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"f", "[", 
                RowBox[{"x0", ",", "um"}], "]"}], "*", 
               RowBox[{"FP", "[", 
                RowBox[{"x0", ",", "0"}], "]"}]}], ",", 
              RowBox[{"{", 
               RowBox[{"x0", ",", 
                RowBox[{
                 RowBox[{"-", "wASP"}], "+", 
                 RowBox[{"2", " ", 
                  RowBox[{"wASP", "/", "nASP"}]}]}], ",", "wASP", ",", 
                RowBox[{"2", " ", 
                 RowBox[{"wASP", "/", "nASP"}]}]}], "}"}]}], "]"}]}], ",", 
           RowBox[{"FrameLabel", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"\"\<\>\"", ",", "\"\<\>\""}], "}"}]}], ",", 
           RowBox[{"PlotMarkers", "\[Rule]", "\"\<\[Square]\>\""}], ",", 
           RowBox[{"ImageSize", "\[Rule]", " ", "8000"}], ",", 
           RowBox[{"AspectRatio", "\[Rule]", " ", 
            RowBox[{"1", "/", "20"}]}]}], "]"}], "]"}], ",", "Module"}], 
       "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"FTf", ":=", 
       RowBox[{"RotateRight", "[", 
        RowBox[{
         RowBox[{"Fourier", "[", 
          RowBox[{"RotateLeft", "[", 
           RowBox[{
            RowBox[{"N", "@", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"f", "[", 
                 RowBox[{"x0", ",", "y0"}], "]"}], "*", 
                RowBox[{"FP", "[", 
                 RowBox[{"x0", ",", "y0"}], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"x0", ",", 
                 RowBox[{
                  RowBox[{"-", "wASP"}], "+", 
                  RowBox[{"2", 
                   RowBox[{"wASP", "/", "nASP"}]}]}], ",", "wASP", ",", 
                 RowBox[{"2", 
                  RowBox[{"wASP", "/", "nASP"}]}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"y0", ",", 
                 RowBox[{
                  RowBox[{"-", "wASP"}], "+", 
                  RowBox[{"2", 
                   RowBox[{"wASP", "/", "nASP"}]}]}], ",", "wASP", ",", 
                 RowBox[{"2", 
                  RowBox[{"wASP", "/", "nASP"}]}]}], "}"}]}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"nASP", "/", "2"}], "-", "1"}], ",", 
              RowBox[{
               RowBox[{"nASP", "/", "2"}], "-", "1"}]}], "}"}]}], "]"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"nASP", "/", "2"}], "-", "1"}], ",", 
           RowBox[{
            RowBox[{"nASP", "/", "2"}], "-", "1"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"FTfLens", ":=", " ", 
       RowBox[{"ArrayPad", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"RotateRight", "[", 
           RowBox[{
            RowBox[{"Fourier", "[", 
             RowBox[{"RotateLeft", "[", 
              RowBox[{
               RowBox[{"FTf", "*", 
                RowBox[{"N", "@", 
                 RowBox[{"Table", "[", 
                  RowBox[{
                   RowBox[{"paraxialASP", "[", 
                    RowBox[{"kx", ",", "ky"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"kx", ",", 
                    RowBox[{
                    RowBox[{"-", "dkx"}], "*", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"nASP", "/", "2"}], "-", "1"}], ")"}]}], ",", 
                    RowBox[{"dkx", "*", 
                    RowBox[{"nASP", "/", "2"}]}], ",", "dkx"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"ky", ",", 
                    RowBox[{
                    RowBox[{"-", "dkx"}], "*", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"nASP", "/", "2"}], "-", "1"}], ")"}]}], ",", 
                    RowBox[{"dkx", "*", 
                    RowBox[{"nASP", "/", "2"}]}], ",", "dkx"}], "}"}]}], 
                  "]"}]}]}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"nASP", "/", "2"}], "-", "1"}], ",", 
                 RowBox[{
                  RowBox[{"nASP", "/", "2"}], "-", "1"}]}], "}"}]}], "]"}], 
             "]"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"nASP", "/", "2"}], "-", "1"}], ",", 
              RowBox[{
               RowBox[{"nASP", "/", "2"}], "-", "1"}]}], "}"}]}], "]"}], "*", 
          "4", "  ", 
          RowBox[{
           RowBox[{"wASP", "^", "2"}], "/", 
           RowBox[{"(", 
            RowBox[{
            "\[ImaginaryI]", " ", "lambda", " ", "paraxialF", " ", "nASP"}], 
            ")"}]}]}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"nASPpad", "-", "nASP"}], ")"}], "/", "2"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"dkx", "=", 
       RowBox[{"Pi", "/", 
        RowBox[{"(", 
         RowBox[{"wASP", "*", "padLevel"}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"OptionValue", "[", "\"\<returnSamplingTest\>\"", "]"}], 
         "\[Equal]", " ", "\"\<Fourier\>\""}], ",", "\[IndentingNewLine]", 
        RowBox[{"Return", "[", 
         RowBox[{
          RowBox[{"ListLinePlot", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"N", "@", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"Re", "[", "#", "]"}], "/", 
                  RowBox[{"Abs", "[", "#", "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"Im", "[", "#", "]"}], "/", 
                  RowBox[{"Abs", "[", "#", "]"}]}], ",", 
                 RowBox[{
                  RowBox[{"Abs", "[", "#", "]"}], "/", 
                  RowBox[{"Max", "[", 
                   RowBox[{"Abs", "[", "#", "]"}], "]"}]}]}], "}"}]}], "&"}], 
             "@", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"ASP", "[", 
                   RowBox[{"kx", ",", "0"}], "]"}], "*", 
                  RowBox[{"paraxialASP", "[", 
                   RowBox[{"kx", ",", "0"}], "]"}]}], ",", 
                 RowBox[{"{", 
                  RowBox[{"kx", ",", 
                   RowBox[{
                    RowBox[{"-", "dkx"}], "*", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"nASPpad", "/", "2"}], "-", "1"}], ")"}]}], ",", 
                   RowBox[{"dkx", "*", 
                    RowBox[{"nASPpad", "/", "2"}]}], ",", "dkx"}], "}"}]}], 
                "]"}], "*", 
               RowBox[{"FTfLens", "[", 
                RowBox[{"[", 
                 RowBox[{"nASPpad", "/", "2"}], "]"}], "]"}]}], ")"}]}], ",", 
            RowBox[{"FrameLabel", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"\"\<\>\"", ",", "\"\<\>\""}], "}"}]}], ",", 
            RowBox[{"PlotMarkers", "\[Rule]", "\"\<\[Square]\>\""}], ",", 
            RowBox[{"ImageSize", "\[Rule]", " ", "8000"}], ",", 
            RowBox[{"AspectRatio", "\[Rule]", " ", 
             RowBox[{"1", "/", "20"}]}]}], "]"}], ",", "Module"}], "]"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"IFT", ":=", 
       RowBox[{"RotateRight", "[", 
        RowBox[{
         RowBox[{"InverseFourier", "[", 
          RowBox[{"RotateLeft", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"ArrayPad", "[", 
              RowBox[{"FTfLens", ",", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"(", 
                  RowBox[{"nASPpad", "-", "nASP"}], ")"}]}], "/", "2"}]}], 
              "]"}], "*", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"ASP", "[", 
                 RowBox[{"kx", ",", "ky"}], "]"}], "*", 
                RowBox[{"paraxialASP", "[", 
                 RowBox[{"kx", ",", "ky"}], "]"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"kx", ",", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "wASP"}], "+", 
                    RowBox[{"2", 
                    RowBox[{"wASP", "/", "nASP"}]}]}], ")"}], "*", 
                  RowBox[{"k0", "/", "paraxialF"}]}], ",", 
                 RowBox[{"wASP", "*", 
                  RowBox[{"k0", "/", "paraxialF"}]}], ",", 
                 RowBox[{"2", 
                  RowBox[{"wASP", "/", "nASP"}], "*", 
                  RowBox[{"k0", "/", "paraxialF"}]}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"ky", ",", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "wASP"}], "+", 
                    RowBox[{"2", 
                    RowBox[{"wASP", "/", "nASP"}]}]}], ")"}], "*", 
                  RowBox[{"k0", "/", "paraxialF"}]}], ",", 
                 RowBox[{"wASP", "*", 
                  RowBox[{"k0", "/", "paraxialF"}]}], ",", 
                 RowBox[{"2", 
                  RowBox[{"wASP", "/", "nASP"}], "*", 
                  RowBox[{"k0", "/", "paraxialF"}]}]}], "}"}]}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"nASP", "/", "2"}], "-", "1"}], ",", 
              RowBox[{
               RowBox[{"nASP", "/", "2"}], "-", "1"}]}], "}"}]}], "]"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"nASP", "/", "2"}], "-", "1"}], ",", 
           RowBox[{
            RowBox[{"nASP", "/", "2"}], "-", "1"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"dkx", "=", 
       RowBox[{"Pi", "/", 
        RowBox[{"(", "wASP", ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ListInterpolation", "[", 
       RowBox[{"IFT", ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "dkx"}], "*", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"nASP", "/", "2"}], "-", "1"}], ")"}]}], ",", 
             RowBox[{"dkx", "*", 
              RowBox[{"nASP", "/", "2"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "dkx"}], "*", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"nASP", "/", "2"}], "-", "1"}], ")"}]}], ",", 
             RowBox[{"dkx", "*", 
              RowBox[{"nASP", "/", "2"}]}]}], "}"}]}], "}"}], "*", 
         RowBox[{"(", 
          RowBox[{"paraxialF", "/", "k0"}], ")"}]}], ",", 
        RowBox[{"InterpolationOrder", "\[Rule]", "interpolationOrder"}], ",", 
        RowBox[{"\"\<ExtrapolationHandler\>\"", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"0", "&"}], ",", 
           RowBox[{"\"\<WarningMessage\>\"", "\[Rule]", "False"}]}], 
          "}"}]}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "SAFarFieldOperator", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<waveLength\>\"", "\[Rule]", " ", "waveLength"}], ",", 
     RowBox[{"\"\<padLevel\>\"", "\[Rule]", " ", "1"}], ",", 
     RowBox[{"\"\<paraxialF\>\"", "\[Rule]", " ", "False"}], ",", 
     RowBox[{"\"\<refractiveIndexMedium\>\"", "\[Rule]", " ", "refIndexAir"}],
      ",", 
     RowBox[{"\"\<InterpolationOrder\>\"", "\[Rule]", " ", "3"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"SAFarFieldOperator", "[", 
     RowBox[{"wASP_", ",", "nASP_", ",", "distP_", ",", 
      RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], "[", "f_", "]"}], ":=", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "lambda", ",", "padLevel", ",", "k0", ",", "interpolationOrder", ",", 
       "ASP", ",", "FP", ",", "paraxialASP", ",", "FTf", ",", "FTfFF", ",", 
       "IFT", ",", "nASPpad", ",", "z", ",", "kx", ",", "ky", ",", "dkx", ",",
        "x0", ",", "y0", ",", "return"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"lambda", "=", 
       RowBox[{"OptionValue", "[", "\"\<waveLength\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"padLevel", "=", 
       RowBox[{"OptionValue", "[", "\"\<padLevel\>\"", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"k0", "=", 
       RowBox[{"2", " ", 
        RowBox[{"Pi", "/", "lambda"}], "*", 
        RowBox[{
        "OptionValue", "[", "\"\<refractiveIndexMedium\>\"", "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"interpolationOrder", "=", 
       RowBox[{"OptionValue", "[", "\"\<InterpolationOrder\>\"", "]"}]}], ";",
       "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ASP", "[", 
        RowBox[{"kx_", ",", "ky_"}], "]"}], "=", 
       RowBox[{"Exp", "[", 
        RowBox[{"\[ImaginaryI]", " ", "distP", " ", 
         RowBox[{"Sqrt", "[", 
          RowBox[{
           RowBox[{"k0", "^", "2"}], "-", 
           RowBox[{"kx", "^", "2"}], "-", 
           RowBox[{"ky", "^", "2"}]}], "]"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"FP", "[", 
        RowBox[{"x0_", ",", "y0_"}], "]"}], "=", 
       RowBox[{"Exp", "[", 
        RowBox[{"\[ImaginaryI]", " ", "k0", "*", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"x0", "^", "2"}], "+", 
            RowBox[{"y0", "^", "2"}]}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{"2", " ", "distP"}], ")"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"paraxialASP", "[", 
        RowBox[{"kx_", ",", "ky_"}], "]"}], "=", 
       RowBox[{"Exp", "[", 
        RowBox[{"\[ImaginaryI]", " ", "distP", "*", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"kx", "^", "2"}], "+", 
            RowBox[{"ky", "^", "2"}]}], ")"}], "/", 
          RowBox[{"(", 
           RowBox[{"2", " ", "k0"}], ")"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"nASPpad", "=", 
       RowBox[{"nASP", "*", "padLevel"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"dkx", "=", 
       RowBox[{"Pi", "/", 
        RowBox[{"(", "wASP", ")"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"FTf", ":=", 
       RowBox[{"RotateRight", "[", 
        RowBox[{
         RowBox[{"Fourier", "[", 
          RowBox[{"RotateLeft", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"N", "@", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"f", "[", 
                 RowBox[{"x0", ",", "y0"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"x0", ",", 
                  RowBox[{
                   RowBox[{"-", "wASP"}], "+", 
                   RowBox[{"2", 
                    RowBox[{"wASP", "/", "nASP"}]}]}], ",", "wASP", ",", 
                  RowBox[{"2", 
                   RowBox[{"wASP", "/", "nASP"}]}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"y0", ",", 
                  RowBox[{
                   RowBox[{"-", "wASP"}], "+", 
                   RowBox[{"2", 
                    RowBox[{"wASP", "/", "nASP"}]}]}], ",", "wASP", ",", 
                  RowBox[{"2", 
                   RowBox[{"wASP", "/", "nASP"}]}]}], "}"}]}], "]"}]}], "*", 
             "4", " ", 
             RowBox[{
              RowBox[{"wASP", "^", "2"}], "/", 
              RowBox[{"(", 
               RowBox[{
               "\[ImaginaryI]", " ", "lambda", " ", "distP", " ", "nASP"}], 
               ")"}]}]}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"nASP", "/", "2"}], "-", "1"}], ",", 
              RowBox[{
               RowBox[{"nASP", "/", "2"}], "-", "1"}]}], "}"}]}], "]"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"nASP", "/", "2"}], "-", "1"}], ",", 
           RowBox[{
            RowBox[{"nASP", "/", "2"}], "-", "1"}]}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"FTfFF", ":=", 
       RowBox[{"RotateRight", "[", 
        RowBox[{
         RowBox[{"Fourier", "[", 
          RowBox[{"RotateLeft", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"ArrayPad", "[", 
              RowBox[{"FTf", ",", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"nASPpad", "-", "nASP"}], ")"}], "/", "2"}]}], "]"}],
              "*", 
             RowBox[{"N", "@", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"ASP", "[", 
                  RowBox[{"kx", ",", "ky"}], "]"}], "*", 
                 RowBox[{"paraxialASP", "[", 
                  RowBox[{"kx", ",", "ky"}], "]"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"kx", ",", 
                  RowBox[{
                   RowBox[{"-", "dkx"}], "*", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"nASPpad", "/", "2"}], "-", "1"}], ")"}]}], ",", 
                  RowBox[{"dkx", "*", 
                   RowBox[{"nASPpad", "/", "2"}]}], ",", "dkx"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"ky", ",", 
                  RowBox[{
                   RowBox[{"-", "dkx"}], "*", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"nASPpad", "/", "2"}], "-", "1"}], ")"}]}], ",", 
                  RowBox[{"dkx", "*", 
                   RowBox[{"nASPpad", "/", "2"}]}], ",", "dkx"}], "}"}]}], 
               "]"}]}]}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"nASPpad", "/", "2"}], "-", "1"}], ",", 
              RowBox[{
               RowBox[{"nASPpad", "/", "2"}], "-", "1"}]}], "}"}]}], "]"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"nASPpad", "/", "2"}], "-", "1"}], ",", 
           RowBox[{
            RowBox[{"nASPpad", "/", "2"}], "-", "1"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"IFT", ":=", 
       RowBox[{"RotateRight", "[", 
        RowBox[{
         RowBox[{"InverseFourier", "[", 
          RowBox[{"RotateLeft", "[", 
           RowBox[{
            RowBox[{"FTfFF", "*", 
             RowBox[{"N", "@", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"FP", "[", 
                 RowBox[{"x0", ",", "y0"}], "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"x0", ",", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "wASP"}], "+", 
                    RowBox[{"2", 
                    RowBox[{"wASP", "/", "nASPpad"}]}]}], ")"}], ",", "wASP", 
                  ",", 
                  RowBox[{"2", 
                   RowBox[{"wASP", "/", "nASPpad"}]}]}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"y0", ",", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "wASP"}], "+", 
                    RowBox[{"2", 
                    RowBox[{"wASP", "/", "nASPpad"}]}]}], ")"}], ",", "wASP", 
                  ",", 
                  RowBox[{"2", 
                   RowBox[{"wASP", "/", "nASPpad"}]}]}], "}"}]}], "]"}]}]}], 
            ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"nASPpad", "/", "2"}], "-", "1"}], ",", 
              RowBox[{
               RowBox[{"nASPpad", "/", "2"}], "-", "1"}]}], "}"}]}], "]"}], 
          "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"nASPpad", "/", "2"}], "-", "1"}], ",", 
           RowBox[{
            RowBox[{"nASPpad", "/", "2"}], "-", "1"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"return", "[", 
        RowBox[{"x0_", ",", "y0_"}], "]"}], "=", 
       RowBox[{
        RowBox[{
         RowBox[{"ListInterpolation", "[", 
          RowBox[{"IFT", ",", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "dkx"}], "*", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"nASPpad", "/", "2"}], "-", "1"}], ")"}]}], ",", 
                RowBox[{"dkx", "*", 
                 RowBox[{"nASPpad", "/", "2"}]}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "dkx"}], "*", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"nASPpad", "/", "2"}], "-", "1"}], ")"}]}], ",", 
                RowBox[{"dkx", "*", 
                 RowBox[{"nASPpad", "/", "2"}]}]}], "}"}]}], "}"}], "*", 
            RowBox[{"(", 
             RowBox[{"distP", "/", "k0"}], ")"}]}], ",", 
           RowBox[{"InterpolationOrder", "\[Rule]", "interpolationOrder"}], 
           ",", 
           RowBox[{"\"\<ExtrapolationHandler\>\"", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"0", "&"}], ",", 
              RowBox[{"\"\<WarningMessage\>\"", "\[Rule]", "False"}]}], 
             "}"}]}]}], "]"}], "[", 
         RowBox[{"x0", ",", "y0"}], "]"}], "*", 
        RowBox[{"FP", "[", 
         RowBox[{"x0", ",", "y0"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "return"}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "scalarRSFOperator", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\"\<waveLength\>\"", "\[Rule]", " ", "waveLength"}], ",", 
     RowBox[{"\"\<padLevel\>\"", "\[Rule]", " ", "1"}], ",", 
     RowBox[{"\"\<defocusZ\>\"", "\[Rule]", " ", "0"}], ",", 
     RowBox[{"\"\<refractiveIndexMedium\>\"", "\[Rule]", " ", "refIndexAir"}],
      ",", 
     RowBox[{"\"\<InterpolationOrder\>\"", "\[Rule]", " ", "10"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"scalarRSFOperator", "[", 
    RowBox[{
    "rayCoordinateFocus_List", ",", "rayTiltFocus_List", ",", 
     "opticalLengthFocus_List", ",", "clearApRad_", ",", "nWDP_", ",", 
     "focalDistance_", ",", 
     RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], "[", "f_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "interpolationOrder", ",", "padLevel", ",", "lambda", ",", "defocusZ", 
      ",", "FTf", ",", "nWDPpad", ",", "k0", ",", "dkx", ",", "wWDP", ",", 
      "S", ",", "sx", ",", "sy", ",", "EF"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"lambda", "=", 
      RowBox[{"OptionValue", "[", "\"\<waveLength\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"padLevel", "=", 
      RowBox[{"OptionValue", "[", "\"\<padLevel\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"k0", "=", 
      RowBox[{"2", " ", 
       RowBox[{"Pi", "/", "lambda"}], "*", 
       RowBox[{"OptionValue", "[", "\"\<refractiveIndexMedium\>\"", "]"}]}]}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"interpolationOrder", "=", 
      RowBox[{"OptionValue", "[", "\"\<InterpolationOrder\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"defocusZ", "=", 
      RowBox[{"OptionValue", "[", "\"\<defocusZ\>\"", "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"wWDP", "=", 
      RowBox[{"clearApRad", "/", 
       RowBox[{"(", 
        RowBox[{"\[Sqrt]", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"clearApRad", "^", "2"}], "+", 
           RowBox[{"focalDistance", "^", "2"}]}], ")"}]}], ")"}]}]}], ";", 
     " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"nWDPpad", "=", 
      RowBox[{"nWDP", "*", "padLevel"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"dkx", "=", 
      RowBox[{"Pi", "/", 
       RowBox[{"(", 
        RowBox[{"wWDP", "*", "k0"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"EF", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"UnsameQ", "[", 
          RowBox[{"rayCoordinateFocus", ",", 
           RowBox[{"{", "}"}]}], "]"}], "\[Equal]", "True"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"S", "=", 
          RowBox[{"Interpolation", "[", 
           RowBox[{
            RowBox[{"Map", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"#", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", 
                   RowBox[{"2", ",", "2"}], "]"}], "]"}], ",", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "&"}], ",", 
              RowBox[{"Transpose", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"opticalLengthFocus", "-", 
                  RowBox[{"Map", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "*", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "2"}], "]"}], "]"}], "*", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "2"}], "]"}], "]"}]}]}], "&"}], ",", 
                    RowBox[{"Transpose", "@", 
                    RowBox[{"{", 
                    RowBox[{"rayCoordinateFocus", ",", "rayTiltFocus"}], 
                    "}"}]}]}], "]"}]}], ",", "rayTiltFocus"}], "}"}], "]"}]}],
              "]"}], ",", 
            RowBox[{"InterpolationOrder", "\[Rule]", "1"}], ",", 
            RowBox[{"\"\<ExtrapolationHandler\>\"", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"0", "&"}], ",", 
               RowBox[{"\"\<WarningMessage\>\"", "\[Rule]", "False"}]}], 
              "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{"N", "@", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Exp", "[", 
              RowBox[{"\[ImaginaryI]", " ", "k0", " ", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"S", "[", 
                  RowBox[{"sx", ",", "sy"}], "]"}], "+", 
                 RowBox[{
                  RowBox[{"\[Sqrt]", 
                   RowBox[{"(", 
                    RowBox[{"1", "-", 
                    SuperscriptBox["sx", "2"], "-", 
                    SuperscriptBox["sy", "2"]}], ")"}]}], " ", "defocusZ"}]}],
                 ")"}]}], "]"}], 
             RowBox[{
              RowBox[{"f", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "sx"}], " ", 
                 RowBox[{"focalDistance", "/", 
                  RowBox[{"\[Sqrt]", 
                   RowBox[{"(", 
                    RowBox[{"1", "-", 
                    SuperscriptBox["sx", "2"], "-", 
                    SuperscriptBox["sy", "2"]}], ")"}]}]}]}], ",", 
                RowBox[{
                 RowBox[{"-", "sy"}], " ", 
                 RowBox[{"focalDistance", "/", 
                  RowBox[{"\[Sqrt]", 
                   RowBox[{"(", 
                    RowBox[{"1", "-", 
                    SuperscriptBox["sx", "2"], "-", 
                    SuperscriptBox["sy", "2"]}], ")"}]}]}]}]}], "]"}], "/", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                SuperscriptBox["sx", "2"], "-", 
                SuperscriptBox["sy", "2"]}], ")"}]}], "*", 
             RowBox[{"(", 
              RowBox[{"1", "+", 
               RowBox[{"\[ImaginaryI]", 
                RowBox[{
                 RowBox[{"\[Sqrt]", 
                  RowBox[{"(", 
                   RowBox[{"1", "-", 
                    SuperscriptBox["sx", "2"], "-", 
                    SuperscriptBox["sy", "2"]}], ")"}]}], "/", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"k0", "^", "2"}], " ", "focalDistance"}], 
                  ")"}]}]}]}], ")"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"sx", ",", 
              RowBox[{
               RowBox[{"-", "wWDP"}], "+", 
               RowBox[{"2", 
                RowBox[{"wWDP", "/", "nWDP"}]}]}], ",", "wWDP", ",", 
              RowBox[{"2", 
               RowBox[{"wWDP", "/", "nWDP"}]}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"sy", ",", 
              RowBox[{
               RowBox[{"-", "wWDP"}], "+", 
               RowBox[{"2", 
                RowBox[{"wWDP", "/", "nWDP"}]}]}], ",", "wWDP", ",", 
              RowBox[{"2", 
               RowBox[{"wWDP", "/", "nWDP"}]}]}], "}"}]}], "]"}]}]}], ",", 
        "\[IndentingNewLine]", "\[IndentingNewLine]", 
        RowBox[{"N", "@", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Exp", "[", 
             RowBox[{"\[ImaginaryI]", " ", "k0", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"focalDistance", " ", "/", 
                 RowBox[{"\[Sqrt]", 
                  RowBox[{"(", 
                   RowBox[{"1", "-", 
                    SuperscriptBox["sx", "2"], "-", 
                    SuperscriptBox["sy", "2"]}], ")"}]}]}], "+", 
                RowBox[{
                 RowBox[{"\[Sqrt]", 
                  RowBox[{"(", 
                   RowBox[{"1", "-", 
                    SuperscriptBox["sx", "2"], "-", 
                    SuperscriptBox["sy", "2"]}], ")"}]}], "defocusZ"}]}], 
               ")"}]}], "]"}], 
            RowBox[{
             RowBox[{"f", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"-", "sx"}], " ", 
                RowBox[{"focalDistance", "/", 
                 RowBox[{"\[Sqrt]", 
                  RowBox[{"(", 
                   RowBox[{"1", "-", 
                    SuperscriptBox["sx", "2"], "-", 
                    SuperscriptBox["sy", "2"]}], ")"}]}]}]}], ",", 
               RowBox[{
                RowBox[{"-", "sy"}], " ", 
                RowBox[{"focalDistance", "/", 
                 RowBox[{"\[Sqrt]", 
                  RowBox[{"(", 
                   RowBox[{"1", "-", 
                    SuperscriptBox["sx", "2"], "-", 
                    SuperscriptBox["sy", "2"]}], ")"}]}]}]}]}], "]"}], "/", 
             RowBox[{"(", 
              RowBox[{"1", "-", 
               SuperscriptBox["sx", "2"], "-", 
               SuperscriptBox["sy", "2"]}], ")"}]}], "*", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"\[ImaginaryI]", 
               RowBox[{
                RowBox[{"\[Sqrt]", 
                 RowBox[{"(", 
                  RowBox[{"1", "-", 
                   SuperscriptBox["sx", "2"], "-", 
                   SuperscriptBox["sy", "2"]}], ")"}]}], "/", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"k0", "^", "2"}], " ", "focalDistance"}], 
                 ")"}]}]}]}], ")"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"sx", ",", 
             RowBox[{
              RowBox[{"-", "wWDP"}], "+", 
              RowBox[{"2", 
               RowBox[{"wWDP", "/", "nWDP"}]}]}], ",", "wWDP", ",", 
             RowBox[{"2", 
              RowBox[{"wWDP", "/", "nWDP"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"sy", ",", 
             RowBox[{
              RowBox[{"-", "wWDP"}], "+", 
              RowBox[{"2", 
               RowBox[{"wWDP", "/", "nWDP"}]}]}], ",", "wWDP", ",", 
             RowBox[{"2", 
              RowBox[{"wWDP", "/", "nWDP"}]}]}], "}"}]}], "]"}]}]}], 
       "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"FTf", "=", 
      RowBox[{"RotateRight", "[", 
       RowBox[{
        RowBox[{"Fourier", "[", 
         RowBox[{"RotateLeft", "[", 
          RowBox[{"EF", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"nWDP", "/", "2"}], "-", "1"}], ",", 
             RowBox[{
              RowBox[{"nWDP", "/", "2"}], "-", "1"}]}], "}"}]}], "]"}], "]"}],
         ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"nWDP", "/", "2"}], "-", "1"}], ",", 
          RowBox[{
           RowBox[{"nWDP", "/", "2"}], "-", "1"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"ListInterpolation", "[", 
      RowBox[{
       RowBox[{"ArrayPad", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "4"}], " ", "\[ImaginaryI]", " ", 
          RowBox[{"clearApRad", "^", "2"}], " ", 
          RowBox[{"FTf", "/", 
           RowBox[{"(", 
            RowBox[{"lambda", "*", "focalDistance", " ", "nWDP"}], ")"}]}]}], 
         ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"nWDPpad", "-", "nWDP"}], ")"}], "/", "2"}]}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "dkx"}], "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"nWDPpad", "/", "2"}], "-", "1"}], ")"}]}], ",", 
           RowBox[{"dkx", "*", 
            RowBox[{"nWDPpad", "/", "2"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "dkx"}], "*", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"nWDPpad", "/", "2"}], "-", "1"}], ")"}]}], ",", 
           RowBox[{"dkx", "*", 
            RowBox[{"nWDPpad", "/", "2"}]}]}], "}"}]}], "}"}], ",", 
       RowBox[{"InterpolationOrder", "\[Rule]", "interpolationOrder"}], ",", 
       RowBox[{"\"\<ExtrapolationHandler\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"0", "&"}], ",", 
          RowBox[{"\"\<WarningMessage\>\"", "\[Rule]", "False"}]}], "}"}]}]}],
       "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.795434025628742*^9, 3.7954342476642303`*^9}, {
   3.795434335766943*^9, 3.7954343467950673`*^9}, {3.7954343776338887`*^9, 
   3.7954343781642876`*^9}, {3.7954344261830225`*^9, 3.795434431809081*^9}, {
   3.795434513792914*^9, 3.7954345143650465`*^9}, {3.795491410344294*^9, 
   3.7954914142489896`*^9}, {3.7954914722056065`*^9, 3.795491666181222*^9}, {
   3.795491697278947*^9, 3.7954917884601474`*^9}, {3.7954927922844667`*^9, 
   3.7954928883230214`*^9}, {3.795492925934392*^9, 3.79549301772351*^9}, {
   3.7954931100348587`*^9, 3.795493141955743*^9}, {3.7954931815363474`*^9, 
   3.7954932809861717`*^9}, {3.7954933808605146`*^9, 
   3.7954935052164354`*^9}, {3.795493757960436*^9, 3.7954937596038656`*^9}, {
   3.798372886104302*^9, 3.7983729072653823`*^9}, {3.79837295944781*^9, 
   3.7983729595229645`*^9}, {3.798972063338792*^9, 3.7989720647829*^9}, {
   3.799061918549651*^9, 3.799061980045792*^9}, {3.7992066608065033`*^9, 
   3.7992066620025926`*^9}, {3.7992067317495565`*^9, 
   3.7992067498759093`*^9}, {3.799206953153696*^9, 3.799206960320232*^9}, {
   3.799207006667285*^9, 3.7992073019364667`*^9}, {3.799379845849619*^9, 
   3.799379867711755*^9}, {3.799379923654953*^9, 3.799379928427164*^9}, {
   3.799380294733827*^9, 3.7993802972874813`*^9}, {3.799380341896629*^9, 
   3.799380391765856*^9}, {3.799380434006847*^9, 3.799380444473551*^9}, {
   3.799380476963021*^9, 3.7993804818551702`*^9}, {3.79942157278368*^9, 
   3.799421582844945*^9}, 3.799422229683601*^9, {3.799548779949857*^9, 
   3.7995488389649057`*^9}, {3.799635701588222*^9, 3.7996358116342163`*^9}, {
   3.7996358441053405`*^9, 3.7996358584366517`*^9}, {3.799635902961233*^9, 
   3.7996359313884687`*^9}, {3.79963604927814*^9, 3.799636070848772*^9}, {
   3.7996361324014425`*^9, 3.799636202309907*^9}, {3.7996362636972528`*^9, 
   3.799636300951717*^9}, {3.7996363580505657`*^9, 3.7996363593608665`*^9}, {
   3.799636498058113*^9, 3.7996365611685123`*^9}, {3.799636598691415*^9, 
   3.7996366989599533`*^9}, 3.7996367353231544`*^9, 3.7996380817640266`*^9, {
   3.7996382080036116`*^9, 3.7996382112433124`*^9}, {3.7996415004632244`*^9, 
   3.7996415130667295`*^9}, {3.799641584624935*^9, 3.7996415956349134`*^9}, {
   3.799641626966302*^9, 3.7996416564049606`*^9}, {3.7996418301135583`*^9, 
   3.799641833131483*^9}, {3.7996418658985043`*^9, 3.7996418984434614`*^9}, {
   3.7996419463589787`*^9, 3.799641986961201*^9}, {3.7996420204125333`*^9, 
   3.7996420370979505`*^9}, {3.7996430328389044`*^9, 
   3.7996430597722664`*^9}, {3.799643096066143*^9, 3.799643096306161*^9}, {
   3.799643152948516*^9, 3.799643233634816*^9}, {3.799643359292333*^9, 
   3.7996433775792704`*^9}, {3.799643511707223*^9, 3.799643514278174*^9}, {
   3.7996448000022964`*^9, 3.7996448138918*^9}, {3.7996448453849106`*^9, 
   3.7996449179579906`*^9}, {3.7996451571579866`*^9, 
   3.7996452709851117`*^9}, {3.7996453372008114`*^9, 3.7996453757176113`*^9}, 
   3.799647008931607*^9, {3.799652089981896*^9, 3.7996521126664076`*^9}, {
   3.7996523830957794`*^9, 3.799652383788843*^9}, {3.7996536660702305`*^9, 
   3.7996536949029255`*^9}, {3.799653825592306*^9, 3.799653846321335*^9}, {
   3.799655293882039*^9, 3.7996552986005116`*^9}, {3.7996554498173184`*^9, 
   3.7996554513847747`*^9}, {3.7997243191158223`*^9, 
   3.7997243210783105`*^9}, {3.7997342511286755`*^9, 
   3.7997342633306465`*^9}, {3.7997342972555313`*^9, 3.799734389715954*^9}, {
   3.799734426377736*^9, 3.799734457010686*^9}, {3.7997345070289946`*^9, 
   3.799734703582656*^9}, {3.7997360487946014`*^9, 3.7997360516531444`*^9}, {
   3.799737245648818*^9, 3.7997372564615655`*^9}, {3.7997372997292724`*^9, 
   3.7997374062998533`*^9}, 3.799737450203327*^9, {3.799737504793005*^9, 
   3.7997375481212006`*^9}, {3.799737588520817*^9, 3.7997375905413837`*^9}, {
   3.7997376226415467`*^9, 3.799737673262461*^9}, 3.7997378373436437`*^9, {
   3.800930448341399*^9, 3.8009304985752153`*^9}, {3.801550942905302*^9, 
   3.801551064531259*^9}, {3.801991269782916*^9, 3.8019913263361516`*^9}, {
   3.8019920476320543`*^9, 3.80199207115481*^9}, {3.8020154571265173`*^9, 
   3.802015457270529*^9}, {3.8020589102084837`*^9, 3.802059156943218*^9}, {
   3.802059277366059*^9, 3.8020592792361994`*^9}, {3.802059870482113*^9, 
   3.8020598986622467`*^9}, {3.8020604949335957`*^9, 
   3.8020604952987804`*^9}, {3.8020608495156393`*^9, 3.802060854653897*^9}, 
   3.802060892921856*^9, {3.8059457018123035`*^9, 3.805945723934465*^9}, {
   3.805945867856638*^9, 3.8059458762884026`*^9}, {3.8059693132811966`*^9, 
   3.8059693143205414`*^9}, {3.806892911336488*^9, 3.8068929146667323`*^9}, {
   3.807582623798978*^9, 3.807582625041419*^9}, {3.807582721569935*^9, 
   3.8075828105294914`*^9}, {3.807583943696825*^9, 3.8075839811448965`*^9}, {
   3.8075841616921515`*^9, 3.8075842228186827`*^9}, 3.8075852090986223`*^9, {
   3.808388076362875*^9, 3.8083880869726667`*^9}, {3.8083890220262623`*^9, 
   3.808389034638218*^9}, {3.8084511578834453`*^9, 3.8084512126165895`*^9}, {
   3.808451250130911*^9, 3.808451250295911*^9}, {3.8086382388839703`*^9, 
   3.8086382394520135`*^9}, {3.8086382816797185`*^9, 3.808638283982456*^9}, {
   3.808638327612678*^9, 3.808638357933177*^9}, {3.8086384369553165`*^9, 
   3.8086384370903273`*^9}, {3.8086386272043734`*^9, 
   3.8086386746875544`*^9}, {3.808639043759895*^9, 3.808639044073069*^9}, {
   3.808646756496051*^9, 3.808646787069584*^9}, {3.8086479621219273`*^9, 
   3.808647989214526*^9}, {3.80864807664946*^9, 3.8086481100454493`*^9}, {
   3.808648140189909*^9, 3.8086481413121285`*^9}, {3.8086482730525875`*^9, 
   3.8086483152504025`*^9}, {3.8086484215226555`*^9, 3.808648429032529*^9}, 
   3.80864848660819*^9, 3.8086494150980406`*^9, {3.8086495369470105`*^9, 
   3.8086495445935893`*^9}, {3.8086506782718363`*^9, 
   3.8086507110295157`*^9}, {3.809171206911594*^9, 3.8091712112195234`*^9}, 
   3.8091718608101597`*^9, {3.8092256168325877`*^9, 3.809225617193615*^9}, {
   3.8092256488494205`*^9, 3.8092256900098815`*^9}, {3.809225793210777*^9, 
   3.809225869950443*^9}, {3.809225911471445*^9, 3.809225956641259*^9}, {
   3.8092259935328503`*^9, 3.8092260237530375`*^9}, 3.809226071943329*^9, {
   3.8092261182138734`*^9, 3.8092262705718613`*^9}, {3.809226302943863*^9, 
   3.809226303866211*^9}, {3.809246218012558*^9, 3.8092462417668447`*^9}, {
   3.8108306643605356`*^9, 3.810830779182003*^9}, {3.8108310582750626`*^9, 
   3.8108310697758904`*^9}, {3.810831146027331*^9, 3.8108311563682327`*^9}, {
   3.810831238556469*^9, 3.8108312450619483`*^9}, {3.8108313268945947`*^9, 
   3.810831327253621*^9}, {3.810872616820505*^9, 3.8108726224304223`*^9}, {
   3.8108727407790585`*^9, 3.8108727430417924`*^9}, {3.810873008360443*^9, 
   3.8108730361793814`*^9}, {3.8111270344033933`*^9, 3.811127075502432*^9}, {
   3.8111287122518144`*^9, 3.811128713175845*^9}, {3.811129363855872*^9, 
   3.8111293661931753`*^9}, {3.8118325575076213`*^9, 
   3.8118326245094967`*^9}, {3.811832783853307*^9, 3.81183281641823*^9}, {
   3.811835888469705*^9, 3.811835913254854*^9}, {3.8118359542345085`*^9, 
   3.811835983679551*^9}, {3.812102593778205*^9, 3.812102598288087*^9}, {
   3.812529155159132*^9, 3.812529225651862*^9}, {3.8125292566968136`*^9, 
   3.8125293005795803`*^9}, {3.8125293322495127`*^9, 
   3.8125294041259537`*^9}, {3.8125294375770645`*^9, 3.812529438518114*^9}, 
   3.8125295329967756`*^9, 3.8125320345440435`*^9, {3.8125330470614576`*^9, 
   3.8125330501101236`*^9}, {3.81253309633967*^9, 3.812533223769719*^9}, {
   3.8125332606055613`*^9, 3.812533361677823*^9}, {3.8125334082877364`*^9, 
   3.812533411239947*^9}, 3.8125334522300196`*^9, {3.8125334971079426`*^9, 
   3.8125335082671733`*^9}, {3.812533573002586*^9, 3.8125335786666603`*^9}, {
   3.812533653528615*^9, 3.812533668021366*^9}, {3.8125337082036753`*^9, 
   3.812533745663035*^9}, {3.812533828240571*^9, 3.812533858910591*^9}, {
   3.8125339655835185`*^9, 3.812533970910347*^9}, {3.812534056452332*^9, 
   3.812534148038588*^9}, {3.812536790654726*^9, 3.812536791429*^9}, {
   3.81253682956681*^9, 3.8125369689954224`*^9}, {3.8125370586532965`*^9, 
   3.8125372397780027`*^9}, {3.8125385596505833`*^9, 3.812538676448841*^9}, 
   3.812538861116849*^9, {3.8125389033215933`*^9, 3.812539081648887*^9}, {
   3.812539444538463*^9, 3.8125394509039764`*^9}, {3.812539494462495*^9, 
   3.812539525325138*^9}, {3.8125396055728197`*^9, 3.8125396073724227`*^9}, {
   3.81253965629671*^9, 3.8125396748880744`*^9}, {3.812542267952508*^9, 
   3.812542277702776*^9}, {3.812542357299495*^9, 3.812542419927765*^9}, {
   3.812542452170416*^9, 3.8125424656452985`*^9}, {3.8125425116271605`*^9, 
   3.812542646252655*^9}, {3.812542697598118*^9, 3.812542729637248*^9}, {
   3.8125428290435963`*^9, 3.8125428657922716`*^9}, {3.8125429166774006`*^9, 
   3.812543040370758*^9}, {3.812543118932597*^9, 3.8125431849021015`*^9}, {
   3.8125432224493356`*^9, 3.812543246588835*^9}, {3.8125433090943813`*^9, 
   3.81254331307657*^9}, {3.812543512892166*^9, 3.8125435152242827`*^9}, {
   3.8125436030828767`*^9, 3.8125436411126423`*^9}, {3.8125440000431895`*^9, 
   3.81254403706137*^9}, {3.812544079268819*^9, 3.8125440852316756`*^9}, {
   3.812544168620633*^9, 3.812544175389021*^9}, {3.8125442397519765`*^9, 
   3.8125442447551203`*^9}, {3.8125443028435984`*^9, 3.812544360066058*^9}, {
   3.8125444134074025`*^9, 3.8125444560596223`*^9}, {3.812544549216535*^9, 
   3.8125445666617503`*^9}, {3.8125446293995285`*^9, 
   3.8125446593592825`*^9}, {3.812544876344892*^9, 3.8125449732909*^9}, 
   3.8125472487423935`*^9, {3.81254759740233*^9, 3.812547672317289*^9}, 
   3.81254999628323*^9, {3.8125539742099547`*^9, 3.812553986092012*^9}, 
   3.8125542195528135`*^9, {3.8125542754123697`*^9, 3.8125542828886127`*^9}, {
   3.8125543606375694`*^9, 3.812554379588892*^9}, {3.8125548674039593`*^9, 
   3.812554903921565*^9}, 3.8125550743376255`*^9, {3.8125557707201576`*^9, 
   3.8125558052052517`*^9}, {3.812556208004566*^9, 3.812556401511136*^9}, {
   3.8125568053192644`*^9, 3.812556806042549*^9}, {3.8125571202906723`*^9, 
   3.812557121930915*^9}, {3.812557154390768*^9, 3.812557156430358*^9}, {
   3.8125600295196605`*^9, 3.8125600357889447`*^9}, {3.8126234012908964`*^9, 
   3.812623403787242*^9}, {3.812623507834958*^9, 3.8126235127427607`*^9}, {
   3.8126235651918774`*^9, 3.8126235737885637`*^9}, {3.81263741416881*^9, 
   3.812637414227933*^9}, {3.8126375448450394`*^9, 3.812637563736486*^9}, {
   3.8126376143949175`*^9, 3.81263763479031*^9}, {3.812637677042389*^9, 
   3.8126376771523123`*^9}, {3.8126381297608023`*^9, 
   3.8126381362221394`*^9}, {3.812638184823267*^9, 3.8126381853607826`*^9}, {
   3.8126382364435573`*^9, 3.812638237928755*^9}, {3.812638302245673*^9, 
   3.8126383245418596`*^9}, {3.812638437116392*^9, 3.8126384683255544`*^9}, {
   3.812638515708419*^9, 3.812638573239299*^9}, {3.812638608916949*^9, 
   3.812638633958487*^9}, {3.812638695201889*^9, 3.812638791006526*^9}, 
   3.8126389026263046`*^9, {3.8126390566409426`*^9, 3.8126390764969325`*^9}, {
   3.812639722467697*^9, 3.8126397264826336`*^9}, {3.81263976244016*^9, 
   3.812639763315892*^9}, 3.812725363025738*^9, 3.812725402693081*^9, {
   3.8127772688633823`*^9, 3.81277727842935*^9}, {3.812812082281085*^9, 
   3.8128121112809052`*^9}, {3.812815307363823*^9, 3.8128153091787014`*^9}, {
   3.81281535000066*^9, 3.8128155778855495`*^9}, 3.8128156166394544`*^9, {
   3.8128173399927435`*^9, 3.812817340532322*^9}, {3.8128173924203234`*^9, 
   3.812817431634884*^9}, 3.812817577140004*^9, 3.8128176551112885`*^9, 
   3.8128199616731586`*^9, 3.812820090799766*^9, {3.812857059005416*^9, 
   3.812857064971696*^9}, {3.8129689496288843`*^9, 3.812968949840973*^9}, {
   3.8129694805265136`*^9, 3.8129694986424537`*^9}, {3.8129696706696835`*^9, 
   3.8129698445529547`*^9}, {3.8129698927192097`*^9, 
   3.8129699051865788`*^9}, {3.8130312656129613`*^9, 
   3.8130313180096693`*^9}, {3.8130313729983826`*^9, 
   3.8130313749198914`*^9}, {3.8130314269858055`*^9, 
   3.8130314632021427`*^9}, {3.813031533824063*^9, 3.8130315366850643`*^9}, {
   3.813031774534068*^9, 3.813031787602756*^9}, {3.8130326675590367`*^9, 
   3.8130327077203846`*^9}, {3.8130367296365976`*^9, 3.813036745755535*^9}, {
   3.813037056992572*^9, 3.8130370755295296`*^9}, {3.813037158689211*^9, 
   3.813037179328226*^9}, 3.8130373878999033`*^9, {3.8130374299361672`*^9, 
   3.813037455610856*^9}, 3.8130374920753465`*^9, {3.813037578968634*^9, 
   3.8130375906745176`*^9}, {3.813037724099369*^9, 3.8130377331763077`*^9}, {
   3.813038171838731*^9, 3.8130381722726*^9}, {3.8130408896929226`*^9, 
   3.8130408910189695`*^9}, 3.8130409782712493`*^9, {3.81304101464746*^9, 
   3.8130410616967793`*^9}, {3.8130411114150534`*^9, 
   3.8130411203774433`*^9}, {3.8130411594008937`*^9, 
   3.8130411916611986`*^9}, {3.8130412383493223`*^9, 3.813041256374399*^9}, {
   3.813041489728654*^9, 3.8130416143735895`*^9}, {3.8130416560326366`*^9, 
   3.813041685769533*^9}, {3.8130417292980757`*^9, 3.813041729976598*^9}, 
   3.8130417739643044`*^9, {3.8130418054757767`*^9, 3.8130418307551527`*^9}, {
   3.8130418745871463`*^9, 3.8130419029230986`*^9}, {3.813041934260615*^9, 
   3.8130420100168743`*^9}, {3.8130420499687457`*^9, 
   3.8130420554283934`*^9}, {3.81304238269481*^9, 3.8130425855462837`*^9}, {
   3.8130426516669693`*^9, 3.8130426640925913`*^9}, {3.8130428121245127`*^9, 
   3.8130428151849303`*^9}, {3.813043088734725*^9, 3.813043282147213*^9}, {
   3.813043351244296*^9, 3.813043556216648*^9}, {3.81304368282933*^9, 
   3.8130438166631927`*^9}, {3.813044039526078*^9, 3.813044046387246*^9}, {
   3.813044083166909*^9, 3.8130442305049076`*^9}, {3.8130583972824154`*^9, 
   3.8130585135605087`*^9}, {3.813063557877471*^9, 3.8130635807318764`*^9}, {
   3.813063637853836*^9, 3.813063716493099*^9}, {3.813063899759198*^9, 
   3.813063964878993*^9}, {3.8130641808014545`*^9, 3.813064184613282*^9}, {
   3.8130704408842745`*^9, 3.8130704657475243`*^9}, {3.8130705193849463`*^9, 
   3.8130705357729797`*^9}, {3.81307056634612*^9, 3.8130706125668745`*^9}, {
   3.813070893190463*^9, 3.813070919356167*^9}, {3.813071023648409*^9, 
   3.8130710246390734`*^9}, {3.8130881342701364`*^9, 
   3.8130881799554043`*^9}, {3.8130882668104124`*^9, 3.813088268122032*^9}, {
   3.813088452759021*^9, 3.8130886148781157`*^9}, {3.813130550857422*^9, 
   3.8131305618403854`*^9}, {3.8131307237271156`*^9, 3.813130885534235*^9}, {
   3.8131310416017084`*^9, 3.813131092082677*^9}, {3.813131139427269*^9, 
   3.813131194675815*^9}, 3.813131419328435*^9, {3.8131315866194935`*^9, 
   3.813131590182379*^9}, 3.813131701495509*^9, 3.8131319070177546`*^9, {
   3.8131321605007644`*^9, 3.813132182351931*^9}, {3.81313221359403*^9, 
   3.813132227343089*^9}, {3.8131336942983823`*^9, 3.813133713446228*^9}, {
   3.8131337470409503`*^9, 3.8131337518579736`*^9}, {3.8131337840684824`*^9, 
   3.81313382381702*^9}, {3.8131338637659426`*^9, 3.813133957068187*^9}, 
   3.813134811281822*^9, 3.8131348617866917`*^9, {3.813135150763693*^9, 
   3.8131351874713774`*^9}, {3.813135411545395*^9, 3.8131354279946833`*^9}, {
   3.813135706918933*^9, 3.8131357402318497`*^9}, {3.813135820269389*^9, 
   3.8131358472915993`*^9}, {3.8131359212448597`*^9, 3.813135924621379*^9}, {
   3.81313595736411*^9, 3.8131359648761883`*^9}, {3.8131360492329226`*^9, 
   3.8131360689247103`*^9}, {3.813136165904505*^9, 3.81313620772611*^9}, {
   3.8131502051446323`*^9, 3.813150209607569*^9}, {3.813155487782015*^9, 
   3.8131555164022713`*^9}, 3.8131556785516634`*^9, {3.8131557273794117`*^9, 
   3.813155805290055*^9}, {3.813156153394803*^9, 3.8131562057083497`*^9}, {
   3.813156250162635*^9, 3.813156252567073*^9}, {3.813156346722686*^9, 
   3.8131563766677856`*^9}, {3.8131564704304457`*^9, 
   3.8131566042775517`*^9}, {3.813156694135028*^9, 3.8131567210761003`*^9}, {
   3.8131567570528545`*^9, 3.813156793543642*^9}, {3.8131568415568104`*^9, 
   3.813156859517457*^9}, {3.813156906386957*^9, 3.813156906491952*^9}, {
   3.8131570455385547`*^9, 3.813157059276197*^9}, {3.813157091987323*^9, 
   3.8131572943061523`*^9}, 3.813157616429283*^9, {3.8131577150799904`*^9, 
   3.8131577212411776`*^9}, {3.8131577736336136`*^9, 3.813157799353365*^9}, {
   3.813157840677986*^9, 3.813157885316971*^9}, {3.8131579157412233`*^9, 
   3.8131579304770412`*^9}, {3.8131580101453123`*^9, 
   3.8131580345574737`*^9}, {3.813158096655555*^9, 3.8131581390376463`*^9}, {
   3.8131583215769544`*^9, 3.813158456453334*^9}, {3.8131586166619797`*^9, 
   3.8131587963858204`*^9}, {3.8131588299958735`*^9, 3.813158985432478*^9}, {
   3.8131592028500834`*^9, 3.8131593040837913`*^9}, 3.8131593419667635`*^9, {
   3.8131593745051656`*^9, 3.8131594087175727`*^9}, {3.813159463322958*^9, 
   3.8131595113404093`*^9}, {3.8131596130161943`*^9, 3.813159673688205*^9}, {
   3.813159707392394*^9, 3.813159713627451*^9}, 3.813159998862152*^9, {
   3.8131601559972878`*^9, 3.8131601867319183`*^9}, {3.813160219013827*^9, 
   3.813160320235606*^9}, {3.8131630872630725`*^9, 3.8131631658186665`*^9}, 
   3.813163248617896*^9, {3.8131632952990303`*^9, 3.813163299496812*^9}, {
   3.81321013860923*^9, 3.8132101421014414`*^9}, {3.813211020234423*^9, 
   3.8132110625909534`*^9}, {3.813212447172059*^9, 3.8132124797822046`*^9}, {
   3.813222795813166*^9, 3.813222856217043*^9}, {3.813228524405354*^9, 
   3.813228543595029*^9}, {3.813228657842312*^9, 3.813228699701003*^9}, {
   3.8132295976941843`*^9, 3.8132296050584345`*^9}, {3.8133769292461834`*^9, 
   3.8133769304944*^9}, 3.8134022011980047`*^9, {3.8134022441654587`*^9, 
   3.8134023977366257`*^9}, {3.813402430293248*^9, 3.8134026161647863`*^9}, {
   3.8134026661106367`*^9, 3.813402688900943*^9}, {3.8134027195254555`*^9, 
   3.813402931086492*^9}, {3.813403016665412*^9, 3.813403091679245*^9}, {
   3.8134031294116306`*^9, 3.8134031302841644`*^9}, {3.8134033742852583`*^9, 
   3.813403421252468*^9}, {3.8134034793346148`*^9, 3.813403696654086*^9}, {
   3.813403791449788*^9, 3.813403835785968*^9}, {3.813403901178776*^9, 
   3.813403969762951*^9}, {3.8134040384629407`*^9, 3.8134040421439843`*^9}, {
   3.813404090817814*^9, 3.8134040983279552`*^9}, {3.813404225288183*^9, 
   3.8134042289285855`*^9}, {3.8134044782544403`*^9, 3.813404491203104*^9}, {
   3.8134045923299775`*^9, 3.8134045989145737`*^9}, {3.813404647774459*^9, 
   3.8134046521655245`*^9}, {3.8134046831492324`*^9, 
   3.8134046930600243`*^9}, {3.813406168539953*^9, 3.8134061713236065`*^9}, {
   3.813406406545659*^9, 3.8134064349474835`*^9}, {3.8134064744981036`*^9, 
   3.8134064761482215`*^9}, {3.8134132025477467`*^9, 
   3.8134132446856813`*^9}, {3.8134132789916368`*^9, 3.81341328577538*^9}, {
   3.8134133227698154`*^9, 3.813413599680966*^9}, {3.8134136708372574`*^9, 
   3.813414035625087*^9}, 3.813414078363448*^9, {3.8134150798938456`*^9, 
   3.8134155384447985`*^9}, {3.8134156047315483`*^9, 3.8134159458279963`*^9}, 
   3.8134225906104727`*^9, {3.813471138578129*^9, 3.8134711904321256`*^9}, {
   3.813471221919299*^9, 3.8134713286918726`*^9}, {3.8134713593333225`*^9, 
   3.8134714803987255`*^9}, {3.8134715228898563`*^9, 
   3.8134716527010555`*^9}, {3.813471692151478*^9, 3.81347181929915*^9}, {
   3.8134718621608205`*^9, 3.8134718763743763`*^9}, {3.8134734928575153`*^9, 
   3.813473610996155*^9}, {3.813475278943569*^9, 3.813475413539812*^9}, {
   3.8134755231139317`*^9, 3.813475625538395*^9}, {3.81347567645512*^9, 
   3.813475683836157*^9}, {3.8134757559554863`*^9, 3.813475770005437*^9}, {
   3.813475884590865*^9, 3.813475898154845*^9}, {3.8134759299838266`*^9, 
   3.8134759647511826`*^9}, {3.813475995076616*^9, 3.8134760073422976`*^9}, {
   3.813476287382476*^9, 3.813476288096594*^9}, {3.8134763517500043`*^9, 
   3.8134763854064584`*^9}, {3.813476661360769*^9, 3.8134766746820908`*^9}, {
   3.813476794732875*^9, 3.8134767969831095`*^9}, {3.81347695997129*^9, 
   3.813476964114562*^9}, 3.8134774192797155`*^9, {3.8134775498473215`*^9, 
   3.8134775914472575`*^9}, {3.81347763482309*^9, 3.8134776546939945`*^9}, {
   3.8134777532417665`*^9, 3.8134779099127617`*^9}, {3.813477958823283*^9, 
   3.8134779929887557`*^9}, {3.813478069229291*^9, 3.813478236656146*^9}, {
   3.813478482007072*^9, 3.8134784821760845`*^9}, {3.8134786187472763`*^9, 
   3.8134786510519547`*^9}, 3.8134787724511533`*^9, {3.813478826023052*^9, 
   3.8134788538400216`*^9}, {3.8134822656654234`*^9, 
   3.8134822746038837`*^9}, {3.8134863826606894`*^9, 3.813486399039065*^9}, {
   3.813486886011898*^9, 3.813486888491133*^9}, 3.8135492351037583`*^9, {
   3.813555720393643*^9, 3.8135557206482143`*^9}, {3.8135681173833714`*^9, 
   3.8135681762111506`*^9}, {3.8135682068115644`*^9, 
   3.8135682363590965`*^9}, {3.8135683044504175`*^9, 3.813568390261017*^9}, {
   3.8135684892656183`*^9, 3.813568539556617*^9}, {3.813568597451456*^9, 
   3.8135686128792*^9}, {3.813568684355543*^9, 3.813568697429904*^9}, {
   3.813568740057308*^9, 3.813568751090584*^9}, {3.8135687916131873`*^9, 
   3.813568821756655*^9}, {3.813568867809167*^9, 3.8135688780494957`*^9}, {
   3.8135689544093723`*^9, 3.8135689556789103`*^9}, 3.8135690631913*^9, {
   3.813569118180578*^9, 3.8135691608202267`*^9}, 3.8135692173402815`*^9, {
   3.813569407723482*^9, 3.813569409530061*^9}, {3.8135696007140613`*^9, 
   3.813569635638771*^9}, {3.8135696728685513`*^9, 3.8135697032914543`*^9}, {
   3.8135697406678715`*^9, 3.813569761637687*^9}, {3.813569901580696*^9, 
   3.8135699324801064`*^9}, {3.8135699830299425`*^9, 3.813570282496718*^9}, {
   3.8135703188217373`*^9, 3.8135704531968184`*^9}, {3.813570526322084*^9, 
   3.8135706232333007`*^9}, {3.8135706648523903`*^9, 
   3.8135709990816383`*^9}, {3.8135710463653774`*^9, 3.813571098715231*^9}, {
   3.8135711601477823`*^9, 3.8135712590740256`*^9}, {3.8135713029113894`*^9, 
   3.8135713316626005`*^9}, {3.8135714306811543`*^9, 
   3.8135714757700996`*^9}, {3.8135718738293853`*^9, 
   3.8135719069632254`*^9}, {3.8135719600190983`*^9, 3.813571984950075*^9}, {
   3.8135720948872576`*^9, 3.813572105006055*^9}, {3.8135721560880103`*^9, 
   3.813572165441533*^9}, {3.8135722070407486`*^9, 3.813572259878564*^9}, {
   3.813572292891075*^9, 3.813572303991321*^9}, {3.813584781817226*^9, 
   3.8135847998125825`*^9}, {3.8135848485213223`*^9, 
   3.8135848665617695`*^9}, {3.813585684823095*^9, 3.8135856862851353`*^9}},
 ExpressionUUID -> "1ab493f5-5a04-48d2-b2ba-dc06ff40bd9b"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Options", "[", "scalarRSFOperator", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<waveLength\>\"", "\[Rule]", " ", "waveLength"}], ",", 
       RowBox[{"\"\<padLevel\>\"", "\[Rule]", " ", "1"}], ",", 
       RowBox[{"\"\<defocusZ\>\"", "\[Rule]", " ", "0"}], ",", 
       RowBox[{
       "\"\<refractiveIndexMedium\>\"", "\[Rule]", " ", "refIndexAir"}], ",", 
       RowBox[{"\"\<InterpolationOrder\>\"", "\[Rule]", " ", "10"}]}], 
      "}"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"scalarRSFOperator", "[", 
      RowBox[{
      "rayCoordinateFocus_List", ",", "rayTiltFocus_List", ",", 
       "opticalLengthFocus_List", ",", "clearApRad_", ",", "nWDP_", ",", 
       "focalDistance_", ",", 
       RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], "[", "f_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "interpolationOrder", ",", "padLevel", ",", "lambda", ",", "defocusZ", 
        ",", "FTf", ",", "nWDPpad", ",", "k0", ",", "dkx", ",", "wWDP", ",", 
        "S", ",", "sx", ",", "sy", ",", "sz", ",", "EF"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"lambda", "=", 
        RowBox[{"OptionValue", "[", "\"\<waveLength\>\"", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"padLevel", "=", 
        RowBox[{"OptionValue", "[", "\"\<padLevel\>\"", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"k0", "=", 
        RowBox[{"2", " ", 
         RowBox[{"Pi", "/", "lambda"}], "*", 
         RowBox[{
         "OptionValue", "[", "\"\<refractiveIndexMedium\>\"", "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"interpolationOrder", "=", 
        RowBox[{"OptionValue", "[", "\"\<InterpolationOrder\>\"", "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"defocusZ", "=", 
        RowBox[{"OptionValue", "[", "\"\<defocusZ\>\"", "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"wWDP", "=", 
        RowBox[{"clearApRad", "/", 
         RowBox[{"(", 
          RowBox[{"\[Sqrt]", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"clearApRad", "^", "2"}], "+", 
             RowBox[{"focalDistance", "^", "2"}]}], ")"}]}], ")"}]}]}], ";", 
       " ", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"nWDPpad", "=", 
        RowBox[{"nWDP", "*", "padLevel"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"dkx", "=", 
        RowBox[{"Pi", "/", 
         RowBox[{"(", 
          RowBox[{"wWDP", "*", "k0"}], ")"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"EF", "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"UnsameQ", "[", 
            RowBox[{"rayCoordinateFocus", ",", 
             RowBox[{"{", "}"}]}], "]"}], "\[Equal]", "True"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"S", "=", 
            RowBox[{"Interpolation", "[", 
             RowBox[{
              RowBox[{"Map", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
                   RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "2"}], "]"}], "]"}], ",", 
                   RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], "}"}], "&"}], ",", 
                RowBox[{"Transpose", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"opticalLengthFocus", "-", 
                    RowBox[{"Map", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "1"}], "]"}], "]"}], "*", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "+", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"1", ",", "2"}], "]"}], "]"}], "*", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"2", ",", "2"}], "]"}], "]"}]}]}], "&"}], ",", 
                    RowBox[{"Transpose", "@", 
                    RowBox[{"{", 
                    RowBox[{"rayCoordinateFocus", ",", "rayTiltFocus"}], 
                    "}"}]}]}], "]"}]}], ",", "rayTiltFocus"}], "}"}], "]"}]}],
                "]"}], ",", 
              RowBox[{"InterpolationOrder", "\[Rule]", "1"}], ",", 
              RowBox[{"\"\<ExtrapolationHandler\>\"", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"0", "&"}], ",", 
                 RowBox[{"\"\<WarningMessage\>\"", "\[Rule]", "False"}]}], 
                "}"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
           "\[IndentingNewLine]", 
           RowBox[{"N", "@", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"sz", "=", 
                RowBox[{"\[Sqrt]", 
                 RowBox[{"(", 
                  RowBox[{"1", "-", 
                   SuperscriptBox["sx", "2"], "-", 
                   SuperscriptBox["sy", "2"]}], ")"}]}]}], ";", 
               RowBox[{
                RowBox[{"Exp", "[", 
                 RowBox[{"\[ImaginaryI]", " ", "k0", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"S", "[", 
                    RowBox[{"sx", ",", "sy"}], "]"}], "+", 
                    RowBox[{"sz", " ", "defocusZ"}]}], ")"}]}], "]"}], 
                RowBox[{
                 RowBox[{"f", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "sx"}], " ", 
                    RowBox[{"focalDistance", "/", "sz"}]}], ",", 
                   RowBox[{
                    RowBox[{"-", "sy"}], " ", 
                    RowBox[{"focalDistance", "/", "sz"}]}]}], "]"}], "/", 
                 RowBox[{"sz", "^", "2"}]}], "*", 
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  RowBox[{"\[ImaginaryI]", " ", 
                   RowBox[{"sz", "/", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"k0", "^", "2"}], " ", "focalDistance"}], 
                    ")"}]}]}]}], ")"}]}]}], ",", 
              RowBox[{"{", 
               RowBox[{"sx", ",", 
                RowBox[{
                 RowBox[{"-", "wWDP"}], "+", 
                 RowBox[{"2", 
                  RowBox[{"wWDP", "/", "nWDP"}]}]}], ",", "wWDP", ",", 
                RowBox[{"2", 
                 RowBox[{"wWDP", "/", "nWDP"}]}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"sy", ",", 
                RowBox[{
                 RowBox[{"-", "wWDP"}], "+", 
                 RowBox[{"2", 
                  RowBox[{"wWDP", "/", "nWDP"}]}]}], ",", "wWDP", ",", 
                RowBox[{"2", 
                 RowBox[{"wWDP", "/", "nWDP"}]}]}], "}"}]}], "]"}]}]}], ",", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"N", "@", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"sz", "=", 
               RowBox[{"\[Sqrt]", 
                RowBox[{"(", 
                 RowBox[{"1", "-", 
                  SuperscriptBox["sx", "2"], "-", 
                  SuperscriptBox["sy", "2"]}], ")"}]}]}], ";", 
              RowBox[{
               RowBox[{"Exp", "[", 
                RowBox[{"\[ImaginaryI]", " ", "k0", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"focalDistance", " ", "/", "sz"}], "+", 
                   RowBox[{"sz", " ", "defocusZ"}]}], ")"}]}], "]"}], 
               RowBox[{
                RowBox[{"f", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "sx"}], " ", 
                   RowBox[{"focalDistance", "/", "sz"}]}], ",", 
                  RowBox[{
                   RowBox[{"-", "sy"}], " ", 
                   RowBox[{"focalDistance", "/", "sz"}]}]}], "]"}], "/", 
                RowBox[{"sz", "^", "2"}]}], "*", 
               RowBox[{"(", 
                RowBox[{"1", "+", 
                 RowBox[{"\[ImaginaryI]", " ", 
                  RowBox[{"sz", "/", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"k0", "^", "2"}], " ", "focalDistance"}], 
                    ")"}]}]}]}], ")"}]}]}], ",", 
             RowBox[{"{", 
              RowBox[{"sx", ",", 
               RowBox[{
                RowBox[{"-", "wWDP"}], "+", 
                RowBox[{"2", 
                 RowBox[{"wWDP", "/", "nWDP"}]}]}], ",", "wWDP", ",", 
               RowBox[{"2", 
                RowBox[{"wWDP", "/", "nWDP"}]}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"sy", ",", 
               RowBox[{
                RowBox[{"-", "wWDP"}], "+", 
                RowBox[{"2", 
                 RowBox[{"wWDP", "/", "nWDP"}]}]}], ",", "wWDP", ",", 
               RowBox[{"2", 
                RowBox[{"wWDP", "/", "nWDP"}]}]}], "}"}]}], "]"}]}]}], 
         "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"FTf", "=", 
        RowBox[{"RotateRight", "[", 
         RowBox[{
          RowBox[{"Fourier", "[", 
           RowBox[{"RotateLeft", "[", 
            RowBox[{"EF", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"nWDP", "/", "2"}], "-", "1"}], ",", 
               RowBox[{
                RowBox[{"nWDP", "/", "2"}], "-", "1"}]}], "}"}]}], "]"}], 
           "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"nWDP", "/", "2"}], "-", "1"}], ",", 
            RowBox[{
             RowBox[{"nWDP", "/", "2"}], "-", "1"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"ListInterpolation", "[", 
        RowBox[{
         RowBox[{"ArrayPad", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "4"}], " ", "\[ImaginaryI]", " ", 
            RowBox[{"clearApRad", "^", "2"}], " ", 
            RowBox[{"FTf", "/", 
             RowBox[{"(", 
              RowBox[{"lambda", "*", "focalDistance", " ", "nWDP"}], 
              ")"}]}]}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"nWDPpad", "-", "nWDP"}], ")"}], "/", "2"}]}], "]"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "dkx"}], "*", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"nWDPpad", "/", "2"}], "-", "1"}], ")"}]}], ",", 
             RowBox[{"dkx", "*", 
              RowBox[{"nWDPpad", "/", "2"}]}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"-", "dkx"}], "*", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"nWDPpad", "/", "2"}], "-", "1"}], ")"}]}], ",", 
             RowBox[{"dkx", "*", 
              RowBox[{"nWDPpad", "/", "2"}]}]}], "}"}]}], "}"}], ",", 
         RowBox[{"InterpolationOrder", "\[Rule]", "interpolationOrder"}], ",", 
         RowBox[{"\"\<ExtrapolationHandler\>\"", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"0", "&"}], ",", 
            RowBox[{"\"\<WarningMessage\>\"", "\[Rule]", "False"}]}], 
           "}"}]}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8136595785684924`*^9, 3.813659684260637*^9}}]
},
WindowSize->{1904, 997},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
AutoStyleOptions->{"CommentStyle"->{FontWeight -> Plain, FontColor -> RGBColor[
    Rational[2, 3], 0, 0], ShowAutoStyles -> False, ShowSyntaxStyles -> False,
   AutoNumberFormatting -> False, FontFamily -> "Consolas"}},
FrontEndVersion->"11.0 for Microsoft Windows (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb",
ExpressionUUID -> "260dac70-898e-4a21-889a-fd1bac2eb9a9"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 5909, 118, 525, "Input"],
Cell[6470, 140, 444, 9, 50, "Input"],
Cell[6917, 151, 132704, 2180, 514, "Input"],
Cell[139624, 2333, 52529, 943, 811, "Input"],
Cell[192156, 3278, 1222, 26, 88, "Input"],
Cell[193381, 3306, 681604, 16925, 17532, "Input"],
Cell[874988, 20233, 12028, 293, 601, "Input"]
}
]
*)

